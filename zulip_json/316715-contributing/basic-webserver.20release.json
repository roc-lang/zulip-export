[
    {
        "content": "<p>When trying to build the basic-webserver platform I'm hitting <code>Undefined Symbol in relocation</code> like in <a href=\"https://github.com/roc-lang/roc/issues/3609\">#3609</a> when on linux x86-64. I can build with the legacy linker and builds for all other OS' and architectures passed. Should we still do a release of basic-webserver if it does not work on linux x86-64 with the surgical linker <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>?</p>",
        "id": 403010815,
        "sender_full_name": "Anton",
        "timestamp": 1700401043
    },
    {
        "content": "<p>I'd say yes <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 403011238,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700401423
    },
    {
        "content": "<p>it's worth it to get something all the new beginners will be able to try with a URL tomorrow</p>",
        "id": 403011477,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700401490
    },
    {
        "content": "<p>we can tell people to work around it with <code>--linker=legacy</code> for now</p>",
        "id": 403011478,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700401490
    },
    {
        "content": "<p>Assuming my code works correctly, roc should automatically use the legacy linker when it realizes there is no surgical linker file</p>",
        "id": 403029991,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700412365
    },
    {
        "content": "<p>Awesome, I'll try that out</p>",
        "id": 403031082,
        "sender_full_name": "Anton",
        "timestamp": 1700413122
    },
    {
        "content": "<p>Also, I think this may be a bug caused by rust dead code elimination, I'll take a look. Oh, maybe I can also make rust glue for functions generate the special code to avoid garbage collection of our effect functions....</p>",
        "id": 403031375,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700413288
    },
    {
        "content": "<p>Is this on main?</p>",
        "id": 403032401,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700413896
    },
    {
        "content": "<p>I got the <code>undefined symbol in relocation</code> while using the more-features of basic-webserver, I was also using <code>export CARGO_BUILD_TARGET=x86_64-unknown-linux-musl</code></p>",
        "id": 403032878,
        "sender_full_name": "Anton",
        "timestamp": 1700414223
    },
    {
        "content": "<blockquote>\n<p>roc should automatically use the legacy linker when it realizes there is no surgical linker file</p>\n</blockquote>\n<p>That worked, I did end up getting a segfault when running the example on NixOS, going to try out macos aarch64 now.</p>",
        "id": 403033039,
        "sender_full_name": "Anton",
        "timestamp": 1700414312
    },
    {
        "content": "<p>macos aarch64 test succeeded</p>",
        "id": 403036910,
        "sender_full_name": "Anton",
        "timestamp": 1700416811
    },
    {
        "content": "<p>going to try out ubuntu now</p>",
        "id": 403036948,
        "sender_full_name": "Anton",
        "timestamp": 1700416837
    },
    {
        "content": "<p>segfault on Ubuntu too when running the todos example.<br>\nTo prevent setting a large share of users up for disappointment I think we should not make an official release of the basic-webserver platform right now. What do you think <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>?</p>\n<p>It's still an amazing feat we got the webserver this far though <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 403038897,
        "sender_full_name": "Anton",
        "timestamp": 1700417943
    },
    {
        "content": "<p>Interesting. I wonder why it segfaults for you. gotta love works on my machine.</p>",
        "id": 403039821,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700418494
    },
    {
        "content": "<p>I'll do more testing later</p>",
        "id": 403039845,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700418505
    },
    {
        "content": "<p>Is it just todos that is segfaulting?</p>",
        "id": 403040005,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700418603
    },
    {
        "content": "<p>I wonder if the sqlite db I created on arm64 isn't ok when used on linux-x64, I assumed it would be identical because it's the sqlite format but maybe not. I did a quick search and that was inconclusive</p>",
        "id": 403040432,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700418835
    },
    {
        "content": "<p>Oh, are you testing using current main or that PR branch? Current main will be broken on all other systems except macos arm64 because glue generates invalid rust code and you have to fix manually. On the PR branch I went through and fixed for all architectures so that should be ok.</p>",
        "id": 403040848,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700419074
    },
    {
        "content": "<p>I should be using the more-features branch everywhere. The Linux .o is also built for musl, so the segfault may only replicate with that target. I ran without DB_PATH on Linux so it should not be the sqlite3 file that causes the segfault. I did not test the other examples but the todos is the most important one.</p>",
        "id": 403042671,
        "sender_full_name": "Anton",
        "timestamp": 1700420214
    },
    {
        "content": "<p>This is the pre-release url btw:<br>\n<a href=\"https://github.com/roc-lang/basic-webserver/releases/download/temp-test-0-1/znf7xalzBi9Wn8vSrgw1YIEd2XcqAvgg8EDZiH4lPGs.tar.gz\">https://github.com/roc-lang/basic-webserver/releases/download/temp-test-0-1/znf7xalzBi9Wn8vSrgw1YIEd2XcqAvgg8EDZiH4lPGs.tar.gz</a></p>",
        "id": 403043061,
        "sender_full_name": "Anton",
        "timestamp": 1700420459
    },
    {
        "content": "<p>I can reproduce the segfaults on my linux machine <span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span></p>",
        "id": 403046525,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700422593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> I am highly suspicious of the glue issues (<a href=\"https://github.com/roc-lang/roc/issues/6012\">https://github.com/roc-lang/roc/issues/6012</a>) though I don't think this is likely the cause of this issue. </p>\n<p>I don't think we ever tested previous versions on linux so it could be a more fundamental issue with the implementation of the server. </p>\n<p>I don't think it is hyper as it boots up the server and binds to localhost, and looks like it accepts a connection. Maybe it fails as soon as it calls into Roc (the force_thunk method on RocFunction_86 closure related or something)?</p>",
        "id": 403047416,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700423483
    },
    {
        "content": "<p>so it segfaults even when using the legacy linker?</p>",
        "id": 403047680,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700423758
    },
    {
        "content": "<p>to answer the question directly: if we can't get it working, I actually still think we should release 0.1 (with a prominent note that Linux isn't supported yet) just so <em>some</em> beginners can try it easily.</p>\n<p>Regardless of whether there's a release, Linux users won't be able to use it at all. At least if there's a release, people on other operating systems can try it without needing Rust installed etc.</p>",
        "id": 403048280,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700424191
    },
    {
        "content": "<p>in fact I'd be fine with saying just go ahead and release 0.1 right now, add prominent notes that it won't work on Linux, and then we can plan to do an 0.1.1 release that fixes Linux as soon as we can figure out a fix! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 403048401,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700424294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> you mentioned it works on your machine - is that an x64 Linux machine?</p>",
        "id": 403048802,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700424615
    },
    {
        "content": "<p>Ok yeah, I see the segfault. Probably tested something local before</p>",
        "id": 403049555,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700425311
    },
    {
        "content": "<p>Not yet sure what is going on, but it seems that the string being passed to stdout.line does not make sense (maybe it is a seemless slice or small string being handled incorrectly). Commenting out the logging in the todo.roc fixes the issue.</p>\n<p>So maybe a bug in <code>RocStr</code>, maybe a bug in roc code gen.</p>",
        "id": 403051241,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700426921
    },
    {
        "content": "<p>hmm, may also be some sort of pointer passing related change. I think some reason roc stdoutline expects a return value now? <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> maybe a bug in your resent changes around cabi always using pointers?</p>",
        "id": 403051835,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700427636
    },
    {
        "content": "<p>oh wait, actually, it is supposed to return a result with error.</p>",
        "id": 403051972,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700427704
    },
    {
        "content": "<p>Oh, so this is just a simply function glue mismatch. I think <code>roc_fn</code> needs to be regenerated</p>",
        "id": 403052844,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700428447
    },
    {
        "content": "<p>Claims to return nothing:<br>\n<a href=\"https://github.com/roc-lang/basic-webserver/blob/a9b32ff9425095d51d08928c433bf064176cbd11/platform/src/roc_fn/src/lib.rs#L63-L66\">https://github.com/roc-lang/basic-webserver/blob/a9b32ff9425095d51d08928c433bf064176cbd11/platform/src/roc_fn/src/lib.rs#L63-L66</a></p>\n<p>Claims to return an error:<br>\n<a href=\"https://github.com/roc-lang/basic-webserver/blob/a9b32ff9425095d51d08928c433bf064176cbd11/platform/Effect.roc#L47\">https://github.com/roc-lang/basic-webserver/blob/a9b32ff9425095d51d08928c433bf064176cbd11/platform/Effect.roc#L47</a></p>",
        "id": 403052995,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700428608
    },
    {
        "content": "<p>so we should just need to make those match. Either drop the return type from the roc side or regenerate the function glue and change the rust type to return an error.</p>",
        "id": 403053027,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700428658
    },
    {
        "content": "<p>oh I definitely think those shouldn't return an error</p>",
        "id": 403053095,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700428711
    },
    {
        "content": "<p>This probably also effects flush</p>",
        "id": 403053104,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700428728
    },
    {
        "content": "<p>(we can have a more advanced version that returns an error, but the 99% use case is to assume writing to stdout will succeed)</p>",
        "id": 403053115,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700428742
    },
    {
        "content": "<p>Yeah, in that case, we should just need to update the roc side to fix the segfault</p>",
        "id": 403053120,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700428748
    },
    {
        "content": "<p>nice! Can you make a PR for that?</p>",
        "id": 403053130,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700428764
    },
    {
        "content": "<p>Should flush return an error? I assume not as well?</p>",
        "id": 403053238,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700428853
    },
    {
        "content": "<p>let's have it not for now, can revisit in the future if necessary</p>",
        "id": 403053270,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700428883
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/10\">https://github.com/roc-lang/basic-webserver/pull/10</a></p>",
        "id": 403053795,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700429356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> I assume you're done for the day, but if you can verify that it works on x64 Linux for you and cut a release tomorrow, that would be fantastic! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 403054414,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700429922
    },
    {
        "content": "<p>given time zones, I think the math works out that we could have that on the site in time for the release <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 403054442,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700429956
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> so glad you found that!! Sorry for breaking it <span aria-label=\"smiling face with tear\" class=\"emoji emoji-1f972\" role=\"img\" title=\"smiling face with tear\">:smiling_face_with_tear:</span> . I was part way through changing them all over to return errors, and then aborted the change and didnt undo it properly as it had the flush addition.</p>",
        "id": 403054665,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700430152
    },
    {
        "content": "<p>Awesome work <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span>! A new release is building</p>",
        "id": 403133328,
        "sender_full_name": "Anton",
        "timestamp": 1700474278
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> release is <a href=\"https://github.com/roc-lang/basic-webserver/releases/tag/0.1\">up</a></p>",
        "id": 403145218,
        "sender_full_name": "Anton",
        "timestamp": 1700478080
    },
    {
        "content": "<p>Release is working well! I already used it in the new roc-pg example: <a href=\"https://github.com/agu-z/roc-pg/tree/main/examples/store\">https://github.com/agu-z/roc-pg/tree/main/examples/store</a></p>",
        "id": 403164396,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1700485107
    }
]