[
    {
        "content": "<p>I need some help getting started with <a href=\"https://github.com/roc-lang/roc/issues/3296\">https://github.com/roc-lang/roc/issues/3296</a>. Where would be the points of interest, <a href=\"http://abilities.rs\">abilities.rs</a>, <a href=\"http://symbol.rs\">symbol.rs</a>, <a href=\"http://derive.rs\">derive.rs</a>? The change will probably need to be in <a href=\"http://abilities.rs\">abilities.rs</a>, but a bit of context of where the implementations are being canonicalized and module membership is checked would be nice, it's a lot of code for me to parse. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 346377350,
        "sender_full_name": "itmuckel",
        "timestamp": 1680449173
    },
    {
        "content": "<p>the most relevant place would be <code>canonicalize_opaque</code> in can/src/def.rs</p>",
        "id": 346379451,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1680450121
    },
    {
        "content": "<p>In particular, as part of the logic that happens here: <a href=\"https://github.com/roc-lang/roc/blob/2910024be531ce9bedf135953799dc2fd0d1bb0d/crates/compiler/can/src/def.rs#L690\">https://github.com/roc-lang/roc/blob/2910024be531ce9bedf135953799dc2fd0d1bb0d/crates/compiler/can/src/def.rs#L690</a></p>",
        "id": 346379505,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1680450130
    },
    {
        "content": "<p>oh, wait. I believe that issue is already resolved by the constraints of the language syntax. The reason being, the only way to declare an ability for an opaque type is inline, during the definition of the opaque type:</p>\n<div class=\"codehilite\"><pre><span></span><code>MyType := {} has [Hash, Eq]\n</code></pre></div>\n<p>you need that \"has\" clause to give an opaque type abilities, but also that has clause can only be specified at the place the opaque type is defined.</p>",
        "id": 346380066,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1680450387
    },
    {
        "content": "<p>Sorry about this. The reason I made that issue was that used to not be the case, and it used to be possible to give opaque types abilities outside of a \"has\" clause.</p>",
        "id": 346380098,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1680450415
    },
    {
        "content": "<p>here are a few actual existing feature improvements/bugs in the canonicalizer, if you are interested in any of them <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n<ul>\n<li><a href=\"https://github.com/roc-lang/roc/issues/2055\">https://github.com/roc-lang/roc/issues/2055</a></li>\n<li><a href=\"https://github.com/roc-lang/roc/issues/3238\">https://github.com/roc-lang/roc/issues/3238</a></li>\n<li><a href=\"https://github.com/roc-lang/roc/issues/5119\">https://github.com/roc-lang/roc/issues/5119</a></li>\n</ul>",
        "id": 346380854,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1680450756
    },
    {
        "content": "<p>lol, okay, I'll see if I find anything I want to do there. Otherwise I'll just play around with updating the language server to work with the newest version of the compiler :-)</p>",
        "id": 346382231,
        "sender_full_name": "itmuckel",
        "timestamp": 1680451440
    }
]