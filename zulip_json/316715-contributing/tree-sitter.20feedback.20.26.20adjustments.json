[
    {
        "content": "<p>Here's a topic for me to spam <span class=\"user-mention\" data-user-id=\"651372\">@Eli Dowling</span> with questions and suggestions!</p>",
        "id": 504647580,
        "sender_full_name": "jan kili",
        "timestamp": 1741627615
    },
    {
        "content": "<p>(and anyone else who's invested in syntax highlighting or semantic editing)</p>",
        "id": 504647639,
        "sender_full_name": "jan kili",
        "timestamp": 1741627632
    },
    {
        "content": "<p>It looks like plain defs are mis-categorized as parameters:</p>\n<div class=\"codehilite\"><pre><span></span><code>inherits = \"dracula\"\n\n\"parameter\" = \"red\"\n\"ui.text\" = \"grey\"\n\"variable\" = \"black\"\n</code></pre></div>\n<p><a href=\"/user_uploads/22008/_Bq25-C5w4W7s3i4Es_zuBLF/Screenshot_20250310_112103.png\">Screenshot_20250310_112103.png</a><br>\n(dracula colors <code>variable.parameter</code> orange+italics)</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/_Bq25-C5w4W7s3i4Es_zuBLF/Screenshot_20250310_112103.png\" title=\"Screenshot_20250310_112103.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1920x1200\" src=\"/user_uploads/thumbnail/22008/_Bq25-C5w4W7s3i4Es_zuBLF/Screenshot_20250310_112103.png/840x560.webp\"></a></div>",
        "id": 504648255,
        "sender_full_name": "jan kili",
        "timestamp": 1741627816
    },
    {
        "content": "<p>What should the distinctions be between</p>\n<ul>\n<li>variable</li>\n<li>variable.parameter</li>\n<li>parameter</li>\n<li>parameter.definition</li>\n</ul>",
        "id": 504648573,
        "sender_full_name": "jan kili",
        "timestamp": 1741627915
    },
    {
        "content": "<p>Also, if you'd prefer I take a more \"try to fix it myself\" approach, I can learn the query syntax and shift to PRs.</p>",
        "id": 504648913,
        "sender_full_name": "jan kili",
        "timestamp": 1741628020
    },
    {
        "content": "<p>Not a clue tbh. Early  a fellow came in and made a pr making the queries more specific... and it didn't break my highlighting so I just shrugged and merged it <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 504649393,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741628160
    },
    {
        "content": "<p>if you want to know the correct ones:<br>\n<a href=\"https://docs.helix-editor.com/themes.html#scopes\">https://docs.helix-editor.com/themes.html#scopes</a></p>",
        "id": 504649605,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741628219
    },
    {
        "content": "<p>and these:<br>\n<a href=\"https://docs.helix-editor.com/guides/textobject.html\">https://docs.helix-editor.com/guides/textobject.html</a></p>",
        "id": 504649647,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741628230
    },
    {
        "content": "<p>I think part of the problem is that neovim uses different names. So he may have just been working of that list</p>",
        "id": 504649886,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741628300
    },
    {
        "content": "<p>Totally feel free to go through and fix any that improve things on the helix side and then PR it in.</p>",
        "id": 504650091,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741628356
    },
    {
        "content": "<p>Interesting, <code>module</code> doesn't appear in Helix's docs - did you get it from a different list?</p>",
        "id": 504668381,
        "sender_full_name": "jan kili",
        "timestamp": 1741634005
    },
    {
        "content": "<p>I guess a bigger question is - what's the intended relationship between</p>\n<ul>\n<li>the highlight names/scopes that tree-sitter-roc exposes</li>\n<li>the highlight names/scopes Helix includes in their docs (which don't perfectly match the keys in their default themes like Dracula)</li>\n<li>the highlight names/scopes mentioned in the docs of other editors like Neovim, Sublime Text, etc.</li>\n</ul>\n<p>because it all seems arbitrary to me.</p>",
        "id": 504671579,
        "sender_full_name": "jan kili",
        "timestamp": 1741635084
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> <a href=\"#narrow/channel/316715-contributing/topic/tree-sitter.20feedback.20.26.20adjustments/near/504668381\">said</a>:</p>\n<blockquote>\n<p>Interesting, <code>module</code> doesn't appear in Helix's docs - did you get it from a different list?</p>\n</blockquote>\n<p>Same for these:</p>\n<ul>\n<li>@function.definition</li>\n<li>@keyword.control.roc</li>\n<li>@namespace.builtin</li>\n<li>@operator.typedef_</li>\n<li>@parameter.definition</li>\n<li>@punctuation.bracket.typedef</li>\n<li>@punctuation.delimiter.structural</li>\n<li>@punctuation.delimiter.structural.typedef</li>\n<li>@punctuation.delimiter.typedef</li>\n<li>@type.definition</li>\n<li>@type.keyword</li>\n<li>@variable.other.enum.typedef</li>\n</ul>",
        "id": 504680330,
        "sender_full_name": "jan kili",
        "timestamp": 1741638382
    },
    {
        "content": "<p>Itâ€™s hard for me to judge these until the examples have brace delimited blocks</p>",
        "id": 504688966,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1741641359
    },
    {
        "content": "<p>Then I can tell how much I like a certain highlighting scheme</p>",
        "id": 504689043,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1741641380
    },
    {
        "content": "<p>Oh, and of course, see it in Catppuccin Mocha</p>",
        "id": 504689081,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1741641401
    },
    {
        "content": "<p>All that actually matters is what's defined in the theme within helix. Everything else is just a suggestion.</p>",
        "id": 504689200,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741641452
    },
    {
        "content": "<p><em>ahem</em>Neovim</p>",
        "id": 504689323,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1741641492
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"651372\">Eli Dowling</span> <a href=\"#narrow/channel/316715-contributing/topic/tree-sitter.20feedback.20.26.20adjustments/near/504689200\">said</a>:</p>\n<blockquote>\n<p>All that actually matters is what's defined in the theme within helix. Everything else is just a suggestion.</p>\n</blockquote>\n<p>Sure, but I'm wondering what is this sitter's source of truth for what to name the exported keys - do you want to export a superset of anything that downstream themes want to consume, including some redundant names for the same things? Are Helix's conventions given any higher priority than Neovim's?</p>",
        "id": 504689928,
        "sender_full_name": "jan kili",
        "timestamp": 1741641769
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> <a href=\"#narrow/stream/316715-contributing/topic/tree-sitter.20feedback.20.26.20adjustments/near/504689323\">said</a>:</p>\n<blockquote>\n<p><em>ahem</em>Neovim</p>\n</blockquote>\n<p>Well Jan is editing the helix highlights. <br>\nThe neovim has its own highlights file and the same rule applies there too.</p>",
        "id": 504690677,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741642074
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> <a href=\"#narrow/channel/316715-contributing/topic/tree-sitter.20feedback.20.26.20adjustments/near/504689323\">said</a>:</p>\n<blockquote>\n<p><em>ahem</em>Neovim</p>\n</blockquote>\n<p>I'm trying to make a set of editor-agnostic themes that color .roc files in a way that matches our mental model of the syntax <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 504690810,
        "sender_full_name": "jan kili",
        "timestamp": 1741642116
    },
    {
        "content": "<p>Oh, you basically just can't do that. The helix and neovim queries work different <br>\nThey are interpreted in reverse order for example.<br>\nThe conventions for names of things are different. It's all a total mess tbh. <br>\nThat's why we maintain two sets of query files.</p>",
        "id": 504691033,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741642207
    },
    {
        "content": "<p>Yes, and I plan to generate &amp; maintain a separate file for each editor x theme.</p>",
        "id": 504691376,
        "sender_full_name": "jan kili",
        "timestamp": 1741642357
    },
    {
        "content": "<p>Now I see your neovim dir - so <code>queries/highlights.scm</code> should use Helix's highlighting scopes as the source of truth?</p>",
        "id": 504691638,
        "sender_full_name": "jan kili",
        "timestamp": 1741642488
    },
    {
        "content": "<p>Ahhh I think I understand now. <br>\nWell I would follow the conventions of each platform and then just add any extensions you need.</p>",
        "id": 504691741,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741642526
    },
    {
        "content": "<p>From memory the highlights have precedence so you can do type.this.that and as long as a theme has <code>type</code> it'll highlight it even if it doesn't have the more specific versions. <br>\nDouble check that though</p>",
        "id": 504691912,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741642601
    },
    {
        "content": "<p>Yes, the default queries are for helix. Because it closely follows the tree sitter spec... Neovim just kinda does whatever</p>",
        "id": 504692080,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741642668
    },
    {
        "content": "<p>Do you know where those 13 non-Helix-sourced scopes above came from?</p>",
        "id": 504692081,
        "sender_full_name": "jan kili",
        "timestamp": 1741642668
    },
    {
        "content": "<p>If you look at the repo the very first full request is from the guy adding extra highlighting, I'd  guess it's from that.</p>",
        "id": 504692249,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741642742
    },
    {
        "content": "<p>Gotttcha. Thanks!</p>",
        "id": 504692298,
        "sender_full_name": "jan kili",
        "timestamp": 1741642762
    },
    {
        "content": "<p>I know he wanted to build a more precise theme that added more information. But I think he might have been working in neovim</p>",
        "id": 504692347,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741642788
    },
    {
        "content": "<p>He is probably in Zulip I'd imagine</p>",
        "id": 504692417,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741642807
    },
    {
        "content": "<p>I can start working to align that file 100% with Helix conventions.</p>",
        "id": 504692491,
        "sender_full_name": "jan kili",
        "timestamp": 1741642844
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"705503\">Karl</span> <a href=\"#narrow/channel/316715-contributing/topic/tree-sitter.20grammar/near/430666013\">said</a>:</p>\n<blockquote>\n<p>I started messing with the tree-sitter grammar because I was trying to figure out why thing weren't highlighting. One thing led to another and I spent a good chunk of yesterday changing things and I now have seven reasonably sized commits. I'd like to know if you'd like them in one large PR or a set of smaller ones.</p>\n<p>A lot of things are uncontroversial (e.g. tagging doc comments, tagging builtins) but some are more questionable like tagging match captures as parameters so that tree-sitters local analysis highlights typos.</p>\n<p>Here's a before and after using my theme:</p>\n<p><a href=\"/user_uploads/22008/yQXOn-8uEKwa1yJkfkd1Mvqx/Screenshot-2024-04-01-at-5.06.49-PM.png\">Screenshot-2024-04-01-at-5.06.49-PM.png</a><br>\n<a href=\"/user_uploads/22008/40pNEM0n3jevBRIfRBJx24sW/Screenshot-2024-04-01-at-5.08.03-PM.png\">Screenshot-2024-04-01-at-5.08.03-PM.png</a></p>\n<p>Some things come from extending the highlight match tags (e.g. separate colorspace for typedefs, highlighting fn defs) so other themes would need to be tweaked for full support.</p>\n</blockquote>\n<p>Aha!</p>",
        "id": 504692879,
        "sender_full_name": "jan kili",
        "timestamp": 1741642998
    },
    {
        "content": "<p>Hey nicely done</p>",
        "id": 504693224,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741643134
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> <a href=\"#narrow/channel/316715-contributing/topic/tree-sitter.20feedback.20.26.20adjustments/near/504692491\">said</a>:</p>\n<blockquote>\n<p>I can start working to align that file 100% with Helix conventions.</p>\n</blockquote>\n<p>If <span class=\"user-mention\" data-user-id=\"705503\">@Karl</span> doesn't voice any concerns, <span class=\"user-mention\" data-user-id=\"651372\">@Eli Dowling</span> does this sound right to you?</p>",
        "id": 504697342,
        "sender_full_name": "jan kili",
        "timestamp": 1741644738
    },
    {
        "content": "<p>I think it makes more sense to fit in with someone's standards. I like that the extra fields allow for additional highlighting but I expect I'm the only one taking advantage of it.</p>",
        "id": 504697717,
        "sender_full_name": "Karl",
        "timestamp": 1741644905
    },
    {
        "content": "<p>Yeah align then as much as possible. But also feel free to keep or adapt any existing extensions to the spec for roc specific stuff</p>",
        "id": 504698349,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741645182
    },
    {
        "content": "<p>Sweet, I'll try!</p>",
        "id": 504701793,
        "sender_full_name": "jan kili",
        "timestamp": 1741646592
    },
    {
        "content": "<p>This is my work-in-progress refactor of Helix Dracula, with some three-way analysis of discrepancies: <a href=\"https://gitlab.com/JanCVanB/rocwise-editor-themes/-/blob/main/helix/dracula.toml?ref_type=heads\">https://gitlab.com/JanCVanB/rocwise-editor-themes/-/blob/main/helix/dracula.toml?ref_type=heads</a></p>",
        "id": 504702023,
        "sender_full_name": "jan kili",
        "timestamp": 1741646697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"651372\">@Eli Dowling</span> What does \"keep most generic types at the bottom for helix\" mean? <a href=\"https://github.com/faldor20/tree-sitter-roc/blob/master/queries/highlights.scm#L205\">https://github.com/faldor20/tree-sitter-roc/blob/master/queries/highlights.scm#L205</a></p>",
        "id": 504721316,
        "sender_full_name": "jan kili",
        "timestamp": 1741657230
    },
    {
        "content": "<p>I infer that higher in the file is higher priority?</p>",
        "id": 504723524,
        "sender_full_name": "jan kili",
        "timestamp": 1741658552
    },
    {
        "content": "<p>Correct!</p>",
        "id": 504736616,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741666520
    },
    {
        "content": "<p>Is that just a Helix thing, hence the comment?</p>",
        "id": 504741404,
        "sender_full_name": "jan kili",
        "timestamp": 1741669041
    },
    {
        "content": "<p>Yeah, neovim evaluates it the other way around. Which is why you may notice the order is kind of inverted</p>",
        "id": 504757299,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741676779
    },
    {
        "content": "<p>With regards to the evaluation order: I ran into this as well working to pull in tree-sitter for syntax-highlighting in my static site generation platform. Sharing here in case it's useful: it looks like Helix is working on flipping the order:<br>\n<a href=\"https://github.com/helix-editor/helix/issues/9436\">https://github.com/helix-editor/helix/issues/9436</a></p>\n<p>The order Neovim/Zed use does appear to be the \"correct\" one according to tree-sitter. It's hard to find though, I believe I found mention in the code for highlighting project included in tree-sitter, also these release notes:<br>\n<a href=\"https://github.com/tree-sitter/tree-sitter/releases/tag/v0.21.0\">https://github.com/tree-sitter/tree-sitter/releases/tag/v0.21.0</a></p>",
        "id": 504761383,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1741678498
    },
    {
        "content": "<p>So far I've refactored the highlights to make it easier to see the discrepancies: <a href=\"https://github.com/JanCVanB/tree-sitter-roc/blob/helixify_highlight_names/queries/highlights.scm\">https://github.com/JanCVanB/tree-sitter-roc/blob/helixify_highlight_names/queries/highlights.scm</a></p>\n<p>I'll continue by resolving them!</p>",
        "id": 504774020,
        "sender_full_name": "jan kili",
        "timestamp": 1741682587
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"651372\">@Eli Dowling</span> I see you chose to highlight tags with <code>@constructor</code> and <code>@type.enum.variant</code> - those make sense and seem to be colored by Helix themes. There is a <code>@tag</code> name that we could use instead of <code>@constructor</code> with similar coloring support in themes, but it's not clearly superior.</p>",
        "id": 504938465,
        "sender_full_name": "jan kili",
        "timestamp": 1741722478
    },
    {
        "content": "<p>I am happy to leave it up to you to make the call on whether you think it looks better as a tag or a constructor. when I did it I don't believe my theme had any support for tag so I made it a constructor as that was what other languages used for unions. </p>\n<p>Mostly I would also try and follow the conventions of other functional programming languages.</p>",
        "id": 504947778,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741724735
    },
    {
        "content": "<p>It's nice if a user coming to roc from Haskell can look at roc code and immediately see familiar colours for familiar constructs</p>",
        "id": 504947893,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741724770
    },
    {
        "content": "<p>Good call! I'll look into how Haskell's tree-sitter implementation(s?) categorize things. Any other comparables you want, in addition to Elm?</p>",
        "id": 504948633,
        "sender_full_name": "jan kili",
        "timestamp": 1741725001
    },
    {
        "content": "<p>Elm, Haskell, Ocaml, Scala, elixir would probably cover like 95% of all production FP code right?</p>",
        "id": 504948911,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741725075
    },
    {
        "content": "<p>Can't forget my beloved Ocaml <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span>.</p>",
        "id": 504949016,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741725106
    },
    {
        "content": "<p>Unrelated, I see that almost half of the custom highlight names I listed above seem to be to facilitate coloring the same symbols/things differently if they're in typedefs - is that something you want to maintain?</p>",
        "id": 504949331,
        "sender_full_name": "jan kili",
        "timestamp": 1741725192
    },
    {
        "content": "<p>All are probably worth a glance. I'd be inclined to weight the ones that are most recently created/updated with a lot more precidence. <br>\nTS norms and names have changed a fair bit over time, so it's worth taking recency into account</p>",
        "id": 504949717,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741725296
    },
    {
        "content": "<p>Also for the queries you should be looking at the queries in the helix repo rather than any queries inside the actual tree sitter grammars. Sometimes they are quite different</p>",
        "id": 504949847,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741725336
    },
    {
        "content": "<p>But helix ones are more likely to be more up to date with helix conventions/actually tested</p>",
        "id": 504949904,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741725356
    },
    {
        "content": "<p>Cool, I'll default to injecting an indication they're original, like<br>\n<code>@punctuation.delimiter.typedef</code><br>\nto<br>\n<code>@punctuation.delimiter.roc.typedef</code></p>",
        "id": 504950189,
        "sender_full_name": "jan kili",
        "timestamp": 1741725423
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> <a href=\"#narrow/stream/316715-contributing/topic/tree-sitter.20feedback.20.26.20adjustments/near/504949331\">said</a>:</p>\n<blockquote>\n<p>Unrelated, I see that almost half of the custom highlight names I listed above seem to be to facilitate coloring the same symbols/things differently if they're in typedefs - is that something you want to maintain?</p>\n</blockquote>\n<p>I really don't care about that at all. <br>\nI think it'd be good to have a distinction between tag types and other types.<br>\nBut also there isn't any harm in being more specific if people want to use them. <br>\nBut yes I think prefixing them helps a lot</p>",
        "id": 504950338,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741725481
    },
    {
        "content": "<p>I really wouldn't stress about it though. Other than annoying <span class=\"user-mention\" data-user-id=\"705503\">@Karl</span> <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 504950511,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741725532
    },
    {
        "content": "<p>Oops misread your previous - understood</p>",
        "id": 504950517,
        "sender_full_name": "jan kili",
        "timestamp": 1741725534
    },
    {
        "content": "<p>Yeah the only ones I'm eager to fully delete are those used <strong><em>instead</em></strong> of a standard one.</p>",
        "id": 504950773,
        "sender_full_name": "jan kili",
        "timestamp": 1741725606
    },
    {
        "content": "<p>Oh sorry, yeah that was confusing. For total clarity, I did mean all the different languages highlight queries.</p>",
        "id": 504950829,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741725625
    },
    {
        "content": "<p>I trust you to make the right choice as far as weighing between being specific and just providing options that nobody will ever actually use.</p>\n<p>I'd only suggest leaning towards simple and standard for the sake of future maintenance. Remember people can override this if they really want crazy over the top everything in rainbow.</p>",
        "id": 504951209,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741725746
    },
    {
        "content": "<p>I have more ideas, but I'll pause here! <a href=\"https://github.com/faldor20/tree-sitter-roc/pull/33\">https://github.com/faldor20/tree-sitter-roc/pull/33</a> Feedback very welcome <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 505291045,
        "sender_full_name": "jan kili",
        "timestamp": 1741829366
    },
    {
        "content": "<p>Heads up, it's a nearly-total refactor. I rebased a bunch, to keep the incremental commit chain fairly readable.</p>",
        "id": 505291103,
        "sender_full_name": "jan kili",
        "timestamp": 1741829399
    },
    {
        "content": "<p>Here's a preview of the nearly-ready Helix Dracula theme that plays nicely with the PR above <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span> <br>\n<a href=\"https://gitlab.com/JanCVanB/rocwise-editor-themes/-/blob/improve_helix_dracula/helix/dracula.toml?ref_type=heads\">https://gitlab.com/JanCVanB/rocwise-editor-themes/-/blob/improve_helix_dracula/helix/dracula.toml?ref_type=heads</a><br>\n<a href=\"/user_uploads/22008/0WADJOrpohicbNf2zr8418hY/Screenshot_20250312_230533.png\">Screenshot_20250312_230533.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/0WADJOrpohicbNf2zr8418hY/Screenshot_20250312_230533.png\" title=\"Screenshot_20250312_230533.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"2256x1505\" src=\"/user_uploads/thumbnail/22008/0WADJOrpohicbNf2zr8418hY/Screenshot_20250312_230533.png/840x560.webp\"></a></div>",
        "id": 505320193,
        "sender_full_name": "jan kili",
        "timestamp": 1741842418
    },
    {
        "content": "<p>... and that's with <code>ui.text</code> still set to a super faded grey - we now have seemingly-complete coverage, because the only times I see it in code files now is with tree sitter errors</p>",
        "id": 505320380,
        "sender_full_name": "jan kili",
        "timestamp": 1741842508
    },
    {
        "content": "<p>Cool! I'll take a look in the next couple of days. Mostly, so long as it still looks good with vanilla themes I'm happy :)</p>",
        "id": 505325953,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741845353
    },
    {
        "content": "<p>Sweet! No urgency, as this isn't blocking me.</p>\n<p>Good call - I'll test it with the most popular builtins and post screenshots in the PR.</p>",
        "id": 505408718,
        "sender_full_name": "jan kili",
        "timestamp": 1741869301
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> Posted.</p>",
        "id": 505545892,
        "sender_full_name": "jan kili",
        "timestamp": 1741908992
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span>  Just added a comment.</p>",
        "id": 505777583,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1741991829
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span>  Sorry this took so long. I made some alterations. <br>\nvery happy with it overall, there were just a few places where I wanted to align better to other langauages/helix recommendations<br>\nI made a pr to your branch:<br>\n<a href=\"https://github.com/JanCVanB/tree-sitter-roc/pull/1\">https://github.com/JanCVanB/tree-sitter-roc/pull/1</a></p>",
        "id": 506820093,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1742415433
    },
    {
        "content": "<p>Woohoo! Thanks, I'll review that today.</p>",
        "id": 506822837,
        "sender_full_name": "jan kili",
        "timestamp": 1742416421
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"651372\">@Eli Dowling</span> Merged! Ready for re-review on 33 <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 507047266,
        "sender_full_name": "jan kili",
        "timestamp": 1742495135
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span> you were happy with all those changes? Just letting you know I'm totally open to feedback or disagreement.</p>",
        "id": 507057058,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1742498263
    },
    {
        "content": "<p>If you're happy at this point, I'm happy to and I'll merge :)</p>",
        "id": 507057574,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1742498451
    },
    {
        "content": "<p>I was indeed happy with all :)</p>",
        "id": 507065677,
        "sender_full_name": "jan kili",
        "timestamp": 1742501379
    },
    {
        "content": "<p>I'm confident that any room for improvement will be found by incoming PRs for the remaining TODOs</p>",
        "id": 507065927,
        "sender_full_name": "jan kili",
        "timestamp": 1742501480
    },
    {
        "content": "<p>After this refactor merges, other PRs can be much more parallel</p>",
        "id": 507066127,
        "sender_full_name": "jan kili",
        "timestamp": 1742501547
    },
    {
        "content": "<p>For example, you removing <a href=\"https://github.com/JanCVanB/tree-sitter-roc/pull/1/files#diff-d485a982e458ef8da2cc203585065b7542665cb80b78d230b1e8f77ea25825d4L33-L35\">these</a> is consistent with your choice to recategorize <code>:</code> as punctuation. There are multiple different answers to \"so now how can I color <code>:</code> the same as the key before it in records\", but we should leave that to follow-up discussions and not hold up this refactor.</p>",
        "id": 507068996,
        "sender_full_name": "jan kili",
        "timestamp": 1742502632
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"651372\">Eli Dowling</span> <a href=\"#narrow/stream/316715-contributing/topic/tree-sitter.20feedback.20.26.20adjustments/near/504948911\">said</a>:</p>\n<blockquote>\n<p>Elm, Haskell, Ocaml, Scala, elixir would probably cover like 95% of all production FP code right?</p>\n</blockquote>\n<p>if Clojure is in there then yes, but I suspect Clojure is over 5% of that by itself</p>",
        "id": 507074215,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1742504496
    },
    {
        "content": "<p>See I'm always just a little leery of calling clojure FP... It's just, it feels distinct from those other languages in some ways. I recently saw an article in lobsters comparing an Ocaml and clojure implementation of the same thing and I feel like Ocaml one would be immediately understandable/ seem normal to any user of the other languages I listed. The clojure one... Not so much </p>\n<p>Also comparing the token assignment of clojure to us probably doesn't reveal much given it's a lisp <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 507081738,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1742507418
    },
    {
        "content": "<p>big can of worms there haha</p>",
        "id": 507084396,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1742508554
    },
    {
        "content": "<p>but yes, agreed that Clojure syntax highlighting won't have much to do with ours <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 507084624,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1742508665
    },
    {
        "content": "<p>That can of worms is why I want to learn clojure sometime... If other people are chowing down on the worms and just absolutely loving it, at some point you've gotta wonder.. maybe worms are worth trying.</p>",
        "id": 507084636,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1742508671
    },
    {
        "content": "<p>I would have guessed that clojure is more fp than scala</p>",
        "id": 507088606,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742510804
    },
    {
        "content": "<p>Also, I wonder how much production code is in erlang. Just silently running the world.</p>",
        "id": 507088689,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742510851
    },
    {
        "content": "<p>Hahah mee too Brendan, me too...<br>\nIt comes up anytime I feel I've been using something for a long time and I have the realisation that nothing has ever had a single failure.<br>\nI have the little, <em>sniff</em> <em>sniff</em> smells like bean... Wait, no it's  <strong>BEAM</strong></p>",
        "id": 507099747,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1742517187
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/channel/316715-contributing/topic/tree-sitter.20feedback.20.26.20adjustments/near/507088689\">said</a>:</p>\n<blockquote>\n<p>Also, I wonder how much production code is in erlang. Just silently running the world.</p>\n</blockquote>\n<p><strong>90% of internet traffic</strong> runs through Erlang. See: <a href=\"https://x.com/guieevc/status/1002494428748140544\">https://x.com/guieevc/status/1002494428748140544</a></p>\n<p>cc <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span></p>",
        "id": 507128992,
        "sender_full_name": "Undefined Behavior",
        "timestamp": 1742533727
    },
    {
        "content": "<p>This is getting off-topic, but I'd asked <a href=\"#narrow/channel/231634-beginners/topic/Platform.20Clarification/with/505896359\">this question</a> because I was curious if, <strong>theoretically</strong>, a Roc Platform could exist that copied the behavior of the Erlang Runtime System and BEAM VM. Obviously, it's no joke to re-implement OTP/BEAM, but would a Roc Platform <em>make it possible</em>? (I'm new to Roc, pardon my ignorance)</p>",
        "id": 507129699,
        "sender_full_name": "Undefined Behavior",
        "timestamp": 1742534140
    },
    {
        "content": "<p>Theoretically you could use a roc platform to run roc directly on the BEAM VM. Roc would be a native library and the platform would be written in erlang or elixir</p>",
        "id": 507184066,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742538093
    },
    {
        "content": "<p>Though you could also fully reimplement the BEAM VM in a roc platform instead</p>",
        "id": 507184399,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742538118
    }
]