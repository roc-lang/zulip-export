[
    {
        "content": "<p>I got these <em>definitions</em> and <strong>strengths</strong> from Roc's docs. Please suggest more, and we can compile a little guide to data modeling!</p>\n<h1><a href=\"https://www.roc-lang.org/builtins/Bool\">Bool</a></h1>\n<p>ex: <code>Bool.true</code></p>\n<ul>\n<li><em>represent true or false</em></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/builtins/Num#Frac\">Dec</a></h1>\n<p>ex: <code>12.34</code></p>\n<ul>\n<li><em>represent a base-10 number with a fractional component</em></li>\n<li><strong>represent currency</strong></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/builtins/Dict\">Dict</a></h1>\n<p>ex: <code>Dict.fromList [(\"Fred\", \"my friend\"), (\"Ang\", \"a stranger\")])</code></p>\n<ul>\n<li><em>represent an association between keys and values</em></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/builtins/Num#Frac\">F*</a></h1>\n<p>ex: <code>12.34f64</code></p>\n<ul>\n<li><em>represent a base-2 number with a fractional component</em></li>\n<li><strong>represent graphical coordinates</strong></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/builtins/Num#Int\">I*</a></h1>\n<p>ex: <code>-1_234i16</code></p>\n<ul>\n<li><em>represent an integer that can be negative</em></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/builtins/List\">List</a></h1>\n<p>ex: <code>[\"my\", \"friend\", \"Fred\"]</code></p>\n<ul>\n<li><em>represent a collection of similar values</em></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/builtins/Num\">Num</a></h1>\n<p>ex: <code>1234</code></p>\n<ul>\n<li><em>represent a number that could be either an Int or a Frac</em></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/tutorial#records\">record</a></h1>\n<p>ex: <code>{ my: Friend, name: \"Fred\" }</code></p>\n<ul>\n<li><em>represent a group of named values</em></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/builtins/Result\">Result</a></h1>\n<p>ex: <code>Result Friend Stranger</code></p>\n<ul>\n<li><em>represent the result of an operation that could fail</em></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/builtins/Set\">Set</a></h1>\n<p>ex: <code>Set.fromList [\"my\", \"friend\", \"my\", \"Fred\"]</code></p>\n<ul>\n<li><em>represent a collection of unique values, without any ordering</em></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/builtins/Str\">Str</a></h1>\n<p>ex: <code>\"my friend Fred\"</code></p>\n<ul>\n<li><em>represent text</em></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/tutorial#tag-union-types\">tag / closed/open tag union</a></h1>\n<p>ex: <code>MyFriend \"Fred\"</code></p>\n<ul>\n<li><em>represent a custom value/set/subset... of...</em> (we don't really provide a definition in Roc's docs)</li>\n<li><em>represent a custom set of possible variants</em> (source: Elm's docs [<a href=\"https://guide.elm-lang.org/types/custom_types\">1</a>] [<a href=\"https://guide.elm-lang.org/appendix/types_as_sets\">2</a>])</li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/tutorial#tuples\">tuple</a></h1>\n<p>ex: <code>(my, Friend, \"Fred\")</code></p>\n<ul>\n<li><em>represent a group of unnamed values</em></li>\n</ul>\n<h1><a href=\"https://www.roc-lang.org/builtins/Num#Int\">U*</a></h1>\n<p>ex: <code>1_234u16</code></p>\n<ul>\n<li><em>represent an integer that cannot be negative</em></li>\n</ul>\n<hr>\n<p>Anything I post below is just my opinion. <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 489019494,
        "sender_full_name": "jan kili",
        "timestamp": 1734204008
    },
    {
        "content": "<p>Some strengths of tuples from <a href=\"#narrow/channel/304641-ideas/topic/Do.20we.20need.20tuples.3F\">the \"Do we need tuples?\" thread</a>:</p>\n<ul>\n<li><code>tup.6</code> (source: <a href=\"#narrow/channel/304641-ideas/topic/Do.20we.20need.20tuples.3F/near/489013259\">Brendan</a>)</li>\n<li>returning just two things that aren't really related, but I created as part of this function (source: <a href=\"#narrow/channel/304641-ideas/topic/Do.20we.20need.20tuples.3F/near/489015991\">Anthony</a>)</li>\n<li>in <code>when</code> statements to pattern match on multiple things at once (source: <a href=\"#narrow/channel/304641-ideas/topic/Do.20we.20need.20tuples.3F/near/489017392\">Luke</a>)</li>\n</ul>",
        "id": 489019506,
        "sender_full_name": "jan kili",
        "timestamp": 1734204017
    },
    {
        "content": "<p>U8:</p>\n<ul>\n<li>represent a byte</li>\n</ul>",
        "id": 489019958,
        "sender_full_name": "jan kili",
        "timestamp": 1734204419
    },
    {
        "content": "<p>U8:</p>\n<ul>\n<li>represent a bit if you're doing math with it</li>\n</ul>\n<p>Bool:</p>\n<ul>\n<li>represent a bit if you're not doing math with it</li>\n</ul>",
        "id": 489020072,
        "sender_full_name": "jan kili",
        "timestamp": 1734204507
    },
    {
        "content": "<p>Dict:</p>\n<ul>\n<li>graduate from record if it (a) gets too many keys or (b) you start wanting tools like <code>.values</code></li>\n</ul>",
        "id": 489020377,
        "sender_full_name": "jan kili",
        "timestamp": 1734204732
    },
    {
        "content": "<p>open tag union:</p>\n<ul>\n<li>simplify a module that (a) only handles a subset of your domain and (b) performs no-ops on outside variants</li>\n</ul>",
        "id": 489020550,
        "sender_full_name": "jan kili",
        "timestamp": 1734204930
    },
    {
        "content": "<p>(btw I'm very open to being wrong about these strengths I see - let me know if so!)</p>",
        "id": 489020575,
        "sender_full_name": "jan kili",
        "timestamp": 1734204960
    },
    {
        "content": "<p>record:</p>\n<ul>\n<li>graduate from tuple if it (a) gets too many fields or (b) touches an API</li>\n</ul>",
        "id": 489020650,
        "sender_full_name": "jan kili",
        "timestamp": 1734205023
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/channel/231634-beginners/topic/Strengths.20of.20each.20primitive.2Fbuiltin.20Roc.20type\">#beginners &gt; Strengths of each primitive/builtin Roc type</a> by <span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span>.</p>",
        "id": 489021069,
        "sender_full_name": "Notification Bot",
        "timestamp": 1734205373
    },
    {
        "content": "<p>Result:</p>\n<ul>\n<li>upgrade quick-and-dirty print-based debugging blocks like <code>if foo bar then dbg bar</code> to larger diversions like <code>when bar is Err e -&gt;</code> with additional graceful handling of unmet expectations at runtime, without any obligation to treat every <code>Err</code> like an exit-triggering <strong><em>Fatal Error</em></strong> in the stronger conceptual sense</li>\n</ul>",
        "id": 489021350,
        "sender_full_name": "jan kili",
        "timestamp": 1734205658
    },
    {
        "content": "<p>Note, dict and set are kinda ordered</p>",
        "id": 489022599,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734206814
    },
    {
        "content": "<p>Bool:</p>\n<ul>\n<li>Should almost never be stored. Essentially always better to store a tag. Really just exist for use in if conditionals.</li>\n</ul>\n<p>Dict:</p>\n<ul>\n<li>For any sort of kv mapping where all keys have the same type and all values have the same type. Needed for any sort of dynamic mapping. Records are static.</li>\n</ul>",
        "id": 489022720,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734206936
    },
    {
        "content": "<p>Dec:</p>\n<ul>\n<li>Recommended default fractional numeric type. Recommended because it is base 10 and behaves closer to what users expect. Use a float if perf ends up being an issue.</li>\n</ul>",
        "id": 489022863,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734207083
    },
    {
        "content": "<p>Example of where dec would shine and float can suck: <a href=\"https://www.youtube.com/watch?v=SBfR3ftM1cU&amp;t=3276s\">https://www.youtube.com/watch?v=SBfR3ftM1cU&amp;t=3276s</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"SBfR3ftM1cU\" href=\"https://www.youtube.com/watch?v=SBfR3ftM1cU&amp;t=3276s\"><img src=\"https://uploads.zulipusercontent.net/e75b072edf648c06c589b3b31dcf5f8f536e5773/68747470733a2f2f692e7974696d672e636f6d2f76692f534266523366744d3163552f64656661756c742e6a7067\"></a></div><p>Essentially 1597.0000 and 1597.0001 round to the same value in floats, but in dec, what you see is what you get. So thos are two distinct values.</p>",
        "id": 489023407,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734207608
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/channel/316715-contributing/topic/Strengths.20of.20each.20primitive.2Fbuiltin.20Roc.20type/near/489022599\">said</a>:</p>\n<blockquote>\n<p>Note, dict and set are kinda ordered</p>\n</blockquote>\n<p>Should we edit its docs? <br>\n<a href=\"/user_uploads/22008/HSpd10XjTw-25euyFZt8P3rF/Screenshot_20241214_132349.png\">Screenshot_20241214_132349.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/HSpd10XjTw-25euyFZt8P3rF/Screenshot_20241214_132349.png\" title=\"Screenshot_20241214_132349.png\"><img data-original-dimensions=\"673x329\" src=\"/user_uploads/thumbnail/22008/HSpd10XjTw-25euyFZt8P3rF/Screenshot_20241214_132349.png/840x560.webp\"></a></div>",
        "id": 489023668,
        "sender_full_name": "jan kili",
        "timestamp": 1734207870
    },
    {
        "content": "<p>probably. Though maybe it is better to hide the ordering cause it is a kinda strange ordering</p>",
        "id": 489023932,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734208112
    },
    {
        "content": "<p>basically, inserts are ordered</p>",
        "id": 489023940,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734208120
    },
    {
        "content": "<p>removal swaps an item with then end and removes from the end</p>",
        "id": 489023952,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734208134
    },
    {
        "content": "<p>so with a set if you insert <code>1, 2, 3, 4</code> then remove <code>1</code>, you will get <code>4, 2, 3</code>. Same with a dict just with attached values.</p>",
        "id": 489023988,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734208177
    },
    {
        "content": "<p>oh I think we should document the insertion order!</p>",
        "id": 489026437,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734210442
    },
    {
        "content": "<p>Yeah, I guess my question is should we put it up front or as a detail later down</p>",
        "id": 489027332,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734211294
    },
    {
        "content": "<p>I think for most people, the order shouldn't matter and it is more a distraction/implementation detail</p>",
        "id": 489027348,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734211321
    },
    {
        "content": "<p>ah, so I think that's how it ended up being for us, but it actually makes it useful in more situations so I think it's worth noting up front</p>",
        "id": 489027743,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734211661
    },
    {
        "content": "<p>just as a like \"you can use it in these use cases\" kind of thing</p>",
        "id": 489027775,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734211678
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 489028885,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734212624
    },
    {
        "content": "<p>2 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"304641\" href=\"/#narrow/channel/304641-ideas/topic/remove.20if.20to.20promote.20tags\">#ideas &gt; remove if to promote tags</a> by <span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span>.</p>",
        "id": 489029276,
        "sender_full_name": "Notification Bot",
        "timestamp": 1734212952
    }
]