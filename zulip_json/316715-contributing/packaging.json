[
    {
        "content": "<p>Just made a package for the nightly binaries for the arch user repository.<br>\n<a href=\"https://aur.archlinux.org/packages/roc-nightly-bin\">https://aur.archlinux.org/packages/roc-nightly-bin</a></p>\n<p>Problem is that the released tarballs, and more importantly their names, are changed frequently.<br>\nIt would be easier to package if there was a <code>roc_nightly-linux_x86_64.tar.gz</code> duplicating whichever named tarball is the newest.</p>\n<p>Can something be done on that front?</p>",
        "id": 359092938,
        "sender_full_name": "port19",
        "timestamp": 1684362410
    },
    {
        "content": "<p>Maybe we can name it <code>-latest</code>. Should be totally doable with an update to our nightly workflow.</p>",
        "id": 359095153,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1684363504
    },
    {
        "content": "<p>That would also let us add a one line install script to the Roc readme/website if that's something people want</p>",
        "id": 359297146,
        "sender_full_name": "Hannes",
        "timestamp": 1684376737
    },
    {
        "content": "<p>I'd like to set up a long term reliable solution, so I suggest we set up <a href=\"http://roc-lang.org/download\">roc-lang.org/download</a> where we make all nightlies available and with fixed URLs for the latest nightly. I'll try to get that done next week.</p>",
        "id": 359587122,
        "sender_full_name": "Anton",
        "timestamp": 1684486959
    },
    {
        "content": "<p>These should be long term links that get updated five days a week: <br>\n<a href=\"https://github.com/roc-lang/roc/releases/download/nightly/roc_nightly-linux_x86_64-latest.tar.gz\">https://github.com/roc-lang/roc/releases/download/nightly/roc_nightly-linux_x86_64-latest.tar.gz</a><br>\n<a href=\"https://github.com/roc-lang/roc/releases/download/nightly/roc_nightly-macos_apple_silicon-latest.tar.gz\">https://github.com/roc-lang/roc/releases/download/nightly/roc_nightly-macos_apple_silicon-latest.tar.gz</a><br>\n<a href=\"https://github.com/roc-lang/roc/releases/download/nightly/roc_nightly-macos_x86_64-latest.tar.gz\">https://github.com/roc-lang/roc/releases/download/nightly/roc_nightly-macos_x86_64-latest.tar.gz</a></p>\n<p>I'm still uploading with the old filenames as well because I expect that the github action created by <span class=\"user-mention\" data-user-id=\"508951\">@Hannes</span> relies on the old format.<br>\nI'm currently updating CI scripts and will get started on <a href=\"http://roc-lang.org/download\">roc-lang.org/download</a> next.</p>\n<p>I'm not yet sure how I'm going to handle making old nightlies available for download, netlify has an option for file serving but it may not be the best fit. Feel free to weigh in if you have experience with ddos proof (cold) file storage.</p>",
        "id": 361613686,
        "sender_full_name": "Anton",
        "timestamp": 1685206536
    },
    {
        "content": "<blockquote>\n<p>I'm not yet sure how I'm going to handle making old nightlies available for download</p>\n</blockquote>\n<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> is it a given that we need to?</p>",
        "id": 361628595,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1685213071
    },
    {
        "content": "<p>I wonder if torrents or IPFS may be useful if you want to keep historical versions?</p>",
        "id": 361628673,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1685213107
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>I'm not yet sure how I'm going to handle making old nightlies available for download</p>\n</blockquote>\n<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> is it a given that we need to?</p>\n</blockquote>\n<p>My thinking was it is very useful to be able to download the exact nightly that a prebuilt platform was built with. If you have a version mismatch other workarounds could be quite time-consuming.</p>",
        "id": 361630650,
        "sender_full_name": "Anton",
        "timestamp": 1685213954
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/packaging/near/361613686\">said</a>:</p>\n<blockquote>\n<p>I'm still uploading with the old filenames as well because I expect that the github action created by <span class=\"user-mention silent\" data-user-id=\"508951\">Hannes</span> relies on the old format.</p>\n</blockquote>\n<p>I've just checked my code and turns out it doesn't rely on the old format. It finds all the assets containing the OS and architecture name and then picks the most recently released one, so it works fine with the new names!</p>",
        "id": 361838558,
        "sender_full_name": "Hannes",
        "timestamp": 1685321655
    },
    {
        "content": "<p>Nice and robust :)</p>",
        "id": 361887749,
        "sender_full_name": "Anton",
        "timestamp": 1685350057
    }
]