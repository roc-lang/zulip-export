[
    {
        "content": "<p>Can someone kick of CI for <a href=\"https://github.com/roc-lang/roc/pull/4387\">#4387</a>?</p>\n<p>I think it needed roc format to be ran on the file, although I can't see any differences in the diff.</p>",
        "id": 305962168,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666678228
    },
    {
        "content": "<p>Running now</p>",
        "id": 305962471,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1666678439
    },
    {
        "content": "<p>Should be good for a review and merge; passed CI.</p>",
        "id": 305967712,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666681438
    },
    {
        "content": "<p>Also can someone please kick off CI for the docs for <code>Box.roc</code> and <code>Dict.roc</code> <a href=\"https://github.com/roc-lang/roc/pull/4392\">4392</a>? Thank you</p>",
        "id": 305970309,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666682686
    },
    {
        "content": "<p>I'll do a review first, that might save us some CI time :)</p>",
        "id": 305970857,
        "sender_full_name": "Anton",
        "timestamp": 1666682932
    },
    {
        "content": "<p>Can someone please look at these PRs? Please let me know if they need anything before we can merge them. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 306311862,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666811409
    },
    {
        "content": "<p>general question, do expects in comments run with <code>roc test</code>? If not, I think we should either fix that or not have expects in comments. That is just asking for them to get out of date with real implementation and expects in the file.</p>",
        "id": 306313065,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666811801
    },
    {
        "content": "<p>yeah I agree</p>",
        "id": 306332190,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1666818103
    },
    {
        "content": "<p>I'd rather use <code>expect</code> outside the docs, and then have the docs focus on looking as nice as possible</p>",
        "id": 306332287,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1666818126
    },
    {
        "content": "<p>To confirm, you would like me to remove all the expects from the docs PRs here? This is an example of how it looks, I added it because I thought it helps to convey what the example means. Happy to remove and redo examples here and update PR. </p>\n<p><a href=\"/user_uploads/22008/p5jvcIfTyhhVAr-8NzBsxf6-/Screen-Shot-2022-10-27-at-08.21.24.png\">Screen-Shot-2022-10-27-at-08.21.24.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/p5jvcIfTyhhVAr-8NzBsxf6-/Screen-Shot-2022-10-27-at-08.21.24.png\" title=\"Screen-Shot-2022-10-27-at-08.21.24.png\"><img src=\"/user_uploads/22008/p5jvcIfTyhhVAr-8NzBsxf6-/Screen-Shot-2022-10-27-at-08.21.24.png\"></a></div>",
        "id": 306335870,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666819470
    },
    {
        "content": "<p>I agree that it looks great. I think that we either should make <code>roc test</code> test doc comments, or we should we should add some expects right after the function and have docs generation grab them by default and add them.</p>",
        "id": 306340064,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666821258
    },
    {
        "content": "<p>I just think that they likely to become stale if they are docs alone.</p>",
        "id": 306340173,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666821309
    },
    {
        "content": "<p>Maybe there is a bigger story here. Should expects at document level be thought of as unit tests? Would it be helpful to have roc docs pull these in and show them separately? Instead of having code in comments, which mixes concerns, have a more natural way to capture intent. Can we have the expects have doc comments themselves? Then they get displayed in the docs, and we could refrrence them somehow in the doc comments for the function? This would also make it much nicer to have one test that shows multiple concepts. To reference an expectation in doc comments maybe you can use <code># title</code> or some kind of convention. I have been thinking about a similar need for doc comments to have headings and this would solve both of those use cases. I think a great doc experience is looking more like a document with really contextual code examples and interactive experiences.</p>",
        "id": 306342946,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666822630
    },
    {
        "content": "<p>Totally. I do think it is a bigger story. Where it lands, idk. Where it currently is definitely has problems.</p>",
        "id": 306343176,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666822782
    },
    {
        "content": "<p>Curious why I'm still seeing this when submitting a PR (<a href=\"https://github.com/roc-lang/roc/pull/4443\">https://github.com/roc-lang/roc/pull/4443</a>)?</p>\n<div class=\"codehilite\"><pre><span></span><code> 7 workflows awaiting approval\nFirst-time contributors need a maintainer to approve running workflows. Learn more.\n</code></pre></div>\n<p>I have a \"contributor\" badge on that PR, and the last step that I _thought_ might be the case, was having a signed commit in the repo which I do as of my last PR.</p>\n<p>It seems the detection system for \"First time contributors\" is a little wonky...</p>",
        "id": 307199959,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1667249627
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"453336\">Joshua Warner</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/307199959\">said</a>:</p>\n<blockquote>\n<p>I have a \"contributor\" badge on that PR, and the last step that I _thought_ might be the case, was having a signed commit in the repo which I do as of my last PR.</p>\n<p>It seems the detection system for \"First time contributors\" is a little wonky...</p>\n</blockquote>\n<p>wow, I have no idea what's up with that...you now have write access to the repo, so lmk if it happens again!</p>",
        "id": 307224134,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1667260429
    },
    {
        "content": "<p>Has anyone else had the same issue?</p>",
        "id": 307225019,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1667261005
    },
    {
        "content": "<p>The message is wrong, this has nothing to do with being a first-time contributor. Only when you are explicitly granted write permission will you be able to start CI.</p>",
        "id": 307263179,
        "sender_full_name": "Anton",
        "timestamp": 1667289757
    },
    {
        "content": "<p>Here's a short PR to review.<br>\n<a href=\"https://github.com/roc-lang/roc/pull/4307\">https://github.com/roc-lang/roc/pull/4307</a></p>",
        "id": 307732127,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1667483253
    },
    {
        "content": "<p>And another round of Rust Docs should be good for review <a href=\"https://github.com/roc-lang/roc/pull/4462\">#4462</a> <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 307821996,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1667503686
    },
    {
        "content": "<p>Fixing a broken test I accidentally added: <a href=\"https://github.com/roc-lang/roc/pull/4469\">#4469</a>. Whoops!</p>",
        "id": 307962221,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1667569982
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span>, I reviewed and merged it :)</p>",
        "id": 307962713,
        "sender_full_name": "Anton",
        "timestamp": 1667570127
    },
    {
        "content": "<p>Fixing test_mono again, after what I suspect is a race between two PRs: <a href=\"https://github.com/roc-lang/roc/pull/4471\">https://github.com/roc-lang/roc/pull/4471</a></p>",
        "id": 308061304,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1667601177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> <br>\nGot the table parser working without using HTML<br>\n<a href=\"https://github.com/roc-lang/roc/pull/4382\">https://github.com/roc-lang/roc/pull/4382</a></p>",
        "id": 308115750,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1667643894
    },
    {
        "content": "<p>Some more parser refactoring and small bugfix, ready for review: <a href=\"https://github.com/roc-lang/roc/pull/4470\">https://github.com/roc-lang/roc/pull/4470</a></p>",
        "id": 308179488,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1667676577
    },
    {
        "content": "<p>Rust docs PR <a href=\"https://github.com/roc-lang/roc/pull/4462\">4462</a> is ready for review. Request further assistance adding more documentation here; so if you see something you would like added happy to take a message in chat or comment and I will update the docs. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 308292615,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1667764678
    },
    {
        "content": "<p>Luke's PR failed on apple silicon but there were no code changes:</p>\n<div class=\"codehilite\"><pre><span></span><code>---- cli_run::test_benchmarks::astar stdout ----\nthread &#39;cli_run::test_benchmarks::astar&#39; panicked at &#39;`roc` command had unexpected stderr: An internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: https://github.com/roc-lang/roc/issues/new/choose\nthread &#39;main&#39; panicked at &#39;failed to truncate shared file, are the permissions wrong?&#39;, crates/repl_expect/src/run.rs:64:17\nstack backtrace:\n   0: _rust_begin_unwind\n   1: core::panicking::panic_fmt\n   2: roc_repl_expect::run::ExpectMemory::mmap_help\n   3: roc_cli::roc_dev_native\n   4: roc_cli::roc_run\n   5: roc_cli::build\n   6: roc::main\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n&#39;, crates/cli/tests/cli_run.rs:129:13\nstack backtrace:\n   0: _rust_begin_unwind\n   1: core::panicking::panic_fmt\n   2: cli_run::cli_run::check_output_with_stdin\n   3: cli_run::cli_run::test_benchmarks::test_benchmark\n   4: core::ops::function::FnOnce::call_once\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\n---- cli_run::test_benchmarks::base64 stdout ----\nthread &#39;cli_run::test_benchmarks::base64&#39; panicked at &#39;`roc` command had unexpected stderr: An internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: https://github.com/roc-lang/roc/issues/new/choose\nthread &#39;main&#39; panicked at &#39;failed to truncate shared file, are the permissions wrong?&#39;, crates/repl_expect/src/run.rs:64:17\nstack backtrace:\n   0: _rust_begin_unwind\n   1: core::panicking::panic_fmt\n   2: roc_repl_expect::run::ExpectMemory::mmap_help\n   3: roc_cli::roc_dev_native\n   4: roc_cli::roc_run\n   5: roc_cli::build\n   6: roc::main\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n&#39;, crates/cli/tests/cli_run.rs:129:13\nstack backtrace:\n   0: _rust_begin_unwind\n   1: core::panicking::panic_fmt\n   2: cli_run::cli_run::check_output_with_stdin\n   3: cli_run::cli_run::test_benchmarks::test_benchmark\n   4: core::ops::function::FnOnce::call_once\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\n\nfailures:\n    cli_run::test_benchmarks::astar\n    cli_run::test_benchmarks::base64\n\ntest result: FAILED. 38 passed; 2 failed; 0 ignored; 0 measured; 0 filtered out; finished in 232.76s\n</code></pre></div>",
        "id": 308344491,
        "sender_full_name": "Anton",
        "timestamp": 1667810223
    },
    {
        "content": "<p>didn't this happen before when the disk was full?</p>",
        "id": 308350271,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667812837
    },
    {
        "content": "<p>That might be it, I'll check it out...</p>",
        "id": 308350778,
        "sender_full_name": "Anton",
        "timestamp": 1667813067
    },
    {
        "content": "<p>I have 46 GB available, I do expect that to be enough.</p>",
        "id": 308351808,
        "sender_full_name": "Anton",
        "timestamp": 1667813507
    },
    {
        "content": "<p>hmm, are they somehow fighting over the same file?</p>",
        "id": 308353455,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667814219
    },
    {
        "content": "<p>I bet the issue is in here somewhere <a href=\"https://github.com/roc-lang/roc/pull/4220\">https://github.com/roc-lang/roc/pull/4220</a></p>",
        "id": 308353835,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667814354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> found that you cannot truncate the same file twice on mac</p>",
        "id": 308353922,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667814375
    },
    {
        "content": "<p>so I guess that is what is happening? but then why did CI not catch that on that PR?</p>",
        "id": 308353971,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667814396
    },
    {
        "content": "<p>Could it be dependent on which cli_run tests run in parallel?</p>",
        "id": 308365527,
        "sender_full_name": "Anton",
        "timestamp": 1667818754
    },
    {
        "content": "<p>in theory, yes</p>",
        "id": 308366105,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667818966
    },
    {
        "content": "<p>though, do we run cli tests in <code>roc dev</code> mode now?</p>",
        "id": 308366183,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667819007
    },
    {
        "content": "<p>No, it does not look like it</p>",
        "id": 308366805,
        "sender_full_name": "Anton",
        "timestamp": 1667819244
    },
    {
        "content": "<p>so how does it end up in <code>replexpect</code> territory?</p>",
        "id": 308368712,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667819961
    },
    {
        "content": "<p>I'll check that out, does that mean it is trying to use the unfinished macos surgical linker?</p>",
        "id": 308374897,
        "sender_full_name": "Anton",
        "timestamp": 1667822716
    },
    {
        "content": "<p>no, this is not a linker thing</p>",
        "id": 308375531,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667822953
    },
    {
        "content": "<p>those tests do run “roc foo.roc” which is dev mode right?</p>",
        "id": 308400592,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667831846
    },
    {
        "content": "<p>Has that been recently changed to dev mode by default?</p>",
        "id": 308400906,
        "sender_full_name": "Anton",
        "timestamp": 1667831940
    },
    {
        "content": "<p>I believe so. Away from my computer right now though so might be wrong</p>",
        "id": 308401293,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667832056
    },
    {
        "content": "<p>but macOS libc behavior is sometimes suprinsingly subtle so definitely could be the problem</p>",
        "id": 308401448,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667832109
    },
    {
        "content": "<p>Yes, dev is the default:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">BuildConfig</span>::<span class=\"n\">BuildAndRunIfNoErrors</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">OptLevel</span>::<span class=\"n\">Development</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">matches</span><span class=\"p\">.</span><span class=\"n\">subcommand</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">matches</span><span class=\"p\">.</span><span class=\"n\">is_present</span><span class=\"p\">(</span><span class=\"n\">ROC_FILE</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"o\">&amp;</span><span class=\"n\">matches</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">BuildConfig</span>::<span class=\"n\">BuildAndRunIfNoErrors</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">Triple</span>::<span class=\"n\">host</span><span class=\"p\">(),</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">LinkType</span>::<span class=\"n\">Executable</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 308404278,
        "sender_full_name": "Anton",
        "timestamp": 1667832583
    },
    {
        "content": "<p>can you look at what the value of the <code>CString</code> actually is in this case</p>\n<div class=\"codehilite\"><pre><span></span><code>    fn mmap_help(cstring: std::ffi::CString, shm_flags: i32) -&gt; Self {\n        let ptr = unsafe {\n            let shared_fd = libc::shm_open(cstring.as_ptr().cast(), shm_flags, 0o666);\n            if shared_fd == -1 {\n                internal_error!(&quot;failed to shm_open fd&quot;);\n            }\n\n            // NOTE: we can only call `ftruncate` once on this file descriptor on mac\n            if libc::ftruncate(shared_fd, Self::SHM_SIZE as _) == -1 {\n                internal_error!(&quot;failed to truncate shared file, are the permissions wrong?&quot;);\n            }\n</code></pre></div>\n<p>I suspect the same name is used multiple times</p>",
        "id": 308404849,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667832764
    },
    {
        "content": "<p>so maybe we need to explicitly close the file descriptor?</p>",
        "id": 308404895,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667832778
    },
    {
        "content": "<p>I've checked it on the CI machine when the error occurs and the printed cstrings do not have any duplicates.</p>",
        "id": 308428214,
        "sender_full_name": "Anton",
        "timestamp": 1667839544
    },
    {
        "content": "<p>hmm, maybe printing <a href=\"https://doc.rust-lang.org/std/io/struct.Error.html#method.last_os_error\">https://doc.rust-lang.org/std/io/struct.Error.html#method.last_os_error</a> in the branch that panics?</p>",
        "id": 308429223,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667839807
    },
    {
        "content": "<p>may tell us a bit more</p>",
        "id": 308429250,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667839813
    },
    {
        "content": "<p>The last os error is always:</p>\n<div class=\"codehilite\"><pre><span></span><code>code: 35\nkind: WouldBlock\nmessage:&quot;Resource temporarily unavailable&quot;\n</code></pre></div>\n<p>This also shows up when doing successful <code>cli_run</code> tests but then again this error may stem from a previous run that did fail or be from something else entirely...</p>",
        "id": 308437841,
        "sender_full_name": "Anton",
        "timestamp": 1667842299
    },
    {
        "content": "<p>yeah  based on <a href=\"https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/ftruncate.2.html\">https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/ftruncate.2.html</a> <code>ftruncate</code> does not cause that</p>",
        "id": 308441319,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667843459
    },
    {
        "content": "<p>I'm going to do a bisect</p>",
        "id": 308449244,
        "sender_full_name": "Anton",
        "timestamp": 1667846138
    },
    {
        "content": "<p>The first bad commit is <a href=\"https://github.com/roc-lang/roc/commit/2a21cd8c6e410cc7b56f034873a84f5edd9982be\">Resolve ability specializations looked up in expects</a>.</p>",
        "id": 308459218,
        "sender_full_name": "Anton",
        "timestamp": 1667849611
    },
    {
        "content": "<p>is it really? I'd guess it just straight up didn't work before that commit</p>",
        "id": 308459967,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667849890
    },
    {
        "content": "<p>It's probably actually <a href=\"https://github.com/roc-lang/roc/pull/4220/commits/c5cdab1ff9bd7305d4a0d4a2569224ad302e9733\">https://github.com/roc-lang/roc/pull/4220/commits/c5cdab1ff9bd7305d4a0d4a2569224ad302e9733</a></p>",
        "id": 308484011,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667859619
    },
    {
        "content": "<p>yes but why?</p>",
        "id": 308488496,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667861641
    },
    {
        "content": "<p>why was this done? <a href=\"https://github.com/roc-lang/roc/pull/4220/commits/84178c66e1a026cb431193935f66877e8e90226e\">https://github.com/roc-lang/roc/pull/4220/commits/84178c66e1a026cb431193935f66877e8e90226e</a></p>",
        "id": 308491014,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667862864
    },
    {
        "content": "<p>That might be the problem, because if we reuse the file descriptor that will truncate again</p>",
        "id": 308491210,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667862962
    },
    {
        "content": "<p>Right, that is the problem, because we call <code>mmap_help</code> before and after the fork</p>",
        "id": 308491424,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667863073
    },
    {
        "content": "<p>nvm that is wrong, I was looking at a code path not reachable today (expect-fx)</p>",
        "id": 308491643,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667863172
    },
    {
        "content": "<p>In any case, if we end up reusing the shm path that will cause a problem. I still think that commit should be reverted</p>",
        "id": 308491758,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667863210
    },
    {
        "content": "<p>the path that we open includes the process id</p>",
        "id": 308492023,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667863336
    },
    {
        "content": "<p>of the parent, but that should just be unique</p>",
        "id": 308492052,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667863349
    },
    {
        "content": "<p>unless it isn't I guess, then I'd prefer that we <code>shm_unlink</code> at the end</p>",
        "id": 308492082,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667863362
    },
    {
        "content": "<p>does the zig side resize it?</p>",
        "id": 308492519,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667863562
    },
    {
        "content": "<p>no, this is the code (expect.zig)</p>\n<div class=\"codehilite\"><pre><span></span><code>        const shared_fd = roc_shm_open(@ptrCast(*const i8, &amp;name), O_RDWR | O_CREAT, 0o666);\n\n        const length = 4096;\n\n        const shared_ptr = roc_mmap(\n            null,\n            length,\n            PROT_WRITE,\n            MAP_SHARED,\n            shared_fd,\n            0,\n        );\n\n        const ptr = @ptrCast([*]u8, shared_ptr);\n\n        return ptr;\n</code></pre></div>",
        "id": 308492920,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667863759
    },
    {
        "content": "<p>hmm. maybe CI does recycle pids?</p>",
        "id": 308493027,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667863803
    },
    {
        "content": "<p>then Anton should have observed repeated CStrings, which did not happen</p>",
        "id": 308493139,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667863840
    },
    {
        "content": "<p>I missed that message, my bad</p>",
        "id": 308493644,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1667864131
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/308459967\">said</a>:</p>\n<blockquote>\n<p>is it really? I'd guess it just straight up didn't work before that commit</p>\n</blockquote>\n<p>While that was the outcome of the bisect, the truncate error does indeed occur in commits before that.<br>\nI was basing myself on nightly apple silicon tests to see how many days I should go back but that recently merged PR has some old commits in it which is why my approach was wrong. This event does make me doubt our merge strategy.<br>\nAnyway I'll get onto finding the right commit after walking my dog :)</p>",
        "id": 308544536,
        "sender_full_name": "Anton",
        "timestamp": 1667898925
    },
    {
        "content": "<p>Now thoroughly checked; <a href=\"https://github.com/roc-lang/roc/commit/84178c66e1a026cb431193935f66877e8e90226e\">move around some libc code</a> is the first bad commit.</p>",
        "id": 308562266,
        "sender_full_name": "Anton",
        "timestamp": 1667905699
    },
    {
        "content": "<p>that's weird. That means a file descriptor is re-used. Maybe it is between runs somehow</p>",
        "id": 308562791,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667905899
    },
    {
        "content": "<p>well we can revert that commit (in spirit, that memset at the bottom should stay)</p>",
        "id": 308562828,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667905918
    },
    {
        "content": "<p>Fix confirmed, thanks <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> :) I'll set up a PR.</p>",
        "id": 308571498,
        "sender_full_name": "Anton",
        "timestamp": 1667909410
    },
    {
        "content": "<p>I have a few PRs that are ready for review / merging:</p>\n<ul>\n<li><a href=\"https://github.com/roc-lang/roc/pull/4592\">https://github.com/roc-lang/roc/pull/4592</a></li>\n<li><a href=\"https://github.com/roc-lang/roc/pull/4613\">https://github.com/roc-lang/roc/pull/4613</a></li>\n<li><a href=\"https://github.com/roc-lang/roc/pull/4616\">https://github.com/roc-lang/roc/pull/4616</a></li>\n</ul>",
        "id": 312659337,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1669650847
    },
    {
        "content": "<p>I have a pretty large PR that's more or less ready, here: <a href=\"https://github.com/roc-lang/roc/pull/4716\">https://github.com/roc-lang/roc/pull/4716</a><br>\nThat fixes up the parser fuzzer and fixes a bunch of bugs that fell out.</p>\n<p>If someone's up for reviewing as is, great. Otherwise I'm happy to break it into a few smaller PRs for the individual bug fixes.</p>\n<p>One of the changes that I'm kinda conflicted about is removing the SSE optimizations for quickly skipping past spaces/comments. I have some local changes to do some re-optimization of those routines - for now in a platform-neutral way that doesn't actually require SIMD at all! </p>\n<p>On my M1 mac, the new version is ~25% faster at parsing <code>Num.roc</code> than the current (<code>main</code>) code is - but that's not apples-to-apples, since nobody wrote NEON optimizations for arm.</p>",
        "id": 315117686,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1670699283
    },
    {
        "content": "<p>Actually...</p>",
        "id": 315117726,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1670699313
    },
    {
        "content": "<p>Huh</p>",
        "id": 315117738,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1670699320
    },
    {
        "content": "<p>Running the new optimizationed version on my x86_64 linux box also shows it being a net win relative to the SIMD version, which doesn't make a whole lot of sense.</p>",
        "id": 315117792,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1670699362
    },
    {
        "content": "<p>New plan: going to clean up my parser benchmarking fixes, put a PR out for that, and then maybe a few folks can try to repro my numbers.</p>",
        "id": 315117974,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1670699480
    },
    {
        "content": "<p>The new code is in this branch: <a href=\"https://github.com/roc-lang/roc/tree/faster-spaces-experiment\">https://github.com/roc-lang/roc/tree/faster-spaces-experiment</a></p>",
        "id": 315118082,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1670699546
    },
    {
        "content": "<p>Benchmark fix here: <a href=\"https://github.com/roc-lang/roc/pull/4730\">https://github.com/roc-lang/roc/pull/4730</a></p>",
        "id": 315118358,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1670699727
    },
    {
        "content": "<p>Going to fold in the faster spaces improvements into the fuzzing PR, so (I think?) we won't have a net perf regression</p>",
        "id": 315118471,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1670699772
    },
    {
        "content": "<p>so, what should we run to benchmark?</p>",
        "id": 315200063,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1670761995
    },
    {
        "content": "<p>Check out the current <code>main</code>, then <code>cd crates/compiler/parse/</code>, then run the benchmarks:</p>\n<div class=\"codehilite\"><pre><span></span><code>env RUSTFLAGS=&#39;-C target-cpu=native&#39; cargo bench --bench bench_parse -- --save-baseline main\n</code></pre></div>\n<p>After that, check out my PR with: <code>git fetch origin pull/4716/head:josh-swar-update; git checkout josh-swar-update</code>, and run the benchmarks again with:</p>\n<div class=\"codehilite\"><pre><span></span><code>env RUSTFLAGS=&#39;-C target-cpu=native&#39; cargo bench --bench bench_parse -- --baseline main\n</code></pre></div>",
        "id": 315230797,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1670777218
    },
    {
        "content": "<p>Fuzzing the formatter is (finally) ready for review again: <a href=\"https://github.com/roc-lang/roc/pull/4758\">https://github.com/roc-lang/roc/pull/4758</a></p>",
        "id": 316606451,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1671378142
    },
    {
        "content": "<p>Looking for quick review here: <a href=\"https://github.com/roc-lang/roc/pull/4820\">https://github.com/roc-lang/roc/pull/4820</a><br>\n(This was previously approved, but it turns out I had forgotten to sign the commit)</p>",
        "id": 320855747,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1673499938
    },
    {
        "content": "<p>Request someone review and kickoff CI for <a href=\"https://github.com/roc-lang/roc/pull/5052\">PR5052</a>. It should be minor as it is only markdown updates for the tutorial. Thanks <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 338080884,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1677373855
    },
    {
        "content": "<p>Can someone kick-off CI for <a href=\"https://github.com/roc-lang/roc/pull/5051\">#5051</a>? I just squished the commit that wasn't signed, and merged latest main.</p>",
        "id": 338506832,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1677565048
    },
    {
        "content": "<p>I've drafted <a href=\"https://github.com/roc-lang/roc/pull/5077\">#5077</a> [WIP] to add support for escapes in the JSON decoder. I've got a few questions and would appreciate some guidance or assistance. </p>\n<p>Additional Q: does my Roc test even cover escapes correctly? It's a bit murky with all the conversions between utf8, looking for ideas to do this better.</p>",
        "id": 338545022,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1677578930
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/5076\">#5076</a> is ready for review and a pretty small PR. It just causes a ton of mono tests to be updated. Fundamentally, the real changes are just in List.roc.</p>",
        "id": 338976983,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1677714029
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/5077\">#5077</a> is ready for review. I've added a few more tests and fixed some decoding bugs/todos for JSON. This implementation is less strict with whitespace than the <a href=\"https://www.json.org/json-en.html\">spec I'm referencing</a> describes, but this feels more reliable than crashing. We could add more Error tags to handle these cases instead, but feels ok to just continue and parse the input.</p>",
        "id": 339648755,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1677996520
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> why do the tests fail for ^^^? Are the internal tests for Abilities hardcoded somehow?</p>",
        "id": 339654451,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678001495
    },
    {
        "content": "<p>The failing tests are for mono, that is expected. Whenever builtins change, mono changes.</p>",
        "id": 339654648,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678001665
    },
    {
        "content": "<p>Just run the mono tests in release build and then add the updated files</p>",
        "id": 339654672,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678001690
    },
    {
        "content": "<p>btw you don’t need to run them in release mode anymore</p>",
        "id": 339701436,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1678025842
    },
    {
        "content": "<p>It looks like the new json encoder hits an issue with the surgical linker. So it is breaking the ruby interop test</p>",
        "id": 339719168,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678033615
    },
    {
        "content": "<p>Probably can set the test to use the legacy linker only and file a bug for this.</p>",
        "id": 339719257,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678033645
    },
    {
        "content": "<p>Oh, actaully, I think it is a simple bug</p>",
        "id": 339719403,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678033722
    },
    {
        "content": "<p>Just need to add <code>roc_memmov</code> to the platform for ruby interop.</p>",
        "id": 339719435,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678033740
    },
    {
        "content": "<p>Found a discrepancy in the docs for <code>List.splitFirst</code> and <code>List.splitLast</code>: <a href=\"https://github.com/roc-lang/roc/pull/5108\">https://github.com/roc-lang/roc/pull/5108</a></p>",
        "id": 340360983,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1678282205
    },
    {
        "content": "<p>I have a PR for Json which is ready for review <a href=\"https://github.com/roc-lang/roc/pull/5163\">5163</a>. Somehow CI was cancelled at the final hour, Im not sure how, maybe it timed out?</p>",
        "id": 343485716,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1679422128
    },
    {
        "content": "<p>yeah looks like a timeout - they appear every so often. I've kicked it off again</p>",
        "id": 343487409,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679422539
    },
    {
        "content": "<p>Looks like <code>cli_run::parse_letter_counts</code> or <code>cli_run::parse_movies_csv</code> got stuck</p>",
        "id": 343487615,
        "sender_full_name": "Anton",
        "timestamp": 1679422590
    },
    {
        "content": "<p>Can someone please review <a href=\"https://github.com/roc-lang/roc/pull/5163\">5163</a> for me? </p>\n<p>This PR now includes the Number and String primitives, and List decoding that comply with RFC 8259. I'm hoping it passes all of CI on this run. A review and some feedback would be most appreciated before I commit too much further down this path.</p>\n<p>I added a number of tests to catch different edge cases, and confirm decoders function correctly, including the composition of Lists with Numbers and Strings.</p>\n<p>I added a number of TODO's to highlight out areas for future work. Some additional notes;</p>\n<ul>\n<li>Most of the encoders need updating to comply with Json (e.g. string escapes), and then we can continue using roc-fuzz to find more bugs in the Decode-Encode-Decode path</li>\n<li>Support for null primitives still needs to be added</li>\n<li>Json Objects/Records need work to handle whitespace correctly, and also to support decoding into a Dict for object keys</li>\n<li>Some names could be updated to reflect Json or Roc where relevant, e.g. Decoding a Json array into a Roc list, or encoding a Roc List into a Json array etc.</li>\n</ul>",
        "id": 344628442,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1679825538
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> suggested I make a custom result type so I can ship the <code>Tcp</code> module for <code>basic-cli</code>. </p>\n<p>After some <code>glue</code> trickery, here it is: <a href=\"https://github.com/roc-lang/basic-cli/pull/29\">https://github.com/roc-lang/basic-cli/pull/29</a></p>",
        "id": 345801637,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1680216823
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> for all the help with glue <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 345801817,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1680216907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span> FYI <a href=\"https://github.com/roc-lang/roc/pull/5248\">https://github.com/roc-lang/roc/pull/5248</a> should fix glue generation for <code>Result</code> once it lands!</p>",
        "id": 346653483,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1680547844
    },
    {
        "content": "<p>Ooh perfect!</p>",
        "id": 346658263,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1680549319
    },
    {
        "content": "<p>I see the tests return <code>Result</code> from <code>main</code> but does this also fix returning <code>RocResult</code> from <code>roc_fx</code> functions in the platform?</p>",
        "id": 346658946,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1680549540
    },
    {
        "content": "<p>nothing changed there (in that PR, anyway).</p>",
        "id": 346671338,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1680553933
    },
    {
        "content": "<p>what is the problem there? if you want to send a <code>Result a []</code> value from rust to roc, you can just pretend that it is an <code>a</code> value on the rust side</p>",
        "id": 346671394,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1680553963
    },
    {
        "content": "<p>Right. However, last time I tried this, Roc would always think <code>Ok</code>s were <code>Err</code>s.</p>",
        "id": 346671750,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1680554112
    },
    {
        "content": "<p>I mean in cases where the error type variable is not <code>[]</code></p>",
        "id": 346671817,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1680554150
    },
    {
        "content": "<p><a href=\"#narrow/stream/231634-beginners/topic/Sockets.20on.20basic-cli/near/339600427\">https://roc.zulipchat.com/#narrow/stream/231634-beginners/topic/Sockets.20on.20basic-cli/near/339600427</a></p>",
        "id": 346671959,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1680554202
    },
    {
        "content": "<p>hmm, ok</p>",
        "id": 346672646,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1680554479
    },
    {
        "content": "<p>I'll have to test some more with that result type then</p>",
        "id": 346672661,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1680554488
    },
    {
        "content": "<p>iirc, the issue is that rust takes the two u8s and densely packs them into 1 u16.</p>",
        "id": 346675436,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1680555450
    },
    {
        "content": "<p>So we expect 2 registers to be used, but rust compresses even more and that breaks our generic roc result layout for anything smaller than a u16</p>",
        "id": 346675582,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1680555496
    },
    {
        "content": "<p>Request a review for <a href=\"https://github.com/roc-lang/basic-cli/pull/32/files\">basic-cli#32</a> which adds a <code>Time.now</code> function which returns milliseconds since UNIX EPOCH using <code>std::time::SystemTime</code>.</p>",
        "id": 347970670,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1681024839
    },
    {
        "content": "<p>I opened a small PR to make an example more clear: <a href=\"https://github.com/roc-lang/roc/pull/5267\">https://github.com/roc-lang/roc/pull/5267</a><br>\nThis confused me a bit and I thought it might prevent more confusion in the future.</p>",
        "id": 348062052,
        "sender_full_name": "Jonas Schell",
        "timestamp": 1681057896
    },
    {
        "content": "<p>Looking for feedback on <a href=\"https://github.com/roc-lang/examples/pull/14\">roc-lang/examples#14</a> which adds an example for Graph Traversal, specifically Breadth First Search, and Depth First Search using an adjacency list representation. Thank you</p>",
        "id": 350250789,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1681620665
    },
    {
        "content": "<p><del>I uploaded a copy to <a href=\"https://lukewilliamboswell.github.io/GraphTraversal/README.html\">github pages</a> if anyone would like to see it rendered which might be easier.</del> now outdated, see PR for latest version</p>",
        "id": 350251116,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1681620909
    },
    {
        "content": "<p>I think I may have messed up the implementation of BFS by using a stack instead of a queue, but I'm not sure. All nits welcome.</p>",
        "id": 350251535,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1681621268
    },
    {
        "content": "<p>I think your \"stack\" in bfs is a queue. You always load the first element in the list and you always add the new elements to the end of the list. So FIFO instead of LIFO.</p>",
        "id": 350251817,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1681621507
    },
    {
        "content": "<p>In dfs it is a stack because you put the new elements at the beginning and load from the beginning. That said, it is also the slow version of a stack. You really want to use the other end of the list. Put the new elements at the end and load from the end.</p>",
        "id": 350251986,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1681621628
    },
    {
        "content": "<p>Thanks brendan, I updated the PR.</p>",
        "id": 350253004,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1681622457
    },
    {
        "content": "<p>Small docs issue: <a href=\"https://github.com/roc-lang/roc/pull/5342\">https://github.com/roc-lang/roc/pull/5342</a></p>",
        "id": 354107433,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1682728546
    },
    {
        "content": "<p>Record Builder syntax: <a href=\"https://github.com/roc-lang/roc/pull/5389\">https://github.com/roc-lang/roc/pull/5389</a><br>\nContext: <a href=\"#narrow/stream/316715-contributing/topic/Record.20Builder.20Syntax\">https://roc.zulipchat.com/#narrow/stream/316715-contributing/topic/Record.20Builder.20Syntax</a></p>",
        "id": 358182443,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1684024332
    },
    {
        "content": "<p>Json updates <a href=\"https://github.com/roc-lang/roc/pull/5163\">https://github.com/roc-lang/roc/pull/5163</a> now passes CI <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 358586115,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1684191540
    },
    {
        "content": "<p>And a follow-up to bump the basic-cli version and improve Json for Examples <a href=\"https://github.com/roc-lang/examples/pull/28\">https://github.com/roc-lang/examples/pull/28</a></p>",
        "id": 358591645,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1684194782
    },
    {
        "content": "<p>I think that CI is held up because the latest roc nightly doesn't yet have the Json update in it. It will just need to be restarted sometime tomorrow. All tests pass locally for me.</p>",
        "id": 358593614,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1684196066
    },
    {
        "content": "<p>nice! Do you have thoughts on pulling out <code>Json</code> into its own standalone package at this point?</p>",
        "id": 358593649,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1684196087
    },
    {
        "content": "<p>instead of having it in builtins</p>",
        "id": 358593652,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1684196090
    },
    {
        "content": "<p>e.g. <code>github.com/roc-lang/json</code></p>",
        "id": 358593660,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1684196098
    },
    {
        "content": "<p>That's the plan. I'm happy to build it into a package, I've basically already done that. I thought <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> had some things that needed to be updated internally so that it can be removed from builtins. It doesn't work well as a package right now as the name conflicts, so I usually rename it to Jason when I use it.</p>",
        "id": 358594287,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1684196403
    },
    {
        "content": "<p>Yeah we need to address <a href=\"https://github.com/roc-lang/roc/issues/5373\">https://github.com/roc-lang/roc/issues/5373</a> first</p>",
        "id": 358595532,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1684196945
    },
    {
        "content": "<p>nice! <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> do you think you'd be able to tackle that issue?</p>",
        "id": 358600294,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1684198471
    },
    {
        "content": "<p>Prevents Record Builder fields from shadowing other symbols: <a href=\"https://github.com/roc-lang/roc/pull/5415\">https://github.com/roc-lang/roc/pull/5415</a></p>",
        "id": 358608293,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1684202472
    },
    {
        "content": "<p>New Record Builder field syntax (<a href=\"#narrow/stream/304641-ideas/topic/label.20syntax.20for.20record.20builders\">context</a>): <a href=\"https://github.com/roc-lang/roc/pull/5421\">https://github.com/roc-lang/roc/pull/5421</a></p>",
        "id": 359041931,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1684344735
    },
    {
        "content": "<p>PR <a href=\"https://github.com/roc-lang/roc/pull/5488\">#5488</a> to remove Json from builtins has passed CI, request a review please <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 364728275,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686285884
    },
    {
        "content": "<p>Scope of the change is <em>just</em> to change the name of Json builtin, but that touches a lot of tests and other files.</p>",
        "id": 364728354,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686285946
    },
    {
        "content": "<p>merged, thanks!</p>",
        "id": 364728480,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1686286025
    },
    {
        "content": "<p>Added <code>Task.batch</code> in <a href=\"https://github.com/roc-lang/basic-cli/pull/45\">#45</a> with an example for CI to <code>basic-cli</code> and it should be ready for review.</p>",
        "id": 365006335,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686364365
    },
    {
        "content": "<p>Also updated <a href=\"https://github.com/roc-lang/basic-cli/pull/28\">#28</a> which adds modules to exports so that Docs gen works correctly for <code>basic-cli</code>. There appears to have been a flaky test in the past, but it seems to be working well now. I updated to include recently added modules.</p>",
        "id": 365007921,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686365464
    },
    {
        "content": "<p>oh wow, awesome - reviewed and approved!</p>\n<p>Does this mean we can finally re-enable basic-cli docs generation and deployment as part of our <code>roc-lang.org</code> builds? <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 365008261,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1686365756
    },
    {
        "content": "<p>I think so, but <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> will be interested in this.</p>",
        "id": 365010527,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686367512
    },
    {
        "content": "<p>Ok, so I started adding some minor fixes, which snowballed into PR <a href=\"https://github.com/roc-lang/basic-cli/pull/46\">#46</a> for <code>basic-cli</code>. Visual fixes fro generated html docs across various modules, and starting content for <code>Task</code> module. Might stop here before this gets too big.</p>",
        "id": 365026015,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686377127
    },
    {
        "content": "<p>Amazing <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> :)</p>",
        "id": 365045248,
        "sender_full_name": "Anton",
        "timestamp": 1686384081
    },
    {
        "content": "<p>I know I said I would stop here above, but I've got a few hours today so I might just keep going on <code>basic-cli</code> docs updates. I'll just keep working on the same PR.</p>",
        "id": 365211144,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686441031
    },
    {
        "content": "<p>I think I'm done with <a href=\"https://github.com/roc-lang/basic-cli/pull/46\">#46</a> for now. Completed multiple passes and cleaned a lot of things up. I might have a stab at fixing the types for docs gen over in <code>roc-lang/roc</code> so I will leave this for now. Ready for a review. Apologies for such a massive PR, it's just easier to do all these minor changes in one go.</p>",
        "id": 365229081,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686452954
    },
    {
        "content": "<p>Along with the above also some fixes for docs gen in PR <a href=\"https://github.com/roc-lang/roc/pull/5537\">#5537</a> ;</p>\n<ul>\n<li>Removes highlighting on inline code snippets (which are frequently used to display non-code)</li>\n<li>Added css for block quotes so they conform to the visual style of docs</li>\n<li>Fix color of UpperIdents in highlighted code </li>\n<li>Improve color of --blue to stand out more in Dark mode</li>\n</ul>",
        "id": 365230346,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686454004
    },
    {
        "content": "<p>I've submitted a PR <a href=\"https://github.com/roc-lang/basic-cli/pull/48\">#48</a> which adds a <code>Utc.sleepMillis</code> effect for <code>basic-cli</code>. I probably should have raised this as an Idea first, but I needed it for another thing I'm working on and it was simple to implement.</p>",
        "id": 366095139,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686731840
    },
    {
        "content": "<p>And another PR <a href=\"https://github.com/roc-lang/basic-cli/pull/49\">#49</a> to add <code>Stdin.byte</code> for <code>basic-cli</code> to read a single byte at a time.</p>",
        "id": 366103213,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1686733550
    },
    {
        "content": "<p>Hi! Here is my first PR <a href=\"https://github.com/roc-lang/roc/pull/5549\">#5549</a>. Just a couple of docs example for the List builtin. Checked the generated html and it looked Ok.</p>",
        "id": 367209633,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1687018292
    },
    {
        "content": "<p>Awesome <span class=\"user-mention\" data-user-id=\"577599\">@Norbert Hajagos</span>, I'll take a look</p>",
        "id": 367218142,
        "sender_full_name": "Anton",
        "timestamp": 1687021413
    },
    {
        "content": "<p>PR <a href=\"https://github.com/roc-lang/basic-cli/pull/53\">#53</a> for <code>basic-cli</code> changes main to <code>Task {} U32</code> is ready for review</p>",
        "id": 367289271,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687059619
    },
    {
        "content": "<p>PR <a href=\"https://github.com/roc-lang/basic-cli/pull/55\">#55</a> for <code>basic-cli</code> adds a new Command module which enables running commands like <code>ls -al</code> or <code>FOO=BAR env -v</code> using roc. Thank you</p>",
        "id": 367770850,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687220725
    },
    {
        "content": "<p>For ^^^ I'm not sure what the status of this is. I see <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> approved it but GH still has the PR as requiring an approving review. Can someone please have a quick look and see if there is anything outstanding?</p>",
        "id": 368071597,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687303119
    },
    {
        "content": "<p>I dunno, but merged!</p>",
        "id": 368073259,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1687304160
    },
    {
        "content": "<p>Two PR's that are ready for review</p>\n<ul>\n<li><a href=\"https://github.com/roc-lang/basic-cli/pull/67\">#67</a> fix for the CI issue on roc main</li>\n<li><a href=\"https://github.com/roc-lang/basic-cli/pull/66\">#66</a> update <code>Process.exit</code> to I32</li>\n</ul>",
        "id": 369264745,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687641319
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> are you able to review these?</p>",
        "id": 369264773,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687641343
    },
    {
        "content": "<p>I don't have commit rights for that repo. maybe <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> or <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span>  do?</p>",
        "id": 369264907,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687641416
    },
    {
        "content": "<p>approved <span aria-label=\"approved\" class=\"emoji emoji-2705\" role=\"img\" title=\"approved\">:approved:</span></p>",
        "id": 369267867,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1687643238
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/369264745\">said</a>:</p>\n<blockquote>\n<p>Two PR's that are ready for review</p>\n<ul>\n<li><a href=\"https://github.com/roc-lang/basic-cli/pull/66\">#66</a> update <code>Process.exit</code> to I32</li>\n</ul>\n</blockquote>\n<p>oh, I missed this - actually part of the motivation of the change to have <code>main</code> return an exit code was to remove <code>Process.exit</code> <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 369268682,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1687643735
    },
    {
        "content": "<p>So you could just return <code>Task.err -1</code> etc... I guess <code>Process.exit -1</code> is clearer. Would you like me to remove it?</p>",
        "id": 369269029,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687643931
    },
    {
        "content": "<p>yeah let's remove it! <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 369269065,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1687643953
    },
    {
        "content": "<p>PR <a href=\"https://github.com/roc-lang/basic-cli/pull/68\">#68</a> to remove <code>Process</code> module from <code>basic-cli</code></p>",
        "id": 369282048,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687653380
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> you now have commit rights to basic-cli</p>",
        "id": 369342618,
        "sender_full_name": "Anton",
        "timestamp": 1687683620
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/5694\">#5694</a> is a draft PR that fixes (workarounds) for zig builtins tests on Windows. Request a review and some feedback.</p>",
        "id": 378693613,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690357187
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> :)<br>\nI'll take a look today</p>",
        "id": 378708734,
        "sender_full_name": "Anton",
        "timestamp": 1690360564
    },
    {
        "content": "<p>I can take a look at the test failures, but someone with actual zig experience should probably look at the zig code :p</p>",
        "id": 378714372,
        "sender_full_name": "Anton",
        "timestamp": 1690361721
    },
    {
        "content": "<p>Oh yeah, I haven't bothered with the test failures. It looks like clippy/fmt etc</p>",
        "id": 378716777,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690362188
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/92\">#92</a> is a PR to rename the Command module to Cmd in basic-cli, and change the functionality of the <code>Cmd.output</code>.</p>",
        "id": 380235427,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690791477
    },
    {
        "content": "<p>I'll check it out :)</p>",
        "id": 380243739,
        "sender_full_name": "Anton",
        "timestamp": 1690792853
    },
    {
        "content": "<p>PR <a href=\"https://github.com/roc-lang/basic-cli/pull/97\">#97</a> add new features for basic-cli to the Directory module, essentially <code>mkdir</code> <code>mkdir -p</code> <code>rmdir</code> <code>rm -rf</code>.</p>",
        "id": 382266211,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1691292999
    },
    {
        "content": "<p>Failures on <a href=\"https://github.com/roc-lang/roc/pull/5741\">#5741</a> seem unrelated to this change, is it worth re-running do you think?</p>",
        "id": 384581770,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1691959430
    },
    {
        "content": "<p>re-ran <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 384590199,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1691964015
    },
    {
        "content": "<p>Is the failure on <a href=\"https://github.com/roc-lang/roc/pull/5780#pullrequestreview-1608992109\">5780</a> a flake?</p>",
        "id": 388931616,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1693815073
    },
    {
        "content": "<p>I think so, re-running now</p>",
        "id": 388937574,
        "sender_full_name": "Anton",
        "timestamp": 1693817105
    },
    {
        "content": "<p>merged :)</p>",
        "id": 388945699,
        "sender_full_name": "Anton",
        "timestamp": 1693819713
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/5802\">#5802</a> makes some simple HTML &amp; JS changes to the REPL page on the website. Just fixing a line-wrapping issue.</p>",
        "id": 391356672,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1694857718
    },
    {
        "content": "<p>I'd appreciate a review because I am preparing slides for my <a href=\"https://gotocph.com/2023/schedule?date=2023-10-02\">talk about the web REPL</a> and it would be nice to have screenshots that are not from localhost!</p>",
        "id": 391359575,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1694858984
    },
    {
        "content": "<p>done</p>",
        "id": 391362879,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1694861121
    },
    {
        "content": "<p>Thanks Folkert!</p>",
        "id": 391382470,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1694873655
    },
    {
        "content": "<p>CI failure on <a href=\"https://github.com/roc-lang/roc/pull/5858\">#5858</a> is a flake; worth re-running?</p>\n<div class=\"codehilite\"><pre><span></span><code>---- cli_run::hello_world_no_url stdout ----\nthread &#39;cli_run::hello_world_no_url&#39; panicked at &#39;\nerror: test failed, to rerun pass `-p roc_cli --test cli_run`\n___________\nThe roc command:\n\n  &quot;/home/small-ci-user/actions-runner/_work/roc/roc/target/release/roc --max-threads=1 /home/small-ci-user/actions-runner/_work/roc/roc/examples/helloWorldNoURL.roc --&quot;\n\nhad unexpected stderr:\n\n  🔨 Rebuilding platform...\nthread &#39;main&#39; panicked at &#39;range start index 109041880 out of range for slice of length 99054856&#39;, crates/linker/src/elf.rs:1268:18\n</code></pre></div>",
        "id": 393416362,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1695801047
    },
    {
        "content": "<p>Yeah re-running is fine, we don't want to get in the habit of skipping tests</p>",
        "id": 393417459,
        "sender_full_name": "Anton",
        "timestamp": 1695801473
    },
    {
        "content": "<p>Allow <code>where</code> to be used as an identifier: <a href=\"https://github.com/roc-lang/roc/pull/5869\">https://github.com/roc-lang/roc/pull/5869</a></p>",
        "id": 394101442,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1696094776
    },
    {
        "content": "<p>Tiny fix for the web REPL JS. Not crucial, just makes the code clearer. <a href=\"https://github.com/roc-lang/roc/pull/5873\">https://github.com/roc-lang/roc/pull/5873</a></p>",
        "id": 394252859,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1696188737
    },
    {
        "content": "<p>Added <code>List.chunksOf</code> as a builtin <a href=\"https://github.com/roc-lang/roc/pull/5893\">https://github.com/roc-lang/roc/pull/5893</a></p>",
        "id": 395433961,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1696695182
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"586417\">@Elias Mulhall</span> :) I'll take a look</p>",
        "id": 395434130,
        "sender_full_name": "Anton",
        "timestamp": 1696695306
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> <a href=\"https://github.com/roc-lang/unicode/pull/1\">roc-lang/unicode #1</a> - added the basic infrastructure and cleaned up some things so it at least compile and tests pass. Added a basic example.</p>",
        "id": 396438303,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1697180814
    },
    {
        "content": "<p>Hi folks, I opened a PR to add <code>Str.contains</code> <a href=\"https://github.com/roc-lang/roc/pull/5905\">https://github.com/roc-lang/roc/pull/5905</a></p>",
        "id": 396674641,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1697313784
    },
    {
        "content": "<p>I have added <a href=\"https://github.com/roc-lang/examples/pull/95\">#95</a> to <code>roc-lang/examples</code> which provides a demonstration and explanation for how to use the record builder pattern. <span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span>  could you please review this for me?</p>\n<p>I have also pushed a copy of the page to <a href=\"https://lukewilliamboswell.github.io/RecordBuilder/README.html\">here</a> which includes syntax highlighting etc as I find that easier to read.</p>",
        "id": 396849852,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1697444996
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/examples/pull/95\">https://github.com/roc-lang/examples/pull/95</a> updated with <span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span> feedback, and should be ready for approving. <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> are you able to assist here?</p>",
        "id": 397042816,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1697526557
    },
    {
        "content": "<p>Yes :) I'll look at it in a bit</p>",
        "id": 397054307,
        "sender_full_name": "Anton",
        "timestamp": 1697530774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> I approved it!</p>",
        "id": 397073165,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1697537193
    },
    {
        "content": "<p>Thank you Agus, I can see that. Unfortunately it looks like we still need someone else to approve it before we can merge <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 397073879,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1697537461
    },
    {
        "content": "<p>I'm making some edits now...</p>",
        "id": 397091634,
        "sender_full_name": "Anton",
        "timestamp": 1697543440
    },
    {
        "content": "<p>Add text segmentation for extended grapheme clusters - part 1 is ready at <a href=\"https://github.com/roc-lang/unicode/pull/2\">roc-lang/unicode #2</a></p>",
        "id": 397900856,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1697944842
    },
    {
        "content": "<p>Added roc-lang/unicode <a href=\"https://github.com/roc-lang/unicode/pull/3\">#3</a> to actually implement the text segmentation for Grapheme's. It covers most sequences correctly, but not Emoji <span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span> or Flags <span aria-label=\"flag australia\" class=\"emoji emoji-1f1e6-1f1fa\" role=\"img\" title=\"flag australia\">:flag_australia:</span>, or combinations of <code>Indic_Conjunct_Break</code> (which I have no idea how to do yet). </p>\n<p>Current progress agains the unicode test suite is <code>328 failed and 912 passed in 4548 ms.</code>.</p>",
        "id": 398860325,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1698398887
    },
    {
        "content": "<p>How do you intend for flags to work? Because they are, by design, not single symbols in unicode. As far are the consortium is concerned they don't want to bake things as fickle as flags into permanent standards, so the way it's implemented is conceptually closer to a ligature. At least, last I checked. Do you want to count flags as one grapheme, or the several symbols that encode it? Like the later is less intuitive, but it's unintuitiveness is directly tied to the intent and function.</p>",
        "id": 398861107,
        "sender_full_name": "Declan Joseph Maguire",
        "timestamp": 1698399194
    },
    {
        "content": "<p>Basically don't break within two Regional Indicator symbols. This is the text segmentation algorithm <a href=\"https://unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\">https://unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules</a>. See here for more detail <a href=\"https://www.unicode.org/reports/tr51/#Flags\">https://www.unicode.org/reports/tr51/#Flags</a></p>",
        "id": 398861419,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1698399306
    },
    {
        "content": "<p>That said, I haven't spent any time on implementing that. I've spent a couple hours on emoji sequences, which looked straightforward, but turns out I don't really understand the notation they are using in the standard. So when I plugged the test cases back into my state machine I am getting incorrect results.</p>",
        "id": 398861726,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1698399418
    },
    {
        "content": "<p>I didn't know there was a standard it. I guess it makes perfect sense that they'd give a guide to something like that.</p>\n<p>And yeah, that sounds like a massive pain to implement.</p>",
        "id": 398861833,
        "sender_full_name": "Declan Joseph Maguire",
        "timestamp": 1698399459
    },
    {
        "content": "<p>Hi folks, I just opened up a PR to make List.dropFirst and List.dropLast accept the number of elements to be dropped <a href=\"https://github.com/roc-lang/roc/pull/5941\">https://github.com/roc-lang/roc/pull/5941</a>.</p>\n<p>Related to this thread <a href=\"#narrow/stream/304641-ideas/topic/Drop.20n.20elements.20from.20the.20end.20of.20a.20list\">https://roc.zulipchat.com/#narrow/stream/304641-ideas/topic/Drop.20n.20elements.20from.20the.20end.20of.20a.20list</a></p>",
        "id": 399176186,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1698604248
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"611722\">@Isaac Van Doren</span>! I'll do the review</p>",
        "id": 399262017,
        "sender_full_name": "Anton",
        "timestamp": 1698658874
    },
    {
        "content": "<p>Just opened a pr to change the type of Stdin.line to Task [Input Str, End] *. Looking forward to this so I can pipe input into programs <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span>. <a href=\"https://github.com/roc-lang/basic-cli/pull/114\">https://github.com/roc-lang/basic-cli/pull/114</a></p>",
        "id": 399642455,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1698806380
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"611722\">@Isaac Van Doren</span> :)<br>\nI'll take a look later today</p>",
        "id": 399688783,
        "sender_full_name": "Anton",
        "timestamp": 1698831265
    },
    {
        "content": "<p>Two simple PRs for review: <a href=\"https://github.com/roc-lang/roc/issues/5955\">#5955</a> and <a href=\"https://github.com/roc-lang/roc/issues/5956\">#5956</a></p>",
        "id": 400577277,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1699290408
    },
    {
        "content": "<p>Approved, looks like the first has CI failures</p>",
        "id": 400577537,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1699290506
    },
    {
        "content": "<p>Apparently using the Github UI to rebase a branch ends up removing commit verification...that's annoying</p>",
        "id": 400580970,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1699291845
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/5978\">#5978</a> rust glue generation changes to fix closures.</p>",
        "id": 401625237,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1699806644
    },
    {
        "content": "<p>We have a web server that compiles and runs now <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  <a href=\"https://github.com/roc-lang/basic-webserver/pull/2\">https://github.com/roc-lang/basic-webserver/pull/2</a> </p>\n<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span>'s workaround is required for now whenever re-generating glue. There is still a lot of polish required to make this more user friendly, but at least it serves requests.</p>",
        "id": 401908478,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1699939310
    },
    {
        "content": "<p>I think this is pretty cool... added the Command effect and an example which reads todos from an SQLite3 database and then send a JSON encoded response. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span>  <br>\n<a href=\"/user_uploads/22008/4KUecVeFxUw2-WWnfAHFZRNR/Screenshot-2023-11-14-at-17.23.39.png\">Screenshot-2023-11-14-at-17.23.39.png</a><br>\n<a href=\"/user_uploads/22008/59bPd2xzdULo8a6_w7jsGn-x/Screenshot-2023-11-14-at-17.23.47.png\">Screenshot-2023-11-14-at-17.23.47.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/4KUecVeFxUw2-WWnfAHFZRNR/Screenshot-2023-11-14-at-17.23.39.png\" title=\"Screenshot-2023-11-14-at-17.23.39.png\"><img src=\"/user_uploads/22008/4KUecVeFxUw2-WWnfAHFZRNR/Screenshot-2023-11-14-at-17.23.39.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/22008/59bPd2xzdULo8a6_w7jsGn-x/Screenshot-2023-11-14-at-17.23.47.png\" title=\"Screenshot-2023-11-14-at-17.23.47.png\"><img src=\"/user_uploads/22008/59bPd2xzdULo8a6_w7jsGn-x/Screenshot-2023-11-14-at-17.23.47.png\"></a></div>",
        "id": 401914630,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1699943145
    },
    {
        "content": "<p>Definitely getting carried away over here... it's very quick an easy to add new features.</p>\n<p><a href=\"/user_uploads/22008/tKtjQZhqMxlKyD87q5SNlz9M/basic-webserver-2.gif\">basic-webserver-2.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/tKtjQZhqMxlKyD87q5SNlz9M/basic-webserver-2.gif\" title=\"basic-webserver-2.gif\"><img src=\"/user_uploads/22008/tKtjQZhqMxlKyD87q5SNlz9M/basic-webserver-2.gif\"></a></div>",
        "id": 401954088,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1699957547
    },
    {
        "content": "<p>yoooooooo <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span> <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span> <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span> <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span> <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 401973594,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1699964019
    },
    {
        "content": "<p>amazing work, <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span>!!!</p>",
        "id": 401976247,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1699964985
    },
    {
        "content": "<p>I copied the TCP implementation I did for basic-cli to basic-webserver: <a href=\"https://github.com/roc-lang/basic-webserver/pull/4\">https://github.com/roc-lang/basic-webserver/pull/4</a></p>",
        "id": 402143442,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1700024733
    },
    {
        "content": "<p>This unblocks us from trying things like roc-pg on top of it. However, in the long term, the API should look a little different, including the ability to maintain TCP connections across requests and potentially some pooling primitives.</p>",
        "id": 402144748,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1700025375
    },
    {
        "content": "<p>yeah I have some ideas about a pooling API design! We should chat about that at some point, make sure they'd be a good fit for roc-pg</p>",
        "id": 402215230,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700049007
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> is probably the best person to review this one!</p>",
        "id": 402215495,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700049075
    },
    {
        "content": "<p>Super simple review, just adding a few trait to RocResult such that it has them when needed in glue generation: <a href=\"https://github.com/roc-lang/roc/issues/5986\">#5986</a></p>",
        "id": 402275335,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700063848
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/5989\">#5989</a> adds a Table of Contents for the WIP Tutorial page.</p>",
        "id": 402373307,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700104844
    },
    {
        "content": "<p>^^ also formats some css as I ran Prettier on the file.</p>",
        "id": 402373372,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700104876
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/5\">basic-webserver#5</a> Updates the README and improves the examples making them more beginner friendly, cleaner, with improved error handling</p>",
        "id": 402389474,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700113268
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> Im not sure if you wanted anything in that main.roc example, so I've just left it and the comments for now. It looks like your doing something with secrets or tokens.</p>",
        "id": 402401918,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700119307
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/132\">https://github.com/roc-lang/basic-cli/pull/132</a></p>",
        "id": 402900026,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1700331195
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/8\">basic-webserver#8</a> is ready for review. It's a pretty massive improvement and should make the platform significantly more capable.</p>",
        "id": 402973626,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700377972
    },
    {
        "content": "<p>21k lines of diff, wow. How much of that is generated code that doesn't need review?</p>",
        "id": 402985034,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1700383639
    },
    {
        "content": "<p>Shouldnt be too much. Almost all of those lines are probably the generated glue.</p>",
        "id": 402986663,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700384550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span> do you have any examples with <code>roc-pg</code>? I don't have a great way to test the <code>Tcp</code> module. </p>\n<p>I added the types for <code>Tcp</code> to <code>platform/main-manual-glue.roc</code> so they are (re)generated the same as all the others, and am 99% confident this will not have broken anything as the changes to glue since you generated that <code>tcp_glue.rs</code> were very minor.</p>",
        "id": 402988391,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700385459
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> <span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span> would either of you mind looking through the PR for me?</p>",
        "id": 402991217,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700386949
    },
    {
        "content": "<p>I modified the way glue is generated so that the one script <code>platform/glue-gen.sh</code> will generate it all.</p>",
        "id": 402991279,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700386986
    },
    {
        "content": "<p>There are two parts to glue because glue only generates for some of the types, so I added <code>platform/main-manual-glue.roc</code> which I've called the crate <code>glue_manual</code> and use that to generate the missing types</p>",
        "id": 402991444,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700387054
    },
    {
        "content": "<p>If you re-generate glue there are a few issues that have to be manually fixed by hand, I logged <a href=\"https://github.com/roc-lang/roc/issues/6012\">https://github.com/roc-lang/roc/issues/6012</a> to capture those.</p>",
        "id": 402991498,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700387089
    },
    {
        "content": "<p>OK I can have a look but I'm going to need your help to narrow down which files are actually to be reviewed! 22k lines is not realistic for a person to look at. Could you spell that out for us?</p>",
        "id": 402991670,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1700387176
    },
    {
        "content": "<p>I'll go through an make a bunch of comments in the PR</p>",
        "id": 402991771,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700387242
    },
    {
        "content": "<p><code>platform/src/lib.rs</code> and the examples are the places to focus.</p>",
        "id": 402991855,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700387284
    },
    {
        "content": "<p>And almost all of that <code>lib.rs</code> file is copied from <code>basic-cli</code> and updated to point to the correct glue types.</p>",
        "id": 402991946,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700387336
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/402988391\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"489294\">Agus Zubiaga</span> do you have any examples with <code>roc-pg</code>? I don't have a great way to test the <code>Tcp</code> module. </p>\n</blockquote>\n<p>I gave a demo at work the other day using roc-pg + basic-webserver and it worked great. I can’t upload that example because it used our real db, but when I’m back home from a trip tomorrow, I’ll make a public one.</p>",
        "id": 403033870,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1700414822
    },
    {
        "content": "<p>I made some updates to the examples repo:</p>\n<ul>\n<li><a href=\"https://github.com/roc-lang/examples/pull/107\">Simplify Towers of Hanoi example</a></li>\n<li><a href=\"https://github.com/roc-lang/examples/pull/108\">Use roc-parser for Parser example</a></li>\n</ul>\n<p>This was prompted by a conversation at the end of the meeting yesterday, where I mentioned that a few of the examples seemed a bit rough/confusing.</p>",
        "id": 403052486,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1700428117
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6034\">#6034</a> should be ready to review. It just deletes the old copy of basic-cli from the roc repo and updates all of the examples to use the basic-cli platform via url. I copied over an version of each example from the basic-cli repo to update them. I also added <code>roc check</code> tests to each file that doesn't have a full test to avoid them going stale. Overall, it is a pretty direct PR mostly deleting things.</p>",
        "id": 403294398,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700537871
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6030\">#6030</a> should now also be ready for review.</p>\n<p>It does 2 main things:</p>\n<ol>\n<li>it adds code gen for the <code>.. as rest</code> syntax (just a call to <code>List.sublist</code>).</li>\n<li>it fixes a bug in list exhaustiveness checking such that matching <code>[1, ..]</code> and <code>[.., 1]</code> is not considered a redundant pattern.</li>\n</ol>",
        "id": 403298255,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700539919
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/136\">basic-cli#136</a> implements <code>Dir.list</code> effect</p>",
        "id": 403468843,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700603802
    },
    {
        "content": "<p>Yay</p>",
        "id": 403469466,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1700604072
    },
    {
        "content": "<p>I've kicked of CI for <a href=\"https://github.com/roc-lang/roc/pull/6054\">#6054</a>, it looks good to me but I am not familiar with this part of the code base. It's a very small change.</p>",
        "id": 403469483,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700604078
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6061\">#6061</a> replaces the stale webserver implementation in examples with two example that point to <code>roc-lang/basic-webserver</code> URL package</p>",
        "id": 403509533,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700623412
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> :)<br>\nI'll review basic-cli#136 and <a href=\"https://github.com/roc-lang/roc/issues/6061\">#6061</a></p>",
        "id": 403553585,
        "sender_full_name": "Anton",
        "timestamp": 1700645621
    },
    {
        "content": "<p>Just a random GH related question, not necessarily specific to this PR or anything. What is should be the process for when we get a PR to this stage? </p>\n<p>It's been reviewed, I've made changes and pushed those. I clicked \"resolve conversation\" on the individual comments. Should I \"Dismiss Review\" or \"Re-request Review\" now? </p>\n<p>I would normally just chill here and wait for Anton or someone to re-review and merge the changes. But just interested in how the GH workflow is designed to work. </p>\n<p><a href=\"/user_uploads/22008/ldbx3j_UvBRxYT_BER8PHB-a/Screenshot-2023-11-23-at-09.07.28.png\">Screenshot-2023-11-23-at-09.07.28.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/ldbx3j_UvBRxYT_BER8PHB-a/Screenshot-2023-11-23-at-09.07.28.png\" title=\"Screenshot-2023-11-23-at-09.07.28.png\"><img src=\"/user_uploads/22008/ldbx3j_UvBRxYT_BER8PHB-a/Screenshot-2023-11-23-at-09.07.28.png\"></a></div>",
        "id": 403672351,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700691045
    },
    {
        "content": "<p>I've wondered the same thing <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 403674123,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1700692014
    },
    {
        "content": "<p>At my last job where we used gh we would generally re-request review once it was in a good state to be looked at again</p>",
        "id": 403674130,
        "sender_full_name": "John Murray",
        "timestamp": 1700692020
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6068\">PR#6068</a> adds a section for Abilities to the roc Language Reference</p>",
        "id": 403867208,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700784101
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6072\">PR#6072</a> updates the <code>@</code> token from a Keyword/Punctuation to an UpperIdent token for correct styling syntax highlighting.</p>",
        "id": 403867306,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700784136
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/examples/pull/112\">examples PR#112</a> updates the Task example. I've updated to use the new 0.6.1 release.  I think <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> would also like to review this.</p>",
        "id": 404019671,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1700859827
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6099\">PR#6099</a> fixes a couple issues by desugaring patterns during canonicalization.</p>",
        "id": 404263087,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1701008881
    },
    {
        "content": "<p>This is my first(!) time writing rust code in anger. I think it turned out alright, but if anyone has time for feedback I'd appreciate it.</p>",
        "id": 404263690,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1701009369
    },
    {
        "content": "<p>I left you a couple comments Elias, they're non-blocking and can be addressed later</p>",
        "id": 404271638,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1701015500
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6108\">https://github.com/roc-lang/roc/pull/6108</a> fixes me mixing up the captures and the actual argument to <a href=\"http://List.map\">List.map</a></p>",
        "id": 404505921,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1701127655
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/examples/pull/115\">examples#115</a> renames <code>Task</code> example to <code>Task &amp; Error Handling</code> to improve discoverability. Super skinny PR.</p>",
        "id": 404718287,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701205664
    },
    {
        "content": "<p>Thank you Brendan, you don't have privileges on Examples. <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span>  are you able to approve?</p>",
        "id": 404722215,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701207148
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6123\">#6123</a> fixes css class for error color in REPL on homepage.</p>",
        "id": 405231836,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701389411
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6124\">#6124</a> prevents spellcheck in web REPL text area</p>",
        "id": 405235453,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701391005
    },
    {
        "content": "<p>it's soooo nice that these changes don't have to run the entire CI suite now</p>\n<p>thanks for making that happen, Anton! <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 405236352,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701391312
    },
    {
        "content": "<p>Yeah, it's really great. I don't feel the need to bunch all these minor changes into a massive PR to save on CI.</p>",
        "id": 405237557,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701391720
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6126\">#6126</a> adds a link to roc-lang/roc to the website footer.</p>",
        "id": 405255449,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701398590
    },
    {
        "content": "<p>Easy review, just +14. The entire change is to ignore the seamless slice bit when calculating the length (that and a test case). So we don't see gigantic incorrect numbers for string length: <a href=\"https://github.com/roc-lang/roc/issues/6158\">#6158</a></p>",
        "id": 405583882,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701565214
    },
    {
        "content": "<p>Easy review, just fixing an off by one error: <a href=\"https://github.com/roc-lang/roc/issues/6166\">#6166</a></p>",
        "id": 405678583,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701620582
    },
    {
        "content": "<p>New PR just dropped: <a href=\"https://github.com/roc-lang/roc/pull/6186\">#6186</a><br>\n<code>keepIf</code> and <code>dropIf</code> for <code>Set</code> and <code>Dict</code>. Please check if safe and optimal</p>",
        "id": 405927050,
        "sender_full_name": "LoipesMas",
        "timestamp": 1701730076
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6184\">#6184</a> is now passing tests fully.</p>\n<p>It fixes our debug info generation (I think we still only generate on the function level, but better than nothing). Changes some of our flags as mentioned in <a class=\"stream-topic\" data-stream-id=\"304641\" href=\"/#narrow/stream/304641-ideas/topic/Optimize.2C.20but.20only.20a.20little\">#ideas &gt; Optimize, but only a little</a>, and removes debugir. It has been broken for a while and we now are able to generate real debug info. We should focus on improving our debug info instead of falling back on the debug ir crutch.</p>",
        "id": 405947476,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701739169
    },
    {
        "content": "<p>that's only partially true: debugir is useful when the problem is in the code we generate, or when LLVM does something weird</p>",
        "id": 406020869,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1701770976
    },
    {
        "content": "<p>and it's broken because of the llvm upgrade right? that can be fixed</p>",
        "id": 406021058,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1701771016
    },
    {
        "content": "<blockquote>\n<p>and it's broken because of the llvm upgrade right?</p>\n</blockquote>\n<p>Yes, debugIR needs to be upgraded to llvm 16. There are some breaking changes in llvm 16 that no longer allow the use of <code>getPointerElementType</code>. To record and share knowledge; here are the <a href=\"https://llvm.org/docs/OpaquePointers.html#migration-instructions\">migration instructions</a>. The migration is not straight forward. C++ experience is recommended.</p>",
        "id": 406033032,
        "sender_full_name": "Anton",
        "timestamp": 1701774540
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"496321\">@Oskar Hahn</span>  <a href=\"https://github.com/ostcar/roc-wasi-platform/pull/1/files\">ostcar/roc-wasi PR#1</a> - adds an Effect implementation for opening a file using WASI. It's probably not the greatest but it works, and I hope can be an example for how to implement other effects in zig platforms.  Also thank you <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> for helping with a zig <code>RocResult</code>.</p>",
        "id": 406044835,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701779002
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6176\">#6176</a> was already reviewed and just needs approval to be merged. I had to rebase to fix a CI issue which is why the old review got dismissed.</p>",
        "id": 406181751,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701821538
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6202\">#6202</a> Single function PR. Changes the Str substring builtin to use seamless slices. Noticed a program I wrote spent 98% of its time in memcpy before this.</p>",
        "id": 406341382,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701879910
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6210\">#6210</a> add plans to remove <code>Nat</code> to the website.</p>",
        "id": 406371438,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701890739
    },
    {
        "content": "<p>Full rewrite of the underlying <code>Dict</code> implementation. 1.5x to 3x faster in my testing: <a href=\"https://github.com/roc-lang/roc/issues/6216\">#6216</a></p>",
        "id": 406645936,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701995786
    },
    {
        "content": "<p>yessssssss I love this!!!</p>",
        "id": 406647341,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701996416
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6228\">#6228</a> handle a TrailingOperator parse error. I wasn't sure of the difference between <code>Severity::RuntimeError</code> or <code>Severity::Fatal</code> so I chose the former as that sounds less scary.</p>",
        "id": 406910369,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702111939
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6134\">#6134</a> Support for completion in the language server is ready for some reviewing. It's got some pretty major changes and is the first rust I've written in a long time so I'd love some input :)</p>",
        "id": 406989643,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1702169557
    },
    {
        "content": "<p>Thanks for doing this. I’ll take a look at it tonight.</p>",
        "id": 406999387,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1702176149
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6232\">https://github.com/roc-lang/roc/pull/6232</a> makes it possible to create seamless slices from rust. This is useful for nea.</p>",
        "id": 407068231,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1702214362
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6238\">#6238</a> small change just adds a function to dict and fixes some small follow up suggestions form the last pr. (mostly uitest and mono test updates)</p>",
        "id": 407126215,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702256829
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6249\">#6249</a> Another small PR. This just renames some things in the bitcode to help with clarity.</p>",
        "id": 407152071,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702267117
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6146\">https://github.com/roc-lang/roc/pull/6146</a> <br>\nno rush but could someone kick off tests for this? Trying to see if i can get the mac nix setup to work with the new nixpkgs</p>",
        "id": 407365277,
        "sender_full_name": "John Murray",
        "timestamp": 1702349755
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6256\">#6256</a> - fixes Dict.update</p>",
        "id": 407374913,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702353192
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6258\">#6258</a> - Adds <code>List.walkWithIndexUntil</code> to builtins</p>",
        "id": 407377403,
        "sender_full_name": "Bryce Miller",
        "timestamp": 1702354141
    },
    {
        "content": "<p>(Still waiting for CI to finish, but I need to sleep)</p>",
        "id": 407377898,
        "sender_full_name": "Bryce Miller",
        "timestamp": 1702354333
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6257\">#6257</a> - Replace UNKNOWN.roc in reports with real filename</p>",
        "id": 407859482,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702523881
    },
    {
        "content": "<p>I have created a PR for roc-examples repo, please review it and there's a issue that I want to work on but that's already assigned to someone and that assigned person isn't responding, should I start working and create a PR???</p>",
        "id": 408063313,
        "sender_full_name": "Sahil",
        "timestamp": 1702595641
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6281\">https://github.com/roc-lang/roc/pull/6281</a> updated some of the docs for installing with nix + fixed <code>nix run github:roc-lang/roc</code></p>",
        "id": 408067712,
        "sender_full_name": "John Murray",
        "timestamp": 1702598183
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"666594\">@John Murray</span> :) I'll try to review today.</p>",
        "id": 408148666,
        "sender_full_name": "Anton",
        "timestamp": 1702633005
    },
    {
        "content": "<p>Thanks for the PR <span class=\"user-mention\" data-user-id=\"674307\">@Sahil</span>! I'll try to review today.<br>\nCan you provide a link to the issue where the person was not responding?</p>",
        "id": 408148857,
        "sender_full_name": "Anton",
        "timestamp": 1702633077
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/408148857\">said</a>:</p>\n<blockquote>\n<p>Thanks for the PR <span class=\"user-mention silent\" data-user-id=\"674307\">Sahil</span>! I'll try to review today.<br>\nCan you provide a link to the issue where the person was not responding?</p>\n</blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/issues/6260\">https://github.com/roc-lang/roc/issues/6260</a></p>",
        "id": 408149091,
        "sender_full_name": "Sahil",
        "timestamp": 1702633138
    },
    {
        "content": "<p>oranjan was only assigned two days ago, let's give them two more days to reply :)<br>\nThe examples repo has a bunch of approachable <a href=\"https://github.com/roc-lang/examples/issues\">good first issues</a> if you're on the hunt <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 408149864,
        "sender_full_name": "Anton",
        "timestamp": 1702633437
    },
    {
        "content": "<p>Yep just waiting for the first approval on the examples repo as that'll help me realize if I'm going in the right way or not, looking forward to contribue to examples repo and I'll update you after couple of days if there's no response,thanks <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 408150333,
        "sender_full_name": "Sahil",
        "timestamp": 1702633602
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6286\">#6286</a> Adds a <code>Num.restrictToInterval</code> function (clamp in other languages)</p>",
        "id": 408243510,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1702668054
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"497765\">@Kilian Vounckx</span>! I'll review today</p>",
        "id": 408323255,
        "sender_full_name": "Anton",
        "timestamp": 1702718318
    },
    {
        "content": "<p>No rush, just informing that I have made the required changes for this issue, <a href=\"https://github.com/roc-lang/roc/issues/6260\">https://github.com/roc-lang/roc/issues/6260</a></p>",
        "id": 408347143,
        "sender_full_name": "Sahil",
        "timestamp": 1702735491
    },
    {
        "content": "<p>I'm on it :)</p>",
        "id": 408347773,
        "sender_full_name": "Anton",
        "timestamp": 1702736023
    },
    {
        "content": "<p>Thanks</p>",
        "id": 408347825,
        "sender_full_name": "Sahil",
        "timestamp": 1702736046
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/unicode/pull/3\">unicode PR #3</a> implements the text segmentation algorithm for legacy grapheme clusters. This PR is very large. <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> if you would like I can arrange a time to talk you through the implementation, I've tried my best to leave comments and lots and lots of tests everywhere. </p>\n<p>Anyway all that work means we can now do this <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <img alt=\":roc:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/22008/emoji/images/18217.png\" title=\"roc\"> <br>\n<a href=\"/user_uploads/22008/HBQGUVk7Z7r-Disa-lvFn9lJ/291053423-5444a941-41a7-4fd3-9102-fcd63e8cda8d.png\">291053423-5444a941-41a7-4fd3-9102-fcd63e8cda8d.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/HBQGUVk7Z7r-Disa-lvFn9lJ/291053423-5444a941-41a7-4fd3-9102-fcd63e8cda8d.png\" title=\"291053423-5444a941-41a7-4fd3-9102-fcd63e8cda8d.png\"><img src=\"/user_uploads/22008/HBQGUVk7Z7r-Disa-lvFn9lJ/291053423-5444a941-41a7-4fd3-9102-fcd63e8cda8d.png\"></a></div>",
        "id": 408428004,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702806198
    },
    {
        "content": "<p>And I have to share <a href=\"https://gist.github.com/lukewilliamboswell/c82b7f9ee1a71d5ac0d765e28568c3d3\">this part of the internal implementation</a> for anyone who is interested in how complicated it is to segment unicode, after you have parsed into grapheme property break tokens. </p>\n<p>This took me a quite while to implement, and it probably needs some more testing against real data before I can be confident it is close to correct, there are so many edge cases and the test suite is missing a lot.</p>",
        "id": 408428474,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702806640
    },
    {
        "content": "<p>Also, if there is anyway to fuzz test this I feel like that would be super helpful.</p>",
        "id": 408428697,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702806866
    },
    {
        "content": "<p>It's probably stale and needs to be upgraded, but I made a platform for fuzzing roc code a while back</p>",
        "id": 408450204,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702826814
    },
    {
        "content": "<p>PR to display shadowing error messages last in the CLI <a href=\"https://github.com/roc-lang/roc/pull/6344\">https://github.com/roc-lang/roc/pull/6344</a></p>",
        "id": 411256598,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1704400106
    },
    {
        "content": "<p>PR to fix the language server and compiler hangs from bad imports <a href=\"https://github.com/roc-lang/roc/pull/6361\">https://github.com/roc-lang/roc/pull/6361</a></p>",
        "id": 411563307,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1704596521
    },
    {
        "content": "<p>wow, amazing!!! <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span> </p>\n<p>This has been a very longstanding bug!</p>",
        "id": 411563586,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1704596785
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281383\">Richard Feldman</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/411563586\">said</a>:</p>\n<blockquote>\n<p>wow, amazing!!! <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span> </p>\n<p>This has been a very longstanding bug!</p>\n</blockquote>\n<p>Look... I spoke a little too soon on that one <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> . I \"fixed\" it by forgetting that interfaces need to be able to import from external packages too. But I can sort that out in a minute.</p>",
        "id": 411566682,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1704600105
    },
    {
        "content": "<p>Well, it's definitely going to be more than a minute. I know whats wrong at least, but it's going to be a while to get a solution that fixes it for interfaces. See here <a href=\"#narrow/stream/316715-contributing/topic/Fixing.20hanging.20due.20to.20incorrect.2Funknown.20shorthands\">https://roc.zulipchat.com/#narrow/stream/316715-contributing/topic/Fixing.20hanging.20due.20to.20incorrect.2Funknown.20shorthands</a></p>",
        "id": 411570930,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1704604840
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6363\">#6363</a> fixes for bugged setjmp/longjmp on windows/llvm</p>",
        "id": 411667786,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1704686841
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/156\">basic-cli #156</a> add Task.list and Task.forEach</p>",
        "id": 412652355,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1705109555
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6384\">#6384</a> Adds <code>--ignore-warnings</code> flag to <code>roc check</code> and <code>roc build</code></p>",
        "id": 412850268,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1705269896
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6392\">#6329</a> allows the embedding of code snippets in markdown files during static site generation.</p>",
        "id": 413233668,
        "sender_full_name": "Michael Pfeifer",
        "timestamp": 1705436939
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6424\">#6242</a> prevents <code>roc format</code> from reading the current working directory if the <code>--stdin</code> or <code>--stdout</code> option is present on the command line.</p>",
        "id": 417980215,
        "sender_full_name": "Michael Pfeifer",
        "timestamp": 1706138179
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6134\">#6134 Support for completion in the language server</a> Is ready for another round of review. I've even got my commit signed. Thanks to <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> for pointing that one out :)</p>",
        "id": 418623420,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1706530398
    },
    {
        "content": "<p>I'll kick off CI</p>",
        "id": 418623616,
        "sender_full_name": "Anton",
        "timestamp": 1706530458
    },
    {
        "content": "<p>I have a handful of really small PRs that could use quick reviews:<br>\n<a href=\"https://github.com/roc-lang/roc/issues/6474\">#6474</a><br>\n<a href=\"https://github.com/roc-lang/roc/issues/6477\">#6477</a><br>\n<a href=\"https://github.com/roc-lang/roc/issues/6478\">#6478</a></p>",
        "id": 418977761,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1706683827
    },
    {
        "content": "<p>Also this one, but it is windows specific. So want someone who runs roc on windows to make sure I didn't regress anything. I just changed something to match the windows call conv docs:<br>\n<a href=\"https://github.com/roc-lang/roc/issues/6475\">#6475</a></p>",
        "id": 418977838,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1706683867
    },
    {
        "content": "<p>I can look at windows, but might take a day to get to it. Work is busy this week.</p>",
        "id": 419009025,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1706696799
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6481\">https://github.com/roc-lang/roc/pull/6481</a> a fix for inline expects that are hit by a top-level expect</p>",
        "id": 419246946,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1706794430
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6503\">#6503</a> is a fix and new test for generating stub lib for macho. It's my first attempt at something for the macos surgical linker.</p>",
        "id": 419757221,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1707102552
    },
    {
        "content": "<p>Does anyone have any ideas what might be causing this issue in CI? I've done some research and I thought it might be intermittent, but I re-ran CI and it popped up again. Specifically the <code>AccessDenied</code> looks to be caused by call <code>zig build-lib</code> on Windows, and I suspect it may be related to using a temporary file. </p>\n<div class=\"codehilite\"><pre><span></span><code>---- generate_dylib::tests::check_exports_macho stdout ----\nthread &#39;generate_dylib::tests::check_exports_macho&#39; panicked at &#39;Failed to link dummy shared library - stderr of the `zig build-lib` command was:\nerror: AccessDenied\n&#39;, crates\\linker\\src\\generate_dylib\\macho.rs:70:27\n</code></pre></div>",
        "id": 420138986,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1707254942
    },
    {
        "content": "<p>isn't this what we often hit on windows and we just need to run the same command again?</p>",
        "id": 420219130,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1707301094
    },
    {
        "content": "<p>Yeah thats what I thought so I restarted it... maybe I should try that again?</p>",
        "id": 420220373,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1707301584
    },
    {
        "content": "<p>I just didnt want to waste CI</p>",
        "id": 420220392,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1707301593
    },
    {
        "content": "<p>well but restarting CI will start from a clean slate right?</p>",
        "id": 420240192,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1707308740
    },
    {
        "content": "<p>I did some searching and I've encountered an AccessDenied from zig in the past and I was able to fix it by setting the env var XDG_CACHE_HOME = \"xdg_cache\". This was with nix, so not on windows but it may work...</p>",
        "id": 420246923,
        "sender_full_name": "Anton",
        "timestamp": 1707310969
    },
    {
        "content": "<p>My first PR here!<br>\n<a href=\"https://github.com/roc-lang/roc/pull/6506\">https://github.com/roc-lang/roc/pull/6506</a><br>\nIt. adds checks for files extensions. Feel free to let me know what I could do bette in this</p>",
        "id": 420306275,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1707327310
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"479378\">@Trevor Settles</span>, I'll take a look :)</p>",
        "id": 420314152,
        "sender_full_name": "Anton",
        "timestamp": 1707329963
    },
    {
        "content": "<p>Thanks for your feedback, <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span>! <a href=\"https://github.com/roc-lang/roc/pull/6506\">#6506</a> is ready for another review</p>",
        "id": 420575262,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1707444046
    },
    {
        "content": "<p>Hey folks, is there anything more I should do to get this merged? <br>\n<a href=\"https://github.com/roc-lang/roc/pull/6134\">https://github.com/roc-lang/roc/pull/6134</a><br>\n<span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> has approved (thanks heaps for all the review :) ). I'm just not sure if there is anything else I should be doing.</p>",
        "id": 420598612,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1707463861
    },
    {
        "content": "<p>Oh, can you hit merge?</p>",
        "id": 420599738,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1707464573
    },
    {
        "content": "<p>Or is that not available??</p>",
        "id": 420599746,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1707464583
    },
    {
        "content": "<p>Done, nice work on this. I look forward to using it.</p>",
        "id": 420599877,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1707464656
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/420599738\">said</a>:</p>\n<blockquote>\n<p>Oh, can you hit merge?</p>\n</blockquote>\n<p>Oh, maybe I could have? I don't think so though.</p>",
        "id": 420634686,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1707478566
    },
    {
        "content": "<p>Either way thanks :). I'll rebase the next pr for module and import conpletion and get that ready soon too.</p>",
        "id": 420634966,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1707478688
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/35\">basic-webserver #35</a> adds basic support for Sqlite3.</p>",
        "id": 420842111,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1707608831
    },
    {
        "content": "<p>The key thing here I am unsure about is how the connections are managed wrt multiple threads. I tried to do something that looked ok from some research and asking ChatGPT, but I've not done multithreaded Rust before so that might be all completely wrong or overkill.</p>",
        "id": 420855757,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1707622283
    },
    {
        "content": "<p>Should be able to make it a thread local and have one per thread automatically</p>",
        "id": 420856307,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1707622764
    },
    {
        "content": "<p>That said, if it is async, might be more complicated.</p>",
        "id": 420856328,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1707622792
    },
    {
        "content": "<p>My solution was basically this</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">SQLiteConnection</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"n\">path</span>: <span class=\"nb\">String</span><span class=\"p\">,</span>\n<span class=\"w\">     </span><span class=\"n\">connection</span>: <span class=\"nc\">std</span>::<span class=\"n\">sync</span>::<span class=\"n\">Arc</span><span class=\"o\">&lt;</span><span class=\"n\">sqlite</span>::<span class=\"n\">Connection</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"w\"> </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">INIT_GLOBAL_CONNECTION_STORE</span>: <span class=\"nc\">std</span>::<span class=\"n\">sync</span>::<span class=\"n\">Once</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">sync</span>::<span class=\"n\">Once</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\"> </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">GLOBAL_SQLITE_CONNECTIONS</span>: <span class=\"o\">*</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">sync</span>::<span class=\"n\">Mutex</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">SQLiteConnection</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">     </span><span class=\"n\">std</span>::<span class=\"n\">ptr</span>::<span class=\"n\">null_mut</span><span class=\"p\">();</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">get_connection</span><span class=\"p\">(</span><span class=\"n\">path</span>: <span class=\"kp\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">std</span>::<span class=\"n\">sync</span>::<span class=\"n\">Arc</span><span class=\"o\">&lt;</span><span class=\"n\">sqlite</span>::<span class=\"n\">Connection</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sqlite</span>::<span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"c1\">//...</span>\n</code></pre></div>",
        "id": 420856553,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1707622978
    },
    {
        "content": "<p>Maybe a bit defensive, but probably safer.</p>",
        "id": 420856658,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1707623082
    },
    {
        "content": "<p>This PR for module completion is ready for review :<a href=\"https://github.com/roc-lang/roc/pull/6347\">https://github.com/roc-lang/roc/pull/6347</a></p>",
        "id": 420871984,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1707640024
    },
    {
        "content": "<p>This pr makes <code>roc build --lib</code> respect <code>--output </code> <a href=\"https://github.com/roc-lang/roc/pull/6523\">https://github.com/roc-lang/roc/pull/6523</a></p>",
        "id": 421162218,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1707789034
    },
    {
        "content": "<p>My first PR<br>\n<a href=\"https://github.com/roc-lang/roc/pull/6524\">https://github.com/roc-lang/roc/pull/6524</a><br>\nI think I understood the site.css right.</p>\n<p>There was another PR that was fixing the same issue. I am sorry if I overtook it</p>",
        "id": 421523786,
        "sender_full_name": "Gunnar Ahlberg",
        "timestamp": 1707941276
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6526\">https://github.com/roc-lang/roc/pull/6526</a></p>\n<p>This adds sorting to the functions mentioned in <a href=\"https://github.com/roc-lang/roc/issues/6494\">https://github.com/roc-lang/roc/issues/6494</a><br>\nI am not 100% about the search button layout, I had to resort to margin pushing. Maybe the search button can be simplified?</p>",
        "id": 421693588,
        "sender_full_name": "Gunnar Ahlberg",
        "timestamp": 1708014576
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"571916\">@Gunnar Ahlberg</span>, I'll try to review today :)</p>",
        "id": 421824145,
        "sender_full_name": "Anton",
        "timestamp": 1708077000
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6422\">https://github.com/roc-lang/roc/pull/6422</a> is finally ready...it's kind of a beast, so I don't expect anyone to do a super thorough review of it, but I'd love it if anyone could glance through it and see if they spot anything concerning!</p>",
        "id": 422038075,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1708199387
    },
    {
        "content": "<p>the Zig changes in particular would be nice to have reviewed - they're a pretty small part of it, but they're the changes most likely to impact edge cases that don't have explicit tests (e.g. when numbers are so big they might overflow)</p>",
        "id": 422038266,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1708199549
    },
    {
        "content": "<p>also would be good to test some of the wasm4 games and see what impact it has (if any) on the generated wasm code!</p>",
        "id": 422042419,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1708203742
    },
    {
        "content": "<p>I can test out wasm4 later</p>",
        "id": 422049372,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1708211181
    },
    {
        "content": "<p>nice, thank you!</p>",
        "id": 422055058,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1708217908
    },
    {
        "content": "<p>Looks to be working fine with wasm4 on my <code>roc-wasm4/remove-nat</code> branch. </p>\n<p>The only issue I have found is that the ZigGlue.roc has a few <code>MODULE NOT IMPORTED in crates/glue/src/../platform/Types.roc</code> warnings which prevent me from regenerating glue for wasm4. This looks to be an unrelated bug to the remove nat changes.</p>",
        "id": 422064352,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1708229630
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/41\">basic-webserver #41</a> simplifies Request API and adds <code>Http.parseFormUrlEncoded</code> helper. These are some changes I've been using locally and wanted to share for others as they are helpful when building a web app.</p>",
        "id": 422070023,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1708235539
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6533\">#6533</a> was contributed by roc-gpt, and ready for human review.</p>",
        "id": 422765596,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1708589159
    },
    {
        "content": "<p>I'll clean it up a bit, it's not quite right... but I thought it was an interesting idea.</p>",
        "id": 422766047,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1708589398
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/175\">basic-cli#175</a> change <code>Http.send</code> to return <code>Http.Response</code> instead of <code>Str</code>. Feature requested by <span class=\"user-mention\" data-user-id=\"555462\">@Marten</span></p>",
        "id": 423223431,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1708827946
    },
    {
        "content": "<p>Hey, this has been waiting for review for quite a while now, I'm working on another PR on top of it and it'd be nice to be able to merge it in if it's considered good <br>\n<a href=\"https://github.com/roc-lang/roc/pull/6347\">https://github.com/roc-lang/roc/pull/6347</a></p>",
        "id": 425817677,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1710116157
    },
    {
        "content": "<p>I kicked of CI, I'm probably not qualified to provide a review and approve though.</p>",
        "id": 425824203,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1710122410
    },
    {
        "content": "<p>This PR adding docs for completion is also ready for review and builds atop the previous one adding completions for modules and imports.<br>\n<a href=\"https://github.com/roc-lang/roc/pull/6569\">https://github.com/roc-lang/roc/pull/6569</a></p>",
        "id": 425923869,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1710168168
    },
    {
        "content": "<blockquote>\n<p>Hey, this has been waiting for review for quite a while now</p>\n</blockquote>\n<p>I'll try to look at it tomorrow if no one else is available</p>",
        "id": 425926609,
        "sender_full_name": "Anton",
        "timestamp": 1710168862
    },
    {
        "content": "<p>This PR for optional record field decoding is ready for some general review:<br>\n<a href=\"https://github.com/roc-lang/roc/pull/6587\">https://github.com/roc-lang/roc/pull/6587</a> <br>\nI also made a thread for it: <a href=\"#narrow/stream/316715-contributing/topic/Missing.20record.20field.20decoding\">https://roc.zulipchat.com/#narrow/stream/316715-contributing/topic/Missing.20record.20field.20decoding</a></p>",
        "id": 427096145,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1710675887
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/examples/pull/166\">roc-lang/examples #166</a> adds an example for <code>Encoding</code> and <code>Decoding</code> abilities</p>",
        "id": 432384998,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712717325
    },
    {
        "content": "<p>Can someone look at ^^^ please, it should be quite small. All the tests are happy.</p>",
        "id": 432583042,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712782251
    },
    {
        "content": "<p>I can look in a minute. Sorry for the delay</p>",
        "id": 432612040,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1712797940
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> I gave it a skim too :)</p>",
        "id": 432612724,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1712798581
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"651372\">@Eli Dowling</span> I would appreciate if you could expand on your comments a little. I like the idea of showing both a simpler type and a simpler method, and also a more complicated type with the more complicated approach. I was just trying to capture something for later reference, so happy to polish it so it's clearer for future reference. I'm just not sure what you mean. Do you have access to the examples? Are you able to push to that PR?</p>",
        "id": 432613798,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712799425
    },
    {
        "content": "<p>Even if you flick me some notes, I'll clean it up and add it.</p>",
        "id": 432613818,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712799456
    },
    {
        "content": "<p>Ok, thanks for the review <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> and <span class=\"user-mention\" data-user-id=\"651372\">@Eli Dowling</span>. I've updated. ^^^ <a href=\"https://github.com/roc-lang/examples/pull/166\">roc-lang/examples #166</a> so should be gtg.</p>",
        "id": 432620062,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712804541
    },
    {
        "content": "<p>Teeny tiny PR adding <code>List.getUnchecked</code>: <a href=\"https://github.com/roc-lang/roc/pull/6642\">https://github.com/roc-lang/roc/pull/6642</a></p>",
        "id": 433177149,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713140296
    },
    {
        "content": "<p>I don't think we should add that</p>",
        "id": 433177947,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713141155
    },
    {
        "content": "<p>We should force the user to add it</p>",
        "id": 433177953,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713141163
    },
    {
        "content": "<p>Crash shouldn't be in the standard library in a way that an end user can hit</p>",
        "id": 433177966,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713141181
    },
    {
        "content": "<p>Should be equally performant to use list.get and the <code>when ... is</code> and crash</p>",
        "id": 433177997,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713141213
    },
    {
        "content": "<p>Last I checked, llvm optimizes them the same</p>",
        "id": 433178043,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713141230
    },
    {
        "content": "<p>Aren't you adding in a a bunch of pointless memory for the tag? or does it just get optimized away?<br>\nFrom reading <a href=\"#narrow/stream/304641-ideas/topic/panic.20on.20out-of-bounds\">https://roc.zulipchat.com/#narrow/stream/304641-ideas/topic/panic.20on.20out-of-bounds</a> sentiment seemed to be strongly for adding it</p>",
        "id": 433178125,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713141296
    },
    {
        "content": "<p>Am I contradicting my past self. Give me a few so I can look this over and think about it more. I do think a better solution would be nice here, but a proper array type would be so many times better....idk....</p>",
        "id": 433178251,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713141405
    },
    {
        "content": "<p>haha, that was my thought too. This seemed like a compromise that doesn't involve significant additions to the compiler. A compile time bounds checked array would be nice though for high performance buffers and LUTs and such</p>",
        "id": 433178374,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713141510
    },
    {
        "content": "<p>I guess now I definitely question if this has a gain over forcing the user to do <code>List.get ... |&gt; unwrap</code></p>\n<p>Where unwrap is a <code>when ... is </code> + <code>crash</code></p>",
        "id": 433182013,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713143175
    },
    {
        "content": "<p>Here is the rust equivalent: <a href=\"https://godbolt.org/z/cTEnW8TYq\">https://godbolt.org/z/cTEnW8TYq</a></p>\n<p>LLVM should optimize them to the exact same thing</p>",
        "id": 433182020,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713143192
    },
    {
        "content": "<p>It will remove the tag fully</p>",
        "id": 433182023,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713143196
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Elixir\"><pre><span></span><code><span class=\"n\">unwrap</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"n\">res</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">msg</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"ow\">when</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">        </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">v</span>\n<span class=\"w\">        </span><span class=\"nc\">Err</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"w\"> </span><span class=\"n\">msg</span>\n\n<span class=\"c1\"># User can do this inline or make an explicit function for:</span>\n<span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"n\">list</span><span class=\"w\"> </span><span class=\"n\">index</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">unwrap</span><span class=\"w\"> </span><span class=\"s2\">\"Out of Bounds\"</span>\n</code></pre></div>",
        "id": 433182117,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713143286
    },
    {
        "content": "<p>Also since that disassembly is noisy, here is the important part. These are identical</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">justUnwrap:</span>\n<span class=\"w\">        </span><span class=\"nf\">cmp</span><span class=\"w\">     </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdi</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"no\">rsi</span>\n<span class=\"w\">        </span><span class=\"nf\">jbe</span><span class=\"w\">     </span><span class=\"no\">.LBB7_2</span>\n<span class=\"w\">        </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rip</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"no\">listGetUnsafe@GOTPCREL</span><span class=\"p\">]</span>\n<span class=\"nl\">.LBB7_2:</span>\n<span class=\"w\">        </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rax</span>\n<span class=\"w\">        </span><span class=\"nf\">lea</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rip</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"no\">.L__unnamed_4</span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"nf\">call</span><span class=\"w\">    </span><span class=\"no\">std</span><span class=\"p\">::</span><span class=\"no\">panicking</span><span class=\"p\">::</span><span class=\"no\">begin_panic</span><span class=\"p\">::</span><span class=\"no\">he275593115e721e6</span>\n\n<span class=\"nl\">listGetUnchecked:</span>\n<span class=\"w\">        </span><span class=\"nf\">cmp</span><span class=\"w\">     </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rdi</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"no\">rsi</span>\n<span class=\"w\">        </span><span class=\"nf\">jbe</span><span class=\"w\">     </span><span class=\"no\">.LBB8_1</span>\n<span class=\"w\">        </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"no\">qword</span><span class=\"w\"> </span><span class=\"no\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rip</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"no\">listGetUnsafe@GOTPCREL</span><span class=\"p\">]</span>\n<span class=\"nl\">.LBB8_1:</span>\n<span class=\"w\">        </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rax</span>\n<span class=\"w\">        </span><span class=\"nf\">lea</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"no\">rip</span><span class=\"w\"> </span><span class=\"err\">+</span><span class=\"w\"> </span><span class=\"no\">.L__unnamed_5</span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"nf\">call</span><span class=\"w\">    </span><span class=\"no\">std</span><span class=\"p\">::</span><span class=\"no\">panicking</span><span class=\"p\">::</span><span class=\"no\">begin_panic</span><span class=\"p\">::</span><span class=\"no\">he275593115e721e6</span>\n</code></pre></div>",
        "id": 433182153,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713143349
    },
    {
        "content": "<p>Well, I think that basically proves it. Bar having fixed length arrays and avoiding the bounds check, it's not getting any faster</p>",
        "id": 433182158,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713143354
    },
    {
        "content": "<p>So our tags are always equivalent to rust enums? so we can use rust to model roc in Tag/Eunm related scenarios?</p>",
        "id": 433182224,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713143405
    },
    {
        "content": "<p>They should be. There is a chance we are modeling something in a way that defeats llvm optimization, but I don't think so.</p>",
        "id": 433182250,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713143446
    },
    {
        "content": "<p>Thankyou, this has been very educational :)</p>",
        "id": 433182266,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713143475
    },
    {
        "content": "<p>We do have two other big potential list issues:</p>\n<ol>\n<li>The refcounting thing I am working on. A List containing any sort of refcounted data has horrible perf. So List of List, List of Str, List of Dict, List of recusive tag, etc.</li>\n<li>We don't have borrow inference, which leads to having list refcounting in places it isn't wanted . Sometimes this can really hurt the perf of a hot loop.</li>\n</ol>",
        "id": 433182344,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713143539
    },
    {
        "content": "<p>Not sure specifically what you are working on, but I can take a look with a profiler at some point and try to dig into. There is totally a chance that llvm is failing to optimize away unwrap or some other similar issue. Like it might optimize it away in simple cases but fail for other reasons here.</p>",
        "id": 433182400,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713143614
    },
    {
        "content": "<p>Well I'll do some testing and let you know, it's a tiny optimization for json parsing. <br>\nI'm implementing an alternative json parser modeled after RapidJson and other fast json libraries that allow for streaming json parsing. <br>\nI need dynamic Json Decoding and encoding from some type of <code>JsonValue:[Object,Array,string,bool,null,number]</code> style type so I need to re-implement it anyway and I thought it would be a good benchmark to compare against the normal decode and encode implementation</p>",
        "id": 433182803,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713144033
    },
    {
        "content": "<p>Sounds exciting</p>",
        "id": 433182832,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713144069
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6646\">#6646</a> fixes unwrapping for trailing <code>!</code> suffixed expressions.</p>",
        "id": 433627488,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713313135
    },
    {
        "content": "<p>The following PR's add <code>Task.result</code></p>\n<ul>\n<li><a href=\"https://github.com/roc-lang/basic-cli/pull/182\">roc-lang/basic-cli#182</a> </li>\n<li><a href=\"https://github.com/roc-lang/basic-webserver/pull/47\">roc-lang/basic-webserver#47</a></li>\n</ul>",
        "id": 433886775,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713394244
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6648\">#6648</a> converts a bunch of the parser combinators from macros to functions</p>\n<p>It's my first roc PR so lmk if I missed anything :)</p>",
        "id": 433892021,
        "sender_full_name": "Jackson Wambolt",
        "timestamp": 1713397602
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6649\">#6649</a> adds support for suffixed <code>when</code> expressions</p>",
        "id": 433912385,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713412555
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6657\">#6657</a> fixes parsing lists in tag patterns and resolves issue <a href=\"https://github.com/roc-lang/roc/issues/6074\">#6074</a></p>",
        "id": 434570679,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713687806
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/434570679\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/6657\">#6657</a> fixes parsing lists in tag patterns and resolves issue <a href=\"https://github.com/roc-lang/roc/issues/6074\">#6074</a></p>\n</blockquote>\n<p>This PR still needs a review/approval. <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> and I worked on it together, not sure he can accept?</p>",
        "id": 434634455,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713749412
    },
    {
        "content": "<p>he can, but I just reapproved!</p>",
        "id": 434637273,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1713751895
    },
    {
        "content": "<p>Yep; sorry about the delay there. Busy day!</p>",
        "id": 434637976,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1713752363
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6662\">#6662</a> adds additional support for trailing <code>!</code> in the case where we have a suffixed Apply leaf node.</p>",
        "id": 434695873,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713776884
    },
    {
        "content": "<p>Here are all of the PR's in train that are all ready and correspond to the effort to update the tutorial for the suffix blog article. </p>\n<ul>\n<li><a href=\"https://github.com/roc-lang/roc/pull/6678\">https://github.com/roc-lang/roc/pull/6678</a> - Ignore unused warnings if the module name is <code>Task</code><ul>\n<li>stuck on LLVM CI issue</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/roc-lang/roc/pull/6676\">https://github.com/roc-lang/roc/pull/6676</a> - Allow the names <code>Ok</code> and <code>Err</code> as type aliases<ul>\n<li>stuck on LLVM CI issue</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/roc-lang/basic-cli/pull/188\">https://github.com/roc-lang/basic-cli/pull/188</a> - Changes to API and Errors for tutorial updates<ul>\n<li>needs the above two merged and a new roc nightly release</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/roc-lang/examples/pull/172\">https://github.com/roc-lang/examples/pull/172</a> - Update examples to use <code>!</code> syntax<ul>\n<li>needs all of the above three and a new roc nightly release, and a new basic-cli release</li>\n<li>needs the URLs updated for basic-cli (currently pointing to a path as I tested these all locally)</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://github.com/roc-lang/roc/pull/6675\">https://github.com/roc-lang/roc/pull/6675</a> - the tutorial update PR</p>",
        "id": 435514763,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714107324
    },
    {
        "content": "<p>Super minor (single line markdown) PR to fix a visual issue in tutorial <a href=\"https://github.com/roc-lang/roc/pull/6689\">https://github.com/roc-lang/roc/pull/6689</a></p>",
        "id": 435804235,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714266578
    },
    {
        "content": "<p>I've pushed a number of changes to <a href=\"https://github.com/roc-lang/roc/pull/6696\">#6696</a>, it might even pass CI but I suspect there'll be issues. It's still WIP, I think I can also write some build scripts for ruby, swift ui, java etc but that was hard to research on the plane without Wifi. And I'm planning on doing some more polish and general cleanup of things.</p>\n<p>I would appreciate any comments or thoughts, I apologise in advance how large it is... but making the change to make platforms responsible for building their binaries kind of touches all the examples.</p>",
        "id": 437046577,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714851408
    },
    {
        "content": "<p>Also - <a href=\"https://github.com/roc-lang/roc/pull/6712\">6712</a> is relatively small change that fixes <code>dbg</code> when unwrapping suffixed <code>!</code></p>",
        "id": 437046849,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714851683
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6715\">#6715</a> - minor changes to update the Glue platform files to the new syntax.</p>",
        "id": 437127602,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714921057
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/202\">#202</a> for basic-cli - changed the broken args example to use Weaver instead, good suggestion from <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span></p>",
        "id": 437210490,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1714981372
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6728\">close #6723: Update format_files to list all files by rrrodzilla · Pull Request #6728 · roc-lang/roc (github.com)</a></p>\n<p>Hi folks, let me know if I need to make any changes.</p>",
        "id": 437401940,
        "sender_full_name": "rrrodzilla",
        "timestamp": 1715069639
    },
    {
        "content": "<p>Import parsing and reporting improvements:<br>\n<a href=\"https://github.com/roc-lang/roc/pull/6717\">https://github.com/roc-lang/roc/pull/6717</a><br>\n<a href=\"https://github.com/roc-lang/roc/pull/6732\">https://github.com/roc-lang/roc/pull/6732</a></p>",
        "id": 437560104,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1715132805
    },
    {
        "content": "<p>Minor improvement for reporting in the language server:<br>\n<a href=\"https://github.com/roc-lang/roc/pull/6734\">https://github.com/roc-lang/roc/pull/6734</a></p>",
        "id": 437642933,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1715172359
    },
    {
        "content": "<p>niiiiice, I was just thinking about this when doing that live-coding demo <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 437668517,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1715180270
    },
    {
        "content": "<p>an even further improvement would be hiding the inline source code context, since you already have that right there in the editor - including the squiggle</p>",
        "id": 437669438,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1715180512
    },
    {
        "content": "<p>Totally. Unfortunately, it’s not something we can do automatically because for a lot of reports, the wording wouldn’t make sense anymore.</p>",
        "id": 437680977,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1715184176
    },
    {
        "content": "<p>Eventually, I think we’ll need a separate reporting renderer for the language server, so we can do rust-analyzer-style blue squiggles for related code</p>",
        "id": 437681646,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1715184336
    },
    {
        "content": "<p>We probably want to generate the reports in a more generic manner (e.g. some data structure with message/location/addition notes/etc) and have each consumer decide how they want to render it.</p>",
        "id": 437702977,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1715191327
    },
    {
        "content": "<p>The formatter in the language server isn't properly upgrading imports. This fixes that:<br>\n<a href=\"https://github.com/roc-lang/roc/pull/6739\">https://github.com/roc-lang/roc/pull/6739</a></p>",
        "id": 437804005,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1715253855
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6757\">https://github.com/roc-lang/roc/pull/6757</a></p>",
        "id": 439308855,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1715991620
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span></p>",
        "id": 439308861,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1715991625
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6762\">#6762</a> enables a generic  default host <code>libhost</code> for prebuilt platform binaries when the more specific host is not found, e.g. <code>macos-arm64</code>.</p>",
        "id": 439540006,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716198986
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6770\">#6770</a> moves basic cli tests from examples into crates/cli/tests/cli/</p>",
        "id": 439987417,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716357242
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6769\">#6769</a> remove static-site-gen example and replace website with basic-ssg release</p>",
        "id": 439988193,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716357272
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6761\">#6761</a> fixes importing ingested file when bundling packages</p>",
        "id": 439992066,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716357405
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/54\">basic-webserver #54</a> refactors the host files out into crates, updates configuration, and adds a <code>build.roc</code> to build all the binaries (surgical linking will need the 6696 PR  in roc merged -- but this PR should land first). </p>\n<p>It's not ready to merge yet, there are at least two blocking issues.</p>\n<ol>\n<li>we need to add <code>roc</code> to the build scripts</li>\n<li>for some reason we now need to include another framework for this to run on macos e.g. <code>ROC_LINK_FLAGS=\"-framework SystemConfiguration\" roc examples/echo.roc</code>. I haven't changed any dependencies. Should we include this in the default linker flags in roc? or have I done something strange that means we now require this?</li>\n</ol>",
        "id": 441606109,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717126110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> do you think we could/should include this framework in roc when we link on macos?</p>",
        "id": 441606640,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717126403
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/194\">basic-cli #194</a> refactors the host files out into crates. It's stuck on a linux CI issue. This should also be merged before we remove platform rebuilding from roc cli. Surgical linker will need to be added once the PR 6696  in roc is completed.</p>",
        "id": 441612450,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717130229
    },
    {
        "content": "<p>Not really sure, will take a deeper look tomorrow</p>",
        "id": 441613347,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1717130756
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/210\">basic-cli #210</a> -- one liner to .gitignore dynamic libraries</p>",
        "id": 441616680,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717132353
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/211\">basic-cli #211</a> adds <code>Env.platform</code> effect to get the Arch and OS constants withouth shelling out to <code>uname</code></p>",
        "id": 441619135,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717133543
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6785\">https://github.com/roc-lang/roc/pull/6785</a>  - fixes await bang desugaring in expect continuation</p>",
        "id": 442281705,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1717427503
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6786\">https://github.com/roc-lang/roc/pull/6786</a> - detect await bang inside of when branches</p>",
        "id": 442372657,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1717448722
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6788\">https://github.com/roc-lang/roc/pull/6788</a> fixes some clippy errors (for later versions of clippy) and performs a slight cleanup on some language server code. I don't think it's that risky, but I'm not sure how well this logic is tested by automated tests. Who should I tag for a review on this code?</p>",
        "id": 442815913,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1717600665
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"651372\">@Eli Dowling</span> would be interested? I can have a look also, though not super familiar with that part of the code base.</p>",
        "id": 442887000,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717619632
    },
    {
        "content": "<p>Nvm, super small change, done <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 442896379,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717622201
    },
    {
        "content": "<p>Hello, I've got a draft PR up for a <code>Str.concatUtf8</code> builtin. This is my first time contributing, and I've marked as a draft only because there are two places marked with <code>XXX</code> comments I could use help from maintainers to see if what I'm doing is correct, or help writing a comment explaining what's going on. Otherwise the code seems to work and added tests pass.</p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/6791\">https://github.com/roc-lang/roc/pull/6791</a></p>\n<p>Should I leave this as a <code>draft</code> PR or should I just open it as a regular PR?</p>",
        "id": 443336350,
        "sender_full_name": "shua",
        "timestamp": 1717780471
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"722031\">@shua</span>, let's keep it a draft PR until your questions are resolved.<br>\nCould one of you take a look <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> or <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span>?</p>",
        "id": 443340648,
        "sender_full_name": "Anton",
        "timestamp": 1717781875
    },
    {
        "content": "<p>Naming thing:<br>\n<code>Str.concatUtf8: List U8, Str -&gt; List U8</code></p>\n<p>Definitely feels backwards from what I expected. I would have expected this signature:<br>\n<code>Str.concatUtf8: Str, List U8 -&gt; Str</code></p>\n<p>So we may want to consider a different name. Generally speaking, it should be in the List namespace if it takes a list first arg. so maybe <code>List.concatStr</code> or <code>List.concatUtf8</code>?</p>\n<hr>\n<p>Also, the built-in will only be faster for small strings. For small strings, it avoids allocating a temporary list of the data in the string. For large strings, it makes no difference. They seamlessly convert to <code>List U8</code>.</p>",
        "id": 443344022,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1717783259
    },
    {
        "content": "<p>Yeah, is this adding a Str to a list of bytes, or a list of bytes to a Str?</p>",
        "id": 443383240,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717795862
    },
    {
        "content": "<p>Yeah, is this adding a Str to a list of bytes, or a list of bytes to a Str?</p>",
        "id": 443383245,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717795865
    },
    {
        "content": "<p>What about <code>List.appendStr : List U8, Str -&gt; List U8</code></p>",
        "id": 443383406,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717795931
    },
    {
        "content": "<p>Should be concat probably. Concat is multi element, append is single element. So append would suggest <code>List Str, Str -&gt; List Str</code></p>\n<p>Could also be <code>List.concatStrBytes</code> or similar.</p>",
        "id": 443383720,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1717796071
    },
    {
        "content": "<p>I think <code>List.concatUtf8</code> makes sense. It is specifically a string encoded as utf-8 bytes, as there are other possible (not as common, but possible) byte encodings for a string. We also already have <code>Str.fromUtf8</code> and <code>Str.toUtf8</code> to indicate as opposed to just <code>Str.fromList</code> or something generic.</p>",
        "id": 443457690,
        "sender_full_name": "shua",
        "timestamp": 1717845505
    },
    {
        "content": "<p>Since I've been stuck for a few days on module params, I decided to take a little break and fix a longstanding issue: <a href=\"https://github.com/roc-lang/roc/pull/6792\">https://github.com/roc-lang/roc/pull/6792</a></p>",
        "id": 443533994,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1717889505
    },
    {
        "content": "<p>TL;DR: The compiler won't hang when <code>roc test</code>/<code>roc check</code>/the lang server encounters a package import on a <code>module</code>. Instead it will resolve the package from the app, or show a helpful error message.</p>",
        "id": 443534247,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1717889772
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6795\">https://github.com/roc-lang/roc/pull/6795</a></p>",
        "id": 443618439,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1717955725
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"722031\">shua</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/443336350\">said</a>:</p>\n<blockquote>\n<p>Hello, I've got a draft PR up for a <code>Str.concatUtf8</code> builtin. <br>\n<a href=\"https://github.com/roc-lang/roc/pull/6791\">https://github.com/roc-lang/roc/pull/6791</a></p>\n</blockquote>\n<p>I've had a look at this, and I think it looks good. Kicked off CI. <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> were you able to look at the zig part? Just wanting to confirm you're happy with that.</p>",
        "id": 443660360,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717978679
    },
    {
        "content": "<p>Yeah, the zig part looks good</p>",
        "id": 443660512,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1717978797
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/206\">basic-cli #206</a>  is ready for review. It adds <code>File.readLine</code> for buffered IO.</p>\n<p>If someone more experienced with Rust could take a closer look at the rust implementation, I'm particularly unsure about how I'm using the thread local. It works well with my testing, but I'm not sure if this is a good way to do this.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"fm\">thread_local!</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">READERS</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">RefCell</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">Rc</span><span class=\"o\">&lt;</span><span class=\"n\">RefCell</span><span class=\"o\">&lt;</span><span class=\"n\">BufReader</span><span class=\"o\">&lt;</span><span class=\"n\">File</span><span class=\"o\">&gt;&gt;&gt;&gt;&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">RefCell</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"nb\">Vec</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">());</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 444919197,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1718492292
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/examples/pull/184\">examples #184</a> updates the local dev script to use a release of basic-ssg, and updated CONTRIBUTING instructions so people can see the site locally before committing PRs.</p>",
        "id": 445069598,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1718609272
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/19\">basic-webserver #19</a> adds <code>Task.seq</code> and <code>Task.forEach</code> (copied from basic-cli).</p>",
        "id": 446308176,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719081932
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/examples/pull/46\">roc-lang/examples #46</a> adds a new example which shows how to safely calculates the variance of a population. I made some fixes, so need another approver to merge. Thank you <span class=\"user-mention\" data-user-id=\"620083\">@Fábio Beirão</span></p>",
        "id": 446357492,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719109981
    },
    {
        "content": "<p>I fixed the nightly release package not being able to build / run the nodejs-interop/wasm example:<br>\n<a href=\"https://github.com/roc-lang/roc/pull/6834\">https://github.com/roc-lang/roc/pull/6834</a></p>",
        "id": 446464067,
        "sender_full_name": "Ryan Barth",
        "timestamp": 1719170874
    },
    {
        "content": "<p>(or building a wasm target at all <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 446464198,
        "sender_full_name": "Ryan Barth",
        "timestamp": 1719170942
    },
    {
        "content": "<p>fix for task bang desugaring in the deps final expression<br>\n<a href=\"https://github.com/roc-lang/roc/pull/6837/files\">https://github.com/roc-lang/roc/pull/6837/files</a></p>",
        "id": 446892083,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1719323808
    },
    {
        "content": "<p>Fix for loading transitive packages: <a href=\"https://github.com/roc-lang/roc/pull/6840\">https://github.com/roc-lang/roc/pull/6840</a></p>",
        "id": 447030018,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1719362632
    },
    {
        "content": "<p>I thought I had fixed this already but <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> pointed out it was still broken</p>",
        "id": 447030142,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1719362656
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/444919197\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/basic-cli/pull/206\">basic-cli #206</a>  is ready for review. It adds <code>File.readLine</code> for buffered IO.</p>\n</blockquote>\n<p>Updated post comments and ready for review. Instead of returning an error for EOF we simply return an empty list. This means we can use it like this;</p>\n<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"nf\">processLine</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">File</span><span class=\"o\">.</span><span class=\"kt\">FileReader</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">ReadSummary</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">Step</span><span class=\"w\"> </span><span class=\"kt\">ReadSummary</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Done</span><span class=\"w\"> </span><span class=\"kt\">ReadSummary</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"kr\">_</span><span class=\"p\">)</span>\n<span class=\"nf\">processLine</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">reader</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">linesRead</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bytesRead</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"kt\">File</span><span class=\"o\">.</span><span class=\"n\">readLine</span><span class=\"w\"> </span><span class=\"n\">reader</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">            </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">len</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Done</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">linesRead</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bytesRead</span><span class=\"w\"> </span><span class=\"p\">})</span>\n\n<span class=\"w\">            </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Step</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">linesRead</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"n\">linesRead</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bytesRead</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"n\">bytesRead</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">len</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"o\">.</span><span class=\"n\">intCast</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">})</span>\n\n<span class=\"w\">            </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">ErrorReadingFile</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Inspect</span><span class=\"o\">.</span><span class=\"n\">toStr</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"p\">))</span>\n</code></pre></div>",
        "id": 447055570,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719373482
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/206\">basic-cli #206</a> adding <code>File.readLine</code> is ready for a review. Thank you <span class=\"user-mention\" data-user-id=\"461444\">@Sam Mohr</span> for the reviews and feedback -- I think it's a much better implementation.</p>",
        "id": 447191385,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719401128
    },
    {
        "content": "<p>refactor of some internal compiler error macros: <a href=\"https://github.com/roc-lang/roc/pull/6853\">https://github.com/roc-lang/roc/pull/6853</a></p>",
        "id": 448110256,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1719749772
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/221\">basic-cli #221</a> eliminates potential sources of bugs which are complicating the upgrade to builtin-task -- by replacing the glue generated code for roc types with <code>roc_std</code> or hand-rolled equivalents.</p>",
        "id": 448225464,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719811544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> I was going to copy the majority of the above \"glue reduction\" changes from <code>basic-cli</code> to <code>basic-webserver</code>, but <code>basic-webserver</code> organizes its FFI a bit differently than <code>basic-cli</code>. Namely, you created the <code>roc_fn</code> proc macro 9 months ago (<a href=\"https://github.com/roc-lang/basic-webserver/commit/9e91ea20297b65bca0f0d1b760cac4cb591c5818#diff-b193e15805fb64cdd092341088971495587823519598f1b3e2bb36ab91a9be0a\">commit</a>) and it's used to wrap all FFI calls in the platform code, whereas <code>basic-cli</code> just sets up bare FFI calls. </p>\n<p>Though I can see the benefits of <code>roc_fn</code>, it seems better to align <code>basic-cli</code> and <code>basic-webserver</code> to make mutual platform task updates easier, and since <code>basic-cli</code> is the current flagship, I'm thinking we should remove <code>roc_fn</code> and basically copy over <code>basic-cli</code>'s impl to <code>basic-webserver</code>. Are you okay with that, or would you rather keep <code>roc_fn</code> at the cost of heterogeneity?</p>",
        "id": 448231785,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1719813670
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/58\">basic-webserver #58</a> adds Task as builtin. </p>\n<p>Note to run this you will need roc built from this PR <a href=\"https://github.com/roc-lang/roc/pull/6836\">#6836</a> -- this is why CI is currently not passing.</p>",
        "id": 448257611,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719821470
    },
    {
        "content": "<p>I think it's fine to change basic-webserver to be more like basic-cli, including getting rid of <code>roc_fn</code> <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 448297892,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1719832008
    },
    {
        "content": "<p>Fix for await bang desugaring and simplification of <code>Defs</code> parsing: <a href=\"https://github.com/roc-lang/roc/pull/6851\">https://github.com/roc-lang/roc/pull/6851</a><br>\n<span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> please take a look when you have some time</p>",
        "id": 448398616,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1719856371
    },
    {
        "content": "<p>Big thank you to <span class=\"user-mention\" data-user-id=\"453714\">@Ryan Barth</span> <a href=\"https://github.com/roc-lang/roc/pull/6808\">#6808</a> updates preprocess host API is now ready for review. </p>\n<p>This PR cleans up this API making it much easier to build surgical linker binaries - resolving some bugs, and also  removes the hardcoded <code>libapp</code> and <code>dynhost</code> names. </p>\n<p>It also unlocks the rebuilding host changes; by making it possible to refactor basic-cli host into crates and still have surgical linker binaries - decoupling it from the rebuilding host changes.</p>",
        "id": 448467060,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719880529
    },
    {
        "content": "<p>Module params can and typechecking: <a href=\"https://github.com/roc-lang/roc/pull/6861\">https://github.com/roc-lang/roc/pull/6861</a></p>\n<p>Still quite a few gen bugs to fix but getting closer</p>",
        "id": 448610819,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1719928045
    },
    {
        "content": "<p>I can't describe how hype that video preview is! Once that and the Task PRs go through, we can get the ecosystem chugging along quite nicely!</p>",
        "id": 448681909,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1719946969
    },
    {
        "content": "<p>Oh wow...yeah, that video preview is epic!</p>",
        "id": 448683857,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1719947518
    },
    {
        "content": "<p>In <a href=\"https://github.com/roc-lang/roc/pull/6846\">#6846</a> I'm removing DecodeError, as well as making Encode/Decode generic over their output/input types respectively. I'm close to making code changes in <code>basic-cli</code>/<code>basic-webserver</code>, but I wanted to check in on names and order of type params before I got too far.<br>\nRight now, I've got:</p>\n<ul>\n<li><code>DecodeResult input val err : { result : Result val err, rest : input }</code></li>\n<li><code>Decoder input val fmt err := input, fmt -&gt; DecodeResult input val err where ...</code></li>\n</ul>\n<p>And planning on changing to </p>\n<ul>\n<li><code>Encoder input fmt := input, fmt -&gt; input where ...</code></li>\n</ul>",
        "id": 448744079,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1719977070
    },
    {
        "content": "<p>I think it should be <br>\n<code>DecoderResult state val err : Result (val, state) err</code></p>\n<p>And use <code>state</code> in general over input</p>",
        "id": 448747449,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1719978441
    },
    {
        "content": "<p>First PR for sqlite improvements: <a href=\"https://github.com/roc-lang/basic-webserver/pull/60\">https://github.com/roc-lang/basic-webserver/pull/60</a><br>\nAnd related PR to update glue generation in roc: <a href=\"https://github.com/roc-lang/roc/pull/6878\">https://github.com/roc-lang/roc/pull/6878</a></p>",
        "id": 449448076,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720248332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"479378\">@Trevor Settles</span> What is your plan for the decoder and encoder work and do you need help?</p>\n<p>I think once the types are fully updated, the second piece would be updating implementations (should be easy, just use list as the state). The final piece, which may be more complex though I'm not actually sure how much it changes is if any of the auto derive functionality needs to change.</p>",
        "id": 449588800,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720317423
    },
    {
        "content": "<p>Thanks for checking in! I'm still working on it. My PRs are pretty much up to date. I've made one change in <code>crates/compiler/derive/src/decoding/list.rs</code> one lines 39 and 41. But now I'm trying to figure this out this error. Something about unifying lambdas...</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>An<span class=\"w\"> </span>internal<span class=\"w\"> </span>compiler<span class=\"w\"> </span>expectation<span class=\"w\"> </span>was<span class=\"w\"> </span>broken.\nThis<span class=\"w\"> </span>is<span class=\"w\"> </span>definitely<span class=\"w\"> </span>a<span class=\"w\"> </span>compiler<span class=\"w\"> </span>bug.\nPlease<span class=\"w\"> </span>file<span class=\"w\"> </span>an<span class=\"w\"> </span>issue<span class=\"w\"> </span>here:<span class=\"w\"> </span>&lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nambient<span class=\"w\"> </span>functions<span class=\"w\"> </span>don<span class=\"err\">'</span>t<span class=\"w\"> </span>unify\n</code></pre></div>\n<p>Progress is a little slow, as I haven't done this kind of thing before, and 1 year old twins take a lot of time, haha. I don't want to hold this up too much. So, if people think I'm close, and just need to do a little more reading/learning, I'll keep working on it. Otherwise, I've got no problems handing it off to someone else, and seeing their solution to the problem</p>",
        "id": 449590450,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1720319100
    },
    {
        "content": "<blockquote>\n<p><code>ambient functions don't unify</code></p>\n</blockquote>\n<p>I think that is essentially a bad internal error that the types don't match. But I don't fully recall, has been a long time since I touched that code.</p>\n<hr>\n<p>And not trying to rush you, just thinking about writing a decoder and kinda want to write it for the new format instead of the current ability.</p>\n<blockquote>\n<p>So, if people think I'm close, and just need to do a little more reading/learning</p>\n</blockquote>\n<p>I wish I knew more concretely. Like I think the concrete type work should be relatively quick, but the derive work might be complex.</p>",
        "id": 449591529,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720319765
    },
    {
        "content": "<p>PR implementing the new map2-based record builders (while still supporting the old style): <a href=\"https://github.com/roc-lang/roc/pull/6883\">https://github.com/roc-lang/roc/pull/6883</a><br>\nThis is just implementation, docs are coming in a separate PR.</p>",
        "id": 449636010,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1720348831
    },
    {
        "content": "<p>I've updated Weaver to the new record builder syntax. It was pretty easy (it took about 2 hours), and I was able to maintain the same behavior as before. Especially convenient is the fact that the typestate pattern that ensured options are parsed before subcommands or before parameters was able to be transferred over! If anyone is curious, feel free to check out how I implemented this typestate approach with the new syntax in the PR: <a href=\"https://github.com/smores56/weaver/pull/2\">https://github.com/smores56/weaver/pull/2</a></p>\n<p>No review needed, just a heads up.</p>",
        "id": 449819304,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1720430952
    },
    {
        "content": "<p>minor fixes for parser and desugaring: <a href=\"https://github.com/roc-lang/roc/pull/6888\">https://github.com/roc-lang/roc/pull/6888</a></p>",
        "id": 449828553,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1720433946
    },
    {
        "content": "<p>task bang desugaring with respect to type annotations: <a href=\"https://github.com/roc-lang/roc/pull/6868\">https://github.com/roc-lang/roc/pull/6868</a><br>\nit generates weird type error messages tho <span aria-label=\"exhale\" class=\"emoji emoji-1f62e-200d-1f4a8\" role=\"img\" title=\"exhale\">:exhale:</span> (because of the way I propagated the type annotations. more info in pr)</p>",
        "id": 450231684,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1720545042
    },
    {
        "content": "<p>Kiryl and I had a chat about ^^^. There's a couple of things I think we want to clean up a bit before merging but in general the approach looks like it's good.</p>\n<p>We think it might be best to help Josh land the parser changes first, then revisit this when we have the snapshot tests. We can potentially even have the tests include the formatted AST after desugaring whovh would make verifying these changes much easier.</p>",
        "id": 450419500,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720610488
    },
    {
        "content": "<p>Update the weaver clone in basic-cli to use the new record builder syntax: <a href=\"https://github.com/roc-lang/basic-cli/pull/227\">https://github.com/roc-lang/basic-cli/pull/227</a></p>\n<p>Just release v0.3.0 of Weaver with the new syntax, btw: <a href=\"https://github.com/smores56/weaver/releases/download/0.3.0/GJtHjepVuDUSzWogFflwMiqPnCV5FKR81722WVmUC5E.tar.br\">https://github.com/smores56/weaver/releases/download/0.3.0/GJtHjepVuDUSzWogFflwMiqPnCV5FKR81722WVmUC5E.tar.br</a></p>",
        "id": 450669597,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1720692558
    },
    {
        "content": "<p>Oh yeah, the new syntax. I should test it on my sqlite pr. Maybe if I'm lucky it will fix the lambdaset issue by changing how things compose.</p>",
        "id": 450742098,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720711797
    },
    {
        "content": "<p>It's less currying, so that could be a difference</p>",
        "id": 450742258,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1720711828
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6900\">https://github.com/roc-lang/roc/issues/6900</a><br>\nSnapshot tests for suffixed desugaring</p>",
        "id": 451144079,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1720859938
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6905\">#6905</a> adds impl RocRefcounted for RocResult.</p>",
        "id": 451409101,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721018143
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6868\">Type annotations for suffixed sugar</a></p>\n<p>The type checks and type annotations propagation for suffixed expressions and statements are ready. The change also includes nice error messages (although not every case is covered, only common cases)</p>",
        "id": 451728022,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1721125150
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6907\">#6907</a> is ready to review.</p>\n<p>Minor refcounting follow up/bug fix with general TODO added around list drop specialization.</p>",
        "id": 451852313,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721161029
    },
    {
        "content": "<p>File refcounting and mmap for basic cli: <a href=\"https://github.com/roc-lang/basic-cli/pull/230\">https://github.com/roc-lang/basic-cli/pull/230</a></p>",
        "id": 452218490,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721263159
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/62\">basic-webserver #62</a> adds support for parsing <code>multipart/form-data</code> requests.</p>",
        "id": 452452410,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721343206
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6917\">#6917</a> removes the gui and swift examples from roc.</p>\n<p>For the GUI example; I moved it to <a href=\"https://github.com/roc-lang/roc/pull/6917\">roc-lang/examples PR#6917</a> -- which is also Ready for Review.</p>",
        "id": 452970879,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721558650
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6918\">#6918</a> greatly improves sorting performance.</p>\n<p>Generates better copying functions in zig instead of always using memcpy.</p>",
        "id": 453044644,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721599756
    },
    {
        "content": "<p>Ok, <a href=\"https://github.com/roc-lang/roc/issues/6918\">#6918</a> is now actually ready for a final review.</p>\n<p>I changed it to generating the functions in roc and passing them into zig which is the better implementation anyway!</p>",
        "id": 453067566,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721617979
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6933\">#6933</a> -- bundle windows <code>.lib</code> files when making a platform package. </p>\n<p>Size: ultra small, Priority: very low</p>",
        "id": 454722340,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1722228924
    },
    {
        "content": "<p>Figured out why auto freeing wasn't working with tcp streams in basic cli. This fixes that and update tcp streams apis!</p>\n<p><a href=\"https://github.com/roc-lang/basic-cli/pull/237\">https://github.com/roc-lang/basic-cli/pull/237</a></p>",
        "id": 455234533,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1722379595
    },
    {
        "content": "<p>Gets the new sqlite querying api working for basic-webserver!</p>\n<p>Targets the <code>refactor-host</code> branch instead of <code>main</code> cause it requires <code>RocRefcounted</code> changes.<br>\n<a href=\"https://github.com/roc-lang/basic-webserver/pull/61\">https://github.com/roc-lang/basic-webserver/pull/61</a></p>\n<p>Querying sqlite should now be nicer and much more performant:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">queryTodosByStatus</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">dbPath</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">status</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">stmt</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">SQLite3</span><span class=\"nf\">.</span><span class=\"nv\">prepareAndBind</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nv\">path</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">dbPath</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nv\">query</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"s\">\"SELECT id, task FROM todos WHERE status = :status;\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nv\">bindings</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\"> </span><span class=\"nv\">name</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"s\">\":status\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">value</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">String</span><span class=\"w\"> </span><span class=\"nv\">status</span><span class=\"w\"> </span><span class=\"p\">}],</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"kt\">SQLite3</span><span class=\"nf\">.</span><span class=\"nv\">execute</span><span class=\"err\">!</span>\n<span class=\"w\">        </span><span class=\"nv\">stmt</span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"kt\">SQLite3</span><span class=\"nf\">.</span><span class=\"nv\">map2</span><span class=\"w\"> </span><span class=\"nf\">&lt;-</span>\n<span class=\"w\">            </span><span class=\"nv\">id</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">SQLite3</span><span class=\"nf\">.</span><span class=\"nv\">i64</span><span class=\"w\"> </span><span class=\"s\">\"id\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nv\">task</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">SQLite3</span><span class=\"nf\">.</span><span class=\"nv\">str</span><span class=\"w\"> </span><span class=\"s\">\"task\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 455234943,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1722379823
    },
    {
        "content": "<p>PR for adding support for ignoring record builder fields:  <a href=\"https://github.com/roc-lang/roc/pull/6968\">https://github.com/roc-lang/roc/pull/6968</a></p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">expect</span><span class=\"nf\">-</span><span class=\"nv\">fx</span>\n<span class=\"w\">    </span><span class=\"nv\">result</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">parallel</span><span class=\"w\"> </span><span class=\"nf\">&lt;-</span>\n<span class=\"w\">            </span><span class=\"nv\">first</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"mi\">123</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nv\">second</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"mi\">456</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nv\">_ignored</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"mi\">789</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nv\">_</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"err\">!</span>\n\n<span class=\"w\">    </span><span class=\"nv\">result</span><span class=\"w\"> </span><span class=\"nf\">==</span><span class=\"w\"> </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">first</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"mi\">123</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">second</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"mi\">456</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 456303427,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722768198
    },
    {
        "content": "<p>Updating tests now, they'll be failing in CI for a bit</p>",
        "id": 456304548,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722768676
    },
    {
        "content": "<p>Debug tests are passing so it should be good for review</p>",
        "id": 456307662,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722770613
    },
    {
        "content": "<p>Fix for <a href=\"https://github.com/roc-lang/roc/issues/6931\">#6931</a>: <a href=\"https://github.com/roc-lang/roc/pull/6972\">https://github.com/roc-lang/roc/pull/6972</a></p>",
        "id": 456957093,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1722979072
    },
    {
        "content": "<p>Implementing <code>? -&gt; Result.try</code> by genericizing the <code>! -&gt; Task.await</code> desugaring code: <a href=\"https://github.com/roc-lang/roc/pull/7000\">https://github.com/roc-lang/roc/pull/7000</a></p>",
        "id": 462586360,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723738695
    },
    {
        "content": "<p>I love how relatively small of a change this is. Nice reuse.</p>",
        "id": 462596691,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723742022
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 462597515,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723742279
    },
    {
        "content": "<p>Implementing <code>&amp;foo -&gt; (\\record, field -&gt; { record &amp; foo: field })</code> desugaring: <a href=\"https://github.com/roc-lang/roc/pull/7002\">https://github.com/roc-lang/roc/pull/7002</a></p>\n<p>This means we can now do </p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">user</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">name</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"s\">\"Sam\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">id</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"mi\">123</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"nv\">expect</span><span class=\"w\"> </span><span class=\"nv\">user</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"err\">&amp;</span><span class=\"nv\">id</span><span class=\"w\"> </span><span class=\"mi\">234</span><span class=\"w\"> </span><span class=\"nf\">==</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">name</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"s\">\"Sam\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">id</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"mi\">234</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>Which should unblock the remaining syntax in <a href=\"https://docs.google.com/document/d/16qY4NGVOHu8mvInVD-ddTajZYSsFvFBvQON_hmyHGfo/edit#heading=h.5gvhiqd8pauk\">the Action-State proposal</a>, among other use cases.</p>",
        "id": 462743425,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723798217
    },
    {
        "content": "<p>Added a deprecation warning for all backpassing usage and removed all non-testing usage from the repo: <a href=\"https://github.com/roc-lang/roc/pull/7005\">https://github.com/roc-lang/roc/pull/7005</a></p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kn\">module</span><span class=\"w\"> </span><span class=\"err\">[]</span>\n\n<span class=\"nv\">foo</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">result</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">bar</span><span class=\"w\"> </span><span class=\"nf\">&lt;-</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"nf\">.</span><span class=\"nv\">try</span><span class=\"w\"> </span><span class=\"nv\">result</span>\n<span class=\"w\">    </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">bar</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/22008/fP9ONym4HZH2M7sxbrNmXSal/backpassing-deprecation-warning.png\">backpassing-deprecation-warning.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/fP9ONym4HZH2M7sxbrNmXSal/backpassing-deprecation-warning.png\" title=\"backpassing-deprecation-warning.png\"><img data-original-dimensions=\"656x251\" src=\"/user_uploads/thumbnail/22008/fP9ONym4HZH2M7sxbrNmXSal/backpassing-deprecation-warning.png/840x560.webp\"></a></div><div class=\"codehilite\"><pre><span></span><code>[smores@smoresbook:~/dev/roc]$ cargo run --bin roc -- check Test.roc\n    Finished dev [unoptimized + debuginfo] target(s) in 0.18s\n     Running `target/debug/roc check Test.roc`\n\n&boxh;&boxh; BACKPASSING DEPRECATED in Test.roc &boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;&boxh;\n\nBackpassing (&lt;-) like this will soon be deprecated:\n\n4&boxv;      bar &lt;- Result.try result\n        ^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou should use a ! for awaiting tasks or a ? for trying results, and\nfunctions everywhere else.\n</code></pre></div>",
        "id": 462940236,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723873568
    },
    {
        "content": "<p>No Brendan, No Cry</p>",
        "id": 462940654,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723874040
    },
    {
        "content": "<p>Feel free to gather examples of backpassing that we can't handle with <code>!</code> or <code>?</code> and we can make a case for not actually removing the feature</p>",
        "id": 462940725,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723874083
    },
    {
        "content": "<p>I think it is a reasonable thing to remove and the replacements cover all the common cases. I just still randomly use it and will miss it</p>",
        "id": 462940939,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723874211
    },
    {
        "content": "<p>Probably use it most often now with opaque types that wrap functions like the decoder for sqlite results</p>",
        "id": 462941065,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723874270
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7007\">#7007</a> implements the <code>Str.dropPrefix</code> and <code>Str.dropSuffix</code> builtins.</p>\n<p>Not sure if we should fuzz test this to see if we can break it?</p>",
        "id": 462949283,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723879761
    },
    {
        "content": "<blockquote>\n<p>Added a deprecation warning for all backpassing usage and removed all non-testing usage from the repo: <a href=\"https://github.com/roc-lang/roc/pull/7005\">https://github.com/roc-lang/roc/pull/7005</a></p>\n</blockquote>\n<p>I’ll miss it most for parser combinators but I will survive</p>",
        "id": 462992379,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1723906307
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"611722\">Isaac Van Doren</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/462992379\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Added a deprecation warning for all backpassing usage and removed all non-testing usage from the repo: <a href=\"https://github.com/roc-lang/roc/pull/7005\">https://github.com/roc-lang/roc/pull/7005</a></p>\n</blockquote>\n<p>I’ll miss it most for parser combinators but I will survive</p>\n</blockquote>\n<p>Let me write you an example of a record builder version later and maybe you won't miss it so much</p>",
        "id": 462992999,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723906482
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/70\">basic-webserver #70</a> - adds multipart/form-data </p>\n<p>This PR was already merged, but somehow in the process of landing another PR these commits got dropped. It was probably me somehow... I've scratched my head trying to figure out how I did it, because it's rather concerning.</p>\n<p>Anyway, this PR is to add them back in.</p>",
        "id": 464762077,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1724456680
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/unicode/pull/17\">unicode #17</a> - updates for syntax, dependencies, and fix for the empty Str case.</p>\n<p>I can merge, but would appreciate a second set of eyes to check before I make a release.</p>",
        "id": 464981192,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1724580830
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"734214\">@Aurélien Geron</span> maybe you can give me a review?</p>",
        "id": 464981367,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1724580849
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7038\">https://github.com/roc-lang/roc/pull/7038</a> implements <code>dbg</code> for expressions!</p>",
        "id": 465543520,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1724787244
    },
    {
        "content": "<p>This is finally ready for review: <a href=\"https://github.com/roc-lang/roc/pull/7009\">https://github.com/roc-lang/roc/pull/7009</a></p>",
        "id": 465579693,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1724797532
    },
    {
        "content": "<p>I decided to keep the pass before type-checking for now. I have a branch that moves it after <code>Solve</code>, but while a lot of cases work, it feels too brittle. <br>\nThis should work well enough for now, and keeping it isolated will help with the upcoming rewrites in the later stages of the pipeline. We can reconsider it later when those things settle.</p>",
        "id": 465580313,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1724797915
    },
    {
        "content": "<p>Just curious how hard was wiring this through? Thinking longer term about passing around allocators. Which also needs to add a secret arg to tons of functions.</p>",
        "id": 465581166,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1724798357
    },
    {
        "content": "<p>I had a pretty bad time trying to do it in <code>mono</code> at first. Doing it in its own pass was pretty straightforward overall.</p>",
        "id": 465582838,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1724799279
    },
    {
        "content": "<p>I imagine allocators won’t be polymorphic, though, so that might make a big difference</p>",
        "id": 465582900,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1724799317
    },
    {
        "content": "<p>Not polymorphic, but potentially more pervasive in terms of loading. Could be used at any random point and deals with finalized allocation details which may not be know until after mono is complete.</p>",
        "id": 465585512,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1724800905
    },
    {
        "content": "<p>Also some open questions around wiring through lambdas and captures.</p>",
        "id": 465585604,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1724800942
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/72\">basic-webserver #72</a> adds support for verifying Json Web Tokens. </p>\n<p>Only supports the HS256, HS384, and HS512 algorithms for now. I've left comments to add the others, but someone with more rust foo might need be needed. For the identity providers I need these algorithms are more than sufficient. </p>\n<p><span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 466425645,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725072376
    },
    {
        "content": "<p>Oh, actually.. I'll need to add a expect test script. I can do that later this evening.</p>",
        "id": 466425693,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725072448
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/61\">basic-webserver #61</a> adds <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span>'s Sqlite improvements. </p>\n<p>I haven't been able to reproduce any alias analysis errors... I merged latest main (after builtin Task) and fixed up the <code>todos.roc</code> example.</p>\n<p><span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 466665364,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725180431
    },
    {
        "content": "<p>Threaded task module params fix: <a href=\"https://github.com/roc-lang/roc/pull/7048\">https://github.com/roc-lang/roc/pull/7048</a></p>",
        "id": 466770590,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1725230402
    },
    {
        "content": "<p>For some reason, this wasn't a problem when passing other functions, but it's when I pass those that produce <code>Task</code>. It was probably just luck <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 466770674,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1725230458
    },
    {
        "content": "<p>Fix <code>as</code> patterns in closure arguments: <a href=\"https://github.com/roc-lang/roc/pull/7050\">https://github.com/roc-lang/roc/pull/7050</a></p>\n<p>This is something that was tangentially fixed by the lower params PR, but the formatter would break it.</p>",
        "id": 466985891,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1725291446
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/examples/pull/204\">examples #204</a> -- adds an example for implementing a custom <code>Inspect</code> ability for an Opaque type.</p>\n<p>It took me a while to find the syntax, so sharing for my future self and others. </p>\n<div class=\"codehilite\"><pre><span></span><code>MySecret := Str implements [\n    Inspect { toInspector: mySecretInspector },\n]\n\nmySecretInspector : MySecret -&gt; Inspector f where f implements InspectFormatter\nmySecretInspector = \\@MySecret _ -&gt; Inspect.str &quot;******* REDACTED *******&quot;\n\nexpect Inspect.toStr (@MySecret &quot;password1234&quot;) == &quot;\\&quot;******* REDACTED *******\\&quot;&quot;\n</code></pre></div>",
        "id": 467178484,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725353891
    },
    {
        "content": "<p>Some fixes to my initial implementation of <code>dbg</code> expressions <a href=\"https://github.com/roc-lang/roc/pull/7054\">https://github.com/roc-lang/roc/pull/7054</a></p>",
        "id": 467326261,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1725386084
    },
    {
        "content": "<p>Ok, last part of <code>dbg</code> update is supporting dbg in pipelines <a href=\"https://github.com/roc-lang/roc/pull/7058\">https://github.com/roc-lang/roc/pull/7058</a></p>\n<p>Thanks <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> for the review on <a href=\"https://github.com/roc-lang/roc/issues/7054\">#7054</a> <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 467895673,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1725549727
    },
    {
        "content": "<p>Super cool, I think this will be awesome for roctober and advent of code :)</p>",
        "id": 468066782,
        "sender_full_name": "Anton",
        "timestamp": 1725598851
    },
    {
        "content": "<p>I've made a good first issue <a href=\"https://github.com/roc-lang/roc/issues/7061\">#7061</a> to update the tutorial debugging section to tell people about this :)</p>",
        "id": 468068138,
        "sender_full_name": "Anton",
        "timestamp": 1725599383
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7040\">#7040</a> implements <code>--no-color</code> and <code>--no-header</code> flags for roc repl</p>",
        "id": 468232460,
        "sender_full_name": "Jamin Eisenberg",
        "timestamp": 1725640397
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7107\">https://github.com/roc-lang/roc/pull/7107</a> changes Dict.update to work with a Result</p>",
        "id": 471587454,
        "sender_full_name": "Stuart Hinson",
        "timestamp": 1726795451
    },
    {
        "content": "<p>Fix for the first issue in <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/Compiler.20panic.20with.20module.20params\">#beginners &gt; Compiler panic with module params</a>:   <a href=\"https://github.com/roc-lang/roc/pull/7109\">https://github.com/roc-lang/roc/pull/7109</a></p>",
        "id": 471817018,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1726861263
    },
    {
        "content": "<p>Approved!</p>",
        "id": 471819541,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1726861889
    },
    {
        "content": "<p>Update our record builder example to use the new syntax: <a href=\"https://github.com/roc-lang/examples/pull/209\">https://github.com/roc-lang/examples/pull/209</a></p>",
        "id": 471927145,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1726917207
    },
    {
        "content": "<p>Remove the unused old record builder syntax: <a href=\"https://github.com/roc-lang/roc/pull/7110\">https://github.com/roc-lang/roc/pull/7110</a></p>",
        "id": 471932310,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1726919529
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6832\">https://github.com/roc-lang/roc/pull/6832</a> ready to merge</p>",
        "id": 471958465,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1726938750
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"734214\">Aurélien Geron</span> <a href=\"#narrow/stream/316715-contributing/topic/exercism/near/471875621\">said</a>:</p>\n<blockquote>\n<p>Apparently it's currently not possible to use the try operator <code>?</code> inside an <code>expect</code> statement, it crashes the compiler. I filed issue <a href=\"https://github.com/roc-lang/roc/issues/7081\">#7081</a>. If anyone can take a look at it, I would really appreciate it, as it would make the Exercism test cases much easier to write and nicer to read. Thanks! <span aria-label=\"thank you\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"thank you\">:thank_you:</span></p>\n</blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7115\">#7115 PR</a> fixes this issue. We weren't desugaring  <code>ValueDef::Expect</code> nodes.</p>",
        "id": 472158238,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727078506
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/251\">basic-cli #251</a> update dependencies and use the roc_std and roc_std_heap from roc-lang/roc</p>",
        "id": 472833291,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727336519
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/472158238\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"734214\">Aurélien Geron</span> <a href=\"#narrow/stream/316715-contributing/topic/exercism/near/471875621\">said</a>:</p>\n<blockquote>\n<p>Apparently it's currently not possible to use the try operator <code>?</code> inside an <code>expect</code> statement, it crashes the compiler. I filed issue <a href=\"https://github.com/roc-lang/roc/issues/7081\">#7081</a>. If anyone can take a look at it, I would really appreciate it, as it would make the Exercism test cases much easier to write and nicer to read. Thanks! <span aria-label=\"thank you\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"thank you\">:thank_you:</span></p>\n</blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7115\">#7115 PR</a> fixes this issue. We weren't desugaring  <code>ValueDef::Expect</code> nodes.</p>\n</blockquote>\n<p>Bump -- can I get an review/approval on this please? it's a pretty small change, 90% of it is just adding a new test to cover this new usecase.</p>",
        "id": 472982915,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727389837
    },
    {
        "content": "<p>On it</p>",
        "id": 472983029,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727389913
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> the PR has been approved.</p>",
        "id": 472984179,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727390610
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/472833291\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/basic-cli/pull/251\">basic-cli #251</a> update dependencies and use the roc_std and roc_std_heap from roc-lang/roc</p>\n</blockquote>\n<p>Updated this PR -- ready for another review/approval</p>",
        "id": 473394377,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727567135
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7128\">#7128</a> fixes desugaring for top-level annotated expressions with a suffixed statement last. </p>\n<p><span class=\"user-mention\" data-user-id=\"461444\">@Sam Mohr</span> can you please double check my logic on this one. I worked through this with some println debugging to resolve the issue, and everything seems to be passing now. </p>\n<p>But I'm not super confident in my explanation for why it fixes it, so I would appreciate it if you could check my explanation is reasonable.</p>",
        "id": 473398858,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727571735
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7007\">#7007</a> adds <code>Str.dropPrefix</code> and <code>Str.dropSuffix</code> builtins</p>",
        "id": 473480869,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727635712
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> I'll review in about 3 hours</p>",
        "id": 473503031,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727652749
    },
    {
        "content": "<p>Hi! Warming up for Roctober fest, so here is <a href=\"https://github.com/roc-lang/roc/pull/7146\">#7146</a> that extends Num.neg from I64 &amp; U64 to all other sizes of integers. Can I have a review on it? Will gradually go for something bigger next time. Dec or float negation come to mind.</p>",
        "id": 475411922,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1728339664
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7147\">#7147</a> is the PR from the work done on stream with some cleanup and testing</p>",
        "id": 475429304,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1728347554
    },
    {
        "content": "<p>If anyone has time, please review the <code>return</code> keyword PR: <a href=\"https://github.com/roc-lang/roc/pull/7173\">https://github.com/roc-lang/roc/pull/7173</a></p>\n<p>It already has a parser \"LGTM\" from the man himself, Joshua Warner, so just a skim over to make sure the canonicalization makes sense would be great. Feel free to merge if you're happy</p>",
        "id": 478903942,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1729857635
    },
    {
        "content": "<p>The <code>try</code> desugar PR is ready for review: <a href=\"https://github.com/roc-lang/roc/pull/7193\">https://github.com/roc-lang/roc/pull/7193</a></p>\n<p>Note, I specifically didn't add tests in <code>cli_run.rs</code> because:</p>\n<ul>\n<li>There's so many changes to it in the <code>--prebuild-platform</code> <a href=\"https://github.com/roc-lang/roc/pull/6859\">pull request</a> that I don't want to add more merge work on that plate</li>\n<li>The PR is 95% desugaring, so I don't think \"integ\" testing is that necessary on top of the parsing and canonicalization testing I've done, plus the manual testing</li>\n</ul>",
        "id": 480279009,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1730610156
    },
    {
        "content": "<p>Module params typechecker fix: <a href=\"https://github.com/roc-lang/roc/pull/7198\">https://github.com/roc-lang/roc/pull/7198</a></p>",
        "id": 480801720,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1730841566
    },
    {
        "content": "<p>Fixes imports in expects: <a href=\"https://github.com/roc-lang/roc/pull/7199\">https://github.com/roc-lang/roc/pull/7199</a></p>",
        "id": 480808710,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1730844978
    },
    {
        "content": "<p>Handle <code>return</code> syntax errors in reporting: <a href=\"https://github.com/roc-lang/roc/pull/7202\">https://github.com/roc-lang/roc/pull/7202</a></p>",
        "id": 480924936,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1730901294
    },
    {
        "content": "<p>I was very confused to get an unhandled <code>return</code> syntax error in some old code. Turns out I was using \"return\" as a def name <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 480925154,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1730901363
    },
    {
        "content": "<p>This should help us remember to handle syntax errors in reporting: <a href=\"https://github.com/roc-lang/roc/pull/7203\">https://github.com/roc-lang/roc/pull/7203</a></p>",
        "id": 480954248,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1730909586
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/258\">https://github.com/roc-lang/basic-cli/pull/258</a> -- adds <code>Locale.get</code> and <code>Locale.all</code> to basic-cli so people can build applications that support l10n</p>",
        "id": 481029371,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730943522
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/259\">https://github.com/roc-lang/basic-cli/pull/259</a> -- adds <code>Stdin.readToEnd</code> to basic-cli. This is helpful for reading larger inputs when piped to a roc app, such as I discovered when upgrading my 2020 solution <a href=\"#narrow/channel/358903-advent-of-code/topic/2020.20Day.201/near/481224941\">here</a></p>",
        "id": 481228791,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1731030961
    },
    {
        "content": "<p>Fix for the <a href=\"#narrow/channel/316715-contributing/topic/Help.20upgrade.2Ftest.20purity.20inference/near/481212543\">issue</a> Jasper found: <a href=\"https://github.com/roc-lang/roc/pull/7206\">https://github.com/roc-lang/roc/pull/7206</a></p>",
        "id": 481429962,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1731129664
    },
    {
        "content": "<p>Adds the initial set of effectful builtin helpers: <a href=\"https://github.com/roc-lang/roc/pull/7211\">https://github.com/roc-lang/roc/pull/7211</a></p>",
        "id": 481515438,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1731205164
    },
    {
        "content": "<p>Renames List.split to List.splitAt and adds List.splitOn and List.splitOnList <a href=\"https://github.com/roc-lang/roc/pull/7213\">https://github.com/roc-lang/roc/pull/7213</a></p>",
        "id": 481614025,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1731287252
    },
    {
        "content": "<p>These PR's were approved last week. No big deal if you're holding off on merging them. I just want to make sure they weren't forgotten about.</p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/6967\">https://github.com/roc-lang/roc/pull/6967</a><br>\n<a href=\"https://github.com/roc-lang/roc/pull/7196\">https://github.com/roc-lang/roc/pull/7196</a></p>",
        "id": 482472796,
        "sender_full_name": "John Konecny",
        "timestamp": 1731614660
    },
    {
        "content": "<p>I was leaving them for you to merge... <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 482474340,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1731615009
    },
    {
        "content": "<p>Can you do that? Or maybe that's a permission thing?</p>",
        "id": 482474427,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1731615040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> <br>\nYeah, I don’t think I have permission. </p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7196\">https://github.com/roc-lang/roc/pull/7196</a></p>\n<p>This one is blocked because it looks like one of the tests failed randomly. I’m guessing it just needs a rerun.</p>",
        "id": 482706001,
        "sender_full_name": "John Konecny",
        "timestamp": 1731710409
    },
    {
        "content": "<blockquote>\n<p>Renames List.split to List.splitAt and adds List.splitOn and List.splitOnList <a href=\"https://github.com/roc-lang/roc/pull/7213\">https://github.com/roc-lang/roc/pull/7213</a></p>\n</blockquote>\n<p>This PR is now updated to also rename Str.split to Str.splitOn so it’s ready for review again.</p>",
        "id": 482776705,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1731768948
    },
    {
        "content": "<p>I've fixed the type constraining of early returns in type-annotated functions: <a href=\"https://github.com/roc-lang/roc/pull/7204\">https://github.com/roc-lang/roc/pull/7204</a></p>\n<p>It's a short PR, but it'd probably be good to get a glance from someone familiar with the type checking code to make sure I didn't miss something.</p>",
        "id": 483682566,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1732191671
    },
    {
        "content": "<p>Found a codegen issue because I again forgot to run tests locally with <code>--no-default-features --features gen-dev</code></p>",
        "id": 483686555,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1732192939
    },
    {
        "content": "<p>Please wait to review while I fix this</p>",
        "id": 483686587,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1732192952
    },
    {
        "content": "<p>DM me when ready <span class=\"user-mention\" data-user-id=\"461444\">@Sam Mohr</span></p>",
        "id": 483744387,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1732208025
    },
    {
        "content": "<p>Fixed and ready for review</p>",
        "id": 483758759,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1732212312
    },
    {
        "content": "<p>implement <code>Num.neg</code> for dec, f32, f64 in gen-dev (and for dec in gen-llvm) is ready for review: <a href=\"https://github.com/roc-lang/roc/pull/7235\">https://github.com/roc-lang/roc/pull/7235</a></p>",
        "id": 483759270,
        "sender_full_name": "shua",
        "timestamp": 1732212467
    },
    {
        "content": "<p>Allow <code>try</code>/early return in pure statements: <a href=\"https://github.com/roc-lang/roc/pull/7238\">https://github.com/roc-lang/roc/pull/7238</a></p>",
        "id": 483782742,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1732220714
    },
    {
        "content": "<p>Implemented by saying any statement with a <code>return</code> statement somewhere inside it doesn't need to be pure. We suggested we wanted to only allow <code>{}</code>-returning statements to work with this, but I supported other statements as well, requiring the value to be ignored. It seemed like the more intuitive approach.</p>",
        "id": 483782963,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1732220805
    },
    {
        "content": "<p>Not exactly for review, but can I get another CI run on <a href=\"https://github.com/roc-lang/roc/pull/7235\">https://github.com/roc-lang/roc/pull/7235</a> ? I've added some more logging to try to debug failures I can only seem to trigger in CI runs. Converted the PR to draft so I don't accidentally merge those changes.</p>",
        "id": 484008088,
        "sender_full_name": "shua",
        "timestamp": 1732318318
    },
    {
        "content": "<p>Didn’t realize this thread existed, cross posting</p>\n<p>Hello!</p>\n<p>As my first contribution to Roc, I am working on implementing snake_case for lowercase identifiers as discussed in <a class=\"stream-topic\" data-stream-id=\"304641\" href=\"/#narrow/channel/304641-ideas/topic/snake_case.20instead.20of.20camelCase\">#ideas &gt; snake_case instead of camelCase</a>  .  I don't have a TON of Rust experience, and obviously new to working on Roc, so I would like as many eyeballs as possible on the <a href=\"https://github.com/roc-lang/roc/pull/7233\">PR</a>.  Anyone that is familiar with the parsing and canonicalization phases of the compiler please take a look (Other Rustaceans feel free as well <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> ).</p>",
        "id": 484023609,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732329622
    },
    {
        "content": "<p>hopefully a tiny review: <a href=\"https://github.com/roc-lang/roc/pull/7247\">https://github.com/roc-lang/roc/pull/7247</a> add '.helix' editor config to gitignore</p>",
        "id": 484571918,
        "sender_full_name": "shua",
        "timestamp": 1732645247
    },
    {
        "content": "<p>rm unused dependencies from root Cargo.toml : <a href=\"https://github.com/roc-lang/roc/pull/7248\">https://github.com/roc-lang/roc/pull/7248</a></p>",
        "id": 484596609,
        "sender_full_name": "shua",
        "timestamp": 1732655295
    },
    {
        "content": "<p>another one for gen-dev <a href=\"https://github.com/roc-lang/roc/pull/7250\">https://github.com/roc-lang/roc/pull/7250</a> implement trivial isNaN,isFinite,isInfinite for Dec</p>",
        "id": 484614247,
        "sender_full_name": "shua",
        "timestamp": 1732664444
    },
    {
        "content": "<p>Allow host-exposed suffixed pure functions: <a href=\"https://github.com/roc-lang/roc/pull/7254\">https://github.com/roc-lang/roc/pull/7254</a></p>",
        "id": 484765708,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1732727480
    },
    {
        "content": "<p>gen-dev <a href=\"https://github.com/roc-lang/roc/pull/7264\">https://github.com/roc-lang/roc/pull/7264</a> impl Saturated variants for u128/i128</p>\n<p>May have also found a bug with Dec mulSaturated implementation (left a note in the PR)</p>",
        "id": 484996139,
        "sender_full_name": "shua",
        "timestamp": 1732835369
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7265\">#7265</a> updates cargo deps to consistently use <code>workspace = true</code> everywhere.</p>",
        "id": 485166858,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1732918362
    },
    {
        "content": "<p>NumPowInt should panic on overflow: <a href=\"https://github.com/roc-lang/roc/pull/7277\">https://github.com/roc-lang/roc/pull/7277</a></p>",
        "id": 485254913,
        "sender_full_name": "shua",
        "timestamp": 1732994501
    },
    {
        "content": "<p><del><a href=\"https://github.com/roc-lang/roc/pull/7282\">#7282</a> fallback to legacy linker if legacy host is available and <code>--linker</code> flag is not provided.</del> NOT READY</p>",
        "id": 485437919,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733018443
    },
    {
        "content": "<p>Add platform data when root is module and stop crashing on single file check</p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7283\">https://github.com/roc-lang/roc/pull/7283</a></p>",
        "id": 485439783,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733020349
    },
    {
        "content": "<p>PR fixing issues that luke found with purity inference and module params:</p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7285\">https://github.com/roc-lang/roc/pull/7285</a></p>",
        "id": 485456360,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733037766
    },
    {
        "content": "<p>Fix for errors caused by use of the changed <code>Str.splitOn</code> in the basic-cli Arg module<br>\n<a href=\"https://github.com/roc-lang/basic-cli/pull/275\">https://github.com/roc-lang/basic-cli/pull/275</a></p>\n<p>I think this is going to break across different recent compiler versions.</p>",
        "id": 485469685,
        "sender_full_name": "Ryan Barth",
        "timestamp": 1733048921
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"453714\">@Ryan Barth</span> we just moved to <code>Str.splitOn</code> in <a href=\"https://github.com/roc-lang/roc/pull/7213\">this PR from 2 weeks ago</a>, it looks like you're trying to revert that and the CI is expectedly failing. Am I missing something?</p>",
        "id": 485469977,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733049209
    },
    {
        "content": "<p>PR fixing early return vars not generalizing, 6 line change plus a single test: <a href=\"https://github.com/roc-lang/roc/pull/7286\">https://github.com/roc-lang/roc/pull/7286</a></p>",
        "id": 485470059,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733049265
    },
    {
        "content": "<p>No, I just found this <a href=\"#narrow/channel/397893-announcements/topic/split.20rename.20and.20new.20releases/near/485149514\">message</a>. My mistake, I will close it.</p>",
        "id": 485470063,
        "sender_full_name": "Ryan Barth",
        "timestamp": 1733049268
    },
    {
        "content": "<p>Update tutorial with recent syntax changes<br>\n<a href=\"https://github.com/roc-lang/roc/pull/7274\">https://github.com/roc-lang/roc/pull/7274</a></p>\n<p>Especially the latest addition - syntax changes that we want AoC newcomers to ignore: <a href=\"https://github.com/roc-lang/roc/pull/7274/commits/13e3d5445169e9e7e8e88e0403bb1ae82246ec34\">https://github.com/roc-lang/roc/pull/7274/commits/13e3d5445169e9e7e8e88e0403bb1ae82246ec34</a><br>\nCC <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> <span class=\"user-mention\" data-user-id=\"651372\">@Eli Dowling</span> <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> <span class=\"user-mention\" data-user-id=\"461444\">@Sam Mohr</span></p>",
        "id": 485498994,
        "sender_full_name": "jan kili",
        "timestamp": 1733073672
    },
    {
        "content": "<p>(I'm very open to the PI section including more/better explanations - I'm noob)</p>",
        "id": 485499122,
        "sender_full_name": "jan kili",
        "timestamp": 1733073775
    },
    {
        "content": "<p>Stops the language server from crashing all the damn time.<br>\nI finally figured out that the roc compiler was calling exit on the process instead of panicking. No wonder it crashes constantly!</p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7288\">https://github.com/roc-lang/roc/pull/7288</a></p>",
        "id": 485503155,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733077200
    },
    {
        "content": "<p>Keeping them coming!<br>\nAdds basic tag completion. Though without any info on what the type of the tag is:<br>\n<a href=\"https://github.com/roc-lang/roc/pull/7290\">https://github.com/roc-lang/roc/pull/7290</a></p>",
        "id": 485509242,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733082261
    },
    {
        "content": "<p>Could I get a re-review on this RocBox dealloc platform helper?<br>\n<a href=\"https://github.com/roc-lang/roc/pull/7280\">https://github.com/roc-lang/roc/pull/7280</a></p>",
        "id": 485515295,
        "sender_full_name": "Dan G Knutson",
        "timestamp": 1733088053
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/485439783\">said</a>:</p>\n<blockquote>\n<p>Add platform data when root is module and stop crashing on single file check</p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7283\">https://github.com/roc-lang/roc/pull/7283</a></p>\n</blockquote>\n<p>I think I'll need another review on this since I force pushed</p>",
        "id": 486002355,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733281688
    },
    {
        "content": "<p>PR for a real <code>try</code> keyword with type checking and error reporting: <a href=\"https://github.com/roc-lang/roc/pull/7296\">https://github.com/roc-lang/roc/pull/7296</a></p>\n<p>Even if we don't keep <code>try</code> around, this work should be easy to transfer to <code>?</code> if we move back to that with static dispatch.</p>",
        "id": 486060570,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733308563
    },
    {
        "content": "<blockquote>\n<p>this work should be easy to transfer to <code>?</code></p>\n</blockquote>\n<p>It would be good to prioritize this, <a href=\"https://github.com/roc-lang/roc/issues?q=is%3Aissue+is%3Aopen+desugar_value_def_suffixed\">people are regularly hitting sharp edges</a> with <code>?</code></p>",
        "id": 486120148,
        "sender_full_name": "Anton",
        "timestamp": 1733326367
    },
    {
        "content": "<p>Yeah, I agree</p>",
        "id": 486158142,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733338207
    },
    {
        "content": "<p>The plan is to do that once this gets merged</p>",
        "id": 486158816,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733338488
    },
    {
        "content": "<p>And I think you've got some good comments from Ayaz to process still right?</p>",
        "id": 486161316,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733339460
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/486161316\">said</a>:</p>\n<blockquote>\n<p>And I think you've got some good comments from Ayaz to process still right?</p>\n</blockquote>\n<p>The comment Ayaz just left is for a different PR, IMO. I asked him how to manage type-checking for statements with early returns in them, including <code>try</code>.</p>",
        "id": 486161749,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733339637
    },
    {
        "content": "<p>I probably should have asked through a different channel, but it seems like we tend to have good communication on GitHub comments haha</p>",
        "id": 486161930,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733339715
    },
    {
        "content": "<p>Anyway, I think this thing is ready to merge once someone double-checks my work</p>",
        "id": 486161982,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733339736
    },
    {
        "content": "<p>And I'll do the Ayaz stuff in a follow-up, after the ? PR</p>",
        "id": 486162035,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733339758
    },
    {
        "content": "<p>I'll have some time for roc later <time datetime=\"2024-12-05T08:00:00Z\">2024-12-05T19:00:00+11:00</time> and can start looking at all the things people have been working on. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 486162497,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733339948
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7314\">https://github.com/roc-lang/roc/pull/7314</a> impl add/sub/mul wrapped for u128/i128</p>",
        "id": 486595097,
        "sender_full_name": "shua",
        "timestamp": 1733519407
    },
    {
        "content": "<p>Could I please have reviews on  these 2 PRs:<br>\n<a href=\"https://github.com/roc-lang/roc/pull/7312\">https://github.com/roc-lang/roc/pull/7312</a>  -  Has the test allocator align it's allocation at 16 bytes (and panic if asked for more)<br>\n<a href=\"https://github.com/roc-lang/roc/pull/6977\">https://github.com/roc-lang/roc/pull/6977</a>  - Adds SHA-256 cryptographic hashing as a builtin module.</p>",
        "id": 486599195,
        "sender_full_name": "Matthew Heath",
        "timestamp": 1733521443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"722031\">@shua</span> -- I'm just wondering if we should add and consolidate the tests a little for the related in gen_num, I'm not sure when we'd ever circle back to do that otherwise. </p>\n<p><span class=\"user-mention\" data-user-id=\"727091\">@Matthew Heath</span> </p>\n<ul>\n<li>merged the testing alignment PR</li>\n<li>add some more updates for builtin sha256, getting closer. It looks like the snapshots need more love and we must've added a panic/unwrap/expect somewhere</li>\n</ul>\n<blockquote>\n<p>Run for branch_dir in source_branch_dir target_branch_dir; do<br>\nCalculating violations in &amp;branch_dir...<br>\nCalculating violations in &amp;branch_dir...<br>\nYou added panic/unwrap/expect, in this PR their count increased from 1429 to 1430.<br>\nThese calls can kill the REPL, try alternative error handling.</p>\n</blockquote>",
        "id": 486654622,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733565420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> made similar tests for <code>*_wrap</code> as existed for <code>*_saturated</code>. I also added the u128/i128 cases that were missing from the saturated test cases.</p>",
        "id": 486699375,
        "sender_full_name": "shua",
        "timestamp": 1733601226
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/486654622\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"727091\">Matthew Heath</span> </p>\n<ul>\n<li>merged the testing alignment PR</li>\n<li>add some more updates for builtin sha256, getting closer. It looks like the snapshots need more love and we must've added a panic/unwrap/expect somewhere</li>\n</ul>\n<blockquote>\n<p>Run for branch_dir in source_branch_dir target_branch_dir; do<br>\nCalculating violations in &amp;branch_dir...<br>\nCalculating violations in &amp;branch_dir...<br>\nYou added panic/unwrap/expect, in this PR their count increased from 1429 to 1430.<br>\nThese calls can kill the REPL, try alternative error handling.</p>\n</blockquote>\n</blockquote>\n<p>I have exactly one idea of what that could be and how to deal with it- <br>\nI will try that now.</p>",
        "id": 486784255,
        "sender_full_name": "Matthew Heath",
        "timestamp": 1733676229
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7321\">https://github.com/roc-lang/roc/pull/7321</a> make Str.fromUtf8 error a little more self-descriptive</p>",
        "id": 487078864,
        "sender_full_name": "shua",
        "timestamp": 1733771885
    },
    {
        "content": "<p>super tiny pr, fix for <code>roc --optimize day09.roc</code>: <a href=\"https://github.com/roc-lang/roc/pull/7326\">https://github.com/roc-lang/roc/pull/7326</a></p>",
        "id": 487299323,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733849749
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7335\">https://github.com/roc-lang/roc/pull/7335</a><br>\nMakes the language server display parsing errors at the correct location.<br>\nFeel free to merge if it passes CI, I'm going to sleep :)<br>\n<span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span></p>",
        "id": 488142094,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733935567
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"651372\">@Eli Dowling</span>, I'll check it out, good night :)</p>",
        "id": 488142657,
        "sender_full_name": "Anton",
        "timestamp": 1733935728
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/283\">basic-cli #283</a> cleans up a number of things;</p>\n<ul>\n<li>resolves comments from PI upgrade in <a href=\"https://github.com/roc-lang/basic-cli/pull/257\">Upgrade to purity inference #257</a></li>\n<li>renames PlatformTasks to Host</li>\n<li>complete the replacement of RocStr for error handling with proper glue types</li>\n</ul>",
        "id": 488516499,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733957375
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7338\">#7338</a> - dbg and expect improvements</p>\n<ul>\n<li>Fix dbg so that it is printing again</li>\n<li>always generate dbg no matter the build mode</li>\n<li>generate expect in all normal/dev builds via <code>roc main.roc</code> or <code>roc run main.roc</code></li>\n</ul>",
        "id": 488523363,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733960108
    },
    {
        "content": "<p>Do <code>dbg</code> and <code>expect</code>remain in with <code>roc build --no-link</code> and <code>roc build --optimize --no-link</code>?</p>\n<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> this is amazing, will be a nice improvement for the embedded use-case, something I've been needing for roc-ray, roc-wasm4, and js-dom etc.</p>",
        "id": 488527944,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733962774
    },
    {
        "content": "<blockquote>\n<p>Do <code>dbg</code> and <code>expect</code>remain in with <code>roc build --no-link</code> and <code>roc build --optimize --no-link</code>?</p>\n</blockquote>\n<p>Didn't explicitly test, but they should</p>",
        "id": 488528140,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733962906
    },
    {
        "content": "<p>Yes they do</p>",
        "id": 488528278,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733962994
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/231634-beginners/topic/Memory.20layout.20for.20tags.20.26.20records/near/486622379\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> <a href=\"#narrow/channel/231634-beginners/topic/Memory.20layout.20for.20tags.20.26.20records/near/486622227\">said</a>:</p>\n<blockquote>\n<p>Btw <code>roc glue</code> seems to be working well so far - now debugging why <code>const _SIZE_CHECK_union_Timing: () = assert!(core::mem::size_of::&lt;union_Timing&gt;() == 4);</code> is erroring.</p>\n</blockquote>\n<p>This is a known issue. The generated code is just wrong. See <a href=\"https://github.com/roc-lang/roc/issues/6012\">https://github.com/roc-lang/roc/issues/6012</a></p>\n</blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7352\">https://github.com/roc-lang/roc/pull/7352</a><br>\nComment out failing glue assertion for now</p>",
        "id": 488905858,
        "sender_full_name": "jan kili",
        "timestamp": 1734117668
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/287\">basic-cli #287</a> - refactor rust fx impl out into reusable crates. </p>\n<p>With this change, I think we're ready to take all the nice things we've added to basic-cli and port them across to basic-webserver. This should make it very easy to do and now we can have one place where these functions are implemented.</p>",
        "id": 488963968,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734154180
    },
    {
        "content": "<p>Awesome!</p>",
        "id": 488965648,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734155875
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/288\">basic-cli #288</a> refactor to use <code>danger_noodle_case</code> for all the things, and also use a common <code>roc_http</code> crate which <em>should</em> be ready for basic-webserver to also use the same types.</p>",
        "id": 489138367,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734317668
    },
    {
        "content": "<p>I decided to cleanup the Command glue... so this isn't quite ready for review</p>",
        "id": 489170039,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734336380
    },
    {
        "content": "<p>I can continue polishing it tomorrow.</p>",
        "id": 489170131,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734336409
    },
    {
        "content": "<p>Ok, fixed it. This PR is ready for review.</p>",
        "id": 489183627,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734340505
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/84\">basic-webserver #84</a> -- upgrade to Purity Inference, <code>danger_noodle_case</code>, use crates from basic-cli &amp; remove a lot of duplication, remove <code>reqwest</code> dependency.</p>",
        "id": 489881666,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734580212
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/293\">basic-cli #293</a> upgrades the API to <code>main! : List Arg =&gt; Result {} [Exit I32 Str]_</code> by adding a new Arg type and related rust implementation.</p>",
        "id": 490090337,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734667371
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/294\">basic-cli #294</a><br>\n<a href=\"https://github.com/roc-lang/basic-webserver/pull/86\">basic-cli #86</a></p>\n<p>Two small PRs which rename <code>Err</code> to <code>IOErr</code> to avoid confusion with <code>Result</code> as requested in a PR comment.</p>",
        "id": 490093157,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734669644
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/examples/pull/223\">examples #223</a> upgrades all the examples to Purity Inference, and the latest API for basic-cli and basic-webserver.</p>\n<p>Currently using local builds of these platforms, but all tests are <span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> for me. </p>\n<p>Should be gtg as soon as we have pre-releases of the platforms ready to swap in.**</p>\n<p>** I didn't do a sanity pass over the actual README and documentation... just got everything back to working and made some updates as I went.</p>",
        "id": 490101195,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734676032
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7398\">https://github.com/roc-lang/roc/pull/7398</a> a number of minor updates to the docs to help with usability, accessibility, and design.  See <a class=\"stream-topic\" data-stream-id=\"316715\" href=\"/#narrow/channel/316715-contributing/topic/New.20docs.20template\">#contributing &gt; New docs template</a>  for more details</p>",
        "id": 490305518,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1734793468
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7402\">https://github.com/roc-lang/roc/pull/7402</a> fixes <a href=\"https://github.com/roc-lang/roc/issues/7339\">#7339</a> to make sure the --migrate flag of <code>roc format</code> works correctly for record type annotation field names.  Should note that it adds a new class of files in test_snapshots.  I think it's important to have a good view on the output of format with the migrate flag on.</p>",
        "id": 490398938,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1734882596
    },
    {
        "content": "<p>Looking for some eyes on this draft: <a href=\"https://github.com/roc-lang/roc/pull/7406\">https://github.com/roc-lang/roc/pull/7406</a> for <code>??</code> operator</p>",
        "id": 490515352,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1734958987
    },
    {
        "content": "<p>Fixed packages depending on another package to hang forever: <a href=\"https://github.com/roc-lang/roc/pull/7412\">https://github.com/roc-lang/roc/pull/7412</a></p>",
        "id": 490726381,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735086711
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/490398938\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7402\">https://github.com/roc-lang/roc/pull/7402</a> fixes <a href=\"https://github.com/roc-lang/roc/issues/7339\">#7339</a> to make sure the --migrate flag of <code>roc format</code> works correctly for record type annotation field names.  Should note that it adds a new class of files in test_snapshots.  I think it's important to have a good view on the output of format with the migrate flag on.</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/490515352\">said</a>:</p>\n<blockquote>\n<p>Looking for some eyes on this draft: <a href=\"https://github.com/roc-lang/roc/pull/7406\">https://github.com/roc-lang/roc/pull/7406</a> for <code>??</code> operator</p>\n</blockquote>\n<p>Shout at me if this breaks decorum, but I got some Zulip reactions on these PRs, but no feedback/approvals on the PRs themselves and they've been sitting around since before Christmas.  So I'm reposting for some visibility (and one of them is blocking moving forward on other error handling improvements).</p>",
        "id": 491000985,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735312090
    },
    {
        "content": "<p>I would approve on GH but I'm on mobile <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 491001390,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1735312374
    },
    {
        "content": "<p>I'll do it</p>",
        "id": 491001585,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735312511
    },
    {
        "content": "<p>Sam is my personal hero</p>",
        "id": 491001948,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735312763
    },
    {
        "content": "<p>The 7402 PR is intimidating - and might require more thought - so don't rush it.  I added snapshots for formatting after migration</p>",
        "id": 491002073,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735312851
    },
    {
        "content": "<p>I also don't personally have override power for the \"panic check\" CI check</p>",
        "id": 491002184,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735312917
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7418\">#7418</a> - Fix for <a href=\"https://github.com/roc-lang/roc/issues/7417\">#7417</a>, which is incorrect links being generated for docs pages containing submodules. </p>\n<ul>\n<li>links generated point to <code>href=\"Sub.Module\"</code></li>\n<li>links should point to <code>href=\"Sub/Module\"</code></li>\n</ul>",
        "id": 491013011,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1735320276
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"518883\">@Ian McLerran</span> you've got clippy issues: <a href=\"https://github.com/roc-lang/roc/actions/runs/12518839708/job/34922040995?pr=7418\">https://github.com/roc-lang/roc/actions/runs/12518839708/job/34922040995?pr=7418</a></p>",
        "id": 491013696,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735320721
    },
    {
        "content": "<p>Should be good now</p>",
        "id": 491014244,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1735321078
    },
    {
        "content": "<p>For some reason <code>markdown-link-check</code> got <a href=\"https://github.com/roc-lang/roc/actions/runs/12518976482/job/34922521230?pr=7418\">cancelled</a></p>",
        "id": 491015876,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1735322139
    },
    {
        "content": "<p>I'll retry it when the option becomes available</p>",
        "id": 491016210,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735322370
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7419\">https://github.com/roc-lang/roc/pull/7419</a> fix '1e2' panic in repl</p>",
        "id": 491056662,
        "sender_full_name": "shua",
        "timestamp": 1735357758
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7421\">https://github.com/roc-lang/roc/pull/7421</a>: Parens and Commas syntax support</p>",
        "id": 491090825,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735390690
    },
    {
        "content": "<p>Super minor pull request. Just reduces verbosity of llvm passes: <a href=\"https://github.com/roc-lang/roc/pull/7423\">https://github.com/roc-lang/roc/pull/7423</a></p>",
        "id": 491114619,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735414347
    },
    {
        "content": "<p>Another small pr. Avoids roc_std writing to read only refcounts, which can lead to segfaults.</p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7427\">https://github.com/roc-lang/roc/pull/7427</a></p>",
        "id": 491125875,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735425941
    },
    {
        "content": "<p>And finally, the larger PR (though essentially 100% code that was already reviewed in basic-webserver), add sqlite to basic-cli as a crate that can later be used by basic-webserver as well: <a href=\"https://github.com/roc-lang/basic-cli/pull/299\">https://github.com/roc-lang/basic-cli/pull/299</a></p>",
        "id": 491126122,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735426214
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7437\">https://github.com/roc-lang/roc/pull/7437</a> docs issue</p>",
        "id": 491315676,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1735584051
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7439\">#7439</a> - Add List.walk!</p>\n<ul>\n<li>Please let me know if:<br>\n    - Documentation is adequate<br>\n    - I need to add any tests - if so, where?</li>\n</ul>",
        "id": 491323919,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1735589284
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7441\">#7441</a> - linker/macho: successfully emit a broken executable</p>",
        "id": 491342480,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1735601797
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455461\">Jakub Konka</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/491342480\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7441\">#7441</a> - linker/macho: successfully emit a broken executable</p>\n</blockquote>\n<p>Fixed the tests (all pass locally) so ready for re-approve whenever possible. Thanks!</p>",
        "id": 491392490,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1735642775
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7443\">#7443</a> - Bump object dependency to latest (0.36.7)<br>\nNothing major, as in the title, bumps <code>object</code> dep to latest and updates API usage.</p>",
        "id": 491418413,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1735662198
    },
    {
        "content": "<p>Makes our refcounting better when set to atomic mode. Uses highest bit of the refcount to check if the variable is threadlocal. Threadlocal variables fall back on a fast path. This makes \"atomic\" refcounting with a single threaded app run within a few percent of nonatomic refcounting.</p>\n<p>The change is completely behind a constant and does not change any current roc code.<br>\n<a href=\"https://github.com/roc-lang/roc/issues/7444\">#7444</a></p>",
        "id": 491461191,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735697548
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7448\">#7448</a> -&gt; Make refcounting from 1 to max_size. 0 is still constant refcount. the first bit is reserved to indicate if atomic refcounting is required. Would be great if someone could take a more detailed look at this to make sure I didn't mess anything up. Luckily, we have the <code>gen_refcount</code> tests which make me at least medium confident (also the valgrind tests). </p>\n<p>Also, not sure when this is bested to land. Will require updating platforms.</p>",
        "id": 491521464,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735758262
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7449\">#7449</a> -&gt; Minor capacity cleanup for <a class=\"stream-topic\" data-stream-id=\"302903\" href=\"/#narrow/channel/302903-platform-development/topic/Should.20lists.20always.20have.20a.20minimum.20capacity.20of.2064.3F\">#platform development &gt; Should lists always have a minimum capacity of 64?</a></p>",
        "id": 491528912,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735765745
    },
    {
        "content": "<p>Remove backpassing: <a href=\"https://github.com/roc-lang/roc/pull/7452\">https://github.com/roc-lang/roc/pull/7452</a></p>",
        "id": 491545408,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735782540
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7448\">#7448</a> now leads to a small perf improvement too. (tinkered with exact refcounting in zig for some minor extra perf)</p>",
        "id": 491549076,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735786141
    },
    {
        "content": "<p>Remove roc-for-elm-programmers.md: <a href=\"https://github.com/roc-lang/roc/pull/7453\">https://github.com/roc-lang/roc/pull/7453</a></p>",
        "id": 491549520,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735786565
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7450\">https://github.com/roc-lang/roc/pull/7450</a> simplifications to the typechecker ahead of a change to detect invalid annotations of generalized types like <code>x : *</code>. Hasn't passed CI yet but the relevant tests (reporting, solve, etc) have locally</p>",
        "id": 491558865,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1735795019
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/89\">https://github.com/roc-lang/basic-webserver/pull/89</a> -&gt; Add improved sqlite to basic-webserver again now that we know how to release it with musl</p>\n<p>PR is essentially identical to the old version but dependent on basic-cli for the sqlite implementation. Also updated for purity inference.</p>",
        "id": 491651842,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735843956
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7455\">7455</a> there are no compressed sections in Mach-O so they can be safely ignored</p>",
        "id": 491670640,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1735854806
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7457\">7457</a> easy PR that uses correct page size values depending on the target's CPU architecture for Mach-O for (segment) alignment</p>",
        "id": 491675145,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1735857403
    },
    {
        "content": "<p>omg I am so, so hype about this macho surgical linking progress!!! <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span><span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span><span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 491675265,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1735857495
    },
    {
        "content": "<p>Removes references to Task in:</p>\n<ul>\n<li>basic-cli: <a href=\"https://github.com/roc-lang/basic-cli/pull/301\">https://github.com/roc-lang/basic-cli/pull/301</a></li>\n<li>basic-webserver: <a href=\"https://github.com/roc-lang/basic-webserver/pull/90\">https://github.com/roc-lang/basic-webserver/pull/90</a></li>\n</ul>",
        "id": 491678155,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735859450
    },
    {
        "content": "<p>Approved with one comment</p>",
        "id": 491678790,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735859831
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455461\">Jakub Konka</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/491675145\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7457\">7457</a> easy PR that uses correct page size values depending on the target's CPU architecture for Mach-O for (segment) alignment</p>\n</blockquote>\n<p>Can I ask for a re-review <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> ? I've removed now-redundant comment as suggested.</p>",
        "id": 491809230,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1735936462
    },
    {
        "content": "<p>I'm on mobile and will be away for a while if anyone else could give it the thumbs up, that would be great. LGTM.</p>",
        "id": 491811716,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735937816
    },
    {
        "content": "<p>I can approve</p>",
        "id": 491811767,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735937853
    },
    {
        "content": "<p>Done and merged <span class=\"user-mention\" data-user-id=\"455461\">@Jakub Konka</span></p>",
        "id": 491811889,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735937915
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455461\">Jakub Konka</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/491670640\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7455\">7455</a> there are no compressed sections in Mach-O so they can be safely ignored</p>\n</blockquote>\n<p>I feel embarrassed to ask but can I ask for another re-run of (now a smaller set of) failing tests? <span aria-label=\"folded hands\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"folded hands\">:folded_hands:</span></p>",
        "id": 491823541,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1735945576
    },
    {
        "content": "<p>Done</p>",
        "id": 491824163,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735946019
    },
    {
        "content": "<p>just added you as a collaborator, so you shouldn't need permission to run tests anymore</p>",
        "id": 491825753,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1735947255
    },
    {
        "content": "<p>A Redo of my PR to fix some issues with snake_cake migration: <a href=\"https://github.com/roc-lang/roc/pull/7460\">https://github.com/roc-lang/roc/pull/7460</a></p>",
        "id": 491838699,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735958688
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281383\">Richard Feldman</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/491825753\">said</a>:</p>\n<blockquote>\n<p>just added you as a collaborator, so you shouldn't need permission to run tests anymore</p>\n</blockquote>\n<p>OK, I have restarted <code>nix-apple-silicon</code> test several times and it's timing out at different steps. Locally there are no problems and <code>nix develop -c cargo test --locked --release -- --skip cli_tests::inspect_gui --skip cli_tests::hello_gui</code> pass without a hitch. I'm kinda out of ideas what to do next, and would welcome advice how to proceed next.</p>",
        "id": 491901068,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1736018293
    },
    {
        "content": "<p>Can you post some logs for where it gets stuck?</p>",
        "id": 491901581,
        "sender_full_name": "Anton",
        "timestamp": 1736018809
    },
    {
        "content": "<p>Will do if it gets stuck again. For now I rebased on latest main and signed the commit. Fingers crossed!</p>",
        "id": 491902247,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1736019364
    },
    {
        "content": "<p>Progress! All passed except fuzz tests which the CI says are OK to fail. Can I ask for a force-merge? <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 491904591,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1736021584
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> !</p>",
        "id": 491904752,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1736021750
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7467\">https://github.com/roc-lang/roc/pull/7467</a> &lt;- Support for <code>??</code> for optional record fields and a small fix for the fuzzer from the PNC change</p>",
        "id": 491905509,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1736022540
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/305\">basic-cli #305</a> -- paired breaking change for <a href=\"https://github.com/roc-lang/roc/pull/7463\">#7463</a> upgrades the builtins to <code>snake_case</code></p>",
        "id": 492398545,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736288810
    },
    {
        "content": "<p><a href=\"https://github.com/lukewilliamboswell/basic-ssg/pull/13\">basic-ssg #13</a> -- paired breaking change for <a href=\"https://github.com/roc-lang/roc/pull/7463\">#7463</a> upgrades the builtins to <code>snake_case</code></p>",
        "id": 492403540,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736291039
    },
    {
        "content": "<p>Testing pre-release <a href=\"https://github.com/lukewilliamboswell/basic-ssg/releases/tag/0.7.0\">for basic-ssg</a></p>",
        "id": 492403627,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736291073
    },
    {
        "content": "<p>Testing pre-release <a href=\"https://github.com/lukewilliamboswell/roc-json/releases/tag/0.12.0-testing\">for roc-json</a></p>",
        "id": 492410098,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736294570
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7481\">#7481</a> as discussed in <a class=\"message-link\" href=\"/#narrow/channel/304641-ideas/topic/Add.20flag.20to.20roc.20docs.20for.20subfolder/near/492417224\">#ideas &gt; Add flag to roc docs for subfolder @ 💬</a> -- this PR adds a new cli flag <code>--root-dir</code> that can be used to add a prefix for all URL links in the static generated-docs.</p>",
        "id": 492425003,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736304464
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/307\">basic-cli #307</a> -- this adds the documentation for <code>0.17.0</code> and <code>0.18.0</code> versions of basic-cli to a static site in the repository, and adds a new CI workflow to deploy the site on PR.</p>\n<p>If we include this in basic-cli and host on GH pages (similar to basic-websever and other packages) then we don't need to rebuild in CI with the roc website, and this simplifies the management of breaking changes between roc and basic-cli.</p>",
        "id": 492427519,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736306462
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7482\">#7482</a> -- give some love to our Tutorial and the Plans page. </p>\n<p>Only includes changes for the tutorial that are currently active in the latest releases. Will make our life easier for updating with the next batch of breaking changes.</p>",
        "id": 492444399,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736319514
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7401\">#7401</a> -- cleanup of the <code>examples/</code> folder -- finally. </p>\n<ul>\n<li>Moves platform-switching example into the cli crate</li>\n<li>Moves the platform interior examples into roc-lang/examples, see related PR <a href=\"https://github.com/roc-lang/examples/pull/224\">examples #224</a></li>\n<li>Updates README so it's a single file that points to <a href=\"https://www.roc-lang.org/examples\">https://www.roc-lang.org/examples</a></li>\n</ul>",
        "id": 492464026,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736328208
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/492444399\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7482\">#7482</a> -- give some love to our Tutorial and the Plans page. </p>\n<p>Only includes changes for the tutorial that are currently active in the latest releases. Will make our life easier for updating with the next batch of breaking changes.</p>\n</blockquote>\n<p>Update and addressed all review comments. Thank you <span class=\"user-mention\" data-user-id=\"714230\">@kukimik</span> </p>\n<p>Request another review/approval please.</p>",
        "id": 492594470,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736375638
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/93\">basic-webserver #93</a> -- paired breaking change for upgrade the builtins to <code>snake_case</code> and initial PNC calling convention</p>",
        "id": 492607153,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736382598
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/492398545\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/basic-cli/pull/305\">basic-cli #305</a> -- paired breaking change for <a href=\"https://github.com/roc-lang/roc/pull/7463\">#7463</a> upgrades the builtins to <code>snake_case</code></p>\n</blockquote>\n<p>Updated with PNC now, all tests passing locally. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 492609765,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736384273
    },
    {
        "content": "<p>I'll see if I can kick-off a testing build for basic-cli</p>",
        "id": 492609882,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736384345
    },
    {
        "content": "<p>Remove Task: <a href=\"https://github.com/roc-lang/roc/pull/7487/files\">https://github.com/roc-lang/roc/pull/7487/files</a></p>",
        "id": 492610446,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1736384710
    },
    {
        "content": "<p>Align PNC Apply Patterns with Expr: <a href=\"https://github.com/roc-lang/roc/pull/7490\">https://github.com/roc-lang/roc/pull/7490</a>.  <span class=\"user-mention\" data-user-id=\"461444\">@Sam Mohr</span> this doesn't fix the thing you are mad about yet.  But it is important to further align Patterns and Exprs for formatting purposes to fix things in a uniform manner.</p>",
        "id": 492740349,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1736434053
    },
    {
        "content": "<p>Add <code>List.walk_try!</code> as per <a class=\"stream-topic\" data-stream-id=\"304641\" href=\"/#narrow/channel/304641-ideas/topic/List.2EwalkTry.21\">#ideas &gt; List.walkTry!</a>: <a href=\"https://github.com/roc-lang/roc/issues/7491\">#7491</a></p>",
        "id": 492809844,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1736453720
    },
    {
        "content": "<p>Str.with_ascii_lowercased builtin <a href=\"https://github.com/roc-lang/roc/issues/7496\">#7496</a> is ready for review! The other similar functions will come after I'm confident about said concerns about refcounting. Is there some info of how one should think about changing the refcounts in a builtin function?</p>",
        "id": 492973110,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1736522921
    },
    {
        "content": "<p>Move to new interpolation syntax: <a href=\"https://github.com/roc-lang/roc/pull/7497\">https://github.com/roc-lang/roc/pull/7497</a></p>",
        "id": 493002898,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1736533283
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7499\">7499</a> linker/macho: redo bits of preprocessing host</p>",
        "id": 493030056,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1736545365
    },
    {
        "content": "<p>Can I get a CI re-run for <a href=\"https://github.com/roc-lang/roc/issues/7496\">#7496</a>? Fixed what I had info on, appli-silicon just timed out, so I hope it had the same problem as the  others.</p>",
        "id": 493077168,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1736583900
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7503\">https://github.com/roc-lang/roc/pull/7503</a> fix a lil bug <span aria-label=\"bug\" class=\"emoji emoji-1f41b\" role=\"img\" title=\"bug\">:bug:</span> with <code>Num.shift_right_by</code></p>",
        "id": 493136593,
        "sender_full_name": "shua",
        "timestamp": 1736638766
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455461\">Jakub Konka</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/493030056\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7499\">7499</a> linker/macho: redo bits of preprocessing host</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span>  could I ask you for a review please? Whenever you have the time of course - just putting it on your radar. If anyone else is happy to do a review too then by all means please!</p>",
        "id": 493225601,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1736719165
    },
    {
        "content": "<p>Yeah, was travelling and just got back..should have time to review tonight or tomorrow.</p>",
        "id": 493229231,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1736722393
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7507\">#7507</a> - Just a little fix for a grammatical error in an error message that has been driving me nuts for months! <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 493417408,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1736792014
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7514\">https://github.com/roc-lang/roc/pull/7514</a> utf16/32 decoding with lossy variants</p>",
        "id": 493661501,
        "sender_full_name": "shua",
        "timestamp": 1736885535
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7513\">https://github.com/roc-lang/roc/pull/7513</a> - Add context and formatting to tutorial warning banner<br>\n(see <a class=\"message-link\" href=\"/#narrow/channel/395097-compiler-development/topic/breaking.20changes/near/493631505\">#compiler development &gt; breaking changes @ 💬</a> )</p>",
        "id": 493667774,
        "sender_full_name": "jan kili",
        "timestamp": 1736887799
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"722031\">shua</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/493661501\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7514\">https://github.com/roc-lang/roc/pull/7514</a> utf16/32 decoding with lossy variants</p>\n</blockquote>\n<p>could I get another CI run on this? <span aria-label=\"clockwise\" class=\"emoji emoji-1f503\" role=\"img\" title=\"clockwise\">:clockwise:</span></p>",
        "id": 493677566,
        "sender_full_name": "shua",
        "timestamp": 1736891561
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7518\">https://github.com/roc-lang/roc/pull/7518</a> New Lambda Syntax, i.e. <code>|x, y| x</code></p>",
        "id": 493909201,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1736942378
    },
    {
        "content": "<p>Of course the day I post this PR is the day that Zulip is <span aria-label=\"cricket\" class=\"emoji emoji-1f997\" role=\"img\" title=\"cricket\">:cricket:</span> <span aria-label=\"cricket\" class=\"emoji emoji-1f997\" role=\"img\" title=\"cricket\">:cricket:</span> <span aria-label=\"cricket\" class=\"emoji emoji-1f997\" role=\"img\" title=\"cricket\">:cricket:</span> .</p>",
        "id": 494019160,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1736976109
    },
    {
        "content": "<p>I finished the formatting piece...should I just push it to the above PR?</p>",
        "id": 494025631,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1736978810
    },
    {
        "content": "<p>Or maybe separate...</p>",
        "id": 494025767,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736978872
    },
    {
        "content": "<p>Just noticed that ^^ is a very small PR and has passed CI already</p>",
        "id": 494025835,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736978887
    },
    {
        "content": "<p>So rather than restart we could just merge it</p>",
        "id": 494025867,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736978902
    },
    {
        "content": "<p>It's up to you</p>",
        "id": 494025918,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1736978929
    },
    {
        "content": "<p>I just hope Joshua doesn't slap my hand later <span aria-label=\"tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"tears\">:tears:</span></p>",
        "id": 494025943,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1736978945
    },
    {
        "content": "<p>hahaha</p>",
        "id": 494025954,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736978950
    },
    {
        "content": "<p>I'm sure he'll forgive us</p>",
        "id": 494025978,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736978960
    },
    {
        "content": "<p><span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span>  Love you Josh!</p>",
        "id": 494026011,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1736978979
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7520\">https://github.com/roc-lang/roc/pull/7520</a> &lt;-- Format ALL lambdas to new syntax</p>",
        "id": 494027092,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1736979401
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7521\">#7521</a> - <code>Result.map</code> -&gt; <code>Result.map_ok</code></p>",
        "id": 494051572,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1736992602
    },
    {
        "content": "<p>Fixed the tests I missed - <code>cargo test</code> passes 100% locally now.</p>",
        "id": 494060745,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1736998918
    },
    {
        "content": "<p>Implement the <code>?</code> binop operator: <a href=\"https://github.com/roc-lang/roc/pull/7523\">https://github.com/roc-lang/roc/pull/7523</a></p>",
        "id": 494114456,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1737024345
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7524\">7524</a> - macho refactor and better error message when not enough preallocated space in the host for the surgical linker - can I ask someone for a review? There's no new linker functionality, mainly just shuffling things around a little.</p>",
        "id": 494421997,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1737140526
    },
    {
        "content": "<p>I fixed the code and ran the tests and benchmarks locally for <a href=\"https://github.com/roc-lang/roc/issues/7496\">#7496</a>, so the next CI run shouldn't fail, like before. Can I get a rerun?</p>",
        "id": 494444775,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1737149997
    },
    {
        "content": "<p>For the above PR, only Apple-silicon test failing (locally passed that test, even with rebasing main into the feature branch) with \"Mono output has changed!\" (yes, I am indeed changing builtins), but running <code>cargo test -p test_mono -p uitest --no-fail-fast</code> (as the logs instruct me) doesn't change anything in the repo I could commit. Using nixos with the flake. Any suggestion? Going to bed, but will check tomorrow.</p>",
        "id": 494452725,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1737153830
    },
    {
        "content": "<p>Could try double checking if <code>--release</code> makes a difference. It shouldn't but it has in the past</p>",
        "id": 494458449,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1737157428
    },
    {
        "content": "<p>Implement <code>and</code> and <code>or</code> on top of <code>&amp;&amp;</code> and <code>||</code>: <a href=\"https://github.com/roc-lang/roc/pull/7528\">https://github.com/roc-lang/roc/pull/7528</a></p>",
        "id": 494474786,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1737170247
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461444\">Sam Mohr</span> <a href=\"#narrow/stream/316715-contributing/topic/Pull.20Request.20for.20Review/near/494474786\">said</a>:</p>\n<blockquote>\n<p>Implement <code>and</code> and <code>or</code> on top of <code>&amp;&amp;</code> and <code>||</code>: <a href=\"https://github.com/roc-lang/roc/pull/7528\">https://github.com/roc-lang/roc/pull/7528</a></p>\n</blockquote>\n<p>I can review in the morning</p>",
        "id": 494475239,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1737170638
    },
    {
        "content": "<p>I can fork it to work on the zero-arg change for now, no worries</p>",
        "id": 494475291,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1737170664
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/494458449\">said</a>:</p>\n<blockquote>\n<p>Could try double checking if <code>--release</code> makes a difference. It shouldn't but it has in the past</p>\n</blockquote>\n<p>Thanks, but no difference with <code>--release</code> sadly. As a last resort, I could modify the generated text by hand (I understand this isn't ideal). The only diff shown is ID-s having a +2 increase  in a <code>/crates/compiler/test_mono/generated/inspect_derived_dict.txt</code>. Otherwise I'm blocked on this.</p>",
        "id": 494493614,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1737187676
    },
    {
        "content": "<p>I left a commen on the PR <span class=\"user-mention\" data-user-id=\"577599\">@Norbert Hajagos</span></p>",
        "id": 494503990,
        "sender_full_name": "Anton",
        "timestamp": 1737195494
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461444\">Sam Mohr</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/494474786\">said</a>:</p>\n<blockquote>\n<p>Implement <code>and</code> and <code>or</code> on top of <code>&amp;&amp;</code> and <code>||</code>: <a href=\"https://github.com/roc-lang/roc/pull/7528\">https://github.com/roc-lang/roc/pull/7528</a></p>\n</blockquote>\n<p>Approved, but I did leave a comment requesting a specific formatting test</p>",
        "id": 494511058,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1737201052
    },
    {
        "content": "<p>Okay, I'll fix that in the next PR, thanks!</p>",
        "id": 494511091,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1737201087
    },
    {
        "content": "<p>First PR for canonicalization split: <a href=\"https://github.com/roc-lang/roc/pull/7533\">https://github.com/roc-lang/roc/pull/7533</a></p>\n<p>I followed <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> 's advice and started by moving desugaring only into the new <code>roc_can_solo</code> crate. Please don't feel pressured to put too much effort into reviewing this PR, it and its successors are intermediate changes and won't look right until the whole thing comes together.</p>\n<p>As an aside, this might lead to some merge conflicts based on a few PRs touching desugaring from Josh, I'm happy to wait for those to merge and to handle merge conflicts on my end, since I'd just be copying whatever is in <code>desugar.rs</code> from the main branch, more or less.</p>",
        "id": 494651273,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1737300608
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7541\">https://github.com/roc-lang/roc/pull/7541</a> merge wasm_str tests into gen_str</p>",
        "id": 495380965,
        "sender_full_name": "shua",
        "timestamp": 1737583027
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7543\">https://github.com/roc-lang/roc/pull/7543</a> add with_ascii_uppercased and caseless_ascii_equals to Str <br>\nFresh from the press!</p>",
        "id": 495515922,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1737643549
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-webserver/pull/93\">basic-webserver #93</a> -- the <strong>big</strong> breaking change PR... again </p>\n<p>Thank you to <span class=\"user-mention\" data-user-id=\"461444\">@Sam Mohr</span> , <span class=\"user-mention\" data-user-id=\"518883\">@Ian McLerran</span> , <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span>  for the collective effort on this one. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 495632477,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1737693681
    },
    {
        "content": "<p>Exercsim full update to current Roc: <a href=\"https://github.com/exercism/roc/pull/171\">https://github.com/exercism/roc/pull/171</a><br>\n.meta/Example.roc files do not need a thorough check, they're mainly there to encure that all tests work</p>",
        "id": 495882548,
        "sender_full_name": "Anton",
        "timestamp": 1737821065
    },
    {
        "content": "<p>Awesome! I should be able to take a look later today</p>",
        "id": 495885536,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1737823227
    },
    {
        "content": "<p>Shorten the <code>hosted</code> module header: <a href=\"https://github.com/roc-lang/roc/pull/7553\">https://github.com/roc-lang/roc/pull/7553</a></p>",
        "id": 496023393,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1737943871
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/319\">basic-cli#319</a> Fix for invalid use of <code>?</code> in Path.roc</p>",
        "id": 496156489,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737993432
    },
    {
        "content": "<p>CI is failing on <a href=\"https://github.com/roc-lang/roc/issues/7530\">#7530</a></p>",
        "id": 496158413,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737993946
    },
    {
        "content": "<p>Fix try suffix after apply func formatting: <a href=\"https://github.com/roc-lang/roc/pull/7557\">https://github.com/roc-lang/roc/pull/7557</a></p>",
        "id": 496461418,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1738119694
    },
    {
        "content": "<p>Snekking some sneaky non-sneks<br>\n<a href=\"https://github.com/roc-lang/basic-cli/pull/320\">https://github.com/roc-lang/basic-cli/pull/320</a><br>\n<a href=\"https://github.com/roc-lang/basic-cli/pull/321\">https://github.com/roc-lang/basic-cli/pull/321</a><br>\n<a href=\"https://github.com/roc-lang/basic-cli/pull/322\">https://github.com/roc-lang/basic-cli/pull/322</a><br>\n<a href=\"https://github.com/roc-lang/basic-cli/pull/323\">https://github.com/roc-lang/basic-cli/pull/323</a><br>\n<a href=\"https://github.com/roc-lang/basic-cli/pull/324\">https://github.com/roc-lang/basic-cli/pull/324</a></p>",
        "id": 496783160,
        "sender_full_name": "jan kili",
        "timestamp": 1738245601
    },
    {
        "content": "<p>Snekking some sneaky non-sneks<br>\n<a href=\"https://github.com/roc-lang/roc/pull/7561\">https://github.com/roc-lang/roc/pull/7561</a><br>\n<a href=\"https://github.com/roc-lang/roc/pull/7562\">https://github.com/roc-lang/roc/pull/7562</a></p>",
        "id": 496799063,
        "sender_full_name": "jan kili",
        "timestamp": 1738249632
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7598\">https://github.com/roc-lang/roc/pull/7598</a> (6 files)</p>\n<ul>\n<li>Revert all changes made to parsing code to unblock Anthony's change: <a href=\"https://github.com/roc-lang/roc/pull/7597\">First draft of Zig version of Parser #7597</a></li>\n<li>Split back out function solving and parsing</li>\n</ul>",
        "id": 498655136,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1739152139
    },
    {
        "content": "<p>Minor build.zig cleanup for fuzzing and optional deps: <a href=\"https://github.com/roc-lang/roc/pull/7601\">https://github.com/roc-lang/roc/pull/7601</a></p>",
        "id": 498913958,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739241895
    },
    {
        "content": "<p>What's the idea of only fuzzing on Linux?</p>",
        "id": 498914041,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1739241935
    },
    {
        "content": "<p>I thought you had it working on your mac</p>",
        "id": 498914178,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1739241991
    },
    {
        "content": "<p>Wait... it's <code>target.result.os.tag != .windows</code> nvm</p>",
        "id": 498914204,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1739242006
    },
    {
        "content": "<p>Yeah, only unix</p>",
        "id": 498915560,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739242664
    },
    {
        "content": "<p>so mac, linux, bsd, etc</p>",
        "id": 498915574,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739242672
    },
    {
        "content": "<p>Hoping for more eyes on <a href=\"https://github.com/roc-lang/roc/pull/7597\">https://github.com/roc-lang/roc/pull/7597</a> so we can get that landed and start iterating</p>",
        "id": 499115600,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1739315940
    },
    {
        "content": "<p>Hoping I have the brain power to get the conflicts resolved tonight, but this flu is kicking my butt</p>",
        "id": 499115629,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1739315965
    },
    {
        "content": "<p>Sing out if you want any help</p>",
        "id": 499117460,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1739317140
    },
    {
        "content": "<p>Adding most zig files to <code>test.zig</code> and resolving resulting compile errors: <a href=\"https://github.com/roc-lang/roc/pull/7604\">https://github.com/roc-lang/roc/pull/7604</a></p>",
        "id": 499126133,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1739322459
    },
    {
        "content": "<p>Cleaning most of our remaining compilation errors in the Zig code, implemented the basics of scope tracking for canonicalization of idents and aliases: <a href=\"https://github.com/roc-lang/roc/pull/7605\">https://github.com/roc-lang/roc/pull/7605</a></p>",
        "id": 499703187,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1739529974
    },
    {
        "content": "<p>I left it in draft mode because I didn't add unit tests yet, I'll try to do that in the next couple of days</p>",
        "id": 499703289,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1739529999
    },
    {
        "content": "<p>Also please ignore the Parse IR changes, I'll revert those, they were temporary for testing</p>",
        "id": 499706991,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1739530918
    },
    {
        "content": "<p>Quick PR to fix our implementation of the FNV hash function <a href=\"https://github.com/roc-lang/roc/pull/7606\">https://github.com/roc-lang/roc/pull/7606</a></p>",
        "id": 499811781,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1739560907
    },
    {
        "content": "<p>If they have an impl, can we just use theirs?</p>",
        "id": 499811983,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1739560982
    },
    {
        "content": "<p>Our implementations are basically the same, theirs just supports using different sizes of integers. I would leave it as it is now unless we need more for some reason</p>",
        "id": 499812185,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1739561056
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7607\">https://github.com/roc-lang/roc/pull/7607</a></p>\n<p>Initial fuzzing of tokenizer with a few minor bug fixes.</p>",
        "id": 499839407,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739570730
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7610\">https://github.com/roc-lang/roc/pull/7610</a></p>\n<p>Add a <code>check</code> step <a href=\"https://kristoff.it/blog/improving-your-zls-experience/\">to use with zls</a> along with <code>check-fmt</code> for ci.<br>\nAlso, <code>check</code> step is nice in general cause you learn of compiler errors super quick and don't have to worry about it running llvm.</p>",
        "id": 499881354,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739594881
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7614\">https://github.com/roc-lang/roc/pull/7614</a> &lt;-- Parser support for braces syntax and string interpolation (ZIG)</p>",
        "id": 500006323,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1739708480
    },
    {
        "content": "<p>Unbreaking main: <a href=\"https://github.com/roc-lang/roc/pull/7617\">https://github.com/roc-lang/roc/pull/7617</a></p>",
        "id": 500031515,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1739729373
    },
    {
        "content": "<p>Fixing some tokenizer bugs: <a href=\"https://github.com/roc-lang/roc/pull/7620\">https://github.com/roc-lang/roc/pull/7620</a><br>\n(previously approved, but needs re-approval after implementing feedback)</p>",
        "id": 500316913,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1739853216
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7621\">#7621</a> Byte-size change to the string store to use 1 buffer for lengths + content.</p>",
        "id": 500507227,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1739911542
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7626\">#7626</a>  [zig] Parsing <code>match</code> expression and more patterns</p>",
        "id": 500890109,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740061193
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7633\">#7633</a> Type Annotation and Declaration parsing and formatting</p>",
        "id": 501416832,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740350340
    },
    {
        "content": "<p>^ This needs a reapproval after I rebased.  Auto-merge is enabled</p>",
        "id": 501575740,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740411359
    },
    {
        "content": "<p>This PR is a bit more likely to hit merge conflicts, so it would be great to get a quicker review if possible<br>\n<a href=\"https://github.com/roc-lang/roc/issues/7637\">#7637</a></p>\n<ol>\n<li>Switches a lot of things over to use gpa instead of arenas. This is important for growing data structures like arraylists to avoid consuming tons of extra memory.</li>\n<li>Cleans up the small string interner using some zig builtins and making it simpler overall.</li>\n</ol>\n<p>cc: <span class=\"user-mention\" data-user-id=\"461444\">@Sam Mohr</span> cause we already talked about this some.</p>",
        "id": 501683796,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1740444233
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7638\">#7638</a> Parsing Records and Tuples</p>",
        "id": 501789814,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740485518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/501789814\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7638\">#7638</a> Parsing Records and Tuples</p>\n</blockquote>\n<p>This also includes BinOps and Expect, Crash, and Return statements and Static Dispatch-style dot access.</p>",
        "id": 502187930,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740626028
    },
    {
        "content": "<p>And probably should be reviewed and/or merged soon</p>",
        "id": 502187941,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740626042
    },
    {
        "content": "<p>Nice work <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 502187967,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1740626043
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7643\">#7643</a> Format a single file via the CLI</p>",
        "id": 502626091,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1740762614
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"611722\">Isaac Van Doren</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/502626091\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/issues/7643\">#7643</a> Format a single file via the CLI</p>\n</blockquote>\n<p>Left a few comments</p>",
        "id": 502674563,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740780200
    },
    {
        "content": "<p>The first bumped PR was already merged</p>",
        "id": 502674627,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740780224
    },
    {
        "content": "<p>Are you talking about <a href=\"https://github.com/roc-lang/roc/pull/7642\">https://github.com/roc-lang/roc/pull/7642</a></p>",
        "id": 502674645,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740780232
    },
    {
        "content": "<p>Oh sorry, I actually didn't post the right PR <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7642\">#7642</a>: Remove <code>*</code> from types and add <code>...</code> expression</p>",
        "id": 502674904,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740780347
    },
    {
        "content": "<p>Approved with one comment, but I'll have to re-approve after you fix the merge conflict</p>",
        "id": 502675187,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740780462
    },
    {
        "content": "<p>Minor extra cleanups for the SmallStringInterner inspired by <a class=\"stream-topic\" data-stream-id=\"306878\" href=\"/#narrow/channel/306878-off-topic/topic/Talk.3A.20.22Programming.20without.20Pointers.22/with/502692371\">#off topic &gt; Talk: \"Programming without Pointers\"</a> <br>\n<a href=\"https://github.com/roc-lang/roc/pull/7645\">https://github.com/roc-lang/roc/pull/7645</a></p>",
        "id": 502696422,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1740793281
    },
    {
        "content": "<p>Can I get another review on <a href=\"https://github.com/roc-lang/roc/pull/7644\">https://github.com/roc-lang/roc/pull/7644</a></p>\n<p>Resolved some of the review comments. Added new features, including a FORMATTED section.</p>\n<div class=\"codehilite\"><pre><span></span><code>17:36:11 ~/Documents/GitHub/roc initial-snapshot $ zig build snapshot\ninfo: processed 2 snapshots in 5 ms.\n17:37:20 ~/Documents/GitHub/roc initial-snapshot $ zig build snapshot -- --verbose\ninfo: /Users/luke/Documents/GitHub/roc/src/snapshots/001.txt\ninfo: /Users/luke/Documents/GitHub/roc/src/snapshots/some_folder/002.txt\ninfo: processed 2 snapshots in 1 ms.\n</code></pre></div>\n<p>It's starting to look like it will be really useful for <span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span> with the parser and formatter work as we build out more functionality.</p>",
        "id": 502717617,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1740811054
    },
    {
        "content": "<p>^^ not urgent or anything. I need to head off now -- might come back to this in a break tomorrow sometime.</p>",
        "id": 502717730,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1740811151
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7649\">#7649</a> For migration from slices-&gt;DataSpans</p>",
        "id": 502771219,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740852109
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7648\">#7648</a> For fixing some issues with SExpr serialization of ParseIR <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span></p>",
        "id": 502771345,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740852155
    },
    {
        "content": "<p>Fix infinite loop in tokenizer: <a href=\"https://github.com/roc-lang/roc/pull/7650\">https://github.com/roc-lang/roc/pull/7650</a></p>\n<p>Just a 1 line change to add an exit condition to one case in the loop</p>",
        "id": 502794431,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1740868023
    },
    {
        "content": "<p>Nice, thanks!</p>",
        "id": 502794568,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1740868165
    },
    {
        "content": "<p>Thank the fuzzer</p>",
        "id": 502794722,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1740868295
    },
    {
        "content": "<p>2 line PR to update a dependency again: <a href=\"https://github.com/roc-lang/roc/pull/7652\">https://github.com/roc-lang/roc/pull/7652</a></p>\n<p>Just part of my iteration to get all the linux fuzzing happy.</p>",
        "id": 502944395,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1740979706
    },
    {
        "content": "<p>So essentially the same PR, but a second time. Turns out that zig follows symbolic links which defeated my last change. This sets the mode to lto via an environment variable instead: <a href=\"https://github.com/roc-lang/roc/pull/7653\">https://github.com/roc-lang/roc/pull/7653</a></p>",
        "id": 502959761,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1740987944
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7658\">#7658</a>: Move rest of IR to DataSpans</p>",
        "id": 503287300,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1741099890
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7663\">#7663</a> minor improvement to fuzzing repro scripts and how things get built.</p>",
        "id": 503416196,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741146282
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7664\">#7664</a> -- pretty small PR which fixes a bug in SExpr for files that end with a newline, and adds support for <code>import</code> statements.</p>\n<p>I suspect this will need rebasing when <span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span> lands his changes tomorrow... so no rush on this. </p>\n<p>I was looking at Can and figured I'd get my head around the import statements and how to extract the text for that.</p>",
        "id": 503443615,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1741160980
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7668\">#7668</a> Create simple fuzzer for the parse -&gt; format loop</p>",
        "id": 503682925,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741231049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> added your feedback. Now all formatter tests and the fuzzer share the same base unit.</p>",
        "id": 503686338,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741233160
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7664\">#7664</a> </p>\n<ul>\n<li>fix a bug in s-expressions for files ending with newline</li>\n<li>adds support for <code>import</code> statements in Parse S-Expr</li>\n<li>new feature flag <code>--fuzz-corpus</code> to copy the SOURCE section from snapshots into a provided file path.</li>\n<li>adds flag <code>--help</code> for snapshot tool</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>$ zig build snapshot -- --fuzz-corpus ./src/fuzz-corpus/parse/ --verbose\nwarning: AFL++ requires a full version of llvm from the system or passed in via -Dllvm-path, but `llvm-config` was not found (Only building repro executables)\ninfo: copying SOURCE from snapshots to: ./src/fuzz-corpus/parse/\ninfo: /Users/luke/Documents/GitHub/roc/src/snapshots/003.txt\ninfo: /Users/luke/Documents/GitHub/roc/src/snapshots/001.txt\ninfo: /Users/luke/Documents/GitHub/roc/src/snapshots/some_folder/002.txt\ninfo: processed 3 snapshots in 3 ms.\n</code></pre></div>",
        "id": 503723947,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1741247501
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7669\">#7669</a> - more coverage for Parser s-expressions</p>",
        "id": 503958726,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1741329065
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7675\">#7675</a> - minor snapshot tool cli arg handling cleanup and removal of no longer needed fuzz corpus (now generated by snapshot tool)</p>",
        "id": 504217264,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741397867
    },
    {
        "content": "<p>Two micro PRs that cleanup some fuzzing bugs:<br>\n<a href=\"https://github.com/roc-lang/roc/issues/7676\">#7676</a> - tokenizer fuzzer generate <code>and</code>/<code>or</code> vs <code>||</code>/<code>&amp;&amp;</code> correctly<br>\n<a href=\"https://github.com/roc-lang/roc/issues/7677\">#7677</a> - parser, explicitly panic instead of getting stuck in an infinite loop</p>",
        "id": 504245161,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741418135
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7678\">#7678</a> - super minor cli cleanup</p>",
        "id": 504247205,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741419834
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7679\">#7679</a> - Update to zig 0.14.0</p>",
        "id": 504308707,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741462266
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7680\">#7680</a> - Another super small parser PR. crash instead of hanging (I think this is the last hang)</p>",
        "id": 504312409,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741464592
    },
    {
        "content": "<p>Note: I'm fairly certain all my PRs here are conflict free and can be merged in any order.</p>",
        "id": 504314750,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741466061
    },
    {
        "content": "<p>Can I please have a review on <a href=\"https://github.com/roc-lang/roc/pull/7672\">#7672</a>. </p>\n<p>In particular I'd like to know if my approach for handling errors and malformed in the Parser is correct.</p>\n<p>Summary:</p>\n<ul>\n<li>adds tokenise and parser diagnostics to ModuleEnv as Problems</li>\n<li>fix out of bound issue in <code>parse.zig</code> from line numbers</li>\n<li>fix memory leak by free'ing parser errors in deinit</li>\n<li>adds eleven (11) new Diagnostic errors for the Parser</li>\n<li>removes panics and handle malformed parsed AST nodes</li>\n<li>implements a significant number of SExpr nodes for the Parser AST</li>\n<li>improves reliability for handling newlines in Parser</li>\n<li>upgrades the snapshot tool with new <code>PROBLEMS</code>, <code>TOKENS</code>, and <code>FORMATTED</code> sections</li>\n<li>adds eleven (11) new snapshots, discovered from fuzzing the parser</li>\n</ul>",
        "id": 504480593,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1741586974
    },
    {
        "content": "<p>Ok, I've merged changes and made some additional improvements. This PR ^^^ is ready for a review.</p>",
        "id": 504732281,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1741664048
    },
    {
        "content": "<p>Tiny pr to enable optimizing fuzz repro scripts and cleanup two minor printout mistakes: <a href=\"https://github.com/roc-lang/roc/pull/7686\">https://github.com/roc-lang/roc/pull/7686</a></p>",
        "id": 504756598,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741676521
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7687\">#7687</a>: [zig] Parser: Add Region to node</p>",
        "id": 504812299,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1741692612
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7689\">#7689</a>: Remove <code>||</code> and <code>&amp;&amp;</code> from tokenizer</p>",
        "id": 504888904,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741709383
    },
    {
        "content": "<p>I'd like to merge <a href=\"https://github.com/roc-lang/roc/pull/7672\">https://github.com/roc-lang/roc/pull/7672</a> unless there's any significant concerns. </p>\n<p>It's passing all the zig tests now and there are a lot of follow up things I'd prefer to do in smaller PR's than adding to this mammoth.</p>",
        "id": 504969571,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1741731621
    },
    {
        "content": "<p>Looking now!</p>",
        "id": 504969948,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1741731763
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7692\">#7692</a></p>\n<ul>\n<li>add region information for sexpr formatting</li>\n<li>move snapshots for fuzz crashes into a subfolder</li>\n<li>create a snapshot folder for really primitive things to help verify regions are parsed correctly</li>\n</ul>\n<p>Example</p>\n<div class=\"codehilite\"><pre><span></span><code>~~~META\ndescription=A primitive int\n~~~SOURCE\nmodule [foo]\nfoo = 42\n~~~PROBLEMS\nNIL\n~~~TOKENS\nKwModule,OpenSquare,LowerIdent,CloseSquare,Newline,LowerIdent,OpAssign,Int,EndOfFile\n~~~PARSE\n(file (1:1-2:9)\n    (module (1:1-2:4)\n        (exposed_item (1:9-1:12) (lower_ident &quot;foo&quot;)))\n    (decl (2:1-2:9)\n        (ident (2:1-2:4) &quot;foo&quot;)\n        (int (2:7-2:9) &quot;42&quot;)))\n~~~FORMATTED\nmodule [foo]\n\nfoo = 42\n~~~END\n</code></pre></div>",
        "id": 505027558,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1741754594
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7693\">#7693</a> fixes and improve regions for the parser and sexpr formatting.</p>\n<ul>\n<li>implement <code>malformed</code> on various things</li>\n<li>fix incorrect region for collection end</li>\n<li>fix and improve regions for strings and string parts</li>\n<li>improve snapshot tool verbose logging, change token section to optional</li>\n<li>new snapshots to isolate parsing for primitives (float, int, string, tag, imports)</li>\n</ul>",
        "id": 505057469,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1741767303
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7695\">#7695</a>: More multiline and comment support in the formatter</p>",
        "id": 505145004,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1741788742
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7696\">#7696</a>: Small PR, fix infinite loop in parser</p>",
        "id": 505285355,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741826999
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7697\">#7697</a>: Slightly bigger PR dealing with numbers with no digits in them.</p>",
        "id": 505303030,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741834536
    },
    {
        "content": "<p>Another tiny fuzz bug fix PR in the tokenizer (most of the LOC changes are me adding some doc comments on functions).</p>\n<p>Just changes int token printing in the fuzzer loop to avoid a crash. Oh, and removes an assert I just added that the fuzzer found can be wrong.</p>\n<p><a href=\"https://github.com/roc-lang/roc/issues/7698\">#7698</a></p>",
        "id": 505326822,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741845723
    },
    {
        "content": "<p>ultra tiny parser fuzz crash fix: <a href=\"https://github.com/roc-lang/roc/issues/7699\">#7699</a></p>",
        "id": 505328018,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741846254
    },
    {
        "content": "<p>Ignore more files in the ci manager filter <a href=\"https://github.com/roc-lang/roc/issues/7701\">#7701</a></p>\n<p>This just avoids running the old rust ci when changing things like the <code>.gitignore</code> file.</p>",
        "id": 505576373,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741924243
    },
    {
        "content": "<p>Enable incremental compilation <a href=\"https://github.com/roc-lang/roc/issues/7700\">#7700</a> (also adds a guide in the readme to enable it with zls)</p>",
        "id": 505576468,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1741924301
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7702\">#7702</a> fixes 1 fuzz crash - adds malformed node for string_expected_close_interpolation</p>",
        "id": 505626830,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1741945135
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7703\">#7703</a> Expand roc format to support directories</p>",
        "id": 505816403,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742019857
    },
    {
        "content": "<p>Larger PR, though mostly moving lines around.<br>\n<a href=\"https://github.com/roc-lang/roc/issues/7704\">#7704</a> switch to using buffered io to write the formatter output instead of allocating an arraylist and filling it up before writing to the output.</p>",
        "id": 505888314,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742075049
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7706\">#7706</a></p>\n<ol>\n<li>Adds support for tracy</li>\n<li>general build script improvements</li>\n<li>doc on profiling the compiler</li>\n</ol>",
        "id": 506303869,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742263432
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7707\">#7707</a> Small pr for arena allocation of args and directory walker</p>",
        "id": 506604551,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742342925
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7708\">#7708</a> Relatively small PR to stop file loading from incurring extra copies.<br>\nBig perf win on my x86 linux machine ~8%.</p>\n<p>Also, switches <code>roc format</code> to counting all the failures instead of early existing on the first failure.</p>",
        "id": 506611275,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742346659
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7709\">#7709</a> Another ~8% perf improvement by initilizing more stuff with a capacity.</p>",
        "id": 506624466,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742354076
    },
    {
        "content": "<p>As a note, part of me thinks that we should always require initializing with a capacity. Cause it avoids extra allocations and memcpy's, which can be quite slow. Even just picking something arbitrary like 16 or 64 is likely fine for many things. Especially if it is just a list of u32 indices. Those barely use any ram in the larger scheme of things.</p>",
        "id": 506624568,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742354156
    },
    {
        "content": "<p>Long term of course, would be great to tune the size based on what is expected over a very large corpus of roc files.</p>",
        "id": 506624642,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742354193
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7710\">#7710</a> improve tracy data collection by waiting for shutdown.</p>",
        "id": 506641685,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742364456
    },
    {
        "content": "<p>specifically this is nice on macos where tracy is missing this feature.</p>",
        "id": 506641799,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742364501
    },
    {
        "content": "<p>[#7695}(<a href=\"https://github.com/roc-lang/roc/pull/7695\">https://github.com/roc-lang/roc/pull/7695</a>) Multiline and commenting support for the entire grammar</p>\n<p>This is ready for review again, but I do have quite a painful rebase to complete after being away for 2-ish weeks :-(</p>",
        "id": 507990329,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1742900489
    },
    {
        "content": "<p>The biggest source of pain in this rebase is moving Formatter away from being a module-level struct.  Which introduced whitespace changes to pretty much the entire file and I'm unsure what to keep and what not to</p>",
        "id": 507990614,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1742900575
    },
    {
        "content": "<p>Anything I can do to help with the rebase?</p>",
        "id": 508423184,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1743046603
    },
    {
        "content": "<p>Maybe in the future we should try to avoid doing \"large\" refactors (in terms of lines touched) on components that are actively being worked on</p>",
        "id": 508423365,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1743046709
    },
    {
        "content": "<p>It’s almost done</p>",
        "id": 508476299,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1743070920
    },
    {
        "content": "<p>Wasn’t that bad really</p>",
        "id": 508476341,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1743070926
    },
    {
        "content": "<p>We are READY TO MERGE!</p>",
        "id": 508487285,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1743074104
    },
    {
        "content": "<p>After this lands, you should <em>mostly</em> be able to write Roc applications, in the v0.1 style, without tokenization or parse errors - and with <em>reasonable</em> style when formatted.</p>",
        "id": 508487512,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1743074170
    },
    {
        "content": "<p>Just needs a <span aria-label=\"approved\" class=\"emoji emoji-2705\" role=\"img\" title=\"approved\">:approved:</span> ;-)</p>",
        "id": 508640487,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1743120399
    },
    {
        "content": "<p>Some updates to the syntax migration tool, plus a few fixes to the new compiler, for various bits of syntax encountered in the wild: <a href=\"https://github.com/roc-lang/roc/pull/7716\">https://github.com/roc-lang/roc/pull/7716</a></p>",
        "id": 508650447,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1743126503
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7719\">#7719</a> Super minor parser hang fix</p>",
        "id": 508668161,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1743137390
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7716\">https://github.com/roc-lang/roc/pull/7716</a> still needs a review if someone has some time!</p>",
        "id": 509815782,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1743639320
    },
    {
        "content": "<p>I can read through tomorrow!</p>",
        "id": 509816844,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1743639965
    },
    {
        "content": "<p>I’ll take look at the zig code soon</p>",
        "id": 509818372,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1743641000
    },
    {
        "content": "<p>Hopefully in the morning</p>",
        "id": 509818389,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1743641008
    },
    {
        "content": "<p>Think I fixed up all the issues there, if you have time to re-review</p>",
        "id": 510518795,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1743972412
    },
    {
        "content": "<p>I’ll try tonight or in the morning</p>",
        "id": 510525146,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1743977561
    },
    {
        "content": "<p>Hey all,  been very inactive due to health and personal issues but now I have the capacity to work on more! Linked below is a PR I forgot to put up before my absence. Thank you again to <span class=\"user-mention\" data-user-id=\"461444\">@Sam Mohr</span>  for their help with my questions.</p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7730\">https://github.com/roc-lang/roc/pull/7730</a></p>\n<p>Happily open to any feedback or questions. Thanks!</p>",
        "id": 510785375,
        "sender_full_name": "luigim",
        "timestamp": 1744069134
    },
    {
        "content": "<p>I'll check it out when I get the time!</p>",
        "id": 510788034,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744070597
    },
    {
        "content": "<p>Thank you Sam!</p>",
        "id": 510791780,
        "sender_full_name": "luigim",
        "timestamp": 1744072769
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7733\">#7733</a> Parse and format other headers</p>",
        "id": 511184947,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1744207860
    },
    {
        "content": "<p>This is ready for re-review ^</p>",
        "id": 511384079,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1744285033
    },
    {
        "content": "<p>what is Module Work, is it just a wrapper around an IR?</p>",
        "id": 511857793,
        "sender_full_name": "Wizard ish",
        "timestamp": 1744504747
    },
    {
        "content": "<p>Sounds like it would be coordination for compiling a module one depedencies are met, but that is 100% a guess</p>",
        "id": 511861782,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1744508345
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/blob/966d0459e7ccb1bd28cb77c05b8419953ef167af/src/base/module_work.zig#L1\">https://github.com/roc-lang/roc/blob/966d0459e7ccb1bd28cb77c05b8419953ef167af/src/base/module_work.zig#L1</a></p>",
        "id": 511945234,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744580544
    },
    {
        "content": "<p>Here's a description <span class=\"user-mention\" data-user-id=\"782426\">@Wizard ish</span></p>",
        "id": 511945240,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744580552
    },
    {
        "content": "<p>In short, we want to be able to refer to data in other modules during compilation</p>",
        "id": 511945280,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744580605
    },
    {
        "content": "<p>Which requires knowing which module we're using, followed by the index within the module</p>",
        "id": 511945395,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744580681
    },
    {
        "content": "<p>For that \"which module are we talking about\" index, we want to have a compiler stage-agnostic mechanism to do that</p>",
        "id": 511945456,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744580749
    },
    {
        "content": "<p>And a very simple and efficient way to do that is to order modules in reverse compilation order (AKA dependencies first)</p>",
        "id": 511945516,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744580782
    },
    {
        "content": "<p>And then use the index of each module in that ordered list for referencing which module we need work from</p>",
        "id": 511946086,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744581283
    },
    {
        "content": "<p>So \"module work\" is \"the IR data for a single module\"</p>",
        "id": 511946122,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744581322
    },
    {
        "content": "<p>But it's not always IR, so it's Work and not IR</p>",
        "id": 511946225,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744581393
    },
    {
        "content": "<p>so basically, it's a way to structure dependencies between stages and packages?</p>",
        "id": 511954782,
        "sender_full_name": "Wizard ish",
        "timestamp": 1744588308
    },
    {
        "content": "<p>Sure, more or less</p>",
        "id": 511968947,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1744598217
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7744\">#7744</a> Replace <code>Slice</code>s with <code>Range</code>s in <code>SafeList</code> and <code>MultiList</code> &amp; update IRs (from the conversation <a href=\"#narrow/channel/395097-compiler-development\">here</a>)</p>",
        "id": 512436069,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1744762851
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7745\">#7745</a>: Parse and Format <code>where</code> constraints</p>",
        "id": 512443768,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1744768188
    },
    {
        "content": "<p>Create markdown link checker for glossary.md</p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7747\">https://github.com/roc-lang/roc/pull/7747</a></p>",
        "id": 512594106,
        "sender_full_name": "Magdiel Amor",
        "timestamp": 1744820289
    },
    {
        "content": "<p><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> I'll take care of that one, I'm going to add a CI check so the script is run automatically.</p>",
        "id": 512598168,
        "sender_full_name": "Anton",
        "timestamp": 1744821394
    },
    {
        "content": "<p>Ok great <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 512632202,
        "sender_full_name": "Magdiel Amor",
        "timestamp": 1744826802
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7749\">#7749</a>: Type alias header using parens for args</p>",
        "id": 512802496,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1744889118
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"341568\">Jared Ramirez</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/512436069\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7744\">#7744</a> Replace <code>Slice</code>s with <code>Range</code>s in <code>SafeList</code> and <code>MultiList</code> &amp; update IRs (from the conversation <a href=\"#narrow/channel/395097-compiler-development\">here</a>)</p>\n</blockquote>\n<p>I merged main and resolved the conflicts. <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> I left a comment for you. Are you able to review again please?</p>",
        "id": 512940858,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1744936635
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> can you please look at <span class=\"user-mention\" data-user-id=\"729079\">@Lars Frogner</span>'s PR in <a href=\"https://github.com/roc-lang/roc/pull/7741\">https://github.com/roc-lang/roc/pull/7741</a> </p>\n<p>I'm reasonably sure the implementation is good, we just have a CI issue. I'll restart that failed one now and maybe it will resolve iteself.</p>",
        "id": 512941552,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1744936935
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7751\">#7751</a>: Move match branches to use fat arrow</p>",
        "id": 513013034,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1744973797
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"341568\">Jared Ramirez</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/512436069\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7744\">#7744</a> Replace <code>Slice</code>s with <code>Range</code>s in <code>SafeList</code> and <code>MultiList</code> &amp; update IRs (from the conversation <a href=\"#narrow/channel/395097-compiler-development\">here</a>)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> Updated/responded based on your comments! After reviewing, feel free to merge if all looks good!</p>",
        "id": 513116258,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1745024247
    },
    {
        "content": "<p>Will do shortly!</p>",
        "id": 513117301,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1745025139
    },
    {
        "content": "<p>Minor PR to increase some default capacities based on a discussion with Richard from a long while back now (the last meetup).<br>\n<a href=\"https://github.com/roc-lang/roc/issues/7753\">#7753</a></p>",
        "id": 513122749,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1745029722
    },
    {
        "content": "<p>initial cache I/O implementation: <a href=\"https://github.com/roc-lang/roc/pull/7755\">https://github.com/roc-lang/roc/pull/7755</a></p>",
        "id": 513285185,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1745164131
    },
    {
        "content": "<p><span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> anyone have a Windows VM (or real machine) and could look into why that assertion is failing? <a href=\"https://github.com/roc-lang/roc/actions/runs/14564575038/job/40851987484?pr=7755#step:7:36\">https://github.com/roc-lang/roc/actions/runs/14564575038/job/40851987484?pr=7755#step:7:36</a></p>\n<p>the path comes from a tempdir, so should be absolute on both Windows and UNIX... <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 513326762,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1745200536
    },
    {
        "content": "<p>I don't have windows available, but one general note. We want all FS to go though an abstraction</p>",
        "id": 513338035,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1745208544
    },
    {
        "content": "<p>We have a really basic fs mock currently that probably needs work, but it would be good to use here</p>",
        "id": 513338143,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1745208605
    },
    {
        "content": "<p>Needed for future wasm support</p>",
        "id": 513338158,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1745208617
    },
    {
        "content": "<p>Which definitely will be best if we get it building as soon as possible</p>",
        "id": 513338173,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1745208631
    },
    {
        "content": "<p>Specifically in <code>src/coordinate/Filesystem.zig</code> <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span></p>",
        "id": 513377674,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1745230850
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/513338143\">said</a>:</p>\n<blockquote>\n<p>We have a really basic fs mock currently that probably needs work, but it would be good to use here</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> let me know if I still need to look at the windows failure.</p>",
        "id": 513563961,
        "sender_full_name": "Anton",
        "timestamp": 1745314948
    },
    {
        "content": "<p>nah I'll try looking into Filesystem.zig first!</p>",
        "id": 513579157,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1745319810
    },
    {
        "content": "<p>ok, revised it to use <code>Filesystem.zig</code> - <a href=\"https://github.com/roc-lang/roc/pull/7759\">https://github.com/roc-lang/roc/pull/7759</a></p>",
        "id": 514499961,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1745642956
    },
    {
        "content": "<p>Hoping I’ll have some time this next week to get back into the swing of things</p>",
        "id": 515826689,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1746235695
    },
    {
        "content": "<p>nice, anything in particular you're looking to jump on?</p>",
        "id": 515832809,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1746239548
    },
    {
        "content": "<p>Just the last couple things in the parser and then I can entertain looking into anything else that needs help</p>",
        "id": 515875210,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1746265338
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7780\">7780</a>: Parse and format local dispatch arrow calls</p>",
        "id": 517360062,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1746969064
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7783\">#7783</a>: Parse and format <code>var</code> and <code>for</code> statements</p>",
        "id": 517556865,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1747058414
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7772\">#7772</a>: Type unification</p>\n<p>It's ready to go, minus a CI issue I'm not sure how to resolve: <a href=\"https://github.com/roc-lang/roc/actions/runs/14984901100/job/42096865245?pr=7772\">Zig tests  failing on windows</a>, lots of <code>unable to find static system library</code></p>",
        "id": 517695473,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1747094935
    },
    {
        "content": "<p>I'll check out CI</p>",
        "id": 517760284,
        "sender_full_name": "Anton",
        "timestamp": 1747122720
    },
    {
        "content": "<p>Hmm, it does not reproduce locally. I also don't understand why this shows up now with this PR.</p>",
        "id": 517831270,
        "sender_full_name": "Anton",
        "timestamp": 1747142884
    },
    {
        "content": "<blockquote>\n<p>searched paths: none</p>\n</blockquote>\n<p>That's not going to work <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 517833786,
        "sender_full_name": "Anton",
        "timestamp": 1747143536
    },
    {
        "content": "<p>Fixed <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 517889379,
        "sender_full_name": "Anton",
        "timestamp": 1747158197
    },
    {
        "content": "<p>Surprise, surprise, it was a caching issue</p>",
        "id": 517889438,
        "sender_full_name": "Anton",
        "timestamp": 1747158219
    },
    {
        "content": "<p>I didn't even know that folder was cached though</p>",
        "id": 517889475,
        "sender_full_name": "Anton",
        "timestamp": 1747158235
    },
    {
        "content": "<p>When debugging I've often wanted to have a visual graph of which functions or programs access which files and dirs. I'd like to make something like that for Roc scripts one day. With a visual graph overview I could have immediately seen the missing dir was provided by the cache on normal runs.</p>",
        "id": 517890260,
        "sender_full_name": "Anton",
        "timestamp": 1747158479
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7786\">#7786</a>: Formatter uses tab instead of spaces</p>",
        "id": 518320709,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1747319414
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7792\">#7792</a>:  Remove panics and unreachable statements from Parser</p>",
        "id": 518844218,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1747507713
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7793\">#7793</a>: Next fuzz crash fix. Just deals with some offsets that were incorrect due to ignoring newlines.</p>",
        "id": 518849790,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747511625
    },
    {
        "content": "<p><span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> should be fixed now</p>",
        "id": 518884261,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747542460
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7794\">#7794</a>: Improve Parse IR SExpr serialization</p>",
        "id": 518926517,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1747578166
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7795\">#7795</a>: the new host ABI we've discussed - <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> lmk what you think!</p>",
        "id": 518929774,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1747580733
    },
    {
        "content": "<p>Nice progress <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 518966215,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1747609433
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7801\">#7801</a>: Add me to list of sponsors on Readme (got my receipt and it reminded me)</p>",
        "id": 519218692,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1747687119
    },
    {
        "content": "<p>thanks for all the contributions <em>and</em> the sponsorship <span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span>! <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 519231250,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1747691159
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> I updated <a href=\"https://github.com/roc-lang/roc/pull/7772\">#7722</a> to resolve conflicts with main, but that dismissed approval. Can you re-approve when you have a sec?</p>",
        "id": 519247216,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1747697174
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"341568\">@Jared Ramirez</span> done!</p>",
        "id": 519249513,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1747698217
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7803\">#7803</a>: Odds &amp; ends based on type unification PR comments</p>",
        "id": 519496038,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1747787595
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7804\">#7804</a> I added <code>List.keep_if_try!</code></p>",
        "id": 519670912,
        "sender_full_name": "Anton",
        "timestamp": 1747850177
    },
    {
        "content": "<p>That name hurts <span aria-label=\"hurt\" class=\"emoji emoji-1f915\" role=\"img\" title=\"hurt\">:hurt:</span></p>",
        "id": 519724749,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747874260
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7802\">#7802</a> -- copy builtins into the the zig compiler. All tests are passing now. For a review, I would recommend just stepping through each commit to see the delta's from the original files. Minor changes for zig 0.14.0 and to make CI linter and typos happy.</p>",
        "id": 519743748,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1747887489
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/519724749\">said</a>:</p>\n<blockquote>\n<p>That name hurts <span aria-label=\"hurt\" class=\"emoji emoji-1f915\" role=\"img\" title=\"hurt\">:hurt:</span></p>\n</blockquote>\n<p>Yeah, it's not self-evident but it fits with our conventions</p>",
        "id": 520004612,
        "sender_full_name": "Anton",
        "timestamp": 1747991365
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7807\">#7807</a> - stack memory system for the interpreter</p>",
        "id": 520155173,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1748054805
    },
    {
        "content": "<p>I'll have time to give that a proper review tomorrow</p>",
        "id": 520155607,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1748055264
    },
    {
        "content": "<p>nice, thank you! <span aria-label=\"rock on\" class=\"emoji emoji-1f918\" role=\"img\" title=\"rock on\">:rock_on:</span></p>",
        "id": 520155830,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1748055502
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7811\">#7811</a>: Implement type variable occurs check (but do not use it anywhere yet)</p>",
        "id": 521189351,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1748562849
    },
    {
        "content": "<p>not ready for review yet, but big one incoming for layouts: <a href=\"https://github.com/roc-lang/roc/pull/7812\">https://github.com/roc-lang/roc/pull/7812</a></p>",
        "id": 521215782,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1748578318
    },
    {
        "content": "<p>I'll take a look at the <code>occurs</code> check one tomrorow! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 521215841,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1748578342
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7805\">#7805</a>: # Support both Polymorphic &amp; Compacted <code>Num</code>s  in the type system</p>",
        "id": 521588490,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1748804332
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7817\">#7817</a>: Add a new CLI argument parser that supports <code>roc main.roc</code>, basic flags, help messages, error messages, etc.</p>",
        "id": 523014695,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1749434899
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7818\">#7818</a>: Change type descriptors type form <code>ArrayList</code> to <code>MultiArrayList</code></p>",
        "id": 523188953,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1749515893
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7820\">#7820</a> - random Can things. </p>\n<p>With this PR we're at the point were we have some simple things working (again <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> ) We had some of these things working before, I think <span class=\"user-mention\" data-user-id=\"461444\">@Sam Mohr</span> and <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> had implemented some things already, and then we broke them a bit. </p>\n<p><span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span>'s work translating to the same architecture as the Parser laid the foundation here. I've just gone around trying to connect the dots and get it working.</p>\n<p>What I am most proud of is we have SExpr and problems/diagnostics for compile-time/run-time error reporting working. Well enough that you can see the snapshots and pick something that isn't behaving correctly and dig in and fix it easy enough now. </p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Here's an example with two top-level defs</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"meta\"><pre><span></span><code>description=Basic example to develop the snapshot methodology\ntype=file\n~~~SOURCE\nmodule [foo, bar]\n\nfoo = \"one\"\n\nbar = \"two\"\n~~~PROBLEMS\nNIL\n~~~TOKENS\nKwModule(1:1-1:7),OpenSquare(1:8-1:9),LowerIdent(1:9-1:12),Comma(1:12-1:13),LowerIdent(1:14-1:17),CloseSquare(1:17-1:18),Newline(1:1-1:1),\nNewline(1:1-1:1),\nLowerIdent(3:1-3:4),OpAssign(3:5-3:6),StringStart(3:7-3:8),StringPart(3:8-3:11),StringEnd(3:11-3:12),Newline(1:1-1:1),\nNewline(1:1-1:1),\nLowerIdent(5:1-5:4),OpAssign(5:5-5:6),StringStart(5:7-5:8),StringPart(5:8-5:11),StringEnd(5:11-5:12),EndOfFile(5:12-5:12),\n~~~PARSE\n(file (1:1-5:12)\n    (module (1:1-1:18)\n        (exposes (1:8-1:18)\n            (exposed_item (lower_ident \"foo\"))\n            (exposed_item (lower_ident \"bar\"))))\n    (statements\n        (decl (3:1-3:12)\n            (ident (3:1-3:4) \"foo\")\n            (string (3:7-3:12) (string_part (3:8-3:11) \"one\")))\n        (decl (5:1-5:12)\n            (ident (5:1-5:4) \"bar\")\n            (string (5:7-5:12) (string_part (5:8-5:11) \"two\")))))\n~~~FORMATTED\nNO CHANGE\n~~~CANONICALIZE\n(can_ir\n    (top_level_defs\n        (def\n            (let)\n            (pattern (1:9-1:9) (assign (ident \"foo\")))\n            (expr (1:1-1:1) (string (literal \"one\")))\n            \"#0\")\n        (def\n            (let)\n            (pattern (1:16-1:16) (assign (ident \"bar\")))\n            (expr (1:1-1:1) (string (literal \"two\")))\n            \"#1\")))\n~~~END\n```\n</code></pre></div>\n</div></div>",
        "id": 523548125,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1749644321
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7823\">#7823</a> - adds a  <code>.rules</code> file which explains to AI agents how to use the roc snapshot tool</p>\n<p>I found this significantly helps the agents when working with our code. Instead of creating custom debug or test programs, they can write snapshot tests.</p>",
        "id": 523647079,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1749680759
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7824\">#7824</a> - refactor the Parser</p>\n<ul>\n<li>rename from <code>IR</code> to <code>AST</code></li>\n<li>Move <code>Node</code> and <code>NodeStore</code> into their own files</li>\n<li>Use a consistent style for index and span types, provide type safety but still zero cost abstractions</li>\n<li>add doc comments for NodeStore functions</li>\n</ul>",
        "id": 523679719,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1749706251
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7825\">#7825</a>: Detect recursion in <code>unify</code> with occurs check</p>",
        "id": 523852779,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1749774991
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7830\">#7830</a> - it's still in Draft... I am going to need more time to really thoroughly review myself. But wanted to share the WIP. </p>\n<p>I think I may have broken GH web interface with this PR. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n<p>Add reporting (ported across from rust) with support for Plain text, HTML, TTY, and LSP ]output formats.</p>\n<p>Refactor Tokenize into a separate folder structure (probably didn't need to do this, but I had to refactor parser some for error handling and got carried away).</p>\n<p>Refactor Problem/Diagnostic and error handling throughout the compiler. Taking inspiration from Rust I could see we needed richer data, so I refactored the Can Diagnostics to include payloads like idents and string literals. This gives much nicer reporting, here's an example:</p>\n<div class=\"codehilite\"><pre><span></span><code>~~~PROBLEMS\n UNDEFINED VARIABLE\n\n Nothing is named `x` in this scope.\n\n module [add2]\n\n add2 = x +      2\n Is there an import or exposing missing up-top?\n</code></pre></div>\n<p>To do that I pulled the errors out of the ModuleEnv, as this module doesn't have the context to generate good reports, and gave that responsibility to the AST/IR.</p>\n<p>Anyway, checkout the snapshots to get a feel for the new reporting. It's loads quicker to checkout the files in the branch directly <a href=\"https://github.com/roc-lang/roc/tree/534fa115a469602ad0729116223dc3a48d0e1d50/src/snapshots\">link to snapshots/ dir in the PR commit</a></p>",
        "id": 524096612,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1749950023
    },
    {
        "content": "<p>you are doing great work Luke. i should be back to help this week</p>",
        "id": 524097702,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1749951723
    },
    {
        "content": "<p>you're doing 90% of what i had planned to do</p>",
        "id": 524097713,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1749951737
    },
    {
        "content": "<p>and more</p>",
        "id": 524097719,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1749951743
    },
    {
        "content": "<p>Thank you. I'm definitely thinking to myself \"what would Anthony do here\" on occasions. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>\n<p>I'd love to get enough together for a primitive <code>roc check</code> to work with the new syntax. That feels so close now.</p>",
        "id": 524097750,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1749951814
    },
    {
        "content": "<blockquote>\n<p>I think I may have broken GH web interface with this PR. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n</blockquote>\n<p>Achievement unlocked <span aria-label=\"star\" class=\"emoji emoji-2b50\" role=\"img\" title=\"star\">:star:</span> :p</p>",
        "id": 524209169,
        "sender_full_name": "Anton",
        "timestamp": 1750064304
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7834\">#7834</a> - implementation of <code>roc check</code> using a simplified coordinate that just does a single module. </p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">module</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">add</span><span class=\"p\">]</span>\n\n<span class=\"nv\">add</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">U8</span>\n<span class=\"nv\">add</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"nx\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">y</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"nx\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">y</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/22008/iUcO45EvQuoxe2geX04YC7xc/Screenshot-2025-06-17-at-16.14.18.png\">Screenshot 2025-06-17 at 16.14.18.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/iUcO45EvQuoxe2geX04YC7xc/Screenshot-2025-06-17-at-16.14.18.png\" title=\"Screenshot 2025-06-17 at 16.14.18.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1566x1080\" src=\"/user_uploads/thumbnail/22008/iUcO45EvQuoxe2geX04YC7xc/Screenshot-2025-06-17-at-16.14.18.png/840x560.webp\"></a></div>",
        "id": 524370545,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750135260
    },
    {
        "content": "<p><del>Needs some polish but wanted to share because I'm pretty stoked to see it in action <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></del></p>\n<p>Ready for Review <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 524370691,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750135397
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/524370545\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7834\">#7834</a> - implementation of <code>roc check</code> using a simplified coordinate that just does a single module. </p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">module</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">add</span><span class=\"p\">]</span>\n\n<span class=\"nv\">add</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">U8</span>\n<span class=\"nv\">add</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"nx\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">y</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"nx\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">y</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/22008/iUcO45EvQuoxe2geX04YC7xc/Screenshot-2025-06-17-at-16.14.18.png\">Screenshot 2025-06-17 at 16.14.18.png</a></p>\n</blockquote>\n<p>Taking a look</p>",
        "id": 524421838,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1750156959
    },
    {
        "content": "<p>Approved!</p>",
        "id": 524425461,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1750158263
    },
    {
        "content": "<p>I went ahead and merged it so I can build on top of it (probably tomorrow morning)</p>",
        "id": 524425950,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1750158410
    },
    {
        "content": "<p>Awesome!!</p>",
        "id": 524497017,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1750180500
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7837\">#7837</a>: Add type variable assignment to implemented can exprs</p>\n<p>Up next: patterns!</p>",
        "id": 524607819,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1750201023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"341568\">@Jared Ramirez</span> I left some comments, but nothing major so I merged it.</p>",
        "id": 524608888,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750201768
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7839\">#7939</a> - removes <code>source</code> from ModuleEnv</p>",
        "id": 524687480,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750247105
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7840\">#7840</a>: Add type variable assignment to implemented can patterns</p>\n<p>With this and the PR yesterday, the basic idea for how we assign type variables based off CIR nodes should be established, and hopefully it shouldn't be too hard to create the type variables we need as the rest of Can gets implemented!</p>",
        "id": 524762981,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1750271600
    },
    {
        "content": "<p><del><a href=\"https://github.com/roc-lang/roc/pull/7841\">#7841</a> - Implement block parsing and stmts in a lambda, add malformed Pattern</del></p>\n<p>I'm a goose. I have been making snapshots with old roc syntax and getting myself very confused. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 524799407,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750291829
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7843\">7843</a>: Add all builtin modules to Canonicalizer init</p>",
        "id": 524859437,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1750330181
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7846\">#7846</a> implement Can for tuple expressions</p>",
        "id": 524998882,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750408217
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7848\">#7848</a>: Basic type solving for list exprs</p>",
        "id": 525077002,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1750439379
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7849\">#7849</a>  - I've marked this Ready for Review... it's a mammoth yak shaving expedition. I was trying to focus on type declarations... turns out you need a lot of things working before you can see those in action. </p>\n<ul>\n<li>implement type declaration, type alias, and type annotation canonicalization</li>\n<li>add new error reports e.g. <code>type_redeclared</code>, <code>undeclared_type</code>, <code>undeclared_type_var</code>, <code>unused_variable</code> etc</li>\n<li>hardcode some more builtin Types like Bool, U8, U64 etc</li>\n<li>introduce a dot-access variant to defer analysis on <code>list.map(fn)</code> until we have types to understand if this is record field access or static dispatch</li>\n<li>implement canonicalization for <code>...</code> expressions and <code>crash</code> statements</li>\n<li>improvements for s-expressions, including more implementation</li>\n<li>introduces PackedDataSpan for comptime variable width <code>packed struct(u32)</code></li>\n<li>implement <code>is_ignored</code>, <code>is_effectful</code> attributes on Idents, i.e. <code>_ignored</code> <code>print!</code></li>\n<li>tracking used/unused patterns and provide useful warning reports</li>\n<li>bugfix in Parser for <code>.NamedUnderscore</code> -- required for <code>_unused_vars</code></li>\n<li>adds a LOT of new snapshot tests for validating different combinations of types</li>\n</ul>",
        "id": 525208149,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750591652
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7854\">#7854</a>: Basic type error messages (rough 1st pass, will be improved in future PRs)</p>",
        "id": 525235024,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1750628647
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7855\">#7855</a> Using .md files for snapshots. Codefences add syntax highlighting .</p>",
        "id": 525239473,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1750635321
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7858\">#7858</a> error report for <code>expected_colon_after_type_annotation</code></p>\n<div class=\"codehilite\"><pre><span></span><code>module [nums]\n\nnums : List U8\n# this is incorrect syntax, it should be List(U8)\n# give a nice error message\n</code></pre></div>",
        "id": 525259099,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750658190
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7859\">#7859</a> single module <code>import</code> <code>exposes</code> <code>as</code></p>",
        "id": 525310400,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750678288
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7860/files\">https://github.com/roc-lang/roc/pull/7860/files</a></p>\n<p>Document now expects 0 based indexes, so here's a cleanup for Diagnostics. fixes reports rendering</p>",
        "id": 525320848,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1750681873
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7852\">7852</a>: Add Bool and Result builtins to zig compiler in v0.1 syntax</p>",
        "id": 525328587,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1750684282
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7861\">7861</a>: Add simple sqrt to Dec</p>",
        "id": 525403950,
        "sender_full_name": "Alexander Ikonomou",
        "timestamp": 1750710879
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/525310400\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7859\">#7859</a> single module <code>import</code> <code>exposes</code> <code>as</code></p>\n</blockquote>\n<p>Addressed all review feedback. <span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span></p>",
        "id": 525422077,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750722572
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7862\">#7862</a> - upgrade <code>SafeList</code> &amp; <code>SafeMultiList</code> with <code>serializeInto</code> and <code>deserializeFrom</code> helpers. </p>\n<p>Next step I think is to start testing simple caching using our CIR.NodeStore.</p>",
        "id": 525426324,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750726360
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> <a href=\"https://github.com/roc-lang/roc/pull/7863\">#7863</a> initial round-trip cache for <code>CIR.NodeStore</code></p>",
        "id": 525440800,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750740086
    },
    {
        "content": "<p>It feels weird being on the sidelines just watching as all this progress flies by. Currently don't have the energy for hobby programming, but always glad to follow the community and chat.</p>",
        "id": 525441857,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1750741081
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/525426324\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7862\">#7862</a> - upgrade <code>SafeList</code> &amp; <code>SafeMultiList</code> with <code>serializeInto</code> and <code>deserializeFrom</code> helpers. </p>\n<p>Next step I think is to start testing simple caching using our CIR.NodeStore.</p>\n</blockquote>\n<p>Approved, but there is one comment that I think you _may_ want to address now or in a fast follow (just a perf thing)</p>",
        "id": 525484811,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1750760132
    },
    {
        "content": "<p>Thanks, probably a follow up -- I'll leave myself a note</p>",
        "id": 525485454,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750760399
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7866\">#7866</a> - side quest refactoring our SExpr API and converting to <code>kebab-case</code> for nodes. Also includes various cleanup in the <code>toSExpr</code> functions.</p>",
        "id": 525499580,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750765669
    },
    {
        "content": "<p>There was a few places in CIR where I added Ids for modes that probably dont need them. Harmless extra information, I can remove later.</p>",
        "id": 525502400,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750766680
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7868\">#7868</a> - improve Can for Tag Unions <span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span></p>",
        "id": 525612301,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750809276
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"kt\">MyResult</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">Good</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"kt\">Bad</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)]</span>\n<span class=\"kt\">Option</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">Some</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"kt\">None</span><span class=\"p\">]</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Clojure\"><pre><span></span><code><span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">s-type-decl</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-1-7-8</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">id</span><span class=\"w\"> </span><span class=\"mi\">80</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">ty-header</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-1-4-18</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"MyResult\"</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">ty-args</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-10-4-12</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"ok\"</span><span class=\"p\">))</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-14-4-17</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"err\"</span><span class=\"p\">))))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">ty-tag-union</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-21-4-41</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">ty-apply</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-22-4-30</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">symbol </span><span class=\"s\">\"Good\"</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-27-4-29</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"ok\"</span><span class=\"p\">)))</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">ty-apply</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-32-4-40</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">symbol </span><span class=\"s\">\"Bad\"</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-36-4-39</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"err\"</span><span class=\"p\">)))))</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">s-type-decl</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">11-1-14-10</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">id</span><span class=\"w\"> </span><span class=\"mi\">87</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">ty-header</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">11-1-11-10</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"Option\"</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">ty-args</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">11-8-11-9</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"a\"</span><span class=\"p\">))))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">ty-tag-union</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">11-13-11-28</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">ty-apply</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">11-14-11-21</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">symbol </span><span class=\"s\">\"Some\"</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">11-19-11-20</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"a\"</span><span class=\"p\">)))</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">ty</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">11-23-11-27</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"None\"</span><span class=\"p\">)))))</span>\n</code></pre></div>",
        "id": 525612391,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750809375
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7869\">#7869</a> - implement can for <code>if-then-else</code></p>",
        "id": 525695819,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750852388
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>checkNumber = |num| {\n    if num &lt; 0 {\n        &quot;negative&quot;\n    } else if num == 0 {\n        &quot;zero&quot;\n    } else if num &gt; 100 {\n        &quot;large&quot;\n    } else {\n        &quot;positive&quot;\n    }\n}\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Clojure\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nf\">can-ir</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">d-let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">id</span><span class=\"w\"> </span><span class=\"mi\">109</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">p-assign</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">3-1-3-12</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">ident</span><span class=\"w\"> </span><span class=\"s\">\"checkNumber\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">id</span><span class=\"w\"> </span><span class=\"mi\">72</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">e-lambda</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">3-15-13-2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">id</span><span class=\"w\"> </span><span class=\"mi\">108</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">args</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">p-assign</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">3-16-3-19</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">ident</span><span class=\"w\"> </span><span class=\"s\">\"num\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">id</span><span class=\"w\"> </span><span class=\"mi\">73</span><span class=\"p\">)))</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">e-block</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">3-21-13-2</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">e-if</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-2-13-2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">cond-var</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">branch-var</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">if-branches</span>\n<span class=\"w\">                        </span><span class=\"p\">(</span><span class=\"nf\">if-branch</span>\n<span class=\"w\">                            </span><span class=\"p\">(</span><span class=\"nf\">e-binop</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-5-4-14</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">op</span><span class=\"w\"> </span><span class=\"s\">\"lt\"</span><span class=\"p\">)</span>\n<span class=\"w\">                                </span><span class=\"p\">(</span><span class=\"nf\">e-lookup-local</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-5-4-8</span>\n<span class=\"w\">                                    </span><span class=\"p\">(</span><span class=\"nf\">pattern</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">id</span><span class=\"w\"> </span><span class=\"mi\">73</span><span class=\"p\">)))</span>\n<span class=\"w\">                                </span><span class=\"p\">(</span><span class=\"nf\">e-int</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-11-4-12</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">int-var</span><span class=\"w\"> </span><span class=\"mi\">76</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">precision-var</span><span class=\"w\"> </span><span class=\"mi\">75</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">literal</span><span class=\"w\"> </span><span class=\"s\">\"0\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">value</span><span class=\"w\"> </span><span class=\"s\">\"TODO\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">bound</span><span class=\"w\"> </span><span class=\"s\">\"u8\"</span><span class=\"p\">)))</span>\n<span class=\"w\">                            </span><span class=\"p\">(</span><span class=\"nf\">e-block</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-13-6-3</span>\n<span class=\"w\">                                </span><span class=\"p\">(</span><span class=\"nf\">e-string</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">5-3-5-13</span>\n<span class=\"w\">                                    </span><span class=\"p\">(</span><span class=\"nf\">e-literal</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">5-4-5-12</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">string</span><span class=\"w\"> </span><span class=\"s\">\"negative\"</span><span class=\"p\">)))))</span>\n<span class=\"w\">                        </span><span class=\"p\">(</span><span class=\"nf\">if-branch</span>\n<span class=\"w\">                            </span><span class=\"p\">(</span><span class=\"nf\">e-binop</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">6-12-6-22</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">op</span><span class=\"w\"> </span><span class=\"s\">\"eq\"</span><span class=\"p\">)</span>\n<span class=\"w\">                                </span><span class=\"p\">(</span><span class=\"nf\">e-lookup-local</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">6-12-6-15</span>\n<span class=\"w\">                                    </span><span class=\"p\">(</span><span class=\"nf\">pattern</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">id</span><span class=\"w\"> </span><span class=\"mi\">73</span><span class=\"p\">)))</span>\n<span class=\"w\">                                </span><span class=\"p\">(</span><span class=\"nf\">e-int</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">6-19-6-20</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">int-var</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">precision-var</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">literal</span><span class=\"w\"> </span><span class=\"s\">\"0\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">value</span><span class=\"w\"> </span><span class=\"s\">\"TODO\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">bound</span><span class=\"w\"> </span><span class=\"s\">\"u8\"</span><span class=\"p\">)))</span>\n<span class=\"w\">                            </span><span class=\"p\">(</span><span class=\"nf\">e-block</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">6-21-8-3</span>\n<span class=\"w\">                                </span><span class=\"p\">(</span><span class=\"nf\">e-string</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">7-3-7-9</span>\n<span class=\"w\">                                    </span><span class=\"p\">(</span><span class=\"nf\">e-literal</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">7-4-7-8</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">string</span><span class=\"w\"> </span><span class=\"s\">\"zero\"</span><span class=\"p\">)))))</span>\n<span class=\"w\">                        </span><span class=\"p\">(</span><span class=\"nf\">if-branch</span>\n<span class=\"w\">                            </span><span class=\"p\">(</span><span class=\"nf\">e-binop</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">8-12-8-23</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">op</span><span class=\"w\"> </span><span class=\"s\">\"gt\"</span><span class=\"p\">)</span>\n<span class=\"w\">                                </span><span class=\"p\">(</span><span class=\"nf\">e-lookup-local</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">8-12-8-15</span>\n<span class=\"w\">                                    </span><span class=\"p\">(</span><span class=\"nf\">pattern</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">id</span><span class=\"w\"> </span><span class=\"mi\">73</span><span class=\"p\">)))</span>\n<span class=\"w\">                                </span><span class=\"p\">(</span><span class=\"nf\">e-int</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">8-18-8-21</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">int-var</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">precision-var</span><span class=\"w\"> </span><span class=\"mi\">93</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">literal</span><span class=\"w\"> </span><span class=\"s\">\"100\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">value</span><span class=\"w\"> </span><span class=\"s\">\"TODO\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">bound</span><span class=\"w\"> </span><span class=\"s\">\"u8\"</span><span class=\"p\">)))</span>\n<span class=\"w\">                            </span><span class=\"p\">(</span><span class=\"nf\">e-block</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">8-22-10-3</span>\n<span class=\"w\">                                </span><span class=\"p\">(</span><span class=\"nf\">e-string</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">9-3-9-10</span>\n<span class=\"w\">                                    </span><span class=\"p\">(</span><span class=\"nf\">e-literal</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">9-4-9-9</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">string</span><span class=\"w\"> </span><span class=\"s\">\"large\"</span><span class=\"p\">))))))</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">if-else</span>\n<span class=\"w\">                        </span><span class=\"p\">(</span><span class=\"nf\">e-block</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">10-9-12-3</span>\n<span class=\"w\">                            </span><span class=\"p\">(</span><span class=\"nf\">e-string</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">11-3-11-13</span>\n<span class=\"w\">                                </span><span class=\"p\">(</span><span class=\"nf\">e-literal</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">11-4-11-12</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">string</span><span class=\"w\"> </span><span class=\"s\">\"positive\"</span><span class=\"p\">))))))))))</span>\n</code></pre></div>",
        "id": 525695987,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750852446
    },
    {
        "content": "<p>We could probably look at flattening out the <code>e-block</code>'s if they only contain a single expression.</p>",
        "id": 525696129,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750852507
    },
    {
        "content": "<p>yeah I think it's probably harmless to do that when going from parsed to canonical</p>",
        "id": 525712702,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1750857959
    },
    {
        "content": "<p>I can't think of any downsides</p>",
        "id": 525712765,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1750857980
    },
    {
        "content": "<p>Yeah, at that point there is not really any errors that can be reported about the block itself</p>",
        "id": 525715883,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1750858917
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/\">#7872</a>: Don't store region in type problem struct, instead lookup from CIR</p>",
        "id": 525792175,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1750886326
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7873\">#7873</a> partially implements canonicalisation and type checking for Records</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>{\n    person: { name: \"Alice\", age: 30 },\n    address: {\n        street: \"123 Main St\",\n        city: \"Springfield\",\n        coordinates: { lat: 42.1234, lng: -71.5678 },\n    },\n    contact: {\n        email: \"alice@example.com\",\n        phone: { home: \"555-1234\", work: \"555-5678\" },\n    },\n}\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Clojure\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nf\">expr</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">id</span><span class=\"w\"> </span><span class=\"mi\">129</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">type</span><span class=\"w\"> </span><span class=\"s\">\"{ person: { name: Str, age: Num(Int(*)) }, address: { street: Str, city: Str, coordinates: { lat: Num(Fraction(*)), lng: Num(Fraction(*)) } }, contact: { email: Str, phone: { home: Str, work: Str } } }\"</span><span class=\"p\">))</span>\n</code></pre></div>",
        "id": 525839414,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750922938
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7876\">7876</a>: Parse record shorthand and <code>as</code> patterns</p>",
        "id": 525893488,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1750941083
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7877\">#7877</a>: Tuple expr type solving</p>",
        "id": 525950272,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1750958447
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7878\">7878</a>: Enforce number literal sizes</p>",
        "id": 525987165,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1750976139
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7879\">#7879</a> - implement record de-strcutures</p>",
        "id": 526001760,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750989415
    },
    {
        "content": "<p><del><a href=\"https://github.com/roc-lang/roc/pull/7880\">#7880</a> - refactor parser Node.Data to use a union. For now we just make an \"untyped\" variant.. and in future PR's we can gradually move across common shapes.</del></p>",
        "id": 526007851,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750995466
    },
    {
        "content": "<p>Branch <code>record-type-checking</code> is ready for PR ... I can't seem to get the GH web interface to play ball right now. </p>\n<p>It includes</p>\n<ul>\n<li>a workaround (probably temporary) for the parsing of record patterns by looking ahead in our ambiguous case</li>\n<li>implements lambda type canonicalization</li>\n<li>fixes an annoying bug with snapshots (which originates in SafeMultiList)</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">getName</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">age</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U64</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Str</span>\n<span class=\"nv\">getName</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"nx\">person</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"nx\">person</span><span class=\"p\">.</span><span class=\"nx\">name</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Clojure\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nf\">inferred-types</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">defs</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"k\">def </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"getName\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">type</span><span class=\"w\"> </span><span class=\"s\">\"{ name: Str, age: U64 } -&gt; Str\"</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"k\">def </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"main!\"</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">unknown</span><span class=\"p\">)))</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">expressions</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">expr</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">4-11-6-6</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">type</span><span class=\"w\"> </span><span class=\"s\">\"{ name: Str, age: U64 } -&gt; Str\"</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">expr</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">6-9-6-15</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">type</span><span class=\"w\"> </span><span class=\"s\">\"*\"</span><span class=\"p\">))))</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">printName</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">age</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U64</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"nf\">=&gt;</span><span class=\"w\"> </span><span class=\"nx\">Str</span>\n<span class=\"nv\">printName</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"nx\">person</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"nx\">person</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nx\">person</span><span class=\"p\">.</span><span class=\"nx\">name</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Clojure\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nf\">inferred-types</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">defs</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"k\">def </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"printName\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">type</span><span class=\"w\"> </span><span class=\"s\">\"{ name: Str, age: U64 } =&gt; Str\"</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"k\">def </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"main!\"</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">unknown</span><span class=\"p\">)))</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">expressions</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">expr</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">6-13-9-2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">type</span><span class=\"w\"> </span><span class=\"s\">\"{ name: Str, age: U64 } =&gt; Str\"</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">expr</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mi\">10-9-10-15</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">type</span><span class=\"w\"> </span><span class=\"s\">\"*\"</span><span class=\"p\">))))</span>\n</code></pre></div>",
        "id": 526032717,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751011682
    },
    {
        "content": "<p>I can try making a PR again later... <span aria-label=\"tear\" class=\"emoji emoji-1f972\" role=\"img\" title=\"tear\">:tear:</span></p>",
        "id": 526032892,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751011756
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7881\">https://github.com/roc-lang/roc/pull/7881</a></p>",
        "id": 526034755,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751012509
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7891\">#7891</a> -- some more fuzzer fixes</p>\n<ol>\n<li>handle malformed decs</li>\n<li>handle malformed type annotations</li>\n</ol>",
        "id": 526186569,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751096764
    },
    {
        "content": "<p>Tiny pr: add isInterned method to token tags.<br>\n<a href=\"https://github.com/roc-lang/roc/issues/7892\">#7892</a> Windows arm 11 tests fail with internal CLR error, but otherwise good.</p>",
        "id": 526202164,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1751115122
    },
    {
        "content": "<p>Windows arm 11 tests are good now</p>",
        "id": 526206384,
        "sender_full_name": "Anton",
        "timestamp": 1751119973
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7895\">#7895</a>: Add type checking for if-then-else statements</p>\n<div class=\"codehilite\"><pre><span></span><code>module [foo]\n\nfoo = if 1 {\n  A\n} else {\n  &quot;hello&quot;\n}\n</code></pre></div>\n<p>Results in</p>\n<div class=\"codehilite\" data-code-language=\"Markdown\"><pre><span></span><code><span class=\"gs\">**TYPE MISMATCH**</span>\nThis expression is used in an unexpected way:\n<span class=\"gs\">**if_then_else.md:3:10:3:11:**</span>\n```roc\nfoo = if 1 A\n\nIt is of type:\n    <span class=\"ge\">_Num(*)_</span>\n\nBut you are trying to use it as:\n    <span class=\"ge\">_[True, False]_</span>\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"Markdown\"><pre><span></span><code><span class=\"gs\">**TYPE MISMATCH**</span>\nThis expression is used in an unexpected way:\n<span class=\"gs\">**if_then_else.md:5:10:7:6:**</span>\n    else {\n    \"hello\"\n    }\n\nIt is of type:\n    <span class=\"ge\">_Str_</span>\n\nBut you are trying to use it as:\n    <span class=\"ge\">_[A]*_</span>\n</code></pre></div>",
        "id": 526214819,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751128997
    },
    {
        "content": "<p>Definitely not a blocker, because this is great, but it would be awesome if in the second one it was something like:</p>\n<div class=\"codehilite\" data-code-language=\"Markdown\"><pre><span></span><code><span class=\"gs\">**TYPE MISMATCH IN IF-THEN-ELSE**</span>\nThis expression is used in an unexpected way:\n<span class=\"gs\">**if_then_else.md:5:10:7:6:**</span>\n    else {\n    \"hello\"\n    }\n\nThis branch is of type:\n    <span class=\"ge\">_Str_</span>\n\nBut the previous branch is of type:\n    <span class=\"ge\">_[A, ..]_</span>\n\nIn Roc, the type of each branch of an if-then-else expression must be the same.\n</code></pre></div>",
        "id": 526217896,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751131974
    },
    {
        "content": "<p>Maybe followed by an example</p>",
        "id": 526217909,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751131985
    },
    {
        "content": "<p>(Unless it's in the LSP)</p>",
        "id": 526217916,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751131994
    },
    {
        "content": "<p>Yeah definitely! I think we’ll need to do a whole pass at improving type error messages. The current ones are very bare bones</p>",
        "id": 526218436,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751132487
    },
    {
        "content": "<p>yeah I'm working on improving the list ones right now</p>",
        "id": 526218737,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751132755
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7896/files\">sexpr: use dots for region formatting</a></p>",
        "id": 526262696,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1751195404
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7894\">Remove predictNodeIndex for lists</a> (and give nicer errors for heterogeneous lists)</p>",
        "id": 526271231,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751205161
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7898\">tokenize.zig minimal cleanup</a></p>\n<p>I'm not confident in the zig compiler yet so I started reading code from the beginning. Performed a minimal cleanup along the way. And have some questions:</p>\n<ol>\n<li>Does it make sense to use region struct instead of <code>offset + length</code> and <code>begin + end</code> (we have both patterns in different places)? Also, <code>Region</code> would have a debug check for the <code>start &lt;= end</code></li>\n<li><a href=\"https://github.com/roc-lang/roc/blob/259b290c2a39e45f683d329d16ba2963cec13c68/src/check/parse/tokenize.zig#L980-L1006\">What is <code>SingleQuote</code></a>? I guess it was prepared for multiline but now we have different syntax (<code>\"\"\"</code>)?</li>\n<li><a href=\"https://github.com/roc-lang/roc/blob/259b290c2a39e45f683d329d16ba2963cec13c68/src/check/parse/tokenize.zig#L444-L445\">Why newline has 0-0 region</a>? Newline's <a href=\"https://github.com/roc-lang/roc/blob/259b290c2a39e45f683d329d16ba2963cec13c68/src/check/parse/tokenize.zig#L456\">offset is used for the indent</a>. Why not to use a dedicated field for it? Zeroed region seems to be misleading if it ends up in a warning message</li>\n</ol>",
        "id": 526277290,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1751211375
    },
    {
        "content": "<p>I agree that <a href=\"https://github.com/roc-lang/roc/issues/1\">#1</a> is strange and we should probably align them.  base.Region is used more and probably should be used.  I agree with <a href=\"https://github.com/roc-lang/roc/issues/2\">#2</a>, I don't think we need that token at all.</p>\n<p><a href=\"https://github.com/roc-lang/roc/issues/3\">#3</a> I'd be careful with and ask <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> why he made that choice.  He's very smart and experienced at this, so I'd assume he made this choice for a good reason (probably saving space)</p>",
        "id": 526277606,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751211697
    },
    {
        "content": "<p>That's why I'm asking here and haven't introduced any changes yet <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 526277675,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1751211760
    },
    {
        "content": "<p>single quotes are number literals for Unicode scalars - e.g. if you put <code>'é'</code> into roc repl, it evaluates to the Unicode code point for <code>é</code></p>",
        "id": 526278111,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751212248
    },
    {
        "content": "<p>oh right</p>",
        "id": 526278208,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751212347
    },
    {
        "content": "<p>totally spaced that</p>",
        "id": 526278214,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751212358
    },
    {
        "content": "<p>i need to add that to the parser</p>",
        "id": 526278230,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751212378
    },
    {
        "content": "<p>ah, ok. then need to fix tokenizer for it as well. it seems to lack a return statement. going to add to the pr</p>",
        "id": 526278319,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1751212472
    },
    {
        "content": "<p>nevermind. I think now I get why there was unused struct <code>Unicode</code><span aria-label=\"smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"smile\">:smile:</span> <br>\n I'll coordinate with <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> on how it was supposed to work</p>",
        "id": 526278531,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1751212718
    },
    {
        "content": "<p>yeah we probably want to do them similarly to double quotes because you can have escapes in there for <code>'\\''</code> and <code>'\\\\'</code></p>",
        "id": 526279258,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751213418
    },
    {
        "content": "<p>and <code>'#'</code> isn't a comment etc</p>",
        "id": 526279291,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751213454
    },
    {
        "content": "<p>Micro PR: <a href=\"https://github.com/roc-lang/roc/issues/7899\">#7899</a> print input for fuzz-canonicalize</p>",
        "id": 526284071,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751219014
    },
    {
        "content": "<p>micro PR: <a href=\"https://github.com/roc-lang/roc/issues/7900\">#7900</a> consider OOMs fuzz failures for canonicalize</p>",
        "id": 526284679,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751219668
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7906\">#7906</a> - adds a snapshot summary (README.md) </p>\n<p>It currently only contains the total number of snapshots... but we have plans to make this much more helpful.</p>",
        "id": 526310713,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751250504
    },
    {
        "content": "<p>I managed to get a performance metric into our snapshots... it's a simple upper bound on time taken to process the snapshot (compiler parts) currently set at &lt;10ms.</p>\n<table>\n<thead>\n<tr>\n<th>File</th>\n<th>&lt;10ms</th>\n<th>Tokenize Problems</th>\n<th>Parser Problems</th>\n<th>Canonicalize Problems</th>\n<th>Type Check Problems</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>001.md</code></td>\n<td><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span></td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>002.md</code></td>\n<td><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span></td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>add_var_with_spaces.md</code></td>\n<td><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span></td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>all_frac_types.md</code></td>\n<td><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span></td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>all_int_types.md</code></td>\n<td><span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span></td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>",
        "id": 526318183,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751257978
    },
    {
        "content": "<p>Significantly we can say that all the CI machines process that snapshot within 10ms.</p>",
        "id": 526318238,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751258028
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7909\">#7909</a> - improves the parsing of <code>Ident</code>. Another fuzz fix <span aria-label=\"playful\" class=\"emoji emoji-1f9a6\" role=\"img\" title=\"playful\">:playful:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Zig\"><pre><span></span><code><span class=\"w\">    </span><span class=\"c1\">// Validate the bytes</span>\n<span class=\"w\">     </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bytes</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">         </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">EmptyText</span><span class=\"p\">;</span>\n<span class=\"w\">     </span><span class=\"p\">}</span>\n\n<span class=\"w\">     </span><span class=\"c1\">// Check for null bytes (causes crashes in string interner)</span>\n<span class=\"w\">     </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"p\">.</span><span class=\"n\">mem</span><span class=\"p\">.</span><span class=\"n\">indexOfScalar</span><span class=\"p\">(</span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"kc\">null</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">         </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">ContainsNullByte</span><span class=\"p\">;</span>\n<span class=\"w\">     </span><span class=\"p\">}</span>\n\n<span class=\"w\">     </span><span class=\"c1\">// Check for other problematic control characters including space, tab, newline, and carriage return</span>\n<span class=\"w\">     </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bytes</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">byte</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">         </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"k\">or</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">' '</span><span class=\"w\"> </span><span class=\"k\">or</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"se\">'\\t'</span><span class=\"w\"> </span><span class=\"k\">or</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"se\">'\\n'</span><span class=\"w\"> </span><span class=\"k\">or</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"se\">'\\r'</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">             </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">.</span><span class=\"n\">ContainsControlCharacters</span><span class=\"p\">;</span>\n<span class=\"w\">         </span><span class=\"p\">}</span>\n<span class=\"w\">     </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 526325512,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751263814
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7908\">#7908</a> Another fuzz fix <span aria-label=\"playful\" class=\"emoji emoji-1f9a6\" role=\"img\" title=\"playful\">:playful:</span> </p>\n<ul>\n<li>fix memory leak in calcLineStarts, </li>\n<li>handle malformed nodes in getAnnoRecordField</li>\n<li>fix clearScratchExposedItemsFrom argument</li>\n</ul>\n<p><span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span> -- these commits touch the parser in a small way.</p>",
        "id": 526325676,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751263903
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7907\">#7907</a>: Improve if-else error messages &amp; fix typechecking bugs</p>",
        "id": 526493649,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751321463
    },
    {
        "content": "<p>if-else errors now look like:</p>\n<div class=\"codehilite\" data-code-language=\"Markdown\"><pre><span></span><code><span class=\"gs\">**INVALID IF CONDITION**</span>\nThis <span class=\"sb\">`if`</span> condition needs to be a <span class=\"ge\">_Bool_</span>:\n<span class=\"gs\">**if_then_else.md:3:10:**</span>\n\nfoo = if 1 A\n\n         ^\n\nRight now, it has the type:\n    <span class=\"ge\">_Num(*)_</span>\n\nEvery <span class=\"sb\">`if`</span> condition must evaluate to a <span class=\"ge\">_Bool_</span>–either <span class=\"sb\">`True`</span> or <span class=\"sb\">`False`</span>.\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Markdown\"><pre><span></span><code><span class=\"gs\">**INVALID IF CONDITION**</span>\nThis <span class=\"sb\">`if`</span> condition needs to be a <span class=\"ge\">_Bool_</span>:\n<span class=\"gs\">**if_then_else_9.md:3:11:**</span>\n\n} else if 10 { # Comment after else open\n\n          ^^\n\nRight now, it has the type:\n    <span class=\"ge\">_Num(*)_</span>\n\nEvery <span class=\"sb\">`if`</span> condition must evaluate to a <span class=\"ge\">_Bool_</span>–either <span class=\"sb\">`True`</span> or <span class=\"sb\">`False`</span>.\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Markdown\"><pre><span></span><code><span class=\"gs\">**INCOMPATIBLE IF BRANCHES**</span>\nThis <span class=\"sb\">`if`</span> has an <span class=\"sb\">`else`</span> branch with a different type from it's <span class=\"sb\">`then`</span> branch:\n<span class=\"gs\">**if_then_else.md:3:7:**</span>\nfoo = if 1 A\n\n    else {\n    \"hello\"\n    }\n    ^^^^^^^\n\nThe <span class=\"sb\">`else`</span> branch has the type:\n    <span class=\"ge\">_Str_</span>\n\nBut the <span class=\"sb\">`then`</span> branch has the type:\n    <span class=\"ge\">_[A]*_</span>\n\nAll branches in an <span class=\"sb\">`if`</span> must have compatible types.\n\nNote: You can wrap branches in a tag to make them compatible.\nTo learn about tags, see &lt;https://www.roc-lang.org/tutorial#tags&gt;\n</code></pre></div>",
        "id": 526493744,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751321510
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7911\">#7911</a> - rename <code>when</code> -&gt; <code>match</code> and adds a some new <code>match</code> snapshot tests.</p>\n<p>I'd like to merge this before I start implementing Can for match, as this will keep those PR's cleaner</p>\n<p><span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span> FYI -- this does touch some helpers in the Parser</p>",
        "id": 526504501,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751328981
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/526310713\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/pull/7906\">#7906</a> - adds a snapshot summary (README.md) </p>\n<p>It currently only contains the total number of snapshots... but we have plans to make this much more helpful.</p>\n</blockquote>\n<p>I've updated this PR (rebased) and now it is much smaller. </p>\n<p>I would like feedback on this before merging. My future plans are to include memory related information in here also. I haven't yet found a great way to do that using the allocators. I'm starting to think along the lines of using the size of the serialised module to cache instead. We only have the CIR.NodeStore currently round tripping to cache in a unit test, but the plan is to expand that to include all of the required information to re-hydate the module, such as interned strings etc.</p>",
        "id": 526506928,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751330940
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7916\">#7916</a></p>\n<ul>\n<li>implements Can for <code>match</code> expressions</li>\n<li>implements list patterns</li>\n<li>implements the spread <code>..</code> and <code>.. as other</code> for rest in list patterns</li>\n<li>add a diagnostic for using the old <code>..rest</code> syntax in a list</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Markdown\"><pre><span></span><code><span class=\"gs\">**BAD LIST REST PATTERN SYNTAX**</span>\nList rest patterns should use the <span class=\"sb\">`.. as name`</span> syntax, not <span class=\"sb\">`..name`</span>.\nFor example, use <span class=\"sb\">`[first, .. as rest]`</span> instead of <span class=\"sb\">`[first, ..rest]`</span>.\n\nHere is the problematic code:\n<span class=\"gs\">**list_rest_invalid.md:2:13:2:19:**</span>\n~~~roc\n    [first, ..rest] =&gt; 0 # invalid rest pattern should error\n~~~\n            ^^^^^^\n</code></pre></div>",
        "id": 526534710,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751352135
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7917\">#7917</a> use Region in tokenize.zig <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span>  please</p>",
        "id": 526622210,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1751380275
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7919\">#7919</a> - add support for multi-file snapshots</p>\n<p>Currently supports directories ending in <code>_package</code> <code>_app</code> and <code>_platform</code>, includes an example <code>src/snapshots/plume_package</code> with just two files.</p>",
        "id": 526698869,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751414548
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7922\">#7922</a> - adds snapshot files for various use cases associated with nominal tags.</p>\n<p><span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span> I think we need some parser changes for these, it might be best to wait until your completed with the Parser refactor before implementing these. WDYT?</p>",
        "id": 526716892,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751429947
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7920\">#7920</a>: Type checking for <code>match</code></p>",
        "id": 526718328,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751431061
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7924\">#7924</a>: Improve type problem API</p>",
        "id": 526868132,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751484872
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7927\">#7927</a>: Add back type checking for <code>match</code> (accidentally got deleted in  <a href=\"https://github.com/roc-lang/roc/issues/7923\">#7923</a>)</p>",
        "id": 526892228,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751497976
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7929\">#7929</a>: Type Checking Odds &amp; Ends</p>",
        "id": 526918227,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751519135
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7930\">#7930</a>: Type check bool binops &amp; unwrap single elem tuples in Can</p>",
        "id": 527070772,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751575702
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7934\">#7934</a>: add tracing to core roc functions </p>\n<p>Basically add tracy to all the functions that might matter for perf.</p>",
        "id": 527103753,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751602402
    },
    {
        "content": "<p>Switching to byte ranges in the snapshot html generation: <a href=\"https://github.com/roc-lang/roc/pull/7935\">https://github.com/roc-lang/roc/pull/7935</a></p>",
        "id": 527105612,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1751603971
    },
    {
        "content": "<p><del>#7937: Unify source_code_region with SourceCodeDisplayRegion type</del></p>\n<p><del>Just minor cleanup for data that is duplicated in raw fields and encoded cleanly in a type.</del></p>\n<p>Actually scratch this one, I am just gonna merge it into my next PR which should be ready shortly and is related.</p>",
        "id": 527199377,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751642498
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7938\">#7938</a>: Cleanup source code handling for reporting</p>\n<p>Essentially this avoids a crap ton of linear scans of the entire source code of files for reporting. It is absolutely fundamental for the perf of reporting on large files with multiple errors.</p>",
        "id": 527205832,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751645636
    },
    {
        "content": "<p>html snapshot fanciness working for CANONICALIZE and TYPES as well now! <a href=\"https://github.com/roc-lang/roc/pull/7940\">https://github.com/roc-lang/roc/pull/7940</a></p>",
        "id": 527223347,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1751655076
    },
    {
        "content": "<p>Check out a deployed version here: <a href=\"https://joshuawarner32.github.io/roc/snapshots/syntax_grab_bag.html\">https://joshuawarner32.github.io/roc/snapshots/syntax_grab_bag.html</a></p>",
        "id": 527223503,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1751655207
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7943\">#7943</a>: Ensure tests are built with '-Dno-bin' such that they can be checked</p>\n<p>Spinoff minor change from my other build script exploration. This just makes it so that <code>zig build test -Dno-bin</code> works and that <code>zig build</code> builds the tests as well.</p>",
        "id": 527238061,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751670763
    },
    {
        "content": "<p>as an aside, I've noticed that <code>zig test</code> tends not to work; it's always gotta be <code>zig build test</code></p>",
        "id": 527243717,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751677723
    },
    {
        "content": "<p>is that fixable or just something we have to live with?</p>",
        "id": 527243722,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751677731
    },
    {
        "content": "<p><code>zig test</code> does not use the zig build system.</p>",
        "id": 527245189,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751679521
    },
    {
        "content": "<p>It just runs tests discoverable from a specific file</p>",
        "id": 527245203,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751679537
    },
    {
        "content": "<p>I think <code>zig test src/test.zig</code> should theoretically work.</p>",
        "id": 527245224,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751679561
    },
    {
        "content": "<p>But yeah, <code>zig build test</code> is really the right command to my understanding.</p>",
        "id": 527245233,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751679580
    },
    {
        "content": "<p>Especially if we eventually have test that pull in dependencies like llvm and such.</p>",
        "id": 527245264,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751679606
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7944\">#7944</a>: Update to zig 0.14.1 </p>\n<p>This is actually a no-op. Both 0.14.0 and 0.14.1 work on the current compiler with no change to anything. So still leaving 0.14.0 as the labelled minimum zig version.</p>",
        "id": 527258284,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751696669
    },
    {
        "content": "<p>Another small PR.<br>\n<a href=\"https://github.com/roc-lang/roc/issues/7945\">#7945</a>: fix '-fincremental'</p>\n<p>Just removes <code>usingnamespace</code> and for now directly exports what is needed.</p>",
        "id": 527260291,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751699372
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/527258284\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/issues/7944\">#7944</a>: Update to zig 0.14.1 </p>\n<p>This is actually a no-op. Both 0.14.0 and 0.14.1 work on the current compiler with no change to anything. So still leaving 0.14.0 as the labelled minimum zig version.</p>\n</blockquote>\n<p>This removes valgrind for our snapshots... I'm thinking we might want to wait to upgrade for now.</p>",
        "id": 527261088,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751700392
    },
    {
        "content": "<p>It only removes it on arm</p>",
        "id": 527261119,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751700419
    },
    {
        "content": "<p>Still runs on x86</p>",
        "id": 527261132,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751700424
    },
    {
        "content": "<p>Ohk <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 527261149,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751700441
    },
    {
        "content": "<p>But yeah, kinda inconvenient that valgrind doesn't support all arm instructions, so it is kinda up to the luck of compilation as to whether or not it will work. That said, it does get better with each new release.</p>",
        "id": 527261327,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751700675
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7931\">#7931</a> </p>\n<ul>\n<li>canonicalize Nominal Type declarations including support for recursive types</li>\n<li>support types declared externally in another module</li>\n<li>improve support for qualified types and values <code>json.Core.Utf8.Encoder</code>, <code>json.Core.Utf8.decode</code></li>\n<li>parse and canonicalize new record extension syntax e.g.<code>{ ..person, age: 42}</code></li>\n<li>various minor bug fixes</li>\n<li>probably introduces some new bugs and regressions (I'm really sorry I don't think I got them all)</li>\n</ul>",
        "id": 527266345,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751706376
    },
    {
        "content": "<p>I'm probably going to need to spend a day on the fuzzer, and buy <span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span> a beer (or two) to pay for my sins... but I'd like land these changes so we can work on type checking and implementing <code>where</code> clause etc.</p>",
        "id": 527266519,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751706551
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7950\">#7950</a> Nix flake for the zig compiler + some related changes</p>",
        "id": 527295801,
        "sender_full_name": "Anton",
        "timestamp": 1751738434
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7951\">#7951</a>: Standardize function name in <code>canonicalize.zig</code> to all be camel case</p>",
        "id": 527297349,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751740204
    },
    {
        "content": "<p>I wonder if we can lint and fix that across the codebase</p>",
        "id": 527308486,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751755277
    },
    {
        "content": "<p>Consistency would be nice</p>",
        "id": 527308491,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1751755283
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7953\">#7953</a>: Type checking for nominal tag unions (not 100% done, still have a few clean up things to do)</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>module [Color, blue]\n\nColor := [Red, Green, Blue]\n\nblue : Color\nblue = Color.Blue\n\nyellow : Color\nyellow = Color.Yellow\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Markdown\"><pre><span></span><code>~~~\n<span class=\"gh\"># PROBLEMS</span>\n<span class=\"gs\">**INVALID NOMINAL TAG**</span>\nI'm having trouble with this nominal tag:\n\nyellow = Color.Yellow\n         ^^^^^^^^^^^^\n\nThe tag is:\n    <span class=\"ge\">_Yellow_</span>\n\nBut it should be one of:\n    <span class=\"ge\">_[Red, Green, Blue]_</span>\n</code></pre></div>",
        "id": 527313089,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751762643
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7954\">#7954</a>: CIR Regions go in a separate array</p>",
        "id": 527318019,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751770624
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"341568\">Jared Ramirez</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/527313089\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/issues/7953\">#7953</a>: Type checking for nominal tag unions (not 100% done, still have a few clean up things to do)</p>\n</blockquote>\n<p><span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span>  this is now ready for review!</p>",
        "id": 527322770,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751777749
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7957\">#7957</a>: Canonicalize tuple type annotations &amp; reduce allocations</p>",
        "id": 527379110,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1751843256
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7958\">#7958</a> </p>\n<ul>\n<li>remove <code>src/snapshots/old_syntax</code>, migrates a few of the useful ones into the other snapshot folders.</li>\n<li>implement the not_implement <code>...</code> ellipsis properly (should be valid syntax and not give an error)</li>\n</ul>",
        "id": 527379761,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751844087
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7959\">#7959</a></p>\n<ul>\n<li>add various snapshots that exercize <code>where</code> clauses </li>\n<li>update parser and formatter to support <code>where</code> clauses</li>\n<li>add various diagnostics relating to malformed <code>where</code> clauses</li>\n<li>implement <code>where</code> clauses in canonicalize</li>\n<li>implement proper canonicalization for the <code>...</code> elipsis (not-implemented) expression </li>\n<li>fix formatting of nominal type declarations</li>\n<li>add all of the external value and type declarations to <code>can-ir</code> SExpr </li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>module [Sort, sort]\n\nSort(a) : a\n where module(a).order : (a, a) -&gt; [LT, EQ, GT]\n\nsort : List(elem) -&gt; List(elem) where module(elem).Sort\nsort = ...\n</code></pre></div>\n<h1>CANONICALIZE</h1>\n<div class=\"codehilite\" data-code-language=\"Clojure\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nf\">can-ir</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">d-let</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">p-assign</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">7.1-7.5</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">ident</span><span class=\"w\"> </span><span class=\"s\">\"sort\"</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">e-not-implemented</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">annotation</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">7.1-7.5</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">declared-type</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-fn</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.8-6.32</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">effectful</span><span class=\"w\"> </span><span class=\"nv\">false</span><span class=\"p\">)</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">ty-apply</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.8-6.18</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">symbol </span><span class=\"s\">\"List\"</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.13-6.17</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"elem\"</span><span class=\"p\">)))</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">ty-apply</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.22-6.32</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">symbol </span><span class=\"s\">\"List\"</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.27-6.31</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"elem\"</span><span class=\"p\">)))))))</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">s-alias-decl</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">3.1-6.5</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">ty-header</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">3.1-3.8</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"Sort\"</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">ty-args</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">3.6-3.7</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"a\"</span><span class=\"p\">))))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">3.11-3.12</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"a\"</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">where</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">method</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">4.8-6.5</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">module-of</span><span class=\"w\"> </span><span class=\"s\">\"a\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">ident</span><span class=\"w\"> </span><span class=\"s\">\"order\"</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">args</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">ty-tuple</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">4.26-4.32</span>\n<span class=\"w\">                        </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">4.27-4.28</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"a\"</span><span class=\"p\">))</span>\n<span class=\"w\">                        </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">4.30-4.31</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"a\"</span><span class=\"p\">))))</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-tag-union</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">4.36-4.48</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">ty</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">4.37-4.39</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"LT\"</span><span class=\"p\">))</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">ty</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">4.41-4.43</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"EQ\"</span><span class=\"p\">))</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">ty</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">4.45-4.47</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"GT\"</span><span class=\"p\">))))))</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">s-type-anno</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.1-7.5</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"sort\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">ty-fn</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.8-6.32</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">effectful</span><span class=\"w\"> </span><span class=\"nv\">false</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">ty-apply</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.8-6.18</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">symbol </span><span class=\"s\">\"List\"</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.13-6.17</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"elem\"</span><span class=\"p\">)))</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">ty-apply</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.22-6.32</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">symbol </span><span class=\"s\">\"List\"</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">ty-var</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.27-6.31</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">name </span><span class=\"s\">\"elem\"</span><span class=\"p\">))))</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">where</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">alias</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.39-7.5</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">module-of</span><span class=\"w\"> </span><span class=\"s\">\"elem\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">ident</span><span class=\"w\"> </span><span class=\"s\">\"Sort\"</span><span class=\"p\">))))</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">ext-decl</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">4.8-6.5</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">ident</span><span class=\"w\"> </span><span class=\"s\">\"module(a).order\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">kind</span><span class=\"w\"> </span><span class=\"s\">\"value\"</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"nf\">ext-decl</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">6.39-7.5</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">ident</span><span class=\"w\"> </span><span class=\"s\">\"module(elem).Sort\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">kind</span><span class=\"w\"> </span><span class=\"s\">\"type\"</span><span class=\"p\">)))</span>\n</code></pre></div>",
        "id": 527408997,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751870414
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7966\">#7966</a> - improve support for single quote unicode literals in patterns</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>match ... {\n    ['#'] =&gt; ...\n    ['a', 'b'] =&gt; ...\n    _ =&gt; ...\n}\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Clojure\"><pre><span></span><code><span class=\"w\">        </span><span class=\"p\">(</span><span class=\"nf\">branches</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">branch</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">patterns</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">p-list</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">2.2-2.7</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">degenerate</span><span class=\"w\"> </span><span class=\"nv\">false</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"p\">(</span><span class=\"nf\">patterns</span>\n<span class=\"w\">                            </span><span class=\"p\">(</span><span class=\"nf\">p-int</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">2.3-2.6</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">value</span><span class=\"w\"> </span><span class=\"s\">\"35\"</span><span class=\"p\">)))))</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">value</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">e-not-implemented</span><span class=\"p\">)))</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nf\">branch</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">patterns</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">p-list</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">3.2-3.12</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">degenerate</span><span class=\"w\"> </span><span class=\"nv\">false</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"p\">(</span><span class=\"nf\">patterns</span>\n<span class=\"w\">                            </span><span class=\"p\">(</span><span class=\"nf\">p-int</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">3.3-3.6</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">value</span><span class=\"w\"> </span><span class=\"s\">\"97\"</span><span class=\"p\">))</span>\n<span class=\"w\">                            </span><span class=\"p\">(</span><span class=\"nf\">p-int</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"mf\">3.8-3.11</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">value</span><span class=\"w\"> </span><span class=\"s\">\"98\"</span><span class=\"p\">)))))</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"nf\">value</span>\n<span class=\"w\">                    </span><span class=\"p\">(</span><span class=\"nf\">e-not-implemented</span><span class=\"p\">)))</span>\n</code></pre></div>",
        "id": 527586899,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751935376
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7967\">#7967</a> - update the Progress Tracker for Zig Compiler</p>",
        "id": 527590219,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751938174
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7969\">#7969</a> implement <code>crash</code>, <code>return</code>, <code>dbg</code>, and <code>expect</code> statements (and expressions)</p>",
        "id": 527615826,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751957951
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7971\">#7971</a></p>\n<ul>\n<li>implement support for sub-patterns in record destructures</li>\n<li>remove record restructure pattern guards (not used in 0.1 syntax)</li>\n<li>improve error regions for patterns</li>\n<li>implement pattern alternatives <code>A | B | C =&gt; ...</code></li>\n<li>implement canonicalisation for <code>as</code> in patterns</li>\n</ul>",
        "id": 527662388,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751973675
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7972\">#7972</a> - some fuzz fixes</p>",
        "id": 527671392,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751976499
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7979\">#7979</a></p>\n<ul>\n<li>implements module caching</li>\n<li>adds a round-trip verification for the module cache using each snapshot</li>\n<li>wire up <code>roc check</code> to use caching and <code>mmap</code> when supported</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>$ ./zig-out/bin/roc check --no-cache src/snapshots/hello_world.roc\nNo errors found in 2.1 ms for src/snapshots/hello_world.roc\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>$ ./zig-out/bin/roc check src/snapshots/hello_world.roc\ninfo: Loaded from cache - diagnostic reports not shown. Use --no-cache to see Errors and Warnings for this module.\nNo errors found in 0.5 ms for src/snapshots/hello_world.roc\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>$ ./zig-out/bin/roc check --verbose src/snapshots/hello_world.roc\ninfo: Loaded from cache - diagnostic reports not shown. Use --no-cache to see Errors and Warnings for this module.\nCache Statistics:\n  Operations: 1 total (1 hits, 0 misses)\n  Hit rate: 100.0%\n  Data: 0.0 MB read, 0.0 MB written\n  Time saved: 0.4 ms\n  Stores: 0 successful, 0 failed\nNo errors found in 0.6 ms for src/snapshots/hello_world.roc\n</code></pre></div>",
        "id": 527843833,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752052652
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> or <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> I think I'm going to need help landing this PR. </p>\n<p>Specifically wrangling the linux, valgrind and cross-platform build issues has been a challenge for me. </p>\n<p>Would you mind taking a look at these when you get a chance?</p>",
        "id": 527844177,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752052770
    },
    {
        "content": "<p>Added <code>--time</code> for roc check <a href=\"https://github.com/roc-lang/roc/issues/7982\">#7982</a><br>\ncc <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> since you mentioned this earlier</p>",
        "id": 527909331,
        "sender_full_name": "Anton",
        "timestamp": 1752073483
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7989\">#7989</a></p>\n<ul>\n<li>improvements for module caching </li>\n<li>respect <code>XDG_CACHE_HOME</code>,  fallback to platform specific defaults</li>\n<li>cache structure <code>/roc/&lt;compiler version&gt;/&lt;first 2 characters&gt;/&lt;remaining characters&gt;</code> <ul>\n<li><code>&lt;compiler version&gt;/</code> is the first 16 bytes (32 hex chars) of BLAKE3 hash of the build mode + git commit sha, i.e. \"debug-asdf1234\", \"release-fast-asdf1234\"</li>\n<li><code>/&lt;first 2 characters&gt;/&lt;remaining characters&gt;</code> is the BLAKE3 hash of the file contents</li>\n</ul>\n</li>\n<li>provides nicely formatted cache statistics with <code>--verbose</code> flag</li>\n<li>advises user if file was loaded from cache</li>\n<li>cache the number of Errors and Warnings to report correctly to user<ul>\n<li>NOTE we want to improve this to actually cache the reports, this is the simple version for now; need to serialise and deserialise the reports in our module cache to support this.</li>\n</ul>\n</li>\n<li>add \"INFO\" for our reporting module</li>\n</ul>\n<p><a href=\"/user_uploads/22008/eKkytaDjmhH6CzKj6eLosD_P/Screenshot-2025-07-10-at-14.00.25.png\">Screenshot 2025-07-10 at 14.00.25.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/eKkytaDjmhH6CzKj6eLosD_P/Screenshot-2025-07-10-at-14.00.25.png\" title=\"Screenshot 2025-07-10 at 14.00.25.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1794x1038\" src=\"/user_uploads/thumbnail/22008/eKkytaDjmhH6CzKj6eLosD_P/Screenshot-2025-07-10-at-14.00.25.png/840x560.webp\"></a></div>",
        "id": 527997066,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752120044
    },
    {
        "content": "<p>Why first 2 then remaining?</p>",
        "id": 527997489,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1752120307
    },
    {
        "content": "<p>To reduce the number of files in one folder, apparently some operating systems don't like too many files in a single directory.</p>",
        "id": 527997569,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752120371
    },
    {
        "content": "<p>Oh also, I don't think compiler version needs to include debug vs release. I think they should be fine to share a cache. Maybe even recommended. Then debug builds with more asserts can find bugs in release caches</p>",
        "id": 527999388,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1752121712
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7992\">#7992</a> - add support for WASI</p>\n<p><a href=\"/user_uploads/22008/r6ZvfpgKazYigRXQ95LXAB_Z/Screenshot-2025-07-10-at-14.31.23.png\">Screenshot 2025-07-10 at 14.31.23.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/r6ZvfpgKazYigRXQ95LXAB_Z/Screenshot-2025-07-10-at-14.31.23.png\" title=\"Screenshot 2025-07-10 at 14.31.23.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"2036x568\" src=\"/user_uploads/thumbnail/22008/r6ZvfpgKazYigRXQ95LXAB_Z/Screenshot-2025-07-10-at-14.31.23.png/840x560.webp\"></a></div><p>Here's my debug WASI build if you want to try it <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> (541KB)</p>\n<p><a href=\"/user_uploads/22008/w3Okm_vfNWzuCCRbvi9CqnZy/roc.wasm\">roc.wasm</a></p>",
        "id": 527999780,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752121940
    },
    {
        "content": "<p>I guess showing an actual error is more interesting.</p>\n<p><a href=\"/user_uploads/22008/QgO4dgXIMMJKNMFLKnnDRrMi/Screenshot-2025-07-10-at-14.35.06.png\">Screenshot 2025-07-10 at 14.35.06.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/QgO4dgXIMMJKNMFLKnnDRrMi/Screenshot-2025-07-10-at-14.35.06.png\" title=\"Screenshot 2025-07-10 at 14.35.06.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"2114x620\" src=\"/user_uploads/thumbnail/22008/QgO4dgXIMMJKNMFLKnnDRrMi/Screenshot-2025-07-10-at-14.35.06.png/840x560.webp\"></a></div>",
        "id": 527999960,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752122123
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7997\">#7997</a>: Adds support for can/type checking of tag unions with payloads, and changes the memory layout of nominal/alias (based on a convo w/ Richard)</p>",
        "id": 528158074,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1752181111
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8004\">#8004</a>: Implements <code>--stdin</code> and <code>--check</code> for <code>roc format</code> and fixes some bugs</p>",
        "id": 528407639,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1752268769
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8005\">https://github.com/roc-lang/roc/pull/8005</a> - switch to token range ends being exclusive rather than inclusive. This fixes a bunch of off-by-one errors I saw in ranges. I didn't check all the updated ranges in snapshots, but those that I did check seem correct + improved.</p>",
        "id": 528407936,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1752268952
    },
    {
        "content": "<p>Quick PR to implement <code>roc version</code> <a href=\"https://github.com/roc-lang/roc/pull/8006\">https://github.com/roc-lang/roc/pull/8006</a></p>",
        "id": 528420556,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1752280233
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8014\">#8014</a>: Can/TypeChecking things:</p>\n<ul>\n<li>Don't create CIR nodes in type checking, use new regions array directly instead</li>\n<li>IDX casting helpers</li>\n<li>Improve lambda type checking</li>\n<li>(Big one) Ensure that for every CIR node, we have a corresponding type variable</li>\n</ul>",
        "id": 528478104,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1752346811
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8017\">#8017</a> <span aria-label=\"rip\" class=\"emoji emoji-1faa6\" role=\"img\" title=\"rip\">:rip:</span> <span aria-label=\"asterisk\" class=\"emoji emoji-002a-20e3\" role=\"img\" title=\"asterisk\">:asterisk:</span></p>",
        "id": 528497566,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1752374371
    },
    {
        "content": "<p>RIP</p>",
        "id": 528497716,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752374627
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8018\">#8018</a> - adds documentation for directories and removes some unused modules.</p>\n<p><a href=\"/user_uploads/22008/W3OpP4WRDAeQDfdUvV7rh81r/Screenshot-2025-07-13-at-13.46.20.png\">Screenshot 2025-07-13 at 13.46.20.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/W3OpP4WRDAeQDfdUvV7rh81r/Screenshot-2025-07-13-at-13.46.20.png\" title=\"Screenshot 2025-07-13 at 13.46.20.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"2242x966\" src=\"/user_uploads/thumbnail/22008/W3OpP4WRDAeQDfdUvV7rh81r/Screenshot-2025-07-13-at-13.46.20.png/840x560.webp\"></a></div>",
        "id": 528499965,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752378337
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8025\">#8025</a>: Small clean up of types/Can things leftover from <a href=\"https://github.com/roc-lang/roc/issues/8014\">#8014</a></p>",
        "id": 528542969,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1752426238
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8029\">#8029</a>: add the ability to generate plots in tracy</p>",
        "id": 528576739,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1752461091
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/mgPIy1CB2gKevKpmRschuu_3/Screenshot-2025-07-13-at-7.45.43PM.png\">Screenshot 2025-07-13 at 7.45.43 PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/mgPIy1CB2gKevKpmRschuu_3/Screenshot-2025-07-13-at-7.45.43PM.png\" title=\"Screenshot 2025-07-13 at 7.45.43 PM.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1390x278\" src=\"/user_uploads/thumbnail/22008/mgPIy1CB2gKevKpmRschuu_3/Screenshot-2025-07-13-at-7.45.43PM.png/840x560.webp\"></a></div>",
        "id": 528576806,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1752461151
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8028\">#8028</a> - remove <code>exitOnOom</code> from most of the compiler...</p>",
        "id": 528585334,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752469713
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8031\">#8031</a> - add the initial bones for a WASM playground</p>",
        "id": 528765082,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752542343
    },
    {
        "content": "<p>I have idea for things I'd like to add/improve in the playground, but that can happen in follow-up PR's.</p>",
        "id": 528765136,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752542389
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8041\">#8041</a>: Refactor <code>SafeRange</code> and make types store consistently use it, small improvements to <code>SafeList</code> and <code>SafeMultiList</code> API</p>",
        "id": 528773120,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1752550065
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8043\">#8043</a> - some enhancements for the playground</p>\n<ul>\n<li>fix double backticks in Diagnostic reports</li>\n<li>fix memory management in playground</li>\n<li>add proper diagnostic HTML formatted reports for playground</li>\n<li>improve styling and layout of playground</li>\n<li>add support for share links (<span class=\"user-mention\" data-user-id=\"584248\">@Kiryl Dziamura</span> fix the encoding/decoding)</li>\n<li>re-compile with any changes in source code textarea</li>\n<li>add light/dark mode and toggle</li>\n<li>disable spellcheck in source code textarea</li>\n</ul>\n<h3>demo</h3>\n<p><a href=\"/user_uploads/22008/rqd-ZVX3-DJqsQ58r1-jJdyf/playground-demo-2.gif\">playground-demo-2.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/rqd-ZVX3-DJqsQ58r1-jJdyf/playground-demo-2.gif\" title=\"playground-demo-2.gif\"><img data-animated=\"true\" data-original-content-type=\"image/gif\" data-original-dimensions=\"1166x557\" src=\"/user_uploads/thumbnail/22008/rqd-ZVX3-DJqsQ58r1-jJdyf/playground-demo-2.gif/840x560-anim.webp\"></a></div>",
        "id": 528795644,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752564586
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8050\">#8050</a> - more styling for playground - trying to improve the use of screen space and soften the colors and thickness of things.</p>",
        "id": 528858593,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752585297
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8052\">#8052</a>: Fix small bug in can related to tuple patterns</p>",
        "id": 528885377,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1752592622
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8057\">#8057</a> - initial implementation of platform linking for the interpreter. Mostly stubbed out, but all the key parts are there and working on our supported systems I believe. </p>\n<p><a href=\"https://gist.github.com/lukewilliamboswell/a10df38d51a92e2824c4e6751f78f6ab\">Here is the design doc</a> with my notes that explain the implementation if you are interested.</p>",
        "id": 529040100,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752666363
    },
    {
        "content": "<p>Exciting :)</p>",
        "id": 529041244,
        "sender_full_name": "Anton",
        "timestamp": 1752666733
    },
    {
        "content": "<p>Nice base doc. One note, we don't want to hardcode the entry point. There can be many, but that is just a minor note.</p>",
        "id": 529088676,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1752680469
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8059\">#8059</a>: Reduce allocations in types store and types snapshot store</p>",
        "id": 529106064,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1752686770
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8060\">#8060</a>: Nominal tags in patterns<br>\n^ <span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span> or <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> this touches the parse AST slightly!</p>",
        "id": 529172973,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1752703178
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8063\">#8063</a> add TYPES section in Playground, improve errors messages for compiler problems (e.g. parsing failed)</p>",
        "id": 529206423,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752731224
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8064\">#8064</a>: move single quote validation to tokenization (yes <span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span>, as you originally suggested <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> )<br>\nit's an intermediate step before moving numbers parsing (including single quote literals) to tokenization</p>",
        "id": 529317927,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1752770290
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8071\">#8071</a> </p>\n<ul>\n<li>reorganize to use zig modules</li>\n<li>fix a number of bugs</li>\n<li>replaces the SmallStringInterner implementation with something simpler (was causing a compiler issue with our zig version once added to all_tests)</li>\n</ul>",
        "id": 529388732,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752813197
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8076\">#8076</a>: fix more parser fuzz crashes. It's starting to find interesting errors</p>",
        "id": 529558499,
        "sender_full_name": "JRI98",
        "timestamp": 1752909947
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8085\">#8085</a></p>\n<ul>\n<li>implements Eval for Lambdas (doesn't support captures or recursion yet)</li>\n<li>implements support for unary minus <code>-x</code>, <code>(-5)</code> ... <ul>\n<li>I apologize in advance, someone will probably need to clean up my tokenize and Parser hack (but at least I added a few new snapshots <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span>)</li>\n</ul>\n</li>\n</ul>\n<p>These test cases now pass <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Zig\"><pre><span></span><code><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"n\">test_cases</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">_</span><span class=\"p\">]</span><span class=\"n\">TestCase</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Basic lambda functionality</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| x + 1)(5)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"simple lambda\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| x * 2 + 1)(10)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"complex arithmetic\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| x - 3)(8)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"subtraction\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| 100 - x)(25)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">75</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"param in second position\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| 5)(99)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"constant function ignoring param\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| x + x)(7)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"parameter used twice\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Multi-parameter functions</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x, y| x + y)(3, 4)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"two parameters\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|a, b, c| a + b + c)(1, 2, 3)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"three parameters\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// If-expressions within lambda bodies</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| if x &gt; 0 x else 0)(5)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"max with zero, positive input\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| if x &gt; 0 x else 0)(-3)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"max with zero, negative input\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| if x == 0 1 else x)(0)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"conditional replacement\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| if x == 0 1 else x)(42)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">42</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"conditional passthrough\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Unary minus operations</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| -x)(5)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"unary minus on parameter\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| -x)(0)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"unary minus on zero\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| -x)(-3)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"unary minus on negative (double negative)\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| -5)(999)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"negative literal in lambda\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| if True -10 else x)(999)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"negative literal in if branch\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| if True -x else 0)(5)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"unary minus in if branch\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Complex expressions with unary minus</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| if x &gt; 0 x else -x)(-5)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"absolute value lambda with negative input\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| if x &gt; 0 x else -x)(3)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"absolute value lambda with positive input\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| x + 1)(-5)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"lambda with negative argument\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Binary operations as workarounds</span>\n<span class=\"w\">    </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"(|x| 0 - x)(5)\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">desc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"subtraction workaround\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n</code></pre></div>",
        "id": 529680865,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1753010227
    },
    {
        "content": "<p>To the moon : <span aria-label=\"rocket\" class=\"emoji emoji-1f680\" role=\"img\" title=\"rocket\">:rocket:</span><span aria-label=\"moon face\" class=\"emoji emoji-1f31d\" role=\"img\" title=\"moon face\">:moon_face:</span></p>",
        "id": 529947584,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1753123256
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8093\">#8093</a></p>\n<ul>\n<li>add semantic analysis for lambda captures during canonicalization</li>\n<li>adds multiple new snapshots for lambda captures</li>\n<li>updates parser to support lambda application chains e.g. </li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">outer</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">middle</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">inner</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">outer</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">middle</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">inner</span><span class=\"p\">)(</span><span class=\"mi\">1</span><span class=\"p\">)(</span><span class=\"mi\">2</span><span class=\"p\">)(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 529992871,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1753153042
    },
    {
        "content": "<p>Make interned string idx's directly comparable: <a href=\"https://github.com/roc-lang/roc/pull/8099\">https://github.com/roc-lang/roc/pull/8099</a></p>",
        "id": 530419312,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1753299196
    },
    {
        "content": "<p>I thought they were intentionally not comparable cause can wants separate indexes for each variable even if they have the same name. It would only unify them later</p>",
        "id": 530425562,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1753301601
    },
    {
        "content": "<p>I could have sworn I saw <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> posting about wanting to get rid of that extra layer of indirection...</p>\n<blockquote>\n<p>can wants separate indexes for each variable</p>\n</blockquote>\n<p>Hmm, maybe? Honestly not sure. But even so it seems like we'd be able to create such an index separately if we wanted, e.g. based on the token id, parser node id or other such thing.</p>",
        "id": 530426169,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1753301874
    },
    {
        "content": "<p>yeah I definitely am excited about that PR! <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 530426246,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1753301904
    },
    {
        "content": "<p>Cool</p>",
        "id": 530427326,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1753302368
    },
    {
        "content": "<p>Just wanted to make sure</p>",
        "id": 530427344,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1753302374
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8102\">#8102</a> </p>\n<ul>\n<li>add support for evaluating Record and Tuple literals</li>\n<li>add support for de-structuring Record &amp; Tuple patterns (lambda arguments) </li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Zig\"><pre><span></span><code><span class=\"k\">test</span><span class=\"w\"> </span><span class=\"s\">\"mixed destructure patterns\"</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">try</span><span class=\"w\"> </span><span class=\"n\">helpers</span><span class=\"p\">.</span><span class=\"n\">runExpectInt</span><span class=\"p\">(</span><span class=\"s\">\"(|{ a, x: (b, c), y: { d, e } }| a + b + c + d + e)({ a: 1, x: (2, 3), y: { d: 4, e: 5 } })\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">no_trace</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 530479816,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1753335944
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8066\">#8066</a>: Types/Can Odds &amp; Ends: Reduce allocations, fix test CIR Node &lt;-&gt; Type Var synchronization, Unifier cleanup</p>",
        "id": 530599623,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1753373881
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8125\">#8125</a>: Lots of czer/type checking things <span aria-label=\"dizzy\" class=\"emoji emoji-1f635\" role=\"img\" title=\"dizzy\">:dizzy:</span> </p>\n<ul>\n<li>Refactors type anno canonicalization to both canonicalize &amp; assign type vars in a single pass</li>\n<li>Update alias/nominal type var assignment to substitute the rigid vars in the declaration with the concrete types in the annotation</li>\n<li>Updates user-define type vars to be set to rigid type vars instead of flex, and fix uncovered bugs in type checking</li>\n<li>Adds <code>e_nominal_external</code> and <code>pattern_external</code> as canonicalize node types</li>\n<li>Updates import canonicalization to report diagnostics if the imported module does not match an entry in <code>self.module_env</code></li>\n<li>Fix order of unify vars in math binops</li>\n<li>Updates some <code>UNDEFINED VARIABLE</code> to be <code>UNDECLARED TYPE</code></li>\n<li>Add basic error types for <code>module_not_found</code> and <code>module_not_imported</code></li>\n<li><code>malformed_type</code> now reports the region of the invalid type</li>\n<li>Updates external lookup canonicalize code to set nodes to be type errors if the module they reference is not found</li>\n</ul>",
        "id": 531718870,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1753833372
    },
    {
        "content": "<p>^ This can be merged after <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span>'s MR (<a href=\"https://github.com/roc-lang/roc/issues/8124\">#8124</a>) lands, but the logic shouldn't change much, so it's ready for review</p>",
        "id": 531718937,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1753833415
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"341568\">@Jared Ramirez</span> I've merged the changes in. There's a couple of tests failing now. I'm just digging into those now.</p>",
        "id": 531749485,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1753852200
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8139\">#8139</a>: Cleanup of some lingering TODOs from <a href=\"https://github.com/roc-lang/roc/issues/8125\">#8125</a></p>",
        "id": 531960300,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1753924891
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8142\">#8142</a></p>\n<ul>\n<li>More support for number literals up to and including eval </li>\n<li>Add support for unary not operator <code>!</code> and evaluating booleans</li>\n</ul>",
        "id": 532249714,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1754035129
    },
    {
        "content": "<p>One line change to avoid memory leak that was seen by the fuzzer: <a href=\"https://github.com/roc-lang/roc/issues/8147\">#8147</a></p>",
        "id": 532405782,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1754101593
    },
    {
        "content": "<p>More memory leaks from fuzzing: fix ModuleEnv memory leaks in canonicalize <a href=\"https://github.com/roc-lang/roc/issues/8148\">#8148</a></p>",
        "id": 532427248,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1754119517
    },
    {
        "content": "<p>A couple of fixes for fuzzer crashes <a href=\"https://github.com/roc-lang/roc/issues/8144\">#8144</a></p>",
        "id": 532433923,
        "sender_full_name": "JRI98",
        "timestamp": 1754125171
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8143\">#8143</a></p>\n<ul>\n<li>refactor roc builtins (in new zig compiler) to use the new Roc Host ABI</li>\n<li>enable all builtin tests with <code>zig build test</code></li>\n<li>add more test coverage for num and list</li>\n</ul>",
        "id": 532440603,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1754130620
    },
    {
        "content": "<p>Small fuzzing fix <a href=\"https://github.com/roc-lang/roc/issues/8157\">#8157</a></p>",
        "id": 532745261,
        "sender_full_name": "JRI98",
        "timestamp": 1754319668
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8161\">#8161</a></p>",
        "id": 532925519,
        "sender_full_name": "JRI98",
        "timestamp": 1754403056
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8166\">8166</a>: Protect parser from stack overflow using a nesting counter</p>",
        "id": 533078363,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1754478546
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8171\">#8171</a>: Followup to 8166</p>",
        "id": 533275347,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1754566818
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8173\">#8173</a>: Fixes for unstable formatting cases</p>",
        "id": 533349496,
        "sender_full_name": "JRI98",
        "timestamp": 1754593805
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8163\">#8163</a>: Lots more types things:</p>\n<ul>\n<li>More annotation &amp; rigid var type fixes</li>\n<li>New/improved error messages</li>\n<li>More builtin types</li>\n<li>Properly substitute type vars in function/type annotation application</li>\n<li>&amp; more</li>\n</ul>",
        "id": 533372574,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1754606568
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8200\">#8200</a> Adds multiline string support</p>",
        "id": 535019949,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1755550030
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8212\">#8212</a> Removes MultilineStringEnd</p>",
        "id": 535498452,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1755780840
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8214\">#8214</a> - add support for platform multiple entrypoints</p>\n<p>I'm a little stuck on some Linux CI issues -- I can continue exploring more tomorrow, but if anyone feels like looking at those I would really appreciate it.</p>",
        "id": 535644911,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1755854157
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8215\">#8215</a> Fix some memory leaks found by the canonicalizer fuzzer</p>",
        "id": 535710803,
        "sender_full_name": "JRI98",
        "timestamp": 1755877665
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8217\">#8217</a> Fix remaining issues with multiline string formatting (hopefully)</p>",
        "id": 535758448,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1755898175
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8218\">#8218</a> More fixes for memory leaks</p>",
        "id": 535772538,
        "sender_full_name": "JRI98",
        "timestamp": 1755910806
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8219\">#8219</a> Fix a use after free</p>",
        "id": 535804545,
        "sender_full_name": "EnDeRBeaT",
        "timestamp": 1755953060
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8221\">#8221</a> Fixes some issues with the formatter</p>",
        "id": 535868063,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1755990118
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8222\">#8222</a> Fix the fuzzer crashes that I introduced</p>",
        "id": 535908319,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1756048560
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8216\">#8216</a>: Adds support for canonicalizing &amp; type checking statement annotations.</p>\n<p>ie:</p>\n<div class=\"codehilite\"><pre><span></span><code>|x| {\n  y : U64\n  y = 1\n\n  x + y\n}\n</code></pre></div>\n<p>is now inferred to be <code>U64 -&gt; U64</code>!</p>",
        "id": 535916450,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1756058433
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8224\">#8224</a>: Attempt to fix the remaining fuzz crashes related to formatting multiline strings</p>",
        "id": 536122024,
        "sender_full_name": "JRI98",
        "timestamp": 1756162665
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8225\">#8225</a>: Second try at the above <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 536181467,
        "sender_full_name": "JRI98",
        "timestamp": 1756195712
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8226\">#8226</a> Files are formatted with a exactly one trailing newline</p>",
        "id": 536246473,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1756217454
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8230\">#8230</a>: Fix for a parser fuzz crash. The fuzzer managed to find a new execution path <span aria-label=\"100\" class=\"emoji emoji-1f4af\" role=\"img\" title=\"100\">:100:</span></p>",
        "id": 536658147,
        "sender_full_name": "JRI98",
        "timestamp": 1756403736
    },
    {
        "content": "<p>19 messages were moved from this topic to <a class=\"stream-topic\" data-stream-id=\"316715\" href=\"/#narrow/channel/316715-contributing/topic/formatting.20malformed.20nodes/with/536708417\">#contributing &gt; formatting malformed nodes</a> by <span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span>.</p>",
        "id": 536708418,
        "sender_full_name": "Notification Bot",
        "timestamp": 1756434555
    },
    {
        "content": "<p>I forgot that <a href=\"https://github.com/roc-lang/roc/issues/8213\">#8213</a> is still open from me. I'm not sure how useful that one is though.</p>",
        "id": 537159633,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1756753215
    },
    {
        "content": "<p>Can one of you take a look at that <span class=\"user-mention\" data-user-id=\"341568\">@Jared Ramirez</span> <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span></p>",
        "id": 537236342,
        "sender_full_name": "Anton",
        "timestamp": 1756802460
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8229\">#8229</a> adds the 'QUERY_FORMATTED' command to the wasm playground. I also had to change the reset handling to fix the memory issue.</p>",
        "id": 537632057,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1756978910
    },
    {
        "content": "<p>Not sure if this was the right solution, but it works.</p>",
        "id": 537634752,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1756979858
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"559412\">@Fabian Schmalzried</span> I've been travelling for work this week. If someone doesn't get to this before I do I can look at it after the weekend.</p>",
        "id": 537773151,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1757030820
    },
    {
        "content": "<p>I review &amp; merged it, thanks again <span class=\"user-mention\" data-user-id=\"559412\">@Fabian Schmalzried</span>!</p>",
        "id": 537777957,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1757034863
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> Sure, I'm not in a hurry here <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span>. Also here is the <a href=\"https://github.com/roc-lang/roc-playground/pull/13\">roc-playground/#13</a>  PR with the updated wasm file</p>",
        "id": 537823649,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1757062581
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8244\">#8244</a> Adds a Adds an <code>EVALUATE_TESTS</code> command to the playground_wasm.<br>\n<a href=\"https://github.com/roc-lang/roc-playground/pull/15\">roc-playground#15</a> Adds a TEST tab that shows all test results</p>",
        "id": 539368479,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1757806299
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8284\">#8284</a> fix canonicalize fuzzer: Just some minor build.zig changes.</p>",
        "id": 544340448,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1760207399
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8291\">#8291</a> - improves the error reporting for <code>roc test</code> by using our reporting module.</p>",
        "id": 544445482,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1760322701
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/channel/316715-contributing/topic/Pull.20Request.20for.20Review/near/544340448\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/issues/8284\">#8284</a> fix canonicalize fuzzer: Just some minor build.zig changes.</p>\n</blockquote>\n<p>can we land this? the broken ci thing is just a spell check and it is within a hash...so this should be all good to land</p>",
        "id": 544454974,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1760330633
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> I've landed it, but can you make a separate PR to make an exception for the spell checker thing? otherwise all future PRs are going to hit that <span aria-label=\"smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 544456459,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1760331612
    },
    {
        "content": "<p>Ah, I thought it only type checked changes...Where do exceptions live?</p>",
        "id": 544458298,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1760332626
    },
    {
        "content": "<p>I'm not sure, but I'm pretty sure they exist. We use a node library I think</p>",
        "id": 544458383,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1760332680
    },
    {
        "content": "<p>ah, didn't find it before...found it now</p>",
        "id": 544458519,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1760332776
    },
    {
        "content": "<p>will make follow up</p>",
        "id": 544458525,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1760332779
    },
    {
        "content": "<p>don't spell check build.zig.zon <a href=\"https://github.com/roc-lang/roc/issues/8293\">#8293</a></p>",
        "id": 544458696,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1760332877
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8274\">#8274</a> continues the work of <span class=\"user-mention\" data-user-id=\"341568\">@Jared Ramirez</span> and removes all reference to types from <code>Can</code>. Thanks Jared for the help on this one.</p>",
        "id": 544685670,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1760429674
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8296\">#8296</a> - fixes the parse fuzz crashes -- don't call flushComments twice</p>",
        "id": 544860511,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1760491345
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8298\">https://github.com/roc-lang/roc/pull/8298</a> - minor fixup</p>",
        "id": 545160501,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1760585066
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/8305\">#8305</a> - fuzz fix, stable formatting for <code>where</code> clause collections. </p>\n<p>Note: I tried various different approaches and decided to go with silently removing comments between the <code>where</code> keyword and <code>[</code> token. These should be formatted as <code>where [</code> so I think it will be exceedingly rare in practice to be an issue for people - but I added a snapshot to illustrate this behaviour for future. </p>\n<p>The alternatives I could think of seemed like overkill - changing the comments flushing and newline behaviour, or scanning through bytes to \"detect\" comments between tokens.</p>",
        "id": 546133994,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1761014565
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8310\">#8310</a>: Static dispatch type checking</p>",
        "id": 546134808,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1761015393
    },
    {
        "content": "<p>I'm getting <a href=\"https://github.com/roc-lang/roc/actions/runs/18671544103/job/53233286830?pr=8310\">an odd error</a> in CI related to ^ when it tries to build <code>playground</code>. Top error is:</p>\n<div class=\"codehilite\"><pre><span></span><code>+- install playground_integration_test\n   +- install playground\n      +- compile exe playground Debug wasm32-freestanding 6 errors\n/Users/runner/work/_temp/f5e50b23-6764-46af-b661-5b7046edfc9f/zig-x86_64-macos-0.15.2/lib/std/Thread.zig:579:9: error: Unsupported operating system freestanding\n        @compileError(&quot;Unsupported operating system &quot; ++ @tagName(native_os));\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nreferenced by:\n    getCurrentId: /Users/runner/work/_temp/f5e50b23-6764-46af-b661-5b7046edfc9f/zig-x86_64-macos-0.15.2/lib/std/Thread.zig:554:27\n    getCurrentId: /Users/runner/work/_temp/f5e50b23-6764-46af-b661-5b7046edfc9f/zig-x86_64-macos-0.15.2/lib/std/Thread.zig:375:29\n    15 reference(s) hidden; use &#39;-freference-trace=17&#39; to see all references\n</code></pre></div>\n<p>Anyone have any ideas where to start? Didn't touch <code>build.zig</code> barely touched <code>playground</code></p>",
        "id": 546136159,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1761016488
    },
    {
        "content": "<p>The error is just saying that you are using threads which are not support in wasm</p>",
        "id": 546153055,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1761028723
    },
    {
        "content": "<p>Everything in wasm has to be managed via a single thread I believe.</p>",
        "id": 546153087,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1761028743
    },
    {
        "content": "<p>Did you add any new threads to the system or accidently shift our work management system to use multiple threads with wasm.</p>",
        "id": 546153154,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1761028771
    },
    {
        "content": "<p>Haven't actually looked at your PR, but it should be something of that nature.</p>",
        "id": 546153182,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1761028789
    },
    {
        "content": "<p>Maybe you are caching you looking something up based on the current thread. In that cause, in the single thread mode, maybe just use a constant zero or something?</p>",
        "id": 546153282,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1761028838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"341568\">@Jared Ramirez</span>  It's actually just the <code>std.debug.print</code> in Check.zig that is not supported in wasm.</p>",
        "id": 546190385,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1761040574
    },
    {
        "content": "<p>thanks y'all!! it was the stray <code>std.debug.print</code> <span aria-label=\"sob\" class=\"emoji emoji-1f62d\" role=\"img\" title=\"sob\">:sob:</span> TIL</p>",
        "id": 546226995,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1761050890
    },
    {
        "content": "<p>Yeah, I had forgotten about that. When I first implemented the playground I had like a hundred different debug prints I had to track down and remove for this reason. From memory the Zig error doesn't tell you which one is the problem so it was like playing whack  a mole</p>",
        "id": 546332901,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1761083155
    },
    {
        "content": "<p>So glad we have the playground and WASM freestanding building around the core compiler to defend against this as we add new features.</p>",
        "id": 546332977,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1761083192
    },
    {
        "content": "<p>yeah it's already uncovered a bunch of serialization bugs <span aria-label=\"smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 546334872,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1761084248
    },
    {
        "content": "<p>which are now all fixed!</p>",
        "id": 546334901,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1761084262
    },
    {
        "content": "<p><code>zig build playground</code> tells you actully quite nicely where it is, you just might have to use the '-freference-trace=' option, but the error message also tells you to use it:</p>\n<blockquote>\n<p>18 reference(s) hidden; use '-freference-trace=20' to see all references</p>\n</blockquote>",
        "id": 546335633,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1761084668
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8314\">#8314</a> Simplifies the DecompressingHashReader</p>",
        "id": 546336425,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1761085203
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8319\">#8319</a> correct roc builtin path in build script.</p>\n<p>This enables other zig platforms to just import the roc builtins via the zig build system.</p>",
        "id": 546353989,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1761098881
    },
    {
        "content": "<p>Super minor error message improvement:<br>\n<a href=\"https://github.com/roc-lang/roc/issues/8320\">#8320</a> slightly better error on host lib missing</p>",
        "id": 546362342,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1761106475
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8325\">#8325</a>: Adds type inference for a few missing types of stmt + updates free var tracking in <code>Can</code> to use indexes instead of pointers</p>",
        "id": 546788450,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1761265662
    },
    {
        "content": "<p>Avoid stripping in debug builds <a href=\"https://github.com/roc-lang/roc/issues/8326\">#8326</a></p>",
        "id": 546799245,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1761273245
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8327\">#8327</a> Starting to migragte from std.array_list.Managed to std.ArrayList</p>",
        "id": 546824969,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1761289848
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8333\">#8333</a> Small fix for type modules in playground</p>",
        "id": 547085728,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1761430499
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8335\">#8335</a>: Fix rigid var static dispatch bug</p>",
        "id": 547156399,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1761509111
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8336\">#8336</a>: Fixes a static dispatch error propagation bug i added in ^</p>",
        "id": 547169521,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1761523920
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/8341\">#8341</a> Adds report when <code>roc check</code> cannot open a file<br>\n<a href=\"https://github.com/roc-lang/roc/issues/8342\">#8342</a> Adds a general report to <code>roc check</code> when build fails but there is no report</p>",
        "id": 547488504,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1761656769
    }
]