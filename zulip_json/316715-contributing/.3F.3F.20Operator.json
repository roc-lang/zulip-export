[
    {
        "content": "<p>I currently am working on <a href=\"https://github.com/roc-lang/roc/issues/7089\">https://github.com/roc-lang/roc/issues/7089</a> and have this working correctly.  I just wanted to make sure this (non-sensical) program is doing what it should.</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">main</span><span class=\"err\">!</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nv\">pl</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">platform</span><span class=\"w\"> </span><span class=\"s\">\"../../basic-cli/platform/main.roc\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pl.Stdout</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pl.Stdin</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pl.Stderr</span>\n\n<span class=\"nv\">main</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">_args</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">tick</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n\n<span class=\"nv\">tick</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">try</span><span class=\"w\"> </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">write</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"Enter a number: \"</span>\n<span class=\"w\">    </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"kt\">Stdin</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">        </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">str</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">            </span><span class=\"nv\">num</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">                </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">toU8</span><span class=\"w\"> </span><span class=\"nv\">str</span><span class=\"w\"> </span><span class=\"err\">??</span><span class=\"w\"> </span><span class=\"mi\">255</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"nv\">addOne</span>\n<span class=\"w\">            </span><span class=\"nv\">try</span><span class=\"w\"> </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"Did you write $(Num.toStr num) (Y/n)\"</span>\n<span class=\"w\">            </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"kt\">Stdin</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">                </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"s\">\"n\"</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">                </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">tick</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">                </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">Done</span>\n\n<span class=\"w\">        </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">EndOfFile</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">            </span><span class=\"nv\">try</span><span class=\"w\"> </span><span class=\"kt\">Stderr</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"EOF\"</span>\n<span class=\"w\">            </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">Done</span>\n\n<span class=\"w\">        </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">StdinErr</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">            </span><span class=\"nv\">try</span><span class=\"w\"> </span><span class=\"kt\">Stderr</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"Couldn't read from stdin\"</span>\n<span class=\"w\">            </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">Done</span>\n\n<span class=\"nv\">addOne</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">n</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">dbg</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">n</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"nv\">n</span><span class=\"w\"> </span><span class=\"nf\">==</span><span class=\"w\"> </span><span class=\"mi\">255</span><span class=\"w\"> </span><span class=\"kr\">then</span>\n<span class=\"w\">        </span><span class=\"mi\">255</span>\n<span class=\"w\">    </span><span class=\"kr\">else</span>\n<span class=\"w\">        </span><span class=\"nv\">n</span><span class=\"w\"> </span><span class=\"nf\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>Here it will only actually get it right if you happen to type exactly 255 because the <code>??</code> has stronger precedence  that <code>|&gt;</code>.  Does everyone else expect that that would be the case?</p>",
        "id": 490507975,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1734955892
    },
    {
        "content": "<p>And given that it is, what are all the places I need to look at to add tests around it?</p>",
        "id": 490508155,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1734955967
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7406\">https://github.com/roc-lang/roc/pull/7406</a> is the PR</p>",
        "id": 490515314,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1734958965
    },
    {
        "content": "<p>that's the behavior I would expect!</p>",
        "id": 490526238,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734963241
    },
    {
        "content": "<p>as an aside for the future, this is the first short-circuiting operator implementation we have, so it would be awesome to follow up with changing over <code>&amp;&amp;</code> and <code>||</code> to short-circuit as well, per <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/channel/231634-beginners/topic/Short-circuit.20on.20boolean.20operations\">#beginners &gt; Short-circuit on boolean operations</a></p>",
        "id": 490527031,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734963559
    },
    {
        "content": "<p>That makes sense.  So just desugar these like</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">idx</span><span class=\"w\"> </span><span class=\"nf\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"nf\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"nv\">idx</span><span class=\"w\"> </span><span class=\"nf\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\">  </span><span class=\"nf\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">79</span>\n</code></pre></div>\n<p>becomes</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"nv\">idx</span><span class=\"w\"> </span><span class=\"nf\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"kr\">then</span>\n<span class=\"w\">  </span><span class=\"nv\">idx</span><span class=\"w\"> </span><span class=\"nf\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"nf\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">79</span>\n<span class=\"kr\">else</span>\n<span class=\"w\">  </span><span class=\"kt\">Bool</span><span class=\"nf\">.</span><span class=\"nv\">false</span>\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">idx</span><span class=\"w\"> </span><span class=\"nf\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"nf\">||</span><span class=\"w\"> </span><span class=\"nv\">idx</span><span class=\"w\"> </span><span class=\"nf\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\">  </span><span class=\"nf\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">79</span>\n</code></pre></div>\n<p>becomes</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"nv\">idx</span><span class=\"w\"> </span><span class=\"nf\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"kr\">then</span>\n<span class=\"w\">  </span><span class=\"kt\">Bool</span><span class=\"nf\">.</span><span class=\"nv\">true</span>\n<span class=\"kr\">else</span>\n<span class=\"w\">  </span><span class=\"nv\">idx</span><span class=\"w\"> </span><span class=\"nf\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"nf\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">79</span>\n</code></pre></div>\n<p>?</p>",
        "id": 490528489,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1734964106
    },
    {
        "content": "<p>yeah exactly!</p>",
        "id": 490529720,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734964621
    }
]