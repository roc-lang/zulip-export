[
    {
        "content": "<p>I am looking at good first issues. I saw <a href=\"https://github.com/roc-lang/roc/issues/5516\">this one</a>. <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> You raised this one. I think I have a solution but I'm not sure. Do I just submit a PR to review, or do you want to discuss here first?</p>",
        "id": 370142290,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687885618
    },
    {
        "content": "<p>I just changed ine 3472 from <code>crates/reporting/src/error/parse.rs</code> to be <code>        EProvides::Provides(pos) | EProvides::IndentProvides(pos) =&gt; {</code>. I figured it should be the same error message</p>",
        "id": 370143629,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687885871
    },
    {
        "content": "<p>The last line in the error message does not have a newline however, which means the next shell prompt will be on the same line as the last line in the error. This is not ideal</p>",
        "id": 370144610,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687886071
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"497765\">@Kilian Vounckx</span>, that approach sounds good. <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> do you know how we can add a newline at the end <a href=\"https://github.com/roc-lang/roc/blob/7b19a1552c4579df936be4d7df9e8e3e94293716/crates/reporting/src/error/parse.rs#L3476\">here</a>?</p>",
        "id": 370154079,
        "sender_full_name": "Anton",
        "timestamp": 1687887912
    },
    {
        "content": "<p>is it this message specifically, or in general?</p>",
        "id": 370154238,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687887948
    },
    {
        "content": "<p>This message specifically, I suppose</p>",
        "id": 370155375,
        "sender_full_name": "Anton",
        "timestamp": 1687888196
    },
    {
        "content": "<p><code>EGeneratesWith::Identifier(pos)</code><br>\nThis tag has the same issue, so I think it is at least two, so I suppose in general</p>",
        "id": 370156133,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687888342
    },
    {
        "content": "<p>but some get it right</p>",
        "id": 370156179,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687888351
    },
    {
        "content": "<p>right?</p>",
        "id": 370156186,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687888353
    },
    {
        "content": "<p>I don't know how to trigger all of them</p>",
        "id": 370156273,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687888370
    },
    {
        "content": "<p>messing up header parsing is relatively easy</p>",
        "id": 370156395,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687888392
    },
    {
        "content": "<p>make up some fancy new infix operator that does not parse, etc</p>",
        "id": 370156438,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687888402
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"497765\">Kilian Vounckx</span> <a href=\"#narrow/stream/316715-contributing/topic/Good.20error.20message.20for.20provides/near/370156133\">said</a>:</p>\n<blockquote>\n<p><code>EGeneratesWith::Identifier(pos)</code><br>\nThis tag has the same issue, so I think it is at least two, so I suppose in general</p>\n</blockquote>\n<p>Oh I meant this one <code>EProvides::Identifier(pos)</code></p>",
        "id": 370156483,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687888411
    },
    {
        "content": "<p>also we have tests for the reporting of parse errors</p>",
        "id": 370156488,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687888413
    },
    {
        "content": "<p>This one <code>EExposes::Identifier(pos)</code> for interface <code>exposes</code> lists has the same issue again</p>",
        "id": 370157528,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687888620
    },
    {
        "content": "<p>I'll try to find a correct one</p>",
        "id": 370157665,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687888647
    },
    {
        "content": "<p>I did find another issue when looking:</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>interface Foo\n    exposes []\n    imports [foo]\n</code></pre></div>\n<p>When running <code>roc check Foo.roc</code> on this file, it gives an <code>EImports::ListEnd</code> error instead of an <code>EImports::ModuleName</code> error.</p>",
        "id": 370159099,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687888924
    },
    {
        "content": "<p>Its error message is</p>\n<div class=\"codehilite\"><pre><span></span><code>── WEIRD IMPORTS ───────────────────────────────────────────────────── Foo.roc ─\n\nI am partway through parsing a imports list, but I got stuck here:\n\n2│      exposes []\n3│      imports [foo]\n                 ^\n\nI am expecting a comma or end of list, like\n    imports [Shape, Vector]\n</code></pre></div>",
        "id": 370159343,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687888969
    },
    {
        "content": "<p>Again with no newline</p>",
        "id": 370159498,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687888997
    },
    {
        "content": "<p>After trying between five or ten which I knew how to trigger at random, all of them did not have the newline, so I think it is a general issue</p>",
        "id": 370161788,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687889439
    },
    {
        "content": "<p>I will finish the original issue about the specific error message, and I think the newlines is a new issue</p>",
        "id": 370161898,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687889462
    },
    {
        "content": "<p>do e.g. type checker reports also have this problem?</p>",
        "id": 370161977,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687889477
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"497765\">Kilian Vounckx</span> <a href=\"#narrow/stream/316715-contributing/topic/Good.20error.20message.20for.20provides/near/370161898\">said</a>:</p>\n<blockquote>\n<p>I will finish the original issue about the specific error message, and I think the newlines is a new issue</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> <a href=\"https://github.com/roc-lang/roc/pull/5623\">PR submitted</a></p>",
        "id": 370162547,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687889609
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/316715-contributing/topic/Good.20error.20message.20for.20provides/near/370161977\">said</a>:</p>\n<blockquote>\n<p>do e.g. type checker reports also have this problem?</p>\n</blockquote>\n<p>I'll try to find some</p>",
        "id": 370162602,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687889624
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/316715-contributing/topic/Good.20error.20message.20for.20provides/near/370161977\">said</a>:</p>\n<blockquote>\n<p>do e.g. type checker reports also have this problem?</p>\n</blockquote>\n<div class=\"codehilite\"><pre><span></span><code>interface Foo\n    exposes []\n    imports []\n\nfoo : Str -&gt; Str\nfoo = \\x -&gt; x + 1\n</code></pre></div>\n<p>The type error on this file has a newline</p>",
        "id": 370163766,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687889873
    },
    {
        "content": "<p>ok, so there is some inconsistency between parse and type error formatting, right?</p>",
        "id": 370164075,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687889935
    },
    {
        "content": "<p>I think so</p>",
        "id": 370164804,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687890080
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> I added the test</p>",
        "id": 370173473,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687892025
    },
    {
        "content": "<p>btw <a href=\"https://github.com/roc-lang/roc/pull/5607\">https://github.com/roc-lang/roc/pull/5607</a> may also be relevant here</p>",
        "id": 370177451,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687892892
    },
    {
        "content": "<p>that one is ready to merge, but maybe can be folded into something bigger</p>",
        "id": 370177562,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687892917
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> I was doing some unrelated stuff and found the following related issue.</p>\n<p>This file is saved in <code>Foo.roc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>interface Foo\n    exposes []\n    imports []\n\nfoo : F64\nfoo = 42\n\nbar : F64\nbar = 31\n\nexpect\n    foo != bar\n</code></pre></div>\n<p>When running <code>roc check Foo.roc</code>, the error message has a newline at the end. However, when running <code>roc test Foo.roc</code>, the error does not have the newline. The only difference is checking vs testing</p>",
        "id": 371986136,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1688387226
    }
]