[
    {
        "content": "<p>Hi! As mentioned in <a href=\"#narrow/stream/304641-ideas/topic/dedicated.20TCP.20platform\">prev conversation</a> at least 2 people will need a way to listen to raw tcp connections in their roc code for the upcoming book. Me being one of them, and having time on my hand, I want to implement that feature into a fork of basic-cli. It isn't my goal to get it upstreamed and a blocking listener (max 1 connection) is just fine. Before discussing the api (I have no idea how it would look), I'm asking for general platform development help. </p>\n<p>Got the basic-cli repo cloned next to the roc repo. I enter the dev shell defined in the nix flake. Running <code>roc examples/echo.roc</code> does the thing correctly. The very first thing I've tried was to run the <a href=\"http://glue.sh\">glue.sh</a> script. Thought it would re-generate the same files. Nope. Running the same example now crashes the compiler with <code>An internal compiler expectation was broken. ...</code> There are 6 errors like below, all shaped the same but at different assertions:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0080]: evaluation of constant value failed\n   --&gt; /home/ez/code/basic-cli/crates/roc_app/src/x86_64.rs:326:39\n    |\n326 | const _SIZE_CHECK_union_ReadErr: () = assert!(core::mem::size_of::&lt;union_ReadErr&gt;() == 40);\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at &#39;assertion failed: core::mem::size_of::&lt;union_ReadErr&gt;() == 40&#39;, /home/ez/code/basic-cli/crates/roc_app/src/x86_64.rs:326:39\n</code></pre></div>\n<p>Also weird that there is a <code>crates/roc_app/src/x86.rs</code> generated. Tried renaming it to <a href=\"http://x86_64.rs\">x86_64.rs</a>, but same error. I'm on x86_64, linux (NixOs).</p>\n<p>Is this even a good direction? Initially, I want to add a single effect to basic-cli that prints a constant message and thought this is where I needed to start.</p>",
        "id": 443146487,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1717703130
    },
    {
        "content": "<p>I have a branch that will probably be much easier to start with. Hopefully we can merge it next week sometime. <a href=\"https://github.com/roc-lang/basic-cli/tree/refactor-host\">https://github.com/roc-lang/basic-cli/tree/refactor-host</a></p>",
        "id": 443151881,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717704794
    },
    {
        "content": "<p>You will need to run <code>roc build.roc</code> to get started. But it's much simpler without using RustGlue which is buggy</p>",
        "id": 443152312,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717704926
    },
    {
        "content": "<p>Good to hear things are moving! I'll wait for the merge then, since running <code>roc build.roc</code> on the branch produces an error from cargo  when building the platform with <strong>error: linking with <code>cc</code> failed: exit status: 1</strong></p>",
        "id": 443243131,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1717749910
    }
]