[
    {
        "content": "<p>Is there some sort of process for deciding what new builtins are added? I'd like to add a <code>zip : List a, List b, (a, b -&gt; c) -&gt; List c</code> function if you guys think it would be a good addition.</p>",
        "id": 328139096,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676510578
    },
    {
        "content": "<p>Some others I was thinking about would be <code>maxBy : List a, (a -&gt; Num *) -&gt; Result a [ListWasEmpty]</code> and the equivalent <code>minBy</code></p>",
        "id": 328139588,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676511001
    },
    {
        "content": "<p>Oooh just found this <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span> <br>\n<a href=\"https://github.com/roc-lang/roc/issues/664\">https://github.com/roc-lang/roc/issues/664</a></p>",
        "id": 328139674,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676511051
    },
    {
        "content": "<p>Just found that <code>zip</code> already exists and is called <code>map2</code>. I guess this one could probably at least go in the \"Different Names\" section of the docs</p>",
        "id": 328139876,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676511226
    },
    {
        "content": "<p>great catch - I'd be happy to accept a PR for a \"different names\" addition!</p>",
        "id": 328146369,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1676516382
    },
    {
        "content": "<p>What do you think about the <code>maxBy</code> and <code>minBy</code> additions?</p>",
        "id": 328147330,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676517183
    },
    {
        "content": "<p>Shouldn't it result <code>List a</code>? What if there are ties?</p>",
        "id": 328150113,
        "sender_full_name": "Ron Panduwana",
        "timestamp": 1676519474
    },
    {
        "content": "<p>suggestion: would <code>havingMax</code>/<code>havingMin</code> be a better name?</p>\n<p>e.g.</p>\n<p><code>players |&gt; List.havingMax score</code></p>\n<p>vs.</p>\n<p><code>players |&gt; List.maxBy score</code></p>",
        "id": 328150648,
        "sender_full_name": "Ron Panduwana",
        "timestamp": 1676519898
    },
    {
        "content": "<p>Why would maxBy return a number in the lambda?</p>",
        "id": 328153807,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1676522722
    },
    {
        "content": "<p><a href=\"https://www.scala-lang.org/api/2.12.6/scala/collection/TraversableOnce.html#maxBy[B](f:A=%3EB):A\">https://www.scala-lang.org/api/2.12.6/scala/collection/TraversableOnce.html#maxBy[B](f:A=%3EB):A</a></p>\n<p><a href=\"https://www.scala-lang.org/api/2.12.6/scala/collection/TraversableOnce.html#maxBy[B](f:A=%3EB):A\">https://www.scala-lang.org/api/2.12.6/scala/collection/TraversableOnce.html#maxBy[B](f:A=%3EB):A</a></p>\n<p>Here’s some examples from other languages I’m familiar with. I think it makes sense to just return the first element if there are ties instead of returning a list. But ya Brendon, if it returned something like <code>[Gt, Lt, Eq]</code> it would be much better.</p>",
        "id": 328153915,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676522832
    },
    {
        "content": "<p>So kind of like a combo of <code>List.sortWith</code> and <code>List.first</code></p>",
        "id": 328154123,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676523006
    }
]