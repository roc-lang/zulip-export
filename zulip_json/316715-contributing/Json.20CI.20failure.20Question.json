[
    {
        "content": "<p>Question regarding <a href=\"https://github.com/roc-lang/roc/pull/5163\">#5163</a> CI failure.</p>\n<p>I would love to know why I am not seeing these failures when I run tests locally? </p>\n<p>I'm pretty confident I have fixed the bugs in the implementation I was seeing before. Now I wonder I am missing something else that is specific to CI?</p>\n<p>This is how I am reproducing the tests locally.</p>\n<div class=\"codehilite\"><pre><span></span><code>% cargo test --release -p test_gen --test test_gen\n\n## gives\n\ntest result: ok. 1297 passed; 0 failed; 21 ignored; 0 measured; 0 filtered out; finished in 531.06s\n</code></pre></div>\n<p>Here is one that is a FAIL on that last CI run.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">decode_record_two_fields_string_and_string_infer_local_var_destructured</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">assert_evals_to</span><span class=\"o\">!</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">indoc</span><span class=\"o\">!</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"s\">r#\"</span>\n<span class=\"s\">            app \"test\" imports [Json] provides [main] to \"./platform\"</span>\n\n<span class=\"s\">            main =</span>\n<span class=\"s\">                decoded = Str.toUtf8 \"{\\\"first\\\":\\\"ab\\\",\\\"second\\\":\\\"cd\\\"}\" |&gt; Decode.fromBytes Json.fromUtf8</span>\n<span class=\"s\">                when decoded is</span>\n<span class=\"s\">                    Ok {first, second} -&gt; Str.concat first second</span>\n<span class=\"s\">                    _ -&gt; \"something went wrong\"</span>\n<span class=\"s\">            \"#</span>\n<span class=\"w\">        </span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"n\">RocStr</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"abcd\"</span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"n\">RocStr</span>\n<span class=\"w\">    </span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>However if I add it like this to the Json builtin and run <code>cargo run --release -- test crates/compiler/builtins/roc/Json.roc</code> it is a PASS.</p>\n<div class=\"codehilite\" data-code-language=\"Elixir\"><pre><span></span><code><span class=\"n\">expect</span>\n<span class=\"w\">    </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nc\">Str</span><span class=\"o\">.</span><span class=\"n\">toUtf8</span><span class=\"w\"> </span><span class=\"s2\">\"{\\\"first\\\":\\\"ab\\\",\\\"second\\\":\\\"cd\\\"}\"</span>\n<span class=\"w\">    </span><span class=\"n\">actual</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">        </span><span class=\"ow\">when</span><span class=\"w\"> </span><span class=\"nc\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytes</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"n\">fromUtf8</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">            </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">first</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">second</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Str</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"w\"> </span><span class=\"n\">first</span><span class=\"w\"> </span><span class=\"n\">second</span>\n<span class=\"w\">            </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"s2\">\"something went wrong\"</span>\n\n<span class=\"w\">    </span><span class=\"n\">actual</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s2\">\"abcd\"</span>\n</code></pre></div>",
        "id": 348648598,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1681287221
    },
    {
        "content": "<p>I think you need to explicitly enable the gen-wasm feature like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>cargo test --locked --release --package test_gen --no-default-features --features gen-wasm -- --test-threads=1\n</code></pre></div>",
        "id": 348660726,
        "sender_full_name": "Anton",
        "timestamp": 1681290354
    },
    {
        "content": "<p>Thank you. I'll see if I can figure out why they fail in the rust tests, but not in Roc tests.</p>",
        "id": 348663012,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1681290745
    },
    {
        "content": "<p>Also, we have a shortcut command for that <code>cargo test-gen-wasm</code> and <code>cargo test-gen-llvm-wasm</code></p>",
        "id": 348753205,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1681310592
    }
]