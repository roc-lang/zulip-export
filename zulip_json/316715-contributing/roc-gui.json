[
    {
        "content": "<p>Thanks to <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span>  for the assistance. </p>\n<p>I have been able to restore the <a href=\"https://github.com/lukewilliamboswell/roc-gui\">roc-gui platform</a> which I copied from <a href=\"https://github.com/roc-lang/roc/tree/main/examples/gui/breakout\">the gui example</a> so that both Hello-GUI and Breakout examples are working. </p>\n<p>I updated it to use glue and included a script with some workarounds so we should be able to add features much more easily now. </p>\n<p>I'm not sure what comes next; but it looks like <a href=\"https://github.com/roc-lang/roc/blob/main/examples/gui/breakout/platform/Elem.roc\">there was an effort or some progress</a> towards using a type variable in the elements e.g. <code>Elem state</code> to enable <a href=\"https://docs.google.com/document/d/16qY4NGVOHu8mvInVD-ddTajZYSsFvFBvQON_hmyHGfo/edit?usp=sharing\">Action-State</a> so maybe this can be revisited?</p>\n<p>Or maybe it would be beneficial to improve the breakout example so that it is more of a fully playable demo game?</p>\n<p>Or maybe adding effects like reading a file, network request etc to enable more types of applications?</p>\n<p>Or maybe working on more or improving the graphics  primitives, text rendering, borders, lines, circles etc...?</p>",
        "id": 410769093,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1704152730
    },
    {
        "content": "<p><a href=\"#narrow/stream/316715-contributing/topic/roc-gui/near/410769093\">A message</a> was moved here from <a class=\"stream-topic\" data-stream-id=\"316715\" href=\"/#narrow/stream/316715-contributing/topic/Casual.20Conversation\">#contributing &gt; Casual Conversation</a> by <span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span>.</p>",
        "id": 410789787,
        "sender_full_name": "Notification Bot",
        "timestamp": 1704166725
    },
    {
        "content": "<p>I have spent some time investigating and looking at a minimal conversion to use Action-State. There are currently a few issues with glue for Rust that I think block much progress in this direction for now. </p>\n<p>We could make something like a minimal PoC work without glue by handwriting parts, however progress would be slow. </p>\n<p>I'm leaving this comment here to remember what the current issue is. Revisit this direction when glue generates correctly for eg;</p>\n<div class=\"codehilite\"><pre><span></span><code>Elem : [\n    Rect { color : Rgba, left : F32, top : F32, width : F32, height : F32 },\n    Text { text : Str, color : Rgba, left : F32, top : F32, size : F32 },\n    Button {onPress: {} -&gt; [None, Update], elem : Elem},\n]\n</code></pre></div>",
        "id": 410790303,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1704167227
    },
    {
        "content": "<blockquote>\n<p>Or maybe it would be beneficial to improve the breakout example so that it is more of a fully playable demo game?</p>\n<p>Or maybe adding effects like reading a file, network request etc to enable more types of applications?</p>\n<p>Or maybe working on more or improving the graphics primitives, text rendering, borders, lines, circles etc...?</p>\n</blockquote>\n<p>All good projects, take your pick :)</p>",
        "id": 410816074,
        "sender_full_name": "Anton",
        "timestamp": 1704186812
    }
]