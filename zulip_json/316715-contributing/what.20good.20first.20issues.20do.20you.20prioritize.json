[
    {
        "content": "<p>Done first issue! I want to help out some more, which of the current issues do you prefer be taken care of?</p>",
        "id": 325615205,
        "sender_full_name": "dank",
        "timestamp": 1675426842
    },
    {
        "content": "<p>Super cool :)<br>\nCan you look into the musl target <a href=\"https://github.com/roc-lang/roc/actions/runs/4084240828/jobs/7040711338\">issue with macos</a> from <a href=\"https://github.com/roc-lang/roc/pull/4980\">PR#4980</a>. So we want the target to be <code>x86_64-unknown-linux-musl</code> on linux x86_64, <code>aarch64-unknown-linux-musl</code> on linux aarch64 and to not change the target in other situations (windows, macos...)</p>",
        "id": 325620625,
        "sender_full_name": "Anton",
        "timestamp": 1675428421
    },
    {
        "content": "<p>as I recall, macOS has a policy that you're always supposed to dynamically link <code>libSystem</code> for its libc</p>",
        "id": 325637864,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1675432855
    },
    {
        "content": "<p>so I think we should probably never try to build with musl on macOS <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 325638006,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1675432889
    },
    {
        "content": "<p>yea ill only update linux</p>\n<p>um how do you if at all test platforms without an application?<br>\nif you try to cargo build basic_cli you get <a href=\"https://gist.githubusercontent.com/dankeyy/9f0134bdd98a043c37d8fd7ca75cd68f/raw/2cd7503967f64c4d2b86741e5ee7feca6a5ad73b/basic_cli%2520error\">https://gist.githubusercontent.com/dankeyy/9f0134bdd98a043c37d8fd7ca75cd68f/raw/2cd7503967f64c4d2b86741e5ee7feca6a5ad73b/basic_cli%2520error</a></p>",
        "id": 325639933,
        "sender_full_name": "dank",
        "timestamp": 1675433360
    },
    {
        "content": "<p>In basic-cli/src/Cargo.toml, it is specified that our rust program links the app lib, which is produced by roc, so I just do <code>./roc_nightly/roc build ../basic-cli/examples/countdown.roc</code>. I'm not sure if there is some workaround to be able to test platforms in a standalone manner...</p>",
        "id": 325642254,
        "sender_full_name": "Anton",
        "timestamp": 1675433986
    },
    {
        "content": "<p>I've done basically no platform development</p>",
        "id": 325642498,
        "sender_full_name": "Anton",
        "timestamp": 1675434035
    },
    {
        "content": "<p><code>cargo test</code> should work</p>",
        "id": 325643148,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1675434217
    },
    {
        "content": "<p><code>cargo build</code> does not work because the code depends on symbols that <code>roc</code> needs to provide</p>",
        "id": 325643250,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1675434243
    },
    {
        "content": "<p>but you can run tests so long as they don't use these roc symbols</p>",
        "id": 325643333,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1675434257
    },
    {
        "content": "<p>I'd think <code>cargo check</code> would also work</p>",
        "id": 325643413,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1675434281
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/316715-contributing/topic/what.20good.20first.20issues.20do.20you.20prioritize/near/325643250\">said</a>:</p>\n<blockquote>\n<p><code>cargo build</code> does not work because the code depends on symbols that <code>roc</code> needs to provide</p>\n</blockquote>\n<p>yea ik but I just wanted a way to quickly get an object file that I could check if it targeted correctly</p>",
        "id": 325644433,
        "sender_full_name": "dank",
        "timestamp": 1675434555
    },
    {
        "content": "<p>you can actually find the target in the error message you posted</p>",
        "id": 325646264,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1675435039
    },
    {
        "content": "<p>oh lmao I didn't even notice</p>",
        "id": 325649931,
        "sender_full_name": "dank",
        "timestamp": 1675435928
    },
    {
        "content": "<p>so I did some digging<br>\nhere's what we cant do:</p>\n<ol>\n<li>print a cargo:target according to cfg data in <code>build.rs</code> - that feature apparently <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#outputs-of-the-build-script\">does not exist</a></li>\n<li>the rust-toolchain.toml + .config/cargo.toml combo - <a href=\"https://doc.rust-lang.org/cargo/reference/config.html#buildtarget\">you can</a> specify multiple targets in both of them, but it isn't conditional.  you cant dynamically select one based on current os (it just attempts to build them all lol).</li>\n</ol>\n<p>what we can do is kinda meh but it's setting the <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html#configuration-environment-variables\">environment flag</a> CARGO_BUILD_TARGET</p>\n<p>somebody even suggested me execing the right cargo commands in <code>build.rs</code> lol</p>",
        "id": 325677776,
        "sender_full_name": "dank",
        "timestamp": 1675442946
    },
    {
        "content": "<p>I think we can do something similar to 1: put <code>println!(\"cargo:rustc-flags=--target=x86_64-unknown-linux-musl\");</code> in a <a href=\"http://build.rs\">build.rs</a> with a cfg for os and architecture.</p>",
        "id": 325684177,
        "sender_full_name": "Anton",
        "timestamp": 1675444776
    },
    {
        "content": "<p>that would get you <code>error: Only </code>-l<code> and </code>-L<code> flags are allowed in build script </code></p>",
        "id": 325686608,
        "sender_full_name": "dank",
        "timestamp": 1675445456
    },
    {
        "content": "<p>Too bad...<br>\nCan we set <code>CARGO_BUILD_TARGET</code> in the <a href=\"http://build.rs\">build.rs</a>?</p>",
        "id": 325690258,
        "sender_full_name": "Anton",
        "timestamp": 1675446530
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/what.20good.20first.20issues.20do.20you.20prioritize/near/325690258\">said</a>:</p>\n<blockquote>\n<p>Too bad...<br>\nCan we set <code>CARGO_BUILD_TARGET</code> in the <a href=\"http://build.rs\">build.rs</a>?</p>\n</blockquote>\n<p>lol I just now was trying it<br>\nI thought so but it doesn't seem to stick</p>",
        "id": 325694397,
        "sender_full_name": "dank",
        "timestamp": 1675447693
    },
    {
        "content": "<p>ahhh it's running in a subshell</p>",
        "id": 325694816,
        "sender_full_name": "dank",
        "timestamp": 1675447831
    },
    {
        "content": "<p><a href=\"https://gist.github.com/dankeyy/80fcc9c5d430b865cb89ddab896d83e1\">https://gist.github.com/dankeyy/80fcc9c5d430b865cb89ddab896d83e1</a><br>\nSo hacky, but something like this should work. this is a trick rusters (rusteceans?) use to bypass the fact that <a href=\"http://build.rs\">build.rs</a> runs in a subshell haha<br>\nAlthough on the link error I still see gnu. Haven't figured out why yet but that general direction should work</p>",
        "id": 325709432,
        "sender_full_name": "dank",
        "timestamp": 1675452670
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span></p>",
        "id": 325709653,
        "sender_full_name": "dank",
        "timestamp": 1675452751
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"583319\">@dank</span>, it looks acceptably hacky :p</p>",
        "id": 325788479,
        "sender_full_name": "Anton",
        "timestamp": 1675501566
    },
    {
        "content": "<p>What do you get with <code>./roc_nightly/roc build ./examples/countdown.roc</code>? In src/target you should see a folder named <code>x86_64-unknown-linux-musl</code> if it actually used that target</p>",
        "id": 325789930,
        "sender_full_name": "Anton",
        "timestamp": 1675502277
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/what.20good.20first.20issues.20do.20you.20prioritize/near/325789930\">said</a>:</p>\n<blockquote>\n<p>What do you get with <code>./roc_nightly/roc build ./examples/countdown.roc</code>? In src/target you should see a folder named <code>x86_64-unknown-linux-musl</code> if it actually used that target</p>\n</blockquote>\n<p>I do actually see that folder so that's good<br>\n(btw basic_cli can cargo build now)<br>\nbut when I look at ldd countdown it seems like it still links with glibc</p>",
        "id": 325809529,
        "sender_full_name": "dank",
        "timestamp": 1675510320
    },
    {
        "content": "<p>these are the changes and what came out if you wanna have a look too <a href=\"https://github.com/dankeyy/basic-cli/tree/custom_targets\">https://github.com/dankeyy/basic-cli/tree/custom_targets</a></p>",
        "id": 325810256,
        "sender_full_name": "dank",
        "timestamp": 1675510592
    },
    {
        "content": "<p>(I'll gitignore it later but) these look weird <br>\n<a href=\"https://github.com/roc-lang/basic-cli/commit/62e4af678f609e103eb4b58b62d9e2f1d283c1e2#diff-6350355364e65408a16e43505e743340cc1c16b136695be77ee0f12ac6fd7a1a\">https://github.com/roc-lang/basic-cli/commit/62e4af678f609e103eb4b58b62d9e2f1d283c1e2#diff-6350355364e65408a16e43505e743340cc1c16b136695be77ee0f12ac6fd7a1a</a></p>\n<p><a href=\"https://github.com/roc-lang/basic-cli/commit/62e4af678f609e103eb4b58b62d9e2f1d283c1e2#diff-03f3294caf9996fe87de1bfdd59548fe7ad796d658b0e63681410044a826632d\">https://github.com/roc-lang/basic-cli/commit/62e4af678f609e103eb4b58b62d9e2f1d283c1e2#diff-03f3294caf9996fe87de1bfdd59548fe7ad796d658b0e63681410044a826632d</a></p>",
        "id": 325810957,
        "sender_full_name": "dank",
        "timestamp": 1675510860
    },
    {
        "content": "<p><em>dropping unsupported crate type <code>cdylib</code> for target <code>x86_64-unknown-linux-musl</code></em></p>",
        "id": 325811061,
        "sender_full_name": "dank",
        "timestamp": 1675510909
    },
    {
        "content": "<p>I've found that \"rustc for musl does not support dynamic linking\" from <a href=\"https://github.com/rust-lang/cargo/issues/7154#issuecomment-513501047\">here</a>. I'm going to look into it more after lunch</p>",
        "id": 325813229,
        "sender_full_name": "Anton",
        "timestamp": 1675511649
    },
    {
        "content": "<p>damn</p>",
        "id": 325813545,
        "sender_full_name": "dank",
        "timestamp": 1675511773
    },
    {
        "content": "<p>We had it working earlier when always setting  x86_64-unknown-linux-musl with .cargo/config  so I'd expect we can solve this.</p>",
        "id": 325822760,
        "sender_full_name": "Anton",
        "timestamp": 1675515326
    },
    {
        "content": "<p>Can you try without <a href=\"https://github.com/dankeyy/basic-cli/blob/62e4af678f609e103eb4b58b62d9e2f1d283c1e2/src/build.rs#LL16C17-L16C56\">this line</a>?</p>",
        "id": 325823761,
        "sender_full_name": "Anton",
        "timestamp": 1675515756
    },
    {
        "content": "<p>still glibc</p>",
        "id": 325825037,
        "sender_full_name": "dank",
        "timestamp": 1675516279
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/what.20good.20first.20issues.20do.20you.20prioritize/near/325813229\">said</a>:</p>\n<blockquote>\n<p>I've found that \"rustc for musl does not support dynamic linking\" from <a href=\"https://github.com/rust-lang/cargo/issues/7154#issuecomment-513501047\">here</a>. I'm going to look into it more after lunch</p>\n</blockquote>\n<p>even setting the flags like the comment below suggests doesnt seem to effect anything</p>",
        "id": 325826276,
        "sender_full_name": "dank",
        "timestamp": 1675516793
    },
    {
        "content": "<p>i may have an idea as to what's going on. hold up</p>",
        "id": 325827314,
        "sender_full_name": "dank",
        "timestamp": 1675517198
    },
    {
        "content": "<p>ok I think it was a confusement of roc build on the target path<br>\ndeleting the custom target_dir arg, it hangs<br>\nill see what i can do</p>",
        "id": 325827916,
        "sender_full_name": "dank",
        "timestamp": 1675517426
    },
    {
        "content": "<p>Well bad news. <br>\nThe hacky approach doesnt seem to effect the build outcome (really not sure why)</p>\n<p>Neither does messing with RUST_FLAGS (from within the build script) <br>\nand unfortunately  neither does this trick I was hopeful  for  <code>//     println!(\"cargo:rustc-env=CARGO_BUILD_TARGET={}-unknown-linux-musl\", std::env::consts::ARCH);</code></p>\n<p>Worst case scenario we could actually just do it from outside the various rust configs, yea? it's just kinda sucky</p>\n<p>Maybe I'll come up with something clever later,  but for now kinda blocked ¯\\_(ツ)_/¯</p>",
        "id": 325858814,
        "sender_full_name": "dank",
        "timestamp": 1675530302
    },
    {
        "content": "<p>I've thought of something, we can create or write to an existing .cargo/config file for the CI workflow where the files (.rh1, .o) for linux are generated. Because we only do it in that step, there would be no issues on macos etc. .</p>",
        "id": 325865013,
        "sender_full_name": "Anton",
        "timestamp": 1675533469
    },
    {
        "content": "<p>yea I've thought of that. but at this point, wouldn't it be easier to just set the env var?</p>",
        "id": 325867038,
        "sender_full_name": "dank",
        "timestamp": 1675534563
    },
    {
        "content": "<p>(it should work if we're doing it externally, the only problem in previous approach was that it ran in a subshell)</p>",
        "id": 325867120,
        "sender_full_name": "dank",
        "timestamp": 1675534603
    },
    {
        "content": "<p>I know we clear all env vars at some points for better reproducibility, can you check if setting the env var works?<br>\nIt is indeed the easier solution :)</p>",
        "id": 325867681,
        "sender_full_name": "Anton",
        "timestamp": 1675534883
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/what.20good.20first.20issues.20do.20you.20prioritize/near/325867681\">said</a>:</p>\n<blockquote>\n<p>I know we clear all env vars at some points for better reproducibility, can you check if setting the env var works?<br>\nIt is indeed the easier solution :)</p>\n</blockquote>\n<p>yea yea. I ran it before to make sure it's a only the subshell's fault that it's still linking with glibc..<br>\nit works great</p>\n<div class=\"codehilite\"><pre><span></span><code>[dankey@computer:~/dev/basic-cli/src]$ CARGO_BUILD_TARGET=x86_64-unknown-linux-musl ~/dev/roc/target/debug/roc build ~/dev/basic-cli/examples/countdown.roc &amp;&amp; ldd /home/dankey/dev/basic-cli/examples/countdown\n🔨 Rebuilding platform...\n0 errors and 0 warnings found in 1532 ms while successfully building:\n\n    /home/dankey/dev/basic-cli/examples/countdown\n        statically linked\n</code></pre></div>",
        "id": 325870224,
        "sender_full_name": "dank",
        "timestamp": 1675536482
    },
    {
        "content": "<p>Excellent, I'll do a new release of basic-cli on Monday. Thanks for all the help <span class=\"user-mention\" data-user-id=\"583319\">@dank</span>!</p>",
        "id": 325926765,
        "sender_full_name": "Anton",
        "timestamp": 1675586906
    },
    {
        "content": "<p>I wanted to add some extra testing for the basic-cli release and ended up spending a long time on some refactoring. I should be able to release tomorrow though.</p>",
        "id": 326217673,
        "sender_full_name": "Anton",
        "timestamp": 1675710440
    },
    {
        "content": "<p>What's up Anton?<br>\nI gather something didnt work?</p>",
        "id": 326686092,
        "sender_full_name": "dank",
        "timestamp": 1675890831
    },
    {
        "content": "<p>btw is someone working on the editor right now? i saw a couple todos which might be doable for me</p>",
        "id": 326686308,
        "sender_full_name": "dank",
        "timestamp": 1675890913
    },
    {
        "content": "<p>My understanding is that editor development has been on hold for a little while, the focus has been smashing bugs and adding core features/stability I think. <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> mentioned a refactor of the editor is planned to start soon, this half of 2023. I started looking at the Breakout example to learn more and prepare for editor dev, then switched to making my own platform <code>roc-tui</code> but haven't made much progress recently. I think glue is being upgraded to use a <code>.roc</code> plugin for code generation and also to support a new way of doing effects without the <code>hosted</code> module type. This will be necessary for building more complicated platforms, and should enable more host languages to be supportable by glue. I am not sure how progress is on this, if anyone has an update that would be super. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 326697048,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675895260
    },
    {
        "content": "<p>Anton is on holiday for a few days. And yeah, active development editor has been on hold; the priority for now is stabilizing the language and pushing along glue and effects.</p>",
        "id": 326700919,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1675896848
    },
    {
        "content": "<p>Having glue work with Roc plugins is currently ongoing. Besides that, a big effort is getting glue to work with generating bindings for closures, which Folkert is working on.</p>",
        "id": 326701070,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1675896920
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"454654\">Ayaz Hafiz</span> <a href=\"#narrow/stream/316715-contributing/topic/what.20good.20first.20issues.20do.20you.20prioritize/near/326700919\">said</a>:</p>\n<blockquote>\n<p>Anton is on holiday for a few days. And yeah, active development editor has been on hold; the priority for now is stabilizing the language and pushing along glue and effects.</p>\n</blockquote>\n<p>any pressing good first issues in these areas?</p>",
        "id": 326878016,
        "sender_full_name": "dank",
        "timestamp": 1675965112
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"583319\">@dank</span> I'm not as qualified as most people here. But I think something that I would personally find very helpful is if you were able to write some of the documentation for <code>Abilities</code> language feature.</p>\n<p>At the moment I understand there are a number of Abilities implemented, esp <code>Eq</code> <code>Hash</code> <code>Encode</code> <code>Decode</code> etc, but there is really limited documentation, especially for making your own custom ones. </p>\n<p>Note that I think there was some discussion about changing the syntax a bit because we don't love the current implementation, I will try and dig out that discussion and link here.</p>\n<p>You can find information scattered through various tests, merged PRs, and some discussion on Zulip here. But consolidating that into some notes would be super helpful. </p>\n<p>I've had a few goes at using abilities and found some bugs. I've not made much progress playing with them as it is difficult for me to separate my lack of understanding and incomplete feature sometimes.</p>\n<p>There is a section waiting to be written in the tutorial using markdown at;</p>\n<p><code>www/generate_tutorial/src/input/tutorial.md</code></p>\n<p>And also the documentation comments for the builtins are missing at</p>\n<p><code>crates/compiler/builtins/roc/Encode.roc</code> and <code>crates/compiler/builtins/roc/Decode.roc</code></p>",
        "id": 326925712,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675980516
    },
    {
        "content": "<p>Note there is a design doc in the repo at <code>design/language/Abilities.md</code></p>",
        "id": 326925953,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675980608
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/2463\">Tracking PR</a></p>",
        "id": 326926272,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675980732
    },
    {
        "content": "<p><a href=\"#narrow/stream/304641-ideas/topic/Abilities\">Zulip abilities</a></p>\n<p><a href=\"#narrow/stream/304641-ideas/topic/Abilities.20syntax\">Zulip abilities syntax</a></p>",
        "id": 326928257,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675981629
    },
    {
        "content": "<p>Another idea for anyone to consider. It's writing Roc code, so not really compiler stuff which I think your looking for <span class=\"user-mention\" data-user-id=\"583319\">@dank</span>; but if anyone is interested we could write more parsers, tests and examples. </p>\n<p>We've got a parser package at <code>examples/parser/package/main.roc</code> and examples at <code>examples/parser/examples</code>.</p>\n<p>I started with a plan to write smaller examples to show how to write/use parsers in Roc, and also add more tests, but haven't touched it in a few weeks.</p>",
        "id": 326944773,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675990258
    },
    {
        "content": "<p>what kind of things are you interested in? if you are interested in type systems and/or compilation (lowering source languages) feel free to DM me; less good first issues there, but we’d love to figure out a project you might like and ramp up!!</p>",
        "id": 326959565,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1675998177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"583319\">@dank</span> sorry, I should have communicated my progress. I'm now ironing out the last bugs on the automated testing of the release. The combination of bash and multiple CI servers makes for a slow feedback loop, but I expect to be done on monday.</p>",
        "id": 327266741,
        "sender_full_name": "Anton",
        "timestamp": 1676128316
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"454654\">Ayaz Hafiz</span> <a href=\"#narrow/stream/316715-contributing/topic/what.20good.20first.20issues.20do.20you.20prioritize/near/326959565\">said</a>:</p>\n<blockquote>\n<p>what kind of things are you interested in? if you are interested in type systems and/or compilation (lowering source languages) feel free to DM me; less good first issues there, but we’d love to figure out a project you might like and ramp up!!</p>\n</blockquote>\n<p>thanks. im mostly interested in backend stuff like code gen and optimizations.<br>\ni'll finish some unrelated stuff and dm you soon, thanks!!</p>",
        "id": 327272561,
        "sender_full_name": "dank",
        "timestamp": 1676130579
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/what.20good.20first.20issues.20do.20you.20prioritize/near/327266741\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"583319\">dank</span> sorry, I should have communicated my progress. I'm now ironing out the last bugs on the automated testing of the release. The combination of bash and multiple CI servers makes for a slow feedback loop, but I expect to be done on monday.</p>\n</blockquote>\n<p>oh no worries! glad it's going ok <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 327272677,
        "sender_full_name": "dank",
        "timestamp": 1676130615
    },
    {
        "content": "<p>I've made the 0.2.1 pre-release for basic-cli. I've tested it and it works on NixOS <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>. I'm really glad we got this done, thank you so much for your help @dank!</p>\n<p>Note that it's currently using tar.gz instead of <a href=\"http://tar.br\">tar.br</a>, I'll update it to <a href=\"http://tar.br\">tar.br</a> on Monday.</p>",
        "id": 327294461,
        "sender_full_name": "Anton",
        "timestamp": 1676141633
    },
    {
        "content": "<p>Anton I think we've got a small issue though. Are you sure url download works on your nixos?</p>\n<div class=\"codehilite\"><pre><span></span><code>❯ ldd ~/.cache/roc/packages/github.com/roc-lang/basic-cli/releases/download/0.2.1/Ja9E41aYCiBElYvaSIGl7RY8_kQcdtwApHUcCnt-YDQ/linux-x86_64.rh1\n        ldd (0x7f4f5519d000)\n\n~/testing/roctests\n❯ file ~/.cache/roc/packages/github.com/roc-lang/basic-cli/releases/download/0.2.1/Ja9E41aYCiBElYvaSIGl7RY8_kQcdtwApHUcCnt-YDQ/linux-x86_64.rh1\n/home/dankey/.cache/roc/packages/github.com/roc-lang/basic-cli/releases/download/0.2.1/Ja9E41aYCiBElYvaSIGl7RY8_kQcdtwApHUcCnt-YDQ/linux-x86_64.rh1: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), static-pie linked, BuildID[sha1]=1ebcd9d14b2c1a1840a12d240ae2a4fbb3624133, with debug_info, not stripped\n</code></pre></div>\n<p>It's a static-pie<br>\nSo \"statically linked\" won't show in ldd rh1<br>\nSo it will trigger an error on nixOS</p>",
        "id": 327295648,
        "sender_full_name": "dank",
        "timestamp": 1676142398
    },
    {
        "content": "<p>Oh I see. Yes it did work on NixOS, I don't know yet why the error was not triggered...</p>",
        "id": 327296173,
        "sender_full_name": "Anton",
        "timestamp": 1676142701
    },
    {
        "content": "<p>it does trigger on my machine actually</p>",
        "id": 327296362,
        "sender_full_name": "dank",
        "timestamp": 1676142794
    },
    {
        "content": "<p>but ofc no reason static-pie wouldnt work (and it does) <br>\nso it's a pretty easy fix <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> <br>\nif you'd want I can pr a fix to account for static-pie real quick</p>",
        "id": 327297477,
        "sender_full_name": "dank",
        "timestamp": 1676143535
    },
    {
        "content": "<p>This can be done by either querying ldd for (not)\"=&gt;\" or \"ldd\". <br>\nOr even moving as a whole to using <code>file</code> instead (tho that's probably not ideal bc then you need to actually regex it in case the path contains \"static\" haha).<br>\nwhichever you prefer</p>",
        "id": 327297612,
        "sender_full_name": "dank",
        "timestamp": 1676143635
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>querying ldd for (not)&quot;=&gt;&quot; or &quot;ldd&quot;.\n</code></pre></div>\n<p>Sounds good :)</p>",
        "id": 327350792,
        "sender_full_name": "Anton",
        "timestamp": 1676190183
    },
    {
        "content": "<p>I've uploaded the new <a href=\"http://tar.br\">tar.br</a> to the basic-cli release assets</p>",
        "id": 327567078,
        "sender_full_name": "Anton",
        "timestamp": 1676299757
    },
    {
        "content": "<p>So now everything works out of the box in NixOS</p>\n<div class=\"codehilite\"><pre><span></span><code>❯ ~/dev/roc/target/release/roc dev\nDownloading https://github.com/roc-lang/basic-cli/releases/download/0.2.1/wx1N6qhU3kKva-4YqsVJde3fho34NqiLD3m620zZ-OI.tar.br\n    into /home/dankey/.cache/roc/packages\n\nhellooo\n</code></pre></div>\n<p>that's so cool</p>",
        "id": 327615108,
        "sender_full_name": "dank",
        "timestamp": 1676312502
    },
    {
        "content": "<p>WOOOO!!!!! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 327632483,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1676317440
    },
    {
        "content": "<p>amazing job getting that working!</p>",
        "id": 327632562,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1676317456
    },
    {
        "content": "<p>that's fantastic - so now we have a template that future Roc platforms with Rust hosts can use for how to Just Work across Linux distros, even Nix! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 327635245,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1676318423
    },
    {
        "content": "<p>oh also it means we can drop this note in the tutorial now <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span> </p>\n<p><a href=\"/user_uploads/22008/E-qcIZ_1YfMaF06Sx-QxmnTO/Screen-Shot-2023-02-24-at-12.44.19-PM.png\">Screen-Shot-2023-02-24-at-12.44.19-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/E-qcIZ_1YfMaF06Sx-QxmnTO/Screen-Shot-2023-02-24-at-12.44.19-PM.png\" title=\"Screen-Shot-2023-02-24-at-12.44.19-PM.png\"><img src=\"/user_uploads/22008/E-qcIZ_1YfMaF06Sx-QxmnTO/Screen-Shot-2023-02-24-at-12.44.19-PM.png\"></a></div>",
        "id": 336545490,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1677260727
    },
    {
        "content": "<p>Yeah, I have had a PR up for it for some time but I'm still encountering a difficult to debug CI issue</p>",
        "id": 336550207,
        "sender_full_name": "Anton",
        "timestamp": 1677262018
    },
    {
        "content": "<p>oh weird</p>",
        "id": 336553257,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1677262891
    }
]