[
    {
        "content": "<p>Should the Standard Library have a function similar to <a href=\"https://package.elm-lang.org/packages/elm/core/latest/Dict#update\">Elm's <code>Dict.update</code></a>?</p>",
        "id": 303145134,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665329414
    },
    {
        "content": "<p>yes! We were just talking about that in another thread, and I think there's an issue for it now</p>",
        "id": 303145299,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665329493
    },
    {
        "content": "<p>Excellent! <span aria-label=\"raised hands\" class=\"emoji emoji-1f64c\" role=\"img\" title=\"raised hands\">:raised_hands:</span> </p>\n<p>I link them here for reference: <a href=\"https://github.com/roc-lang/roc/issues/4239\">GitHub Issue</a> and <a href=\"#narrow/stream/316715-contributing/topic/builtins/near/302742164\">Zulip Topic</a></p>",
        "id": 303146037,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665329959
    },
    {
        "content": "<p>I implemented the <code>Dict.update</code> function in <a href=\"https://github.com/roc-lang/roc/pull/4273/files\">this PR</a> and I think it is fine. I followed <a href=\"https://github.com/roc-lang/roc/blob/main/BUILDING_FROM_SOURCE.md#on-linux-x86_64aarch64-or-macos-aarch64arm64x86_64\">the instructions to build from source</a> yet when I run <code>cargo run repl</code> and try to use <code>Dict.update</code>, the REPL tells me that <code>The Dict module does not expose update</code>.</p>\n<p>Not sure what I'm missing. Am I editing the wrong file?</p>",
        "id": 303167602,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665345253
    },
    {
        "content": "<p>you’ll need to also add the symbol here: <a href=\"https://github.com/roc-lang/roc/blob/07ceabc9aa12c81792c33b98f7e45b9d05f903ca/crates/compiler/module/src/symbol.rs#L1413\">https://github.com/roc-lang/roc/blob/07ceabc9aa12c81792c33b98f7e45b9d05f903ca/crates/compiler/module/src/symbol.rs#L1413</a></p>",
        "id": 303168545,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1665346124
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"454654\">Ayaz Hafiz</span> <a href=\"#narrow/stream/316715-contributing/topic/Dict.2Eupdate/near/303168545\">said</a>:</p>\n<blockquote>\n<p>you’ll need to also add the symbol here: <a href=\"https://github.com/roc-lang/roc/blob/07ceabc9aa12c81792c33b98f7e45b9d05f903ca/crates/compiler/module/src/symbol.rs#L1413\">https://github.com/roc-lang/roc/blob/07ceabc9aa12c81792c33b98f7e45b9d05f903ca/crates/compiler/module/src/symbol.rs#L1413</a></p>\n</blockquote>\n<p>What does this file do?</p>",
        "id": 303168746,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665346334
    },
    {
        "content": "<p>We have to treat builtins differently in the compiler, so this file defines the symbols (definition names, type names, etc) used in the builtin modules.</p>",
        "id": 303168814,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1665346429
    },
    {
        "content": "<p>It worked! Thanks!</p>",
        "id": 303170060,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665347446
    },
    {
        "content": "<p>PR ready: <a href=\"https://github.com/roc-lang/roc/pull/4273\">https://github.com/roc-lang/roc/pull/4273</a></p>",
        "id": 303176985,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665355191
    },
    {
        "content": "<p>nice! I'd suggest adding an <code>expect</code> test or two underneath it, just to verify it's working as expected <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 303177412,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665355695
    },
    {
        "content": "<p>we don't have those for most of the stdlib because the stdlib existed way before <code>expect</code> did, but I'd like to start a trend of including those tests with the implementations!</p>",
        "id": 303177444,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665355746
    },
    {
        "content": "<p>Done</p>",
        "id": 303182114,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665361362
    },
    {
        "content": "<p>Now that the PR has merged, I see that <a href=\"https://www.roc-lang.org/builtins/Dict\">the Standard Library docs</a> are outdated. I must have missed a step somewhere or misunderstand Roc's processes since I expected that the comments I added to the function would be used there. I also see that <a href=\"https://github.com/roc-lang/roc/actions/runs/3216108468/jobs/5257804449\">the CI</a> only runs <code>roc test</code> (through <code>cargo run</code>) on the <code>Str</code> module, so the tests I added are not contributing to the CI pipeline.</p>",
        "id": 303235150,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665398232
    },
    {
        "content": "<p>The website is deployed using the www branch, see the procedure <a href=\"https://github.com/roc-lang/roc/issues/1523#issue-959207429\">here</a>.</p>",
        "id": 303240939,
        "sender_full_name": "Anton",
        "timestamp": 1665401028
    },
    {
        "content": "<blockquote>\n<p>I also see that the CI only runs roc test (through cargo run) on the Str module...</p>\n</blockquote>\n<p>Good catch! Can you update the step to include the other builtins?</p>",
        "id": 303241380,
        "sender_full_name": "Anton",
        "timestamp": 1665401197
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/Dict.2Eupdate/near/303240939\">said</a>:</p>\n<blockquote>\n<p>The website is deployed using the www branch, see the procedure <a href=\"https://github.com/roc-lang/roc/issues/1523#issue-959207429\">here</a>.</p>\n</blockquote>\n<p>The Standard Library is not found in that directory. Let me see if I can find it in the source code.</p>",
        "id": 303246968,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665403423
    },
    {
        "content": "<p>In case you haven't found it: <a href=\"https://github.com/roc-lang/roc/tree/main/crates/compiler/builtins/roc\">https://github.com/roc-lang/roc/tree/main/crates/compiler/builtins/roc</a></p>",
        "id": 303251512,
        "sender_full_name": "Anton",
        "timestamp": 1665405186
    },
    {
        "content": "<p>Yup, I was able to generate the docs locally, and my changes appear there, so there must be something missing in the CD that deploys the website.</p>",
        "id": 303252634,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665405596
    },
    {
        "content": "<p>The procedure <a href=\"https://github.com/roc-lang/roc/issues/1523#issue-959207429\">I linked earlier</a> does not explicitly state that <code>www</code> is a branch.<br>\nSo you need to do a PR against the www branch instead of the main branch to update the website.</p>",
        "id": 303253797,
        "sender_full_name": "Anton",
        "timestamp": 1665406049
    },
    {
        "content": "<p>I need better reading comprehension skills <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 303253932,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665406096
    },
    {
        "content": "<p>Not sure why we set this up with the separate www branch to deploy but I suspect it's for good reason :)</p>",
        "id": 303253971,
        "sender_full_name": "Anton",
        "timestamp": 1665406111
    },
    {
        "content": "<p>yeah it's that we get a limited number of Netlify build minutes per month</p>",
        "id": 303254110,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665406177
    },
    {
        "content": "<p>so we want to only use them when we know we have relevant changes to deploy <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 303254199,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665406212
    },
    {
        "content": "<p>That makes sense. Should I create a PR from <code>main</code> to <code>www</code> then?</p>",
        "id": 303254246,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665406239
    },
    {
        "content": "<p>I'm updating <code>CONTRIBUTING.md</code> with instructions on how to build the Standard Library docs locally. What is Roc's preferred local server? I used <a href=\"https://www.npmjs.com/package/http-server\"><code>http-server</code></a>, but I can imagine that we don't want to assume that contributors have node installed locally.</p>",
        "id": 303254521,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665406351
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"551608\">Chris Duncan</span> <a href=\"#narrow/stream/316715-contributing/topic/Dict.2Eupdate/near/303254246\">said</a>:</p>\n<blockquote>\n<p>That makes sense. Should I create a PR from <code>main</code> to <code>www</code> then?</p>\n</blockquote>\n<p>Yep that should be good</p>",
        "id": 303254687,
        "sender_full_name": "Anton",
        "timestamp": 1665406414
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"551608\">Chris Duncan</span> <a href=\"#narrow/stream/316715-contributing/topic/Dict.2Eupdate/near/303254521\">said</a>:</p>\n<blockquote>\n<p>I'm updating <code>CONTRIBUTING.md</code> with instructions on how to build the Standard Library docs locally. What is Roc's preferred local server? I used <a href=\"https://www.npmjs.com/package/http-server\"><code>http-server</code></a>, but I can imagine that we don't want to assume that contributors have node installed locally.</p>\n</blockquote>\n<p>We have a deploy preview for PRs to the www  branch, so is it really necessary to build them locally?</p>",
        "id": 303254874,
        "sender_full_name": "Anton",
        "timestamp": 1665406478
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/Dict.2Eupdate/near/303254874\">said</a>:</p>\n<blockquote>\n<p>We have a deploy preview for PRs to the www  branch, so is it really necessary to build them locally?</p>\n</blockquote>\n<p>If you don't want to clog or wait on the CI, yup.</p>",
        "id": 303255921,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665406861
    },
    {
        "content": "<p>Here's the PR to the <code>www</code> branch:<br>\n<a href=\"https://github.com/roc-lang/roc/pull/4282\">https://github.com/roc-lang/roc/pull/4282</a></p>",
        "id": 303255950,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665406876
    },
    {
        "content": "<p>This also sounds like it may be a good use of weekly auto PR or something of that nature. Of course it would mean the docs have more lag, but it would not waist build minutes and would ensure they don't get forgotten.</p>",
        "id": 303267595,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665411121
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> would we have enough netlify build minutes for a weekly run?</p>",
        "id": 303271968,
        "sender_full_name": "Anton",
        "timestamp": 1665412592
    },
    {
        "content": "<p>apparently Netlify has an <a href=\"https://www.netlify.com/legal/open-source-policy/\">Open Source plan</a> which gives you 25k build minutes per month (up from the current 300), as long as you put \"powered by Netlify\" on the homepage. So I'm gonna do that and apply for it! Then we can do nightly builds at the same time as generating the nightly binaries.</p>",
        "id": 303282260,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665416228
    },
    {
        "content": "<p>Oh that's great! I'm always forgetting to deploy things like web REPL fixes after merging to <code>main</code>! So will we keep the <code>www</code> branch but update it automatically? That way we can still do hot fixes if we break stuff.</p>",
        "id": 303332311,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1665440225
    },
    {
        "content": "<p>that makes sense to me! <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 303332795,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665440604
    },
    {
        "content": "<p>success! we've been approved</p>",
        "id": 303349054,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665453409
    },
    {
        "content": "<p>so now we can I guess just <code>git reset --hard</code> the <code>www</code> branch to <code>main</code> every night, and should be good?</p>",
        "id": 303349072,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665453428
    },
    {
        "content": "<p>How about just trigger the nightly cron job to deploy <code>main</code> and forget about the <code>www</code> branch?</p>",
        "id": 303350172,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665454407
    },
    {
        "content": "<p>this way we don't need Netlify credentials in GitHub, Netlify can just pull from the already-public GH repo</p>",
        "id": 303354373,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665458688
    },
    {
        "content": "<p>Though I thought that <code>main</code> is already public.</p>",
        "id": 303354495,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665458842
    },
    {
        "content": "<p>oh it is - just Netlify is set up to trigger on push to a particular branch, so if we set it to do that on <code>main</code>, it would deploy <code>main</code> on every PR merge</p>",
        "id": 303362522,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665466605
    },
    {
        "content": "<blockquote>\n<p>so now we can I guess just <code>git reset --hard</code> the <code>www</code> branch to <code>main</code> every night, and should be good?</p>\n</blockquote>\n<p>I'll set up a workflow for that.</p>",
        "id": 303363506,
        "sender_full_name": "Anton",
        "timestamp": 1665467369
    },
    {
        "content": "<p>This latest commit should pass the CI<br>\n<a href=\"https://github.com/roc-lang/roc/pull/4289\">https://github.com/roc-lang/roc/pull/4289</a></p>",
        "id": 305658876,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1666528810
    }
]