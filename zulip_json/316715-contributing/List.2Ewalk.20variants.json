[
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6468\">Created a ticket for absent <code>List.walk</code> variants</a></p>\n<p>The number of combinations looks ridiculous (8 out of 16 are implemented). Does it make sense to combine at least <code>from, until, fromUntil</code> into a single <code>fromUntil</code>? It would reduce the number of variants by <code>8</code></p>\n<p>If to use the same type as in <code>List.range</code> for the config, it would be possible to eliminate <code>forward/backward</code> difference, so <code>start</code> and <code>end</code> would affect the iteration direction. So it's <code>2</code> variants less, leaving only <code>6</code> of them:</p>\n<ul>\n<li>walk</li>\n<li>walkWithIndex</li>\n<li>walkBackwards</li>\n<li>walkBackwardsWithIndex</li>\n<li>walkRange</li>\n<li>walkRangeWithIndex</li>\n</ul>",
        "id": 418803833,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1706609402
    },
    {
        "content": "<p>I already tripped over this while doing AoC. It baffles me that in a functional language these orthogonal concepts, \"with index\", \"backwards\", \"until\" are not easily composable but need dedicated functions for each combination.</p>",
        "id": 421701606,
        "sender_full_name": "mkrieger1",
        "timestamp": 1708016799
    },
    {
        "content": "<p><code>walkRange</code> isn't necessary anymore thanks to seamless slices, and once we have deforestation/fusion we can replace the others with just <code>|&gt; List.reverse</code> for backwards and <code>|&gt; List.withIndex</code> for \"with index\"</p>",
        "id": 421707106,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1708018626
    },
    {
        "content": "<p>you can already do it today using composition, but the performance cost is very high because it requires copying the entire list</p>",
        "id": 421707269,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1708018685
    },
    {
        "content": "<p>so if we didn't expose some of these primitives (range is obsolete and we can get rid of those anytime), then today there would be no option but to pay that performance cost</p>",
        "id": 421707374,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1708018733
    }
]