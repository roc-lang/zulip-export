[
    {
        "content": "<p>Hi, is anyone already working on a language server? I would really like one, because I'm using roc in WSL2 all the time, can't have a GUI there and I also probably would want to use my default editor with all my settings, keybindings etc. If no one is working on one, I'd like to give it a go (also to learn more about the parser and compiler <span aria-label=\"nerd\" class=\"emoji emoji-1f913\" role=\"img\" title=\"nerd\">:nerd:</span> )</p>",
        "id": 345398194,
        "sender_full_name": "itmuckel",
        "timestamp": 1680095863
    },
    {
        "content": "<p>Ayaz made a simple language server, it's available <a href=\"https://github.com/ayazhafiz/roc/releases/tag/langsrv\">here</a>. We don't plan on officially supporting one because we're making our own editor where we can connect with the compiler without the restrictions or the latency of the language server protocol.</p>",
        "id": 345416962,
        "sender_full_name": "Anton",
        "timestamp": 1680099592
    },
    {
        "content": "<p>Oh, that's cool, thank you for the hint :-)</p>",
        "id": 345422582,
        "sender_full_name": "itmuckel",
        "timestamp": 1680100518
    },
    {
        "content": "<p>As Anton mentioned it's quite naive, but if you are interested in learning more about the compiler of Roc, it could be interesting to add another feature you find valuable to it. Or, if you just want to learn more about and/or play with the compiler, we would be happy to find a project that would be interesting to work on!</p>",
        "id": 345424449,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1680100848
    },
    {
        "content": "<p>On linux and on windows I get these kind of errors:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0512]: cannot transmute between types of different sizes, or dependently-sized types\n  --&gt; /home/itmuckel/.cargo/git/checkouts/roc-f2007fde281427d6/52fa78a/crates/compiler/mono/src/ir.rs:75:1\n   |\n75 | roc_error_macros::assert_sizeof_non_wasm!(Expr, 9 * 8);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: source type: `ir::Expr&lt;&#39;_&gt;` (640 bits)\n   = note: target type: `[u8; 72]` (576 bits)\n   = note: this error originates in the macro `static_assertions::assert_eq_size` which comes from the expansion of the macro `roc_error_macros::assert_sizeof_non_wasm` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0512]: cannot transmute between types of different sizes, or dependently-sized types\n  --&gt; /home/itmuckel/.cargo/git/checkouts/roc-f2007fde281427d6/52fa78a/crates/compiler/mono/src/ir.rs:76:1\n   |\n76 | roc_error_macros::assert_sizeof_non_wasm!(Stmt, 12 * 8);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: source type: `Stmt&lt;&#39;_&gt;` (832 bits)\n   = note: target type: `[u8; 96]` (768 bits)\n   = note: this error originates in the macro `static_assertions::assert_eq_size` which comes from the expansion of the macro `roc_error_macros::assert_sizeof_non_wasm` (in Nightly builds, run with -Z macro-backtrace for more info)\n</code></pre></div>\n<p>any idea where they could come from?</p>",
        "id": 345437117,
        "sender_full_name": "itmuckel",
        "timestamp": 1680103159
    },
    {
        "content": "<p>compiling only with nix develop fixed it. :-/</p>",
        "id": 345451766,
        "sender_full_name": "itmuckel",
        "timestamp": 1680106204
    },
    {
        "content": "<p>Ah yes, that can occur when you tried to build with a different rust version</p>",
        "id": 345455137,
        "sender_full_name": "Anton",
        "timestamp": 1680106956
    },
    {
        "content": "<p>Just updated the language server and now I am getting unused variable warning where I don't think I was before. In the screenshot below you can see that I am using <code>calcNextHistory</code> in the <code>expect</code> but for some reason it is reporting this warning.<br>\n<a href=\"/user_uploads/22008/Q3czrQfCDe23fEvpZeeS0qou/Screenshot-2023-12-09-at-19.06.16.png\">Screenshot-2023-12-09-at-19.06.16.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/Q3czrQfCDe23fEvpZeeS0qou/Screenshot-2023-12-09-at-19.06.16.png\" title=\"Screenshot-2023-12-09-at-19.06.16.png\"><img src=\"/user_uploads/22008/Q3czrQfCDe23fEvpZeeS0qou/Screenshot-2023-12-09-at-19.06.16.png\"></a></div>",
        "id": 406906240,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702109296
    },
    {
        "content": "<p>Also I have noticed messages like this occurring (though I don't think this is a recent change or anything), I suspect it has been running on repeat in the background and crashing. Is there a way to have it only run on file save?<br>\n<a href=\"/user_uploads/22008/FU3BwLkJ4i6PnK7gB3FPruWq/Screenshot-2023-12-09-at-19.10.13.png\">Screenshot-2023-12-09-at-19.10.13.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/FU3BwLkJ4i6PnK7gB3FPruWq/Screenshot-2023-12-09-at-19.10.13.png\" title=\"Screenshot-2023-12-09-at-19.10.13.png\"><img src=\"/user_uploads/22008/FU3BwLkJ4i6PnK7gB3FPruWq/Screenshot-2023-12-09-at-19.10.13.png\"></a></div>",
        "id": 406906493,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702109504
    },
    {
        "content": "<p>Figured out where the errors are logged, this is what I see<br>\n<a href=\"/user_uploads/22008/dP0pVvblYFoCwFaOR_F4TAYx/Screenshot-2023-12-09-at-19.14.03.png\">Screenshot-2023-12-09-at-19.14.03.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/dP0pVvblYFoCwFaOR_F4TAYx/Screenshot-2023-12-09-at-19.14.03.png\" title=\"Screenshot-2023-12-09-at-19.14.03.png\"><img src=\"/user_uploads/22008/dP0pVvblYFoCwFaOR_F4TAYx/Screenshot-2023-12-09-at-19.14.03.png\"></a></div>",
        "id": 406906722,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702109658
    },
    {
        "content": "<p>The program was in a known bad state (mid writing a function) when this occurred</p>",
        "id": 406906740,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702109676
    },
    {
        "content": "<p>This might be more of a <span class=\"user-mention\" data-user-id=\"625544\">@Ivan Demchenko</span> VS code extension issue than language server?</p>",
        "id": 406906772,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702109703
    },
    {
        "content": "<p>Logged <a href=\"https://github.com/roc-lang/roc/issues/6227\">Issue #6227</a> for the unhandled parse issue.</p>\n<p>I guess there is no way for VS Code to recover here. If the language server instantly panics all it can do it try again?</p>\n<p>I was thinking maybe we could try once. But then wait until the file is saved before trying to restart the server? OTOH maybe this is a great way to find issues?</p>",
        "id": 406908246,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702110509
    },
    {
        "content": "<p>I've noticed I frequently need to restart the server in helix (luckily the server is so fast it is not a hassle)</p>",
        "id": 406960154,
        "sender_full_name": "Pearce Keesling",
        "timestamp": 1702145255
    },
    {
        "content": "<p>The language server runs in the normal compile mode, not with expects turned on. That's an easy fix though if anyone wants to do it.</p>",
        "id": 406961018,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1702146098
    },
    {
        "content": "<p>I'm pretty sure there is no way to configure a language server to only update documents on save. There might be a VSCode-specific setting but in general I think the answer is to fix the panics</p>",
        "id": 406961118,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1702146163
    },
    {
        "content": "<p>No worries. Well, now that I've seen the issue I'm going to watch the server like a hawk and try to catch and fix everything that crashes it, which also has the benefit of helpong roc provide better errors. I just hadn't noticed the notification before, and wasn't sure what to do about it.</p>",
        "id": 406968211,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702152997
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/language.20server/near/345416962\">said</a>:</p>\n<blockquote>\n<p>Ayaz made a simple language server, it's available <a href=\"https://github.com/ayazhafiz/roc/releases/tag/langsrv\">here</a>. We don't plan on officially supporting one because we're making our own editor where we can connect with the compiler without the restrictions or the latency of the language server protocol.</p>\n</blockquote>\n<p>Is this information still accurate? It seems to me that LSP is basically a standard at this point, and having an officially \"blessed\" one would make it much easier to get people up and working in Roc with whatever editor they already have.</p>",
        "id": 430401774,
        "sender_full_name": "nat-418",
        "timestamp": 1711815255
    },
    {
        "content": "<blockquote>\n<p>Is this information still accurate?</p>\n</blockquote>\n<p>No, a language server is now included with the nightly release :)</p>",
        "id": 430402267,
        "sender_full_name": "Anton",
        "timestamp": 1711815789
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/316715-contributing/topic/language.20server/near/430402267\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Is this information still accurate?</p>\n</blockquote>\n<p>No, a language server is now included with the nightly release :)</p>\n</blockquote>\n<p>Great, I am going to try and get it working with Neovim and contribute the configuration upstream so future new users can have an easy setup.</p>",
        "id": 430402643,
        "sender_full_name": "nat-418",
        "timestamp": 1711816130
    }
]