[
    {
        "content": "<p>We just landed <a href=\"https://github.com/rtfeldman/roc/issues/2214\">opaque types</a> in the language and need help migrating uses of  <a href=\"https://github.com/rtfeldman/roc/blob/trunk/roc-for-elm-programmers.md#opaque-types\">private tags</a> to these new opaque types! If you'd like to help out, please see <a href=\"https://github.com/rtfeldman/roc/issues/2584\">https://github.com/rtfeldman/roc/issues/2584</a> and feel free to follow up in this thread!</p>",
        "id": 273424951,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1645995709
    },
    {
        "content": "<p>Hi,</p>\n<p>Happy to give a hand</p>",
        "id": 273425605,
        "sender_full_name": "Philippe",
        "timestamp": 1645996612
    },
    {
        "content": "<p>Happy to work on this as well</p>",
        "id": 273425704,
        "sender_full_name": "Carlo Munguia",
        "timestamp": 1645996758
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"478882\">@Carlo Munguia</span> about to go to bed and then I have work tomorrow... Won't be able to make any progress before tomorrow evening (18 UTC).</p>\n<p>Feel free to take lead</p>",
        "id": 273426131,
        "sender_full_name": "Philippe",
        "timestamp": 1645997301
    },
    {
        "content": "<p>I might be able to look into some aspects of it later this week / next week. Very busy at them moment and not yet confident at all in the codebase.<br>\nWill check in then and see if there’s still stuff to do on this.</p>",
        "id": 273447927,
        "sender_full_name": "Bastian Beuttel",
        "timestamp": 1646026437
    },
    {
        "content": "<p>Hey, I’d be happy to help with this. Which of the subtasks do you think could be a good start for a first dig into the codebase <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span>?</p>",
        "id": 273462206,
        "sender_full_name": "Loric Brevet",
        "timestamp": 1646039605
    },
    {
        "content": "<p>They need to be done roughly in order, so the first one. The first will also show you roughly how the code base is organized.</p>",
        "id": 273493450,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1646057265
    },
    {
        "content": "<p>Currently looking at ^^<br>\nBut I am having issues finding private tags</p>\n<p>When I search the project for <code>@</code> I see a lot of results<br>\nWhen I look for <code>private</code> I see a few different constucts<br>\nOverall, I am just unsure where to start</p>\n<p>Anyone would have a clue<br>\nPossibly the name of a test to fix</p>",
        "id": 273538636,
        "sender_full_name": "Philippe",
        "timestamp": 1646075404
    },
    {
        "content": "<p>Ok, one test fixed, N to go :)</p>",
        "id": 273539379,
        "sender_full_name": "Philippe",
        "timestamp": 1646075789
    },
    {
        "content": "<p>Also, I see \"opaque type\" and \"opaque reference\"<br>\nWhat would the difference be?</p>",
        "id": 273540674,
        "sender_full_name": "Philippe",
        "timestamp": 1646076407
    },
    {
        "content": "<p>Can you give some more context about where you saw \"opaque reference\"?</p>",
        "id": 273541849,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1646076883
    },
    {
        "content": "<p>An error message, will grab the test name</p>",
        "id": 273543030,
        "sender_full_name": "Philippe",
        "timestamp": 1646077394
    },
    {
        "content": "<p>qualified_private_tag</p>\n<p>When I change the @Foo.Bar to $Foo.Bar<br>\nThe <code>SYNTAX PROBLEM</code> becomes \"Looks like an opaque reference is treated like a module name.\"</p>",
        "id": 273543361,
        "sender_full_name": "Philippe",
        "timestamp": 1646077543
    },
    {
        "content": "<p>OK so it means a reference to an opaque type. As in, referring to it by name.</p>",
        "id": 273544243,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1646077971
    },
    {
        "content": "<p>You asked about the difference. The opaque type is the type itself. The \"opaque reference\" is a particular place in the code where it is used.</p>",
        "id": 273544683,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1646078157
    },
    {
        "content": "<p>I have updated all tests didn't require any additional changes<br>\nThose that remain, grep <code>@[A-Za-z]</code>, are comments or throw errors that don't seem to be right</p>\n<p>Could someone nudge me in the right direction?<br>\n<a href=\"https://github.com/rtfeldman/roc/pull/2614\">https://github.com/rtfeldman/roc/pull/2614</a></p>",
        "id": 273565252,
        "sender_full_name": "Philippe",
        "timestamp": 1646088245
    },
    {
        "content": "<p>I'll fix the error in <code>constrain::test_constrain::constrain_private_tag</code>.</p>",
        "id": 273600776,
        "sender_full_name": "Anton",
        "timestamp": 1646120439
    },
    {
        "content": "<p>Should <code>TagName</code> in <code>compiler/module/src/ident.rs</code> be updated as well? It still has a <code>Private(Symbol)</code> variant.</p>",
        "id": 273615291,
        "sender_full_name": "Anton",
        "timestamp": 1646128832
    },
    {
        "content": "<p>For opaque types, why doesn't this work?</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">Age</span> <span class=\"o\">:=</span> <span class=\"nx\">U64</span>\n\n<span class=\"nv\">test : </span><span class=\"p\">{}</span> <span class=\"nf\">-&gt;</span> <span class=\"nx\">Age</span>\n<span class=\"nv\">test = </span><span class=\"err\">\\</span><span class=\"p\">{}</span> <span class=\"nf\">-&gt;</span> <span class=\"nx\">@Age</span> <span class=\"mi\">42</span>\n</code></pre></div>\n<p>The returned error is:</p>\n<div class=\"codehilite\"><pre><span></span><code>Something is off with the body of the test definition:\n\n17│  test : {} -&gt; Age\n18│  test = \\{} -&gt; @Age 42\n                   ^^^^^^^\n\nThis @Age private tag application has the type:\n\n    [ @Age (Num a) ]b\n\nBut the type annotation on test says it should be:\n\n    Age\n</code></pre></div>\n<p>Is it a bug? I feel like the types should check here.</p>",
        "id": 274588941,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646766027
    },
    {
        "content": "<p>Because we haven’t flipped them to use @ yet since we still have private tags :)</p>",
        "id": 274590632,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1646766627
    },
    {
        "content": "<p>$Age instead of @Age should work</p>",
        "id": 274590656,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1646766636
    },
    {
        "content": "<p>Thanks</p>",
        "id": 274591002,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646766755
    },
    {
        "content": "<p>for sure. let us know if you do see any bugs. i don’t think there should be many but i’m sure i missed something</p>",
        "id": 274591249,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1646766848
    },
    {
        "content": "<p>My apologies on super delay on this work  - my windows laptop died an unhappy death but has since been replaced - I can now resume any Roc work</p>",
        "id": 278408500,
        "sender_full_name": "Carlo Munguia",
        "timestamp": 1649508441
    }
]