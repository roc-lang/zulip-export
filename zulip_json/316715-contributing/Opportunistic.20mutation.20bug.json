[
    {
        "content": "<p>I found <a href=\"https://github.com/roc-lang/roc/issues/6139\">https://github.com/roc-lang/roc/issues/6139</a> and it appears as though this issue may have the same cause as one I have experienced.</p>\n<p>However, this issue seems to be only for <code>Str</code>s and I was able to replicate a minimal example using <code>List</code>s, so I was wondering if it would be worth creating another GitHub issue with the following example</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span><span class=\"w\"> </span><span class=\"s\">\"reference count bug\"</span>\n<span class=\"w\">    </span><span class=\"nv\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nv\">pf</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.5.0/Cufzl36_SnJ4QbOoEmiJ5dIpUxBvdB3NEySvuH82Wio.tar.br\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"nv\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"> </span><span class=\"nv\">pf</span><span class=\"nf\">.</span><span class=\"kt\">Task</span><span class=\"w\"> </span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"nv\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">pf</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n\n<span class=\"nv\">expect</span>\n<span class=\"w\">  </span><span class=\"kr\">in</span><span class=\"w\"> </span><span class=\"nf\">==</span><span class=\"w\"> </span><span class=\"nv\">f</span><span class=\"w\"> </span><span class=\"kr\">in</span>\n\n<span class=\"kr\">in</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">A</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">B</span><span class=\"p\">]</span>\n\n<span class=\"nv\">f</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">  </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">reverse</span>\n<span class=\"w\">  </span><span class=\"nv\">x</span>\n</code></pre></div>\n<p>The expectation fails because <code>in == [B, A]</code>. I would figure that top level declarations would never be mutated, but I'm not sure.</p>\n<p>The bug won't happen if you</p>\n<ul>\n<li>put <code>in</code> inside the expect block</li>\n<li>run without <code>--optimize</code> flag</li>\n<li>inline <code>in</code></li>\n</ul>",
        "id": 407845818,
        "sender_full_name": "Fletch Canny",
        "timestamp": 1702519060
    },
    {
        "content": "<p>That would be a nice minimal reproducer, would be great to file an issue</p>",
        "id": 407853660,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702521753
    }
]