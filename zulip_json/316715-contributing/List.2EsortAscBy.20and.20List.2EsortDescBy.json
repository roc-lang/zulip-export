[
    {
        "content": "<p>A question about <a href=\"https://github.com/roc-lang/roc/pull/6990\">https://github.com/roc-lang/roc/pull/6990</a>, which implements the <code>List.sortAscBy</code> and <code>List.sortDescBy</code> builtins.</p>\n<div class=\"codehilite\"><pre><span></span><code>sortAscBy : List elem, (elem -&gt; Num *) -&gt; List elem\nsortDescBy : List elem, (elem -&gt; Num *) -&gt; List elem\n</code></pre></div>\n<p>Sam raised a good question, and I'm not sure what the answer is. Looking for any ideas. </p>\n<blockquote>\n<p>Is this really the right API? Since we have <a href=\"https://www.roc-lang.org/builtins/Num#compare\">https://www.roc-lang.org/builtins/Num#compare</a>, I think it would be better to use a <code>a, a -&gt; [LT, GT, EQ]</code> comparator if possible.</p>\n</blockquote>",
        "id": 462279986,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723619712
    },
    {
        "content": "<p>Yeah, <code>a, a -&gt; [LT, GT, EQ]</code> seems better for consistency.</p>",
        "id": 462291480,
        "sender_full_name": "Anton",
        "timestamp": 1723623998
    },
    {
        "content": "<p>I think rust has both. <code>sortWith</code> and <code>sortWithField</code> I think. If we choose one, we definitely should go with <code>a, a -&gt; [LT, GT, EQ]</code> as it is more general and the other can always be defined in terms of it</p>",
        "id": 462292684,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1723624446
    },
    {
        "content": "<p>So the question then is, do we still want the <code>sortAscBy</code> and <code>sortDescBy</code> then? </p>\n<p>I'd be happy to close the PR.</p>",
        "id": 462293748,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723624756
    },
    {
        "content": "<p>I do like the clarity of <code>sortAscBy</code>, you don't have to carefully inspect the function that <code>sortWith</code> uses, you immediately know it's ascending.</p>",
        "id": 462296421,
        "sender_full_name": "Anton",
        "timestamp": 1723625473
    },
    {
        "content": "<p>Hmm, the original <code>(elem -&gt; Num *)</code> API may be better after all, it makes this case really easy:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nv\">testCompareFn</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">U8</span>\n<span class=\"w\">        </span><span class=\"nv\">testCompareFn</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">n</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">            </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">n</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">                </span><span class=\"kt\">ONE</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"w\">                </span><span class=\"kt\">TWO</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"w\">                </span><span class=\"kt\">THREE</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">3</span>\n<span class=\"w\">                </span><span class=\"kt\">FOUR</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"w\">        </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">sortAscBy</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">THREE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">ONE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">TWO</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">FOUR</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"nv\">testCompareFn</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">map</span><span class=\"w\"> </span><span class=\"nv\">testCompareFn</span>\n</code></pre></div>",
        "id": 462296878,
        "sender_full_name": "Anton",
        "timestamp": 1723625664
    },
    {
        "content": "<p>Oh, wait -- are we thinking the API should be more like <code>sortAscBy : List elem, (a, a -&gt; [LT, GT, EQ]) -&gt; List elem</code>? I hadn't thought of that. </p>\n<p>In that case, are we replacing <code>List.sortWith</code> with these two?</p>",
        "id": 462297149,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723625727
    },
    {
        "content": "<blockquote>\n<p>Oh, wait -- are we thinking the API should be more like</p>\n</blockquote>\n<p>That's how I understood it, what did you have in mind?</p>",
        "id": 462297722,
        "sender_full_name": "Anton",
        "timestamp": 1723625828
    },
    {
        "content": "<p>8 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"316715\" href=\"/#narrow/stream/316715-contributing/topic/Casual.20Conversation\">#contributing &gt; Casual Conversation</a> by <span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span>.</p>",
        "id": 462297786,
        "sender_full_name": "Notification Bot",
        "timestamp": 1723625843
    },
    {
        "content": "<blockquote>\n<p>In that case, are re replacing <code>List.sortWith</code> with these two?</p>\n</blockquote>\n<p>Maybe, it would remove some doubt about which way you're sorting</p>",
        "id": 462298439,
        "sender_full_name": "Anton",
        "timestamp": 1723625965
    },
    {
        "content": "<p>For reference, this is what the original issue listed the API as. </p>\n<ul>\n<li><code>sort : List elem, (elem, elem -&gt; [ Lt, Eq, Gt ]) -&gt; List elem</code></li>\n<li><code>sortAsc : List (Num a) -&gt; List (Num a)</code></li>\n<li><code>sortDesc : List (Num a) -&gt; List (Num a)</code></li>\n<li><code>sortAscBy : List elem, (elem -&gt; Num *) -&gt; List elem</code></li>\n<li><code>sortDescBy : List elem, (elem -&gt; Num *) -&gt; List elem</code></li>\n</ul>",
        "id": 462298706,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723626059
    },
    {
        "content": "<p>I would push for something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>sort: List elem -&gt; List elem where elem implements Ordering\nsortBy: List elem, (elem -&gt; field) -&gt; List elem where field implements Ordering\nsortWith: List elem, (elem -&gt; [ Lt, Eq, Gt ]) -&gt; List elem\n\n# Then the reversed versions:\nsortReversed: List elem -&gt; List elem where elem implements Ordering\nsortByReversed: List elem, (elem -&gt; field) -&gt; List elem where field implements Ordering\nsortWithReversed: List elem, (elem -&gt; [ Lt, Eq, Gt ]) -&gt; List elem\n</code></pre></div>",
        "id": 462372359,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723650204
    },
    {
        "content": "<p>I could go with that</p>",
        "id": 462374062,
        "sender_full_name": "Anton",
        "timestamp": 1723650655
    },
    {
        "content": "<p>Just to clarify is <code>(elem -&gt; [ Lt, Eq, Gt ])</code> meant to be <code>(elem, elem -&gt; [ Lt, Eq, Gt ])</code> in the above? </p>\n<p>And is <code>Ordering</code> the same as <a href=\"https://github.com/roc-lang/roc/pull/6615\">Sortable</a> PR?</p>\n<div class=\"codehilite\"><pre><span></span><code> Sort implements\n     compare : a, a -&gt; [LessThan, Equal, GreaterThan] where a implements Sort\n</code></pre></div>",
        "id": 462416490,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723669153
    },
    {
        "content": "<p>Yep and yep</p>",
        "id": 462438843,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723681512
    },
    {
        "content": "<p>Should match <code>Sort</code> just wasn't sure what final naming we went with</p>",
        "id": 462438967,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723681566
    }
]