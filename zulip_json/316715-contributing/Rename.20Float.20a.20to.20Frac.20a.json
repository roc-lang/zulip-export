[
    {
        "content": "<p>I'm working on <a href=\"https://github.com/rtfeldman/roc/issues/2848\">this issue</a> this weekend!</p>\n<p><span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 281598393,
        "sender_full_name": "Mfon Eti-mfon (He/Him)",
        "timestamp": 1652015391
    },
    {
        "content": "<p>awesome, thank you! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 281599331,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1652016627
    },
    {
        "content": "<p>feel free to post here if you have any questions or run into any problems!</p>",
        "id": 281599340,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1652016644
    },
    {
        "content": "<p>Thank you Richard.</p>",
        "id": 281599414,
        "sender_full_name": "Mfon Eti-mfon (He/Him)",
        "timestamp": 1652016738
    },
    {
        "content": "<p>So, running the tests (on trunk, without making any changes to the code myself) using <code>cargo test</code>, I get 25 failures.</p>\n<p>And some changes are made to my working directory.</p>\n<p>How do I proceed?</p>",
        "id": 281599455,
        "sender_full_name": "Mfon Eti-mfon (He/Him)",
        "timestamp": 1652016836
    },
    {
        "content": "<p>I suspect these are \"mono\" tests?</p>",
        "id": 281599526,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652016911
    },
    {
        "content": "<p>does that word show up in the output?</p>",
        "id": 281599539,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652016933
    },
    {
        "content": "<p>Yes, \"mono\" shows up in the output.</p>\n<p>Here's a shortened trace of the output:</p>\n<div class=\"codehilite\"><pre><span></span><code> procedure List.57 (#Attr.2, #Attr.3, #Attr.4):\n-    let List.158 : U64 = lowlevel ListLen #Attr.2;\n-    let List.156 : Int1 = lowlevel NumLt #Attr.3 List.158;\n-    if List.156 then\n-        let List.157 : {List I64, I64} = lowlevel ListReplaceUnsafe #Attr.2 #Attr.3 #Attr.4;\n-        ret List.157;\n+    let List.161 : U64 = lowlevel ListLen #Attr.2;\n+    let List.159 : Int1 = lowlevel NumLt #Attr.3 List.161;\n+    if List.159 then\n+        let List.160 : {List I64, I64} = lowlevel ListReplaceUnsafe #Attr.2 #Attr.3 #Attr.4;\n+        ret List.160;\n     else\n-        let List.155 : {List I64, I64} = Struct {#Attr.2, #Attr.4};\n-        ret List.155;\n+        let List.158 : {List I64, I64} = Struct {#Attr.2, #Attr.4};\n+        ret List.158;\n\n procedure Test.1 (Test.2, Test.3, Test.4):\n     let Test.29 : [C {}, C I64] = CallByName List.2 Test.4 Test.3;\n@@ -48,8 +48,8 @@ procedure Test.1 (Test.2, Test.3, Test.4):\n             let Test.18 : [C {}, C I64] = StructAtIndex 0 Test.13;\n             let Test.6 : I64 = UnionAtIndex (Id 1) (Index 0) Test.18;\n             let Test.17 : [C {}, C I64] = StructAtIndex 1 Test.13;\n-            let Test.7 : I64 = UnionAtIndex (Id 1) (Index 0) Test.17;\n-            let Test.15 : List I64 = CallByName List.3 Test.4 Test.2 Test.7;\n+            let Test.8 : I64 = UnionAtIndex (Id 1) (Index 0) Test.17;\n+            let Test.15 : List I64 = CallByName List.3 Test.4 Test.2 Test.8;\n             let Test.14 : List I64 = CallByName List.3 Test.15 Test.3 Test.6;\n             ret Test.14;\n         else\n\nthread &#39;rigids&#39; panicked at &#39;Output changed: resolve conflicts and `git add` the file.&#39;, compiler/test_mono/src/tests.rs:190:9\n\n\nfailures:\n    alias_variable\n    closure_in_list\n    empty_list_of_function_type\n    ir_int_add\n    ir_two_defs\n    issue_2583_specialize_errors_behind_unified_branches\n    let_x_in_x\n    let_x_in_x_indirect\n    list_append\n    list_append_closure\n    list_cannot_update_inplace\n    list_get\n    list_len\n    list_pass_to_function\n    monomorphized_applied_tag\n    monomorphized_floats\n    monomorphized_ints\n    monomorphized_list\n    monomorphized_tag\n    monomorphized_tag_with_aliased_args\n    nested_closure\n    optional_when\n    quicksort_swap\n    record_optional_field_function_use_default\n    rigids\n\ntest result: FAILED. 47 passed; 25 failed; 5 ignored; 0 measured; 0 filtered out; finished in 1.14s\n\nerror: test failed, to rerun pass &#39;-p test_mono --test test_mono&#39;\n</code></pre></div>",
        "id": 281599767,
        "sender_full_name": "Mfon Eti-mfon (He/Him)",
        "timestamp": 1652017204
    },
    {
        "content": "<p>cool, well that has nothing to do with your changes</p>",
        "id": 281599795,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652017268
    },
    {
        "content": "<p>those tests are not checked by CI (for reasons) and sometimes they get out of sync</p>",
        "id": 281599859,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652017333
    },
    {
        "content": "<p>so I think for now you can run <code>cargo test --test solve_expr</code> and if those keep working you should be mostly good</p>",
        "id": 281599866,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652017356
    },
    {
        "content": "<p><code>cargo test --test test_reporting</code> and <code>cargo test-gen-llvm</code> might also be good to check when <code>solve_expr</code> works</p>",
        "id": 281599883,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652017393
    },
    {
        "content": "<p>bonus: narrowing down which tests you run makes them run much faster</p>",
        "id": 281599889,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652017404
    },
    {
        "content": "<p>Oh, yes, thank you. I've noticed it now. They're super fast! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 281599896,
        "sender_full_name": "Mfon Eti-mfon (He/Him)",
        "timestamp": 1652017430
    },
    {
        "content": "<p><a href=\"https://github.com/rtfeldman/roc/pull/3029\">My first attempt</a> gets stuck on the building phase when running tests.</p>\n<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> can you tell what is happening?</p>",
        "id": 281604020,
        "sender_full_name": "Mfon Eti-mfon (He/Him)",
        "timestamp": 1652023353
    },
    {
        "content": "<p>yes</p>",
        "id": 281604153,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652023504
    },
    {
        "content": "<p>what we do is bootstrapping: we use the compiler to build itself</p>",
        "id": 281604163,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652023517
    },
    {
        "content": "<p>that is why you get an error during the build; really it's an error that is reported by the compiler</p>",
        "id": 281604173,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652023535
    },
    {
        "content": "<p>I think the fix is to, in <code>compiler/builtins/roc/Num.roc </code> change <code>Float range : Num (FloatingPoint range)</code> to the <code>Frac</code> equivalent</p>",
        "id": 281604237,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652023604
    },
    {
        "content": "<p>and also change all mentions of <code>Float</code> to <code>Frac</code></p>",
        "id": 281604251,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1652023632
    },
    {
        "content": "<p><a href=\"https://github.com/rtfeldman/roc/pull/3029\">PR</a> ready. ish.</p>\n<p>Do we want to rename all <code>*float*</code> functions to <code>*frac*</code> functions?</p>",
        "id": 281612441,
        "sender_full_name": "Mfon Eti-mfon (He/Him)",
        "timestamp": 1652035259
    }
]