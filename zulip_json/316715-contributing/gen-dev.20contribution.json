[
    {
        "content": "<p>Hey, I recently started looking into roc-lang and want to contribute to the project! <br>\nI have previously worked a little on other compilers in Rust, and would be interested in helping wherever I can! :)</p>\n<p>I've been eyeing helping on the <code>gen-dev</code> backend through some of the \"good first issue\"s for that, for example <a href=\"https://github.com/roc-lang/roc/issues/3796\">https://github.com/roc-lang/roc/issues/3796</a></p>\n<p>I want to sanity checking that I wouldn't be stepping on any toes of anyone already looking to work on the issue, and I would also like to ask for a little bit of general guidance &lt;3</p>\n<p>For now I have tried to just copy the existing <code>NumSub</code> generation at <a href=\"https://github.com/roc-lang/roc/compare/main...thehabbos007:roc:asa/numsubwrap\">https://github.com/roc-lang/roc/compare/main...thehabbos007:roc:asa/numsubwrap</a> and gotten <code>test-gen-dev</code> to run</p>",
        "id": 321888948,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1673977572
    },
    {
        "content": "<p>help there is very welcome!</p>",
        "id": 321890017,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673977914
    },
    {
        "content": "<p>the usual procedure is to write some c/rust/zig in <a href=\"https://godbolt.org/\">https://godbolt.org/</a> to show us the assembly that we want to get</p>",
        "id": 321890272,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673977975
    },
    {
        "content": "<p>and then make that happen. For numerics in particular it's good to check it for a few different types (widths) because the assembly can change sometimes</p>",
        "id": 321890386,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673978010
    },
    {
        "content": "<p>Cool, thanks! Will make sure to use that for opcodes. Are there any good reference sites other than the compiler explorer?</p>",
        "id": 321892562,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1673978563
    },
    {
        "content": "<p>Also it seems that optimizations usually optimize away the interesting bits (for rust at least). Other than something like <code>-O0</code> can I do anything?</p>",
        "id": 321893030,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1673978680
    },
    {
        "content": "<p>yeah, I think <a href=\"https://doc.rust-lang.org/stable/std/hint/fn.black_box.html\">https://doc.rust-lang.org/stable/std/hint/fn.black_box.html</a> is what you're looking for</p>",
        "id": 321893449,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673978788
    },
    {
        "content": "<p>or just don't provide input values at all</p>",
        "id": 321893484,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673978804
    },
    {
        "content": "<p>e.g. </p>\n<div class=\"codehilite\"><pre><span></span><code>// Type your code here, or load an example.\npub fn square(a: i32, b: i32) -&gt; i32 {\n    a - b\n}\n</code></pre></div>\n<p>will show you useful assembly with <code>-O</code> for rust</p>",
        "id": 321893797,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673978907
    },
    {
        "content": "<p>because there are no inputs, it cannot make weird assumptions based on the inputs</p>",
        "id": 321893835,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673978921
    },
    {
        "content": "<p>If you haven't, make sure to read through: <a href=\"https://github.com/roc-lang/roc/blob/main/crates/compiler/gen_dev/README.md\">https://github.com/roc-lang/roc/blob/main/crates/compiler/gen_dev/README.md</a></p>\n<p>It has a lot of info and some links to useful tools.</p>",
        "id": 321895433,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1673979452
    },
    {
        "content": "<p>Also, if you need help, feel free to reach out here or request to pair. I definitely could help run you through an addition.</p>",
        "id": 321895572,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1673979489
    },
    {
        "content": "<p>for sub specifically, there is <a href=\"https://github.com/roc-lang/roc/pull/4101\">https://github.com/roc-lang/roc/pull/4101</a> but that one is pretty stale</p>",
        "id": 321895838,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673979583
    },
    {
        "content": "<p>that PR does not actually do anything, and there was some confusion about what test command to run. No real activity since september</p>",
        "id": 321896181,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673979694
    },
    {
        "content": "<p>Also, here is another useful doc: <a href=\"https://github.com/rtfeldman/roc/issues/1932#issuecomment-964860520\">https://github.com/rtfeldman/roc/issues/1932#issuecomment-964860520</a></p>",
        "id": 321896231,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1673979710
    },
    {
        "content": "<p>Thanks Brendan for the links!<br>\nI suppose the PR linked is for the non-wrapping sub, which I assume is different?</p>",
        "id": 321897308,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1673980063
    },
    {
        "content": "<p>technically, yes, but I believe that we don't do the overflow check yet for the dev backend</p>",
        "id": 321898107,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673980279
    },
    {
        "content": "<p>in roc, <code>a + b</code> should panic if that operation overflows, but the dev backend just used the <code>add</code> instruction, which will silently overflow</p>",
        "id": 321898198,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673980305
    },
    {
        "content": "<p>I see. Should I look into another issue instead, then?</p>",
        "id": 321898312,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1673980326
    },
    {
        "content": "<p>no, this one is fine, and subtraction is useful</p>",
        "id": 321898492,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673980369
    },
    {
        "content": "<p>there is just a lot to implement and we do it in small steps. The panicking is not really required to run most programs</p>",
        "id": 321898702,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673980423
    },
    {
        "content": "<p>and it is more complicated than just emitting some instructions; you have to call a panic function there. So we've skipped that so far</p>",
        "id": 321898835,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673980451
    },
    {
        "content": "<p>I see. Would that to-be-added panic code be emitted as part of the <code>build_*</code> methods rather than the the specialized <code>ASM::sub_reg...</code> functions? I ask because I assume I wouldn't need to make a <code>ASM::wrapping_sub_reg..</code> equivalent if we do the panics in the former step</p>",
        "id": 321899278,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1673980597
    },
    {
        "content": "<p>yes the panic would wrap the lower level stuff</p>",
        "id": 321899593,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673980692
    },
    {
        "content": "<p>it's sort of <code>if bunch_of_check { panic!() } else { do_the_normal_assembly }</code></p>",
        "id": 321899686,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673980722
    },
    {
        "content": "<p>in the general case</p>",
        "id": 321899698,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673980726
    },
    {
        "content": "<p>for addition/subtraction there are probably some flags that we could use to figure out if the addition overflowed</p>",
        "id": 321899773,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673980749
    },
    {
        "content": "<p>Thanks for the explanation, that does make sense :)</p>",
        "id": 321900032,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1673980830
    },
    {
        "content": "<p>I opened a PR here <a href=\"https://github.com/roc-lang/roc/pull/4917\">https://github.com/roc-lang/roc/pull/4917</a>, but no rush reviewing it of course!</p>",
        "id": 321908280,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1673983339
    },
    {
        "content": "<p>Hey, sort of unrelated to the above stuff, but still relevant to the topic: I've tried implementing the <code>List.withCapcity</code> builtin in the gen_dev backend, I changed an existing test to account for List capacity but it seems that the wasm backend doesn't have the expected capacity Does anyone have some insights as to why the wasm <code>RocList</code> seems to be different?</p>\n<p>CI result: <a href=\"https://github.com/roc-lang/roc/actions/runs/3970756961/jobs/6809484103#step:12:1132\">https://github.com/roc-lang/roc/actions/runs/3970756961/jobs/6809484103#step:12:1132</a></p>\n<p>Changed test: <a href=\"https://github.com/roc-lang/roc/pull/4931/files#diff-aeb94571b7796cf095dd599a6dcb9dfb58abcf71d19ed7731af3a0def3f7cab0R3398-R3400\">https://github.com/roc-lang/roc/pull/4931/files#diff-aeb94571b7796cf095dd599a6dcb9dfb58abcf71d19ed7731af3a0def3f7cab0R3398-R3400</a></p>",
        "id": 322708116,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1674300915
    },
    {
        "content": "<p>I suspect this is a problem with getting the value back from wasm to rust. based on the chrome debugger, within wasm, the capacity is 10</p>",
        "id": 322717205,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674304469
    },
    {
        "content": "<p>I'll see if I can fix this on your branch</p>",
        "id": 322717242,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674304488
    },
    {
        "content": "<p>Thank you, I appreciate it :)</p>",
        "id": 322717664,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1674304678
    },
    {
        "content": "<p>it's not that simple. Somehow something is wrong allocating. The wasm program takes a different route through the zig code than the llvm program, and in the process the capacity gets messed up</p>",
        "id": 322723599,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674307122
    },
    {
        "content": "<p>Interesting. Should I just undo the test changes and put aside the wasm issue?</p>",
        "id": 322724083,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1674307333
    },
    {
        "content": "<p>no I'm on it. There turns out to be a second issue, which is more in the area where I originally thought it would be</p>",
        "id": 322724719,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674307620
    },
    {
        "content": "<p>Got it. Again, thank you!</p>",
        "id": 322724770,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1674307660
    },
    {
        "content": "<p>allright, I found it. We were using a pointer as if it were an integer</p>",
        "id": 322738794,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674313198
    },
    {
        "content": "<p>that meant a list with a very large capacity was created</p>",
        "id": 322738872,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674313211
    },
    {
        "content": "<p>Neat, nice find! Excited to see the piece of code this was in</p>",
        "id": 322739015,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1674313286
    },
    {
        "content": "<p>can you rebase your branch on <a href=\"https://github.com/roc-lang/roc/tree/list-with-capacity\">https://github.com/roc-lang/roc/tree/list-with-capacity</a>? I suspect the \"draft PR\" does not work well with the <code>gh</code> tool, so it's hard for me to push to your branch</p>",
        "id": 322740391,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674313788
    },
    {
        "content": "<p>Yes, can do. I can open up for review too</p>",
        "id": 322740618,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1674313874
    },
    {
        "content": "<p>I did that already but it still did not work. I'm upgrading <code>gh</code>  now, maybe that is what it is</p>",
        "id": 322740875,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674313963
    },
    {
        "content": "<p>My commit is already in the branch, perhaps that's why it's a noop</p>",
        "id": 322740959,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1674313990
    },
    {
        "content": "<p>but my commits aren't right?</p>",
        "id": 322741016,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674314019
    },
    {
        "content": "<p>I mean that the <a href=\"https://github.com/roc-lang/roc/tree/list-with-capacity\">https://github.com/roc-lang/roc/tree/list-with-capacity</a> branch has my commit, so a rebase is a noop</p>",
        "id": 322741177,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1674314071
    },
    {
        "content": "<p>right, ok then maybe just <code>reset --hard my_branch</code> on your branch, so the PR updates?</p>",
        "id": 322741355,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674314151
    },
    {
        "content": "<p>There we go, thanks!</p>",
        "id": 322741586,
        "sender_full_name": "Ahmad Sattar",
        "timestamp": 1674314235
    }
]