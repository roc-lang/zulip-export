[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"950624\">@EnDeRBeaT</span> I spent some time thinking about the repl with Claude and looking at our existing design. </p>\n<p>Here's a rough design doc <a href=\"https://gist.github.com/lukewilliamboswell/ffe31020bda636d879180ac3b0bd1608\">https://gist.github.com/lukewilliamboswell/ffe31020bda636d879180ac3b0bd1608</a></p>\n<p>Does something like this help you? I could also spend some time with you throwing ideas around or talking about the codebase if you'd like.</p>",
        "id": 535896571,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1756034853
    },
    {
        "content": "<p>Nice! I will start in the evening or on tomorrow's evening and come back with questions if I need to</p>",
        "id": 535899380,
        "sender_full_name": "EnDeRBeaT",
        "timestamp": 1756038494
    },
    {
        "content": "<p>Hi, from <code>build.zig</code>, I can't see where to add a dependency module from vaxis lib, can you point it out?</p>",
        "id": 536100475,
        "sender_full_name": "EnDeRBeaT",
        "timestamp": 1756152865
    },
    {
        "content": "<p>Normally deps are added in the build.zig.zon. Then referenced in build.zig.</p>",
        "id": 536130212,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1756167513
    },
    {
        "content": "<p>You can look at bytebox or zstd as examples</p>",
        "id": 536130282,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1756167553
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"950624\">@EnDeRBeaT</span> our build system can be a little confusing as there's a lot going on. I made a start and wired everything up for you in this branch <a href=\"https://github.com/lukewilliamboswell/roc/tree/cli-repl\">https://github.com/lukewilliamboswell/roc/tree/cli-repl</a></p>",
        "id": 536132628,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1756169227
    },
    {
        "content": "<p>It's wired into <code>zig build roc</code> and <code>zig build test</code> so you can focus on the functionality and leave wrestling with the build system for later <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 536132675,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1756169268
    },
    {
        "content": "<p>I was wondering on why we are using vaxis for this? What is the goal look for the cli? I have only seen repls like pyhton's, which can be implemented with basic console i/o.</p>",
        "id": 536475088,
        "sender_full_name": "EnDeRBeaT",
        "timestamp": 1756318690
    },
    {
        "content": "<p>okay nevermind, i am stupid</p>",
        "id": 536478832,
        "sender_full_name": "EnDeRBeaT",
        "timestamp": 1756320279
    },
    {
        "content": "<p>Not stupid, I had the same thought process I think. </p>\n<p>I actually implemented the cli Repl as a proof of concept a while back but found myself hand rolling all these tui like things for handling input reliably etc.  I raised the idea of using a more mature and well tested library and that seemed to be a better direction to try.</p>\n<p>We may find vaxis is too much. Loris mentioned there is a lower level API within vaxis that we might consider using, if we don't want/need the higher level abstraction.</p>\n<p>Thank you for exploring this, I think the repl will be really useful and being built into the cli will make it easy to use.</p>",
        "id": 536505438,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1756335023
    },
    {
        "content": "<p>i thought we wanted to keep the compiler dependency-free?</p>",
        "id": 536511283,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1756339454
    },
    {
        "content": "<p>I couldn't resist a diagram... <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> </p>\n<p><a href=\"/user_uploads/22008/aTQq6bTfY7PlbLtcUVoX8RMq/Screenshot-2025-08-28-at-18.11.20.png\">Screenshot 2025-08-28 at 18.11.20.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/aTQq6bTfY7PlbLtcUVoX8RMq/Screenshot-2025-08-28-at-18.11.20.png\" title=\"Screenshot 2025-08-28 at 18.11.20.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1518x846\" src=\"/user_uploads/thumbnail/22008/aTQq6bTfY7PlbLtcUVoX8RMq/Screenshot-2025-08-28-at-18.11.20.png/840x560.webp\"></a></div><p>I think we should aim for no dependencies in the compiler stages (unless absolutely necessary for some reason). But the tools, like cli or playground VM could use some.</p>",
        "id": 536552730,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1756368807
    },
    {
        "content": "<p>It feels like making a python-like with Vaxis is kinda cumbersome: you can't really have just a shell with repl like input without handrolling everything except the input.</p>\n<p>However, it is pretty easy to recreate the same design as in roc playground repl. However, it is an unorthodox design. What do you guys thing?</p>",
        "id": 536671617,
        "sender_full_name": "EnDeRBeaT",
        "timestamp": 1756409341
    },
    {
        "content": "<p>We're all about taking the not so easy path here in roc land -- if it means delivering a nice experience for our users. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> </p>\n<p>I'm not really sure what you are specifically talking about though... could you give me an example maybe?</p>",
        "id": 536700774,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1756427692
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/316715-contributing/topic/roc-cli.20REPL/near/536700774\">said</a>:</p>\n<blockquote>\n<p>could you give me an example maybe?</p>\n</blockquote>\n<p>Sure, the basic REPL has the same UX as a CLI, you have the same bindings, the same history mechanism, you enter commands, you get output (which you can cancel with ^C). In libvaxis it is quite difficult to replicate such workflow: there are separate widgets for scrolling text and input, but composing them together looks like a challenge (however, might not be as difficult as i thought)</p>\n<p>The design of playground repl is a scroll window + text input, which is also easy to replicate in libvaxis</p>",
        "id": 536720357,
        "sender_full_name": "EnDeRBeaT",
        "timestamp": 1756445184
    }
]