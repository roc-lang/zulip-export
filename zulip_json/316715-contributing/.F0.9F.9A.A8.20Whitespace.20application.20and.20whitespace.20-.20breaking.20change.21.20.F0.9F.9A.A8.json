[
    {
        "content": "<p>Seems like the problem is all the way in pretty_assertions</p>",
        "id": 491004984,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735314860
    },
    {
        "content": "<p>It might that somewhere a \\r is being inserted</p>",
        "id": 491005131,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735314989
    },
    {
        "content": "<p>I know that <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> or <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> will come in and tell me I'm doing something terribly silly and obviously wrong - but I can't see it.  And I'd like to keep these tests</p>",
        "id": 491006321,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735315764
    },
    {
        "content": "<p>I'll try similar in snapshots and see if we get the same issue</p>",
        "id": 491006358,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735315792
    },
    {
        "content": "<p>Looking into snapshots, I'm noticing that this is valid:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">N</span><span class=\"nf\">&lt;</span><span class=\"nv\">l</span><span class=\"p\">(</span><span class=\"nv\">r</span><span class=\"nf\">*</span><span class=\"kt\">N</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>And that may cause some issues for keeping WSA and PNC together.</p>\n<p>The only solution I see is if an ident_seq is followed by a parenthensized expression or tuple and there is no SpacesBefore, we convert.  But even that changes the semantics of code like this.</p>\n<p>Anyone have a clue for how to disambiguate the two?</p>",
        "id": 491024612,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328126
    },
    {
        "content": "<p>Right now this is parsed as:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">N</span><span class=\"w\"> </span><span class=\"nf\">&lt;</span><span class=\"w\"> </span><span class=\"nv\">l</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">r</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"kt\">N</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>With any reasonable interpretation of PNC, there it would be parsed as:</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">N</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">l</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">N</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>as in (with WSA):</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">N</span><span class=\"w\"> </span><span class=\"nf\">&lt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">l</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">r</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"kt\">N</span><span class=\"p\">))</span>\n</code></pre></div>",
        "id": 491024770,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328235
    },
    {
        "content": "<p>Basically, we would have to have a backwards incompatible change where application would <strong>require</strong> a space between an ident subsequent expressiosn</p>",
        "id": 491024893,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328308
    },
    {
        "content": "<p>I don't think there's a way around that</p>",
        "id": 491024922,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735328330
    },
    {
        "content": "<p>Which actually is surprising that we allowed WSA without the err, whitespace</p>",
        "id": 491024935,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328341
    },
    {
        "content": "<p>It's almost always better to parse maximally and give errors rather than fail parsing IMO</p>",
        "id": 491024965,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735328369
    },
    {
        "content": "<p>And instead, i guess, treated the end of an ident and the beginning of a non-ident expr as \"whitespace\"</p>",
        "id": 491024977,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328380
    },
    {
        "content": "<p>Unless there are perf implications</p>",
        "id": 491024986,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735328388
    },
    {
        "content": "<p>I think you should parse the grammar and bail as sson as you get something you don't expect</p>",
        "id": 491025088,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328439
    },
    {
        "content": "<p>You can continue parsing and add an error report</p>",
        "id": 491025127,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328474
    },
    {
        "content": "<p>But I personally prefer strictness in things like whitespace</p>",
        "id": 491025182,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328511
    },
    {
        "content": "<p>I think I'd prefer Richard to weight in here, this is probably an impactful change</p>",
        "id": 491025248,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328533
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> <a href=\"#narrow/channel/316715-contributing/topic/Parens.20and.20commas.20work/near/491025088\">said</a>:</p>\n<blockquote>\n<p>I think you should parse the grammar and bail as sson as you get something you don't expect</p>\n</blockquote>\n<p>When you say bail, do you mean \"fail parsing the rest of the module\" or \"fail this top-level node, i.e. the function body\"</p>",
        "id": 491025608,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735328787
    },
    {
        "content": "<p>The latter can be a good user experience, but the former always sucks</p>",
        "id": 491025624,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735328801
    },
    {
        "content": "<p>Fail just the def</p>",
        "id": 491025625,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328801
    },
    {
        "content": "<p>Okay, great</p>",
        "id": 491025634,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735328805
    },
    {
        "content": "<p>Yeah, that's seemingly what Joshua Warner has been trying to do</p>",
        "id": 491025665,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735328823
    },
    {
        "content": "<p>We want to be robust for the LSP and other tools</p>",
        "id": 491025672,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328827
    },
    {
        "content": "<p>And he's got a lot more of a knowledge base here than I do</p>",
        "id": 491025697,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735328839
    },
    {
        "content": "<p>I always built the former because they were early/hobby parsers, but the latter is the way</p>",
        "id": 491025715,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735328853
    },
    {
        "content": "<p>24 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"316715\" href=\"/#narrow/channel/316715-contributing/topic/Parens.20and.20commas.20work\">#contributing &gt; Parens and commas work</a> by <span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span>.</p>",
        "id": 491026194,
        "sender_full_name": "Notification Bot",
        "timestamp": 1735329119
    },
    {
        "content": "<p>For context, this was to make this a top-level thing to debate</p>",
        "id": 491026258,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735329142
    },
    {
        "content": "<p>It doesn't seem like there is much of any concerns with this change, so I'll take silence as a Go Ahead</p>",
        "id": 491090230,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735390114
    },
    {
        "content": "<p>I don’t think it’s a problem to change semantics of tests (particularly snapshot tests)… so long as those tests aren’t properly formatted. I.e. changes are fine so long as they won’t affect code that has previously come out of the formatter.</p>",
        "id": 491094039,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1735393686
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 491094060,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735393710
    }
]