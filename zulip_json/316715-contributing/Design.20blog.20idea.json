[
    {
        "content": "<p>I'm interested to get some feedback on a <a href=\"https://github.com/roc-lang/roc/pull/5017\">PR #5017</a> for a Roc Design blog. </p>\n<p>The idea is to have a more permanent place to store ideas and proposals which will make this easier for people to find and contribute. </p>\n<p>This is the intro I have on there so far.</p>\n<blockquote>\n<p>This engineering blog is designed to facilitate collaboration and communication within the community. It provides a platform to share design documentation and to develop ideas through comments and feedback. The documentation not only gives the design intent, but also serves as a reference for contributors to implement and for newcomers to understand the features.</p>\n</blockquote>\n<p>I'm thinking this will make it as simple as making a PR to submit or update an idea. As an idea it needs more development; but I hope this is be a good place to start.</p>",
        "id": 326966850,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1676005274
    },
    {
        "content": "<p>I thought I would ask ChatGPT to help me summarise our discussion in the online meetup regarding Roc design proposals and the Design Blog. How did we do? Does anyone have any further ideas or any concerns?</p>\n<h2>Summary by ChatGPT</h2>\n<p>As a young community, Roc does not have a formal process for managing design proposals. However, this doesn't hinder its development as the community is friendly and supportive. The community believes in the importance of discussing and sharing ideas to foster innovation.</p>\n<p>There are three stages that a design proposal can go through in Roc: Idea, Proposal, and Implementation. In the Idea stage, members describe their initial ideas and explore the problem, potential solutions, and trade-offs. It is helpful to write down an idea as it makes it easier for others to understand and support its development. These ideas do not need to be formal or published, and the best place to discuss them with the community is on the Zulip discussion board or GitHub issue. It is important that anyone can easily propose an Idea and contribute to Roc's development.</p>\n<p>Once there is consensus that an idea is promising, it can mature into a Proposal. There is no mandated process for how this takes place. A good option to document a Proposal is to write the design into an article or blog post and share it online. This documentation helps in clarifying the proposal and making it more accessible to the community. A Roc Design Blog has been proposed as a potential home to collect or link to the design proposals for future reference. This will help people new to the language discover the proposals, and also ensure that proposals are not lost in the community archives.</p>\n<p>In conclusion, Roc's approach to managing design proposals is centered around community involvement and open communication. The community is encouraged to share and explore ideas, and there is no rigid process that proposals must follow. With the proposal documentation process in place, Roc can continue to foster innovation and grow its community.</p>",
        "id": 328893962,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1676869384
    },
    {
        "content": "<p>Folkert's suggestion to research how other smaller languages are doing this sounds good as well</p>",
        "id": 328920050,
        "sender_full_name": "Anton",
        "timestamp": 1676881852
    },
    {
        "content": "<p>Thank you, I missed that.</p>",
        "id": 328936421,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1676886837
    },
    {
        "content": "<p>nice! One thing I'd add is that implementation should wait for a proposal to be accepted; otherwise, implementers run the risk of spending time creating and submitting PRs that later don't get merged because the proposal wasn't actually accepted <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 329100728,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1676951961
    }
]