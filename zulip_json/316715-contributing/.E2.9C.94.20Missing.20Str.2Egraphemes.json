[
    {
        "content": "<p>In both Elm and JavaScript, you can pass an empty string to the <code>split</code> function to get a list of characters from a string. However, according to <a href=\"https://www.roc-lang.org/builtins/Str#split\">Roc's documentation</a>, it won't behave the same, and we should use <code>graphemes</code> instead, yet this function does not exist in the <code>Str</code> module.</p>\n<p>Was the <code>graphemes</code> function removed from the module? Was it intended to be built in the future? There's a discrepancy between the documentation and the code we should fix.</p>\n<p>Is the intended path for this use case to use <code>graphemes</code>? At least for what I'm working on, I can use <code>toScalars</code> or <code>toUtf8</code>. Are these alternatives the intended path?</p>",
        "id": 303130991,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665320402
    },
    {
        "content": "<p>Hmm.... <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> is <code>toScalars</code> different than what <code>graphemes</code> would be? Did the function just get renamed?</p>",
        "id": 303142395,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665327640
    },
    {
        "content": "<p>As far as I understand from the (confusing) Unicode docs, graphemes are the smallest text element in a script. Scalars are a single unicode character, which may consist of one of more graphemes. Multiple scalars can then be grouped into grapheme clusters.</p>\n<p>Edit: fixed the definitions</p>",
        "id": 303144198,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665328835
    },
    {
        "content": "<p>yeah they're different</p>",
        "id": 303144857,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665329225
    },
    {
        "content": "<p>it was never implemented, I just wrote about it as if it already existed, although it doesn't <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 303144873,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665329246
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"551190\">@Prajwal S N</span> that's correct!</p>",
        "id": 303144895,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665329273
    },
    {
        "content": "<p>basically if you want to split it into whole emojis instead of chopped-up emojis, you want graphemes and not scalars</p>",
        "id": 303144978,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665329316
    },
    {
        "content": "<p>because all emojis are one grapheme each, but multiple scalars each</p>",
        "id": 303145016,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665329349
    },
    {
        "content": "<p>It looks like a we can use <code>grapheme.zig</code> with the logic used in <code>Str.toScalars</code> to implement this</p>",
        "id": 303145049,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665329384
    },
    {
        "content": "<p>I would like to give this a shot if no one else is already working on it</p>",
        "id": 303145167,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665329429
    },
    {
        "content": "<p>that would be wonderful! <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 303145189,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665329440
    },
    {
        "content": "<p>happy to help you with that in any way!</p>",
        "id": 303145224,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665329457
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"551190\">@Prajwal S N</span> ! <span aria-label=\"raised hands\" class=\"emoji emoji-1f64c\" role=\"img\" title=\"raised hands\">:raised_hands:</span></p>",
        "id": 303145267,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665329477
    },
    {
        "content": "<p>I can think of two ways to implement this:</p>\n<ol>\n<li>We return a <code>List (List U32)</code>, with each sub-list consisting of the code points for a single grapheme</li>\n<li>We return a <code>List Str</code>, with each element being one grapheme</li>\n</ol>\n<p>Which one do you guys think is better?</p>",
        "id": 303147038,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665330609
    },
    {
        "content": "<p>definitely #2!</p>",
        "id": 303149796,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665332331
    },
    {
        "content": "<p>you can quickly and easily go from <code>Str</code> to <code>List U32</code>, but going the other way around requires a utf-8 validation check and a <code>Result</code> <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 303149855,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665332388
    },
    {
        "content": "<p>I managed to get some sort of implementation done, but I've been dealing with all forms of allocation issues, segfaults, and core dumps since yesterday <span aria-label=\"skull\" class=\"emoji emoji-1f480\" role=\"img\" title=\"skull\">:skull:</span> I'll open a draft PR, would be great if someone can help with fixing it (I have close to zero knowledge of Zig, so I'm not sure how to go about making it work either)</p>",
        "id": 303279541,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665415267
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/4286\">https://github.com/roc-lang/roc/pull/4286</a></p>",
        "id": 303279868,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665415384
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"551275\">@Travis</span> in case you're interested - you seem to be very knowledgeable about Zig! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 303288037,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665418225
    },
    {
        "content": "<p>yes i would like to help if i can. although i'm not very comfy in rust (and no rust install yet). <span class=\"user-mention\" data-user-id=\"551190\">@Prajwal S N</span> feel free to ping me if you have any zig questions.</p>",
        "id": 303289203,
        "sender_full_name": "Travis",
        "timestamp": 1665418694
    },
    {
        "content": "<p>have you looked at ziglyph? <a href=\"https://github.com/jecolon/ziglyph\">https://github.com/jecolon/ziglyph</a></p>",
        "id": 303289614,
        "sender_full_name": "Travis",
        "timestamp": 1665418857
    },
    {
        "content": "<p>not sure if its applicable to your pr just the first thing that comes to mind</p>",
        "id": 303289966,
        "sender_full_name": "Travis",
        "timestamp": 1665418994
    },
    {
        "content": "<p>Yes I did take a look at it, but I'm not keen on adding another dependency to the backend</p>",
        "id": 303292850,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665420104
    },
    {
        "content": "<p>Or would it be alright to replace the existing <code>grapheme.zig</code> dependency with ziglyph?</p>",
        "id": 303293148,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665420218
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"551275\">@Travis</span> need some help with copying slices in Zig</p>\n<div class=\"codehilite\" data-code-language=\"Zig\"><pre><span></span><code><span class=\"kr\">var</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"p\">[]</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">null</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kr\">var</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"hello\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n<p>How do I copy the contents of b to a? Doing <code>@memcpy(a, b, b.len)</code> throws <code>expected [*]u8, got ?[]const u8</code></p>",
        "id": 303809769,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665661528
    },
    {
        "content": "<p>what do you want this to do? you have a null pointer, can't store anything into that?</p>",
        "id": 303813605,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1665662971
    },
    {
        "content": "<p><del>do you want this to happen at runtime? if so, a would need to be a <code>?[] u8</code> cause you can't write to a const pointer.</del></p>",
        "id": 303868062,
        "sender_full_name": "Travis",
        "timestamp": 1665676362
    },
    {
        "content": "<p>or do you mean overwrite a to point to b?</p>",
        "id": 303868193,
        "sender_full_name": "Travis",
        "timestamp": 1665676395
    },
    {
        "content": "<p>cause that would just be <code>a = b</code>. so yeah i'm not sure what youre trying to do.</p>",
        "id": 303868303,
        "sender_full_name": "Travis",
        "timestamp": 1665676436
    },
    {
        "content": "<p>in order for this to work, a needs to have memory somewhere.</p>",
        "id": 303868800,
        "sender_full_name": "Travis",
        "timestamp": 1665676569
    },
    {
        "content": "<p>if you have an allocator you could do <code>a = try allocator.dupe(u8, b)</code></p>",
        "id": 303868922,
        "sender_full_name": "Travis",
        "timestamp": 1665676608
    },
    {
        "content": "<blockquote>\n<p>in order for this to work, a needs to have memory somewhere.</p>\n</blockquote>\n<p>Yes I would like to allocate and copy the slice into a</p>",
        "id": 303896674,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665685158
    },
    {
        "content": "<blockquote>\n<p>what do you want this to do? you have a null pointer, can't store anything into that?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> It needs to be null since I'm using it in an if within a while loop. In every iteration of the loop, I need b to be copied and stored in a as the previous value. See this PR (<a href=\"https://github.com/roc-lang/roc/pull/4286\">https://github.com/roc-lang/roc/pull/4286</a>) for the complete function. I'm trying to refactor it into using a u8 slice instead of u21 values for the codepoints</p>",
        "id": 303897203,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665685332
    },
    {
        "content": "<p>are you referring to <code>opt_last_codepoint</code> here? <a href=\"https://github.com/snprajwal/roc/commit/240df7e679e23b7366732a94374ca578a432188e#diff-a30a29d5d2db3689cadd795ef9925fa8bd162463993bff0ff13c91e1178f7d7dR1328\">https://github.com/snprajwal/roc/commit/240df7e679e23b7366732a94374ca578a432188e#diff-a30a29d5d2db3689cadd795ef9925fa8bd162463993bff0ff13c91e1178f7d7dR1328</a></p>",
        "id": 303900941,
        "sender_full_name": "Travis",
        "timestamp": 1665686583
    },
    {
        "content": "<p>and you're trying to refactor that to a <code>?[]const u8</code>?</p>",
        "id": 303901186,
        "sender_full_name": "Travis",
        "timestamp": 1665686677
    },
    {
        "content": "<p>would it be any easier to make it a <code>?[4]u8</code>?</p>",
        "id": 303901286,
        "sender_full_name": "Travis",
        "timestamp": 1665686718
    },
    {
        "content": "<blockquote>\n<p>and you're trying to refactor that to a ?[]const u8?</p>\n</blockquote>\n<p>Bingo, that seems to make everything work correctly, but I need to copy the slice in order to not omit the first character</p>",
        "id": 304459876,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1666013250
    },
    {
        "content": "<blockquote>\n<p>would it be any easier to make it a ?[4]u8?</p>\n</blockquote>\n<p>I'm guessing even if I do that, I will still have to copy the slice over...</p>",
        "id": 304460048,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1666013294
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"551190\">Prajwal S N</span> <a href=\"#narrow/stream/316715-contributing/topic/Missing.20Str.2Egraphemes/near/304460048\">said</a>:</p>\n<blockquote>\n<p>I'm guessing even if I do that, I will still have to copy the slice over...<br>\n</p>\n</blockquote>\n<p>Yes you'll have to copy over the slice over into the [4]u8 and keep track of the length.</p>",
        "id": 304549708,
        "sender_full_name": "Travis",
        "timestamp": 1666037718
    },
    {
        "content": "<p>This all seems kinda kludgy imo.  Maybe better to use a u32 which you can set to zero and @bitcast to/from a [4]u8?</p>",
        "id": 304549990,
        "sender_full_name": "Travis",
        "timestamp": 1666037824
    },
    {
        "content": "<p>seems like doing it this way you wouldn't need an optional. just check if the u32 equals zero rather than null.</p>",
        "id": 304551005,
        "sender_full_name": "Travis",
        "timestamp": 1666038195
    },
    {
        "content": "<p>idk. these are just ideas. haven't thought carefully about the code in question.</p>",
        "id": 304551231,
        "sender_full_name": "Travis",
        "timestamp": 1666038274
    },
    {
        "content": "<p>I think I'll step back from this. I do not have the Zig expertise to get it working, and I've been going in circles for the past week. If anyone else would like to continue with what I've already implemented, please feel free to do so!</p>",
        "id": 304682564,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1666101060
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"551190\">@Prajwal S N</span>  i am interested in attempting to implement the zig portion of this pr. however, i am not very familiar with the compiler or rust. so i would need a lot of guidance.</p>",
        "id": 304789653,
        "sender_full_name": "Travis",
        "timestamp": 1666110558
    },
    {
        "content": "<p>would you be interested in working together?  if you or someone else could oversee and assign me tasks plus do the rust coding, i might be able to help complete this.</p>",
        "id": 304789727,
        "sender_full_name": "Travis",
        "timestamp": 1666110580
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"551275\">@Travis</span> I would be happy to assist you in any way possible. The Rust portion of the implementation is already complete, along with the LLVM bindings for the Zig function. The only issue currently is with the logic used for splitting the string into graphemes. You won't have to touch anything outside of <code>compiler/builtins/bitcode/src/str.zig</code></p>",
        "id": 304802937,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1666114463
    },
    {
        "content": "<p>The <code>isGraphemeBreak()</code> function used by <code>strGraphemes()</code> is provided by <code>compiler/builtins/bitcode/src/helpers/grapheme.zig</code>, you might want to take a look at that too</p>",
        "id": 304803231,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1666114560
    },
    {
        "content": "<p>There were a couple of very useful reviews on the PR by <span class=\"user-mention silent\" data-user-id=\"431893\">Brian Carroll</span>  , would also recommend going through that once</p>",
        "id": 304803554,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1666114658
    },
    {
        "content": "<p>ok thanks <span class=\"user-mention\" data-user-id=\"551190\">@Prajwal S N</span> . sounds like a reasonable task. i'll take a closer look at the pr and comments.</p>",
        "id": 304804357,
        "sender_full_name": "Travis",
        "timestamp": 1666114915
    },
    {
        "content": "<p>question: are there existing ci tests for this? will the ci just fail if i have errors?</p>",
        "id": 304804739,
        "sender_full_name": "Travis",
        "timestamp": 1666115043
    },
    {
        "content": "<p>what would be even better is if there are zig tests i could run locally (using <code>$ zig test ...</code>) without having to push and wait for ci to run.  (i'm assuming the ci takes a while to run)</p>",
        "id": 304805000,
        "sender_full_name": "Travis",
        "timestamp": 1666115120
    },
    {
        "content": "<p>and if no zig tests exist, could you point me to where the tests are defined so that i can create zig tests.</p>",
        "id": 304806061,
        "sender_full_name": "Travis",
        "timestamp": 1666115471
    },
    {
        "content": "<p>or if they don't exist help me create them by providing some inputs and expected outputs to strGrapheme?</p>",
        "id": 304806328,
        "sender_full_name": "Travis",
        "timestamp": 1666115540
    },
    {
        "content": "<p>i don't see any <code>strGrapheme</code> specific tests here: <a href=\"https://github.com/snprajwal/roc/blob/str-graphemes/crates/compiler/builtins/bitcode/src/str.zig#L1310\">https://github.com/snprajwal/roc/blob/str-graphemes/crates/compiler/builtins/bitcode/src/str.zig#L1310</a></p>",
        "id": 304807906,
        "sender_full_name": "Travis",
        "timestamp": 1666116086
    },
    {
        "content": "<p>You're right, I haven't added any tests yet. You can define them in <code>str.zig</code> itself, something like</p>\n<div class=\"codehilite\" data-code-language=\"Zig\"><pre><span></span><code><span class=\"k\">test</span><span class=\"w\"> </span><span class=\"s\">\"strGraphemes: emojis, ut8, and ascii characters\"</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"n\">bytes_arr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"6🤔å\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"n\">bytes_len</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bytes_arr</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"p\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">bytes_arr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bytes_len</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"n\">RocStr</span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">RocStr</span><span class=\"p\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s\">\"6\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"p\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s\">\"🤔\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"p\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s\">\"å\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">defer</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">expected</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">rocStr</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">rocStr</span><span class=\"p\">.</span><span class=\"n\">deinit</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">str</span><span class=\"p\">.</span><span class=\"n\">deinit</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"n\">array</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">strGraphemes</span><span class=\"p\">(</span><span class=\"n\">str</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">try</span><span class=\"w\"> </span><span class=\"n\">expectEqual</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">try</span><span class=\"w\"> </span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">expected</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]));</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">try</span><span class=\"w\"> </span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">expected</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]));</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">try</span><span class=\"w\"> </span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">].</span><span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">expected</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]));</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 304944973,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1666182823
    },
    {
        "content": "<p>thank you!  you wrote a whole test. very nice.  </p>\n<p>while this is much appreciated, i was only asking for inputs and outputs.  i think i understand what strGraphemes() is supposed to do - just split up a string into graphemes.  what i'm hoping for is some input / outputs like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>1. &quot;ab&quot; -&gt; [&quot;a&quot;, &quot;b&quot;]\n2. &quot;6🤔å&quot; -&gt; [&quot;6&quot;, &quot;🤔&quot;, &quot;å&quot;]\n</code></pre></div>",
        "id": 304962543,
        "sender_full_name": "Travis",
        "timestamp": 1666188243
    },
    {
        "content": "<p>i don't know what important edge cases will look like and would like to add them.</p>",
        "id": 304962945,
        "sender_full_name": "Travis",
        "timestamp": 1666188355
    },
    {
        "content": "<p>I put up a pr: <a href=\"https://github.com/roc-lang/roc/pull/4364\">https://github.com/roc-lang/roc/pull/4364</a></p>",
        "id": 304994780,
        "sender_full_name": "Travis",
        "timestamp": 1666197239
    },
    {
        "content": "<p>i consider it a first draft. please review and let me know what it needs.</p>",
        "id": 304994961,
        "sender_full_name": "Travis",
        "timestamp": 1666197276
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span> please take a look if you can too ^</p>",
        "id": 304996704,
        "sender_full_name": "Travis",
        "timestamp": 1666197713
    },
    {
        "content": "<blockquote>\n<p>you wrote a whole test. very nice.</p>\n</blockquote>\n<p>Haha no I just ripped off an existing test for <code>Str.countGraphemeClusters</code> and <code>Str.split</code> <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 305006267,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1666200723
    },
    {
        "content": "<p>glad for a painless rebase. <span aria-label=\"relief\" class=\"emoji emoji-1f62e-200d-1f4a8\" role=\"img\" title=\"relief\">:relief:</span>  didn't want to have to deal with any conflicts.</p>",
        "id": 305008675,
        "sender_full_name": "Travis",
        "timestamp": 1666201487
    },
    {
        "content": "<p>i just did a squash. hoping that + signing worked ok</p>",
        "id": 305021803,
        "sender_full_name": "Travis",
        "timestamp": 1666205893
    },
    {
        "content": "<p>seems good now if anyone wants to kick off the ci</p>",
        "id": 305027360,
        "sender_full_name": "Travis",
        "timestamp": 1666207897
    },
    {
        "content": "<p>can't tell why the ci failed <a href=\"https://github.com/roc-lang/roc/pull/4364\">https://github.com/roc-lang/roc/pull/4364</a></p>",
        "id": 305042611,
        "sender_full_name": "Travis",
        "timestamp": 1666213712
    },
    {
        "content": "<p><em>doesn't seem</em> so be related to <code>strGraphemes()</code>?</p>",
        "id": 305042722,
        "sender_full_name": "Travis",
        "timestamp": 1666213762
    },
    {
        "content": "<p>Agreed. I reran it, let's see what happens</p>",
        "id": 305044155,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1666214359
    },
    {
        "content": "<p>thanks. looks like it failed again with same the errors.</p>",
        "id": 305046543,
        "sender_full_name": "Travis",
        "timestamp": 1666215550
    },
    {
        "content": "<p><code>unix_wait_status(139)</code> is for segmentation faults. I've tested it locally and was able to reproduce it, all failed tests use a c platform.</p>",
        "id": 305090829,
        "sender_full_name": "Anton",
        "timestamp": 1666249461
    },
    {
        "content": "<p>huh <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> thanks for testing locally. thats an interesting observation that they're all using a c platform. could that perhaps suggest some type of linking error is happening?</p>",
        "id": 305189871,
        "sender_full_name": "Travis",
        "timestamp": 1666283736
    },
    {
        "content": "<p>the failing tests are</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\"> failures:</span>\n<span class=\"go\">    cli_run::parse_movies_csv</span>\n<span class=\"go\">    cli_run::platform_switching_main</span>\n<span class=\"go\">    cli_run::ruby_interop</span>\n</code></pre></div>",
        "id": 305191951,
        "sender_full_name": "Travis",
        "timestamp": 1666284310
    },
    {
        "content": "<p>and the first failure looks like this</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\">test cli_run::false_interpreter ... ok</span>\n<span class=\"go\">test cli_run::breakout ... ok</span>\n\n<span class=\"go\">failures:</span>\n\n<span class=\"go\">---- cli_run::parse_movies_csv stdout ---- thread 'cli_run::parse_movies_csv'</span>\n<span class=\"go\">     panicked at 'bad status Out { stdout: \"2 movies were found:\\n\\nThe</span>\n<span class=\"go\">     movie 'Airplane!' was released in 1980 and stars Robert Hays and Julie</span>\n<span class=\"go\">     Hagerty\\nThe movie 'Caddyshack' was released in 1980 and stars Chevy</span>\n<span class=\"go\">     Chase, Rodney Dangerfield, Ted Knight, Michael O'Keefe and Bill</span>\n<span class=\"go\">     Murray\\n\\nParse success!\\n\", stderr: \"🔨 Rebuilding platform...\\n\", status:</span>\n<span class=\"go\">     ExitStatus(unix_wait_status(139)) }', crates/cli/tests/cli_run.rs:118:9</span>\n</code></pre></div>",
        "id": 305192242,
        "sender_full_name": "Travis",
        "timestamp": 1666284374
    },
    {
        "content": "<p>so it appears that the test's stdout looks good. and everything else seems ok except the segfault exit status.</p>",
        "id": 305192964,
        "sender_full_name": "Travis",
        "timestamp": 1666284583
    },
    {
        "content": "<p>is it possible that the tests i added are causing this segfault? i think the new tests are the only real addition. the <code>strGraphemes()</code> function is very similar to <span class=\"user-mention\" data-user-id=\"551190\">@Prajwal S N</span>'s version which passed ci fine.</p>",
        "id": 305204392,
        "sender_full_name": "Travis",
        "timestamp": 1666287965
    },
    {
        "content": "<p>I don't think so, they're coming from an entirely different crate</p>",
        "id": 305208125,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1666289099
    },
    {
        "content": "<p>This is somehow specifically caused by the surgical linker in optimized builds. The exit function is crashing. From valgrind:</p>\n<div class=\"codehilite\"><pre><span></span><code>==34239== Process terminating with default action of signal 11 (SIGSEGV)\n==34239==  Bad permissions for mapped region at address 0x121004\n==34239==    at 0x121004: ??? (in /home/bren077s/Projects/roc-misc/roc/examples/parser/parse-movies-csv)\n==34239==    by 0x498E0C4: __run_exit_handlers (in /nix/store/6f66prpgx1qx4n6k450sxs3d157ia1ps-glibc-2.35-163/lib/libc.so.6)\n==34239==    by 0x498E24D: exit (in /nix/store/6f66prpgx1qx4n6k450sxs3d157ia1ps-glibc-2.35-163/lib/libc.so.6)\n==34239==    by 0x4977254: (below main) (in /nix/store/6f66prpgx1qx4n6k450sxs3d157ia1ps-glibc-2.35-163/lib/libc.so.6)\n</code></pre></div>",
        "id": 305213738,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666290950
    },
    {
        "content": "<p>Does not look to be nix/glibc version specific:</p>\n<div class=\"codehilite\"><pre><span></span><code>==34807== Process terminating with default action of signal 11 (SIGSEGV)\n==34807==  Bad permissions for mapped region at address 0x121010\n==34807==    at 0x121010: ??? (in /home/bren077s/Projects/roc-misc/roc/examples/parser/parse-movies-csv)\n==34807==    by 0x4988FB4: __run_exit_handlers (exit.c:113)\n==34807==    by 0x4989129: exit (exit.c:143)\n==34807==    by 0x4972210: (below main) (libc_start_call_main.h:74)\n</code></pre></div>",
        "id": 305214058,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666291041
    },
    {
        "content": "<p>Based on some googling, this seems to happen when something in an app is trying to write to or execute from a section without those permissions. For example, if you have a string constant and try to write to it. The constant would be in a read only section and this would happen.</p>",
        "id": 305215210,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666291472
    },
    {
        "content": "<p>Ok so. when unloading, the app loads the <code>FINI</code> address: <code>FINI                 0x0000000000019010</code>. It adds some value to that and then calls it as a function.</p>",
        "id": 305216860,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666292037
    },
    {
        "content": "<p>It looks to be successfully jumping to the <code>fini</code> function, which based on the address looks like it is in an executable section, yet when trying to run the first instruction to increment the stack, it crashes.</p>",
        "id": 305217004,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666292081
    },
    {
        "content": "<p>Summary:<br>\nI can see what is broken. It doesn't look to me like it should be broken. I am quite confused how this change led to the breakage.</p>",
        "id": 305223765,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666294538
    },
    {
        "content": "<p>Cause:<br>\nNew function, surgical linker, and optimized build leading to segfault when trying to exit the program.</p>",
        "id": 305223935,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666294605
    },
    {
        "content": "<p>could it possibly have something to do with the large arrays in <a href=\"https://github.com/roc-lang/roc/blob/main/crates/compiler/builtins/bitcode/src/helpers/grapheme.zig\">helpers/grapheme.zig</a>? doesn't seem likely as this file existed and was used prior to this pr.</p>",
        "id": 305238746,
        "sender_full_name": "Travis",
        "timestamp": 1666300276
    },
    {
        "content": "<p>like maybe we're trampling/overflowing the stack?</p>",
        "id": 305238957,
        "sender_full_name": "Travis",
        "timestamp": 1666300348
    },
    {
        "content": "<p>i remember zig having some issues with very large arrays at some point. not likely, just a thought.</p>",
        "id": 305238989,
        "sender_full_name": "Travis",
        "timestamp": 1666300362
    },
    {
        "content": "<p>Ok this is a stupid idea but ... the last change was the one to rename that export. And we're having some kind of linker issue. Wanna try changing it back as an experiment? If we don't learn anything we can change back again.</p>",
        "id": 305240353,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1666300908
    },
    {
        "content": "<p>ok sounds good. will try it out..</p>",
        "id": 305240800,
        "sender_full_name": "Travis",
        "timestamp": 1666301079
    },
    {
        "content": "<p>ok just pushed. ci needs approval.</p>",
        "id": 305241494,
        "sender_full_name": "Travis",
        "timestamp": 1666301391
    },
    {
        "content": "<p>no luck. same errors on linux.  i wondered about this too but forgot to bring it up. glad we ruled it out anyway.</p>",
        "id": 305247415,
        "sender_full_name": "Travis",
        "timestamp": 1666304400
    },
    {
        "content": "<p>Is this the first time importing the grapheme.zig file? If so, it is probably generating something that breaks the surgical linker (still not sure how given everything runs and it only crashes on exiting). Also, it breaks test that theoretically shouldn't include any code generated from it.</p>",
        "id": 305248100,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666304730
    },
    {
        "content": "<p>no helpers/grapheme.zig was there previous to this pr. its used in str.zig#countGraphemeClusters()</p>",
        "id": 305248313,
        "sender_full_name": "Travis",
        "timestamp": 1666304828
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/blob/main/crates/compiler/builtins/bitcode/src/str.zig#L1216\">https://github.com/roc-lang/roc/blob/main/crates/compiler/builtins/bitcode/src/str.zig#L1216</a></p>",
        "id": 305248568,
        "sender_full_name": "Travis",
        "timestamp": 1666304906
    },
    {
        "content": "<p>Ah, it just wasn't imported at the top of the file. Ok</p>",
        "id": 305248792,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666305008
    },
    {
        "content": "<p>Ok, i figured something out</p>",
        "id": 305252840,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666307314
    },
    {
        "content": "<p>When we compile a c/c++ host, we always build it with the built-ins object file. This is not wanted for the llvm backend. The llvm backend already loads the built-ins through the llvm bitcode.</p>",
        "id": 305252935,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666307376
    },
    {
        "content": "<p>Somehow (haven't figured out why yet), if we compile the c/c++ host with the new builtins object generated from the new PR, it is broken.</p>",
        "id": 305253042,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666307419
    },
    {
        "content": "<p>Simply not compiling it with the built-ins object is a fix.</p>",
        "id": 305253068,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666307439
    },
    {
        "content": "<p>This may mean we will run into more related problems when the dev backend is more complete, but I don't think we need to worry about that too much for now.</p>",
        "id": 305253161,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666307493
    },
    {
        "content": "<p>So for now, a fix should be to comment out <code>link.rs</code> line 437.</p>",
        "id": 305253293,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666307584
    },
    {
        "content": "<p>should i try commenting out that line in this pr? maybe just temporarily to see if it passes the ci.</p>",
        "id": 305265734,
        "sender_full_name": "Travis",
        "timestamp": 1666314531
    },
    {
        "content": "<p>i'll give it a try. if anyone sees this and can approve the ci run in a few minutes that would be appreciated.</p>",
        "id": 305266152,
        "sender_full_name": "Travis",
        "timestamp": 1666314622
    },
    {
        "content": "<p>awaiting ci approval: <a href=\"https://github.com/roc-lang/roc/pull/4364\">https://github.com/roc-lang/roc/pull/4364</a></p>",
        "id": 305266499,
        "sender_full_name": "Travis",
        "timestamp": 1666314708
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/316715-contributing/topic/Missing.20Str.2Egraphemes/near/305253293\">said</a>:</p>\n<blockquote>\n<p>So for now, a fix should be to comment out <code>link.rs</code> line 437.</p>\n</blockquote>\n<p>This worked! Nice job.</p>",
        "id": 305271537,
        "sender_full_name": "Travis",
        "timestamp": 1666318781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> <span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span>  do you guys want me to leave this link.rs:437 as is or should we put that in a separate pr?  As is, that line is included (commented out) and i've removed the <code>str_</code> prefixed symbol.</p>",
        "id": 305271677,
        "sender_full_name": "Travis",
        "timestamp": 1666318908
    },
    {
        "content": "<p>Should be fine to change in this pr. Can you add a comment. Something like:<br>\nWith the addition of Str.graphemes, always linking the built-ins led to a surgical linker bug for optimized builds. Disabling until it is needed for dev builds.</p>",
        "id": 305275385,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666322479
    },
    {
        "content": "<p>does anyone have any guidance for this idea: <a href=\"https://github.com/roc-lang/roc/pull/4364#issuecomment-1286453759\">https://github.com/roc-lang/roc/pull/4364#issuecomment-1286453759</a> ?</p>",
        "id": 305401445,
        "sender_full_name": "Travis",
        "timestamp": 1666371187
    },
    {
        "content": "<p>i just wanted to add a little bit more test coverage for strGraphemes() and it makes sense to me to combine with the existing countGraphemeClusters() tests.</p>",
        "id": 305401603,
        "sender_full_name": "Travis",
        "timestamp": 1666371242
    },
    {
        "content": "<p>i combined the tests. can easily change it back if necessary - let me know.</p>",
        "id": 305405292,
        "sender_full_name": "Travis",
        "timestamp": 1666372359
    },
    {
        "content": "<p>have you thought about writing the tests in Roc (using <code>expect</code> inside <code>Str.roc</code>, similar to how we are in some other places in that file) instead of zig?</p>",
        "id": 305406351,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1666372686
    },
    {
        "content": "<p>no i hadn't noticed those tests in <code>Str.roc</code>.  if that is the preferred way, i can move them there.</p>",
        "id": 305407247,
        "sender_full_name": "Travis",
        "timestamp": 1666372977
    },
    {
        "content": "<p>note that it is nice to have the tests in zig for the all the devs (likely just me <span aria-label=\"smirk\" class=\"emoji emoji-1f60f\" role=\"img\" title=\"smirk\">:smirk:</span> ) who don't have a rust toolchain installed.</p>",
        "id": 305407657,
        "sender_full_name": "Travis",
        "timestamp": 1666373108
    },
    {
        "content": "<p>you should be able to run the <code>Str.roc</code> tests with the normal nightly builds of the compiler I think!</p>",
        "id": 305409804,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1666373785
    },
    {
        "content": "<p><code>roc test path/to/Str.roc</code></p>",
        "id": 305409836,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1666373804
    },
    {
        "content": "<p>ah. <span aria-label=\"light bulb\" class=\"emoji emoji-1f4a1\" role=\"img\" title=\"light bulb\">:light_bulb:</span>  i forgot that <code>str.zig</code> is compiled on the fly with the platform.</p>",
        "id": 305411907,
        "sender_full_name": "Travis",
        "timestamp": 1666374524
    },
    {
        "content": "<p>oh wait oops, I don't think the nightly will work if you need to incorporate new zig builtin code</p>",
        "id": 305412580,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1666374771
    },
    {
        "content": "<p>think i got commit signing straightened out (...again <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> ) if anyone can approve the ci: <a href=\"https://github.com/roc-lang/roc/pull/4364\">https://github.com/roc-lang/roc/pull/4364</a></p>",
        "id": 305610368,
        "sender_full_name": "Travis",
        "timestamp": 1666492769
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"551190\">Prajwal S N</span> has marked this topic as resolved.</p>",
        "id": 305637454,
        "sender_full_name": "Notification Bot",
        "timestamp": 1666515514
    }
]