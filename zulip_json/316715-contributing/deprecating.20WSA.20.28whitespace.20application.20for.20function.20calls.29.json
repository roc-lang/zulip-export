[
    {
        "content": "<p>As discussed in <a class=\"stream-topic\" data-stream-id=\"304641\" href=\"/#narrow/channel/304641-ideas/topic/reflecting.20on.20static.20dispatch.2E.2E.2E.20and.20discussing.20removing.20WSA\">#ideas &gt; reflecting on static dispatch... and discussing removing WSA</a> , we're going to start officially deprecating WSA (whitespace application syntax for function calls). For example, <code>Num.add 1 2</code> should now be written as <code>Num.add(1, 2)</code> instead, using the new PNC (parentheses and commas) function call syntax.</p>\n<p>There are several aspects for us to discuss further:</p>\n<ul>\n<li>WSA is currently also used in our type system, for applying type variables (<code>List Str</code>). I infer that tag payloads (<code>Custom Str</code>) are simply a subset of type variables, but maybe they count as a distinct use case. <strong>Should we deprecate WSA in the type system, too?</strong></li>\n<li>When is the first day that we want anyone reading this thread to stop writing new WSA code?</li>\n<li>When do we want to announce that everyone should migrate all their active code from WSA to PNC?</li>\n<li>When is the first day that we want Roc to start warning about WSA code?</li>\n<li>When is the first day that we want anyone not reading this thread to receive PRs migrating their WSA code to PNC?</li>\n<li>When is the first day that we want Roc to stop compiling WSA code?</li>\n<li>When is the first day that we want Roc to stop recognizing WSA code?</li>\n<li>Anything else we need to discuss for a smooth deprecation?</li>\n</ul>",
        "id": 499330548,
        "sender_full_name": "jan kili",
        "timestamp": 1739395126
    },
    {
        "content": "<p>I think the plan is that types are WSA and values are PNC, its subtle but I appreciate having them distinct visually.</p>",
        "id": 499330849,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1739395259
    },
    {
        "content": "<p><a class=\"stream-topic\" data-stream-id=\"304641\" href=\"/#narrow/channel/304641-ideas/topic/Using.20parens.20for.20types\">#ideas &gt; Using parens for types</a></p>",
        "id": 499330939,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1739395299
    },
    {
        "content": "<p>e.g. <code>[Number I64, String Str]</code> is the type of a tag union, with <code>Number(42)</code>, or <code>String(\"a string\")</code> being values of this type.</p>",
        "id": 499331195,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1739395392
    },
    {
        "content": "<p>I think we have a very easy removal point. Just never port WSA to the new zig compiler</p>",
        "id": 499343258,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739400592
    },
    {
        "content": "<p>Whenever that is the default compiler, it will be officially removed</p>",
        "id": 499343331,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739400613
    },
    {
        "content": "<p>It is already deprecated in the old rust compiler and will auto format to PNC</p>",
        "id": 499343362,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739400632
    },
    {
        "content": "<p>So I would label it as deprecated already</p>",
        "id": 499343427,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739400672
    },
    {
        "content": "<p>I don't think we need to do anything more aggressive in the old rust compiler.</p>",
        "id": 499343472,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739400698
    },
    {
        "content": "<p>I agree with Brendan</p>",
        "id": 500470412,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1739898767
    },
    {
        "content": "<p>These simple replies seem like consensus! CC <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> </p>\n<ul>\n<li>WSA is currently also used in our type system, for applying type variables (<code>List Str</code>). I infer that tag payloads (<code>Custom Str</code>) are simply a subset of type variables, but maybe they count as a distinct use case. Should we deprecate WSA in the type system, too?<ul>\n<li><a class=\"stream-topic\" data-stream-id=\"304641\" href=\"/#narrow/channel/304641-ideas/topic/Using.20parens.20for.20types/with/493256837\">#ideas &gt; Using parens for types</a> is resolving this.</li>\n</ul>\n</li>\n<li>When is the first day that we want anyone reading this thread to stop writing new WSA code?<ul>\n<li>Today.</li>\n</ul>\n</li>\n<li>When do we want to announce that everyone should migrate all their active code from WSA to PNC?<ul>\n<li>Tomorrow?</li>\n</ul>\n</li>\n<li>When is the first day that we want Roc to start warning about WSA code?<ul>\n<li>Never? Hopefully the new compiler can have an errorfix hint like \"It looks like you forgot parentheses around function arguments.\", but maybe that's an unreasonable insight.</li>\n</ul>\n</li>\n<li>When is the first day that we want anyone not reading this thread to receive PRs migrating their WSA code to PNC?<ul>\n<li>Tomorrow?</li>\n</ul>\n</li>\n<li>When is the first day that we want Roc to stop compiling WSA code?<ul>\n<li>The day we release <code>v0.1.0</code>.</li>\n</ul>\n</li>\n<li>When is the first day that we want Roc to stop recognizing WSA code?<ul>\n<li>The day we release <code>v0.1.0</code>.</li>\n</ul>\n</li>\n<li>Anything else we need to discuss for a smooth deprecation?<ul>\n<li>I just want to advocate for us <strong><em>encouraging</em></strong> ecosystem tooling to not drop support for any <code>v0.0.0</code> syntax until <code>v0.1.0</code> fully releases.</li>\n</ul>\n</li>\n</ul>\n<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span>s?</p>",
        "id": 500486919,
        "sender_full_name": "jan kili",
        "timestamp": 1739904133
    }
]