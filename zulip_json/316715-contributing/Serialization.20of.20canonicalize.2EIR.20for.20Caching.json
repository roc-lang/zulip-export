[
    {
        "content": "<p>I'm currently working on <a href=\"https://github.com/roc-lang/roc/issues/7517\">implementing caching</a> for the <code>build/</code> folder. Based on the <a href=\"https://github.com/roc-lang/roc/blob/main/src/cache.zig#L8\">latest commit</a> in main, it looks like I should be serializing the <a href=\"https://github.com/roc-lang/roc/blob/main/src/build/specialize_types/IR.zig\">canonicalize.IR</a> struct, but I it doesn't seem like there's a built in way to serialize structs in zig. </p>\n<p>Before I try and write this logic on my own, I want to double check that this is indeed the case and I'm not just missing something obvious.</p>",
        "id": 507598333,
        "sender_full_name": "John Konecny",
        "timestamp": 1742759124
    },
    {
        "content": "<p>I don't have a link at the moment. Can share once back at my computer, but Andrew shared an example from one of his apps.</p>",
        "id": 507603423,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742762388
    },
    {
        "content": "<p>But yeah, it is manual. Basically write out the offsets and lengths of each array then write out the bytes of the data.</p>",
        "id": 507603506,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742762432
    },
    {
        "content": "<p>Thanks! Itâ€™s probably more maintainable writing it out manually anyway.</p>",
        "id": 507603629,
        "sender_full_name": "John Konecny",
        "timestamp": 1742762530
    },
    {
        "content": "<p>Here is an example of loading: <a href=\"https://codeberg.org/andrewrk/groovebasin/src/commit/9022521c445c2ba398f2f646aa24241ecd1a715a/shared/Db.zig#L576-L634\">https://codeberg.org/andrewrk/groovebasin/src/commit/9022521c445c2ba398f2f646aa24241ecd1a715a/shared/Db.zig#L576-L634</a></p>",
        "id": 507606370,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742764237
    },
    {
        "content": "<p>Note the file header type at the bottom of the file. Basically saving is making an equivalent of that, writing it out, then writing out all of the arrays as raw bytes.</p>",
        "id": 507606720,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742764482
    },
    {
        "content": "<p>Found the saving code too: <a href=\"https://codeberg.org/andrewrk/groovebasin/src/commit/9022521c445c2ba398f2f646aa24241ecd1a715a/server/main.zig#L1311-L1342\">https://codeberg.org/andrewrk/groovebasin/src/commit/9022521c445c2ba398f2f646aa24241ecd1a715a/server/main.zig#L1311-L1342</a></p>",
        "id": 507606891,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742764613
    },
    {
        "content": "<p>thanks to <a href=\"https://ziglang.org/download/0.14.0/release-notes.html#ptrCast-Allows-Changing-Slice-Length\">https://ziglang.org/download/0.14.0/release-notes.html#ptrCast-Allows-Changing-Slice-Length</a> you can use <code>@ptrCast</code> there instead of sliceAsBytes / bytesAsSlice</p>",
        "id": 507628225,
        "sender_full_name": "Andrew Kelley",
        "timestamp": 1742780228
    }
]