[
    {
        "content": "<p>Is this useful for others? Is it worth adding in a PR? </p>\n<p>My goal was to understand the platform types better.</p>\n<p>For example if I run <code>roc glue JsonGlue.roc test-glue/  main.roc</code> on the following, i get the below JSON. Note I had to add <code>Encoding</code> ability to the <code>Types</code> which was an extremely minor addition.</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>platform \"test\"\n    requires {} { main : Foo }\n    exposes []\n    packages {}\n    imports []\n    provides [mainForHost]\n\nFoo := [Number U8, String Str]\n\nmainForHost : Foo\nmainForHost = main\n</code></pre></div>\n<p>Generates <code>types.json</code></p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">\"aligns\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"nt\">\"deps\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span>\n<span class=\"w\">    </span><span class=\"nt\">\"entrypoints\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\"> </span><span class=\"nt\">\"T\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"mainForHost\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}],</span>\n<span class=\"w\">    </span><span class=\"nt\">\"sizes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"nt\">\"target\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">\"architecture\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"X86x64\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"nt\">\"operatingSystem\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"Mac\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"nt\">\"types\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"Unit\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"Num\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\"> </span><span class=\"nt\">\"U8\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}]</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"RocStr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">\"TagUnion\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"NonRecursive\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                        </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"discriminantOffset\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"p\">,</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"discriminantSize\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Foo\"</span><span class=\"p\">,</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"tags\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                                </span><span class=\"p\">{</span>\n<span class=\"w\">                                    </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Number\"</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"nt\">\"payload\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"Some\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">                                </span><span class=\"p\">},</span>\n<span class=\"w\">                                </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"String\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"payload\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nt\">\"Some\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">                            </span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"p\">}</span>\n<span class=\"w\">                    </span><span class=\"p\">]</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">],</span>\n<span class=\"w\">    </span><span class=\"nt\">\"typesByName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\"> </span><span class=\"nt\">\"T\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"Foo\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">}]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>I tested <code>Inspect</code> out too, which works well, but I just wanted a format that I could read in my editor and easily format with newlines etc.</p>",
        "id": 434573060,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713690135
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"nf\">app</span><span class=\"w\"> </span><span class=\"s\">\"json-glue\"</span>\n<span class=\"w\">    </span><span class=\"n\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">pf</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"s\">\"../platform/main.roc\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">json</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/lukewilliamboswell/roc-json/releases/download/0.7.0/xuaMzXRVG_SEhOFZucS3iBozlRdObWsfKaYZMHVE_q0.tar.br\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"kt\">Types</span><span class=\"o\">.</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"kt\">Types</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"kt\">File</span><span class=\"o\">.</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"kt\">File</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"p\">{</span><span class=\"n\">json</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"n\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">makeGlue</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">pf</span>\n\n<span class=\"nf\">makeGlue</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"w\"> </span><span class=\"kt\">Types</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">List</span><span class=\"w\"> </span><span class=\"kt\">File</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">Str</span>\n<span class=\"nf\">makeGlue</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">typesByArch</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"n\">typesByArch</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"n\">convertTypesToFile</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"w\"> </span><span class=\"n\">staticFiles</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Ok</span>\n\n<span class=\"nf\">staticFiles</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"w\"> </span><span class=\"kt\">File</span>\n<span class=\"nf\">staticFiles</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"kt\">[]</span>\n\n<span class=\"nf\">convertTypesToFile</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Types</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">File</span>\n<span class=\"nf\">convertTypesToFile</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n\n<span class=\"w\">    </span><span class=\"n\">content</span><span class=\"w\"> </span><span class=\"ow\">=</span>\n<span class=\"w\">        </span><span class=\"kt\">Encode</span><span class=\"o\">.</span><span class=\"n\">toBytes</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"n\">json</span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"o\">.</span><span class=\"n\">fromUtf8</span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"o\">.</span><span class=\"n\">withDefault</span><span class=\"w\"> </span><span class=\"s\">\"INVALID UTF8 ENCODED FROM JSON\"</span>\n\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"s\">\"types.json\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"w\">  </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 434573107,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713690208
    },
    {
        "content": "<p>Perhaps a good fit for the examples repo?</p>",
        "id": 434701704,
        "sender_full_name": "Anton",
        "timestamp": 1713778612
    },
    {
        "content": "<p>Given it's a super small change, and this might help others. I'll make a quick PR to add the Encoding, and Inspect abilities to the Types so others can do this without changing the compiler.</p>",
        "id": 435078264,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713911944
    },
    {
        "content": "<p>Ok PR is <a href=\"https://github.com/roc-lang/roc/pull/6670\">https://github.com/roc-lang/roc/pull/6670</a></p>",
        "id": 435079066,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713912443
    }
]