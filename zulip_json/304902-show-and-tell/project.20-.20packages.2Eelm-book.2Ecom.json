[
    {
        "content": "<p>hey folks,</p>\n<p>I'm working on the next version of a package I maintain for the Elm ecosystem and alongside the new package version I'm also planning on doing something more ambitious (that is where Roc comes in)</p>\n<p>I want to create a website that automatically generates elm-books for any package on the elm package registry. it should be able to read from two api's, one that serves the package docs as json and also the repo itself so I can generate extra interactive stuff (if those are available for the package).</p>\n<p>So for that I would need to:</p>\n<ul>\n<li>respond to http requests</li>\n<li>make http requests</li>\n<li>parse json</li>\n<li>generate files</li>\n<li>call local programs (elm-codegen)</li>\n<li>I don't think I need a db necessarily but would probably need to cache things somehow. could be in memory. don't know.</li>\n</ul>\n<p>In short, sounds like a pretty fun and low-stakes project to do in Roc! So I thought about creating this topic on show and tell to maybe talk about it and report advancements? Maybe there would be a better stream for it?</p>\n<p>Anyway, I'd also love to ask if you would consider any of those things something tricky to do these days and could benefit from waiting until X is complete. Thanks :)</p>",
        "id": 350307578,
        "sender_full_name": "Georges Boris",
        "timestamp": 1681648444
    },
    {
        "content": "<p>Responding to http is the only one I haven't seen yet. The others are all supported by the \"basic cli\" platform, I believe.</p>",
        "id": 350316245,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1681651912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span> forking the basic-cli into a simple webserver could probably be the way to go, right? perhaps making main = request response handler</p>",
        "id": 350317475,
        "sender_full_name": "Georges Boris",
        "timestamp": 1681652404
    },
    {
        "content": "<p>Im currently working on the feature to call local programs from the basic-cli. its a wip right now, with out propper responses from the child process or anything, but you can find the current state here: <a href=\"https://github.com/RMailaender/basic-cli/tree/add-cmd\">https://github.com/RMailaender/basic-cli/tree/add-cmd</a> <br>\ni dont know if there is any other, \"better\" solution allready. I just looked at the basic-cli and forked it for a own idea. ;)</p>",
        "id": 350317604,
        "sender_full_name": "Rene Mailaender",
        "timestamp": 1681652472
    },
    {
        "content": "<p>but it kinda works already non the less: <a href=\"#narrow/stream/304902-show-and-tell/topic/A.20roc.20that.20builds.20itself/near/350046410\">https://roc.zulipchat.com/#narrow/stream/304902-show-and-tell/topic/A.20roc.20that.20builds.20itself/near/350046410</a><br>\nI try to make glue work until the end of the week and make some adjustments to the api.</p>",
        "id": 350318371,
        "sender_full_name": "Rene Mailaender",
        "timestamp": 1681652732
    }
]