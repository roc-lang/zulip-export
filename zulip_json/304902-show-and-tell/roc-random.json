[
    {
        "content": "<p><span aria-label=\"gift heart\" class=\"emoji emoji-1f49d\" role=\"img\" title=\"gift heart\">:gift_heart:</span> New library! Pseudo-random number generators: <a href=\"https://github.com/JanCVanB/roc-random\">https://github.com/JanCVanB/roc-random</a><br>\nThis is only a v0.1 release, with minimally-usable implementations of 8/16/32-bit PCG-RXS-M-XS. I intend to make its API more ergonomic in v0.2, so I'd love to hear how you think v0.1 feels to use! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 268422917,
        "sender_full_name": "jan kili",
        "timestamp": 1642525317
    },
    {
        "content": "<p>I put <code>example.roc</code> and <code>Random.roc</code> in <code>examples/cli</code>(commit 2cbac921f), executed <code>cargo run examples/cli/example.roc</code>and got:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;Found unbound type variables {102}\n in type alias `Random.Seed8` [] : [ Global(&#39;Seed8&#39;) (Alias `Num.U8`[ but actually (Alias `Num.Num` (Alias `Num.Integer` (Alias `Num.Unsigned8`[ but actually [ Private(`Num.@Unsigned8`) ] ])[ but actually [ Private(`Num.@Integer`) (Alias `Num.Unsigned8`[ but actually [ Private(`Num.@Unsigned8`) ] ]) ] ])[ but actually [ Private(`Num.@Num`) (Alias `Num.Integer` (Alias `Num.Unsigned8`[ but actually [ Private(`Num.@Unsigned8`) ] ])[ but actually [ Private(`Num.@Integer`) (Alias `Num.Unsigned8`[ but actually [ Private(`Num.@Unsigned8`) ] ]) ] ]) ] ]) ]) ]&lt;102&gt;&#39;, compiler/can/src/scope.rs:192:17\n</code></pre></div>\n<p>Did you happen to come across this error before <span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span>?</p>",
        "id": 268444306,
        "sender_full_name": "Anton",
        "timestamp": 1642534616
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> I haven't. That's a lot of <code>but actually</code> lol</p>",
        "id": 268444905,
        "sender_full_name": "jan kili",
        "timestamp": 1642534922
    },
    {
        "content": "<p>I just tested <code>cargo run examples/cli/example.roc</code> for the first time (I usually build <code>roc</code> for release and run it with that executable), and I get the same error message that you did. Investigating!</p>",
        "id": 268447424,
        "sender_full_name": "jan kili",
        "timestamp": 1642536057
    },
    {
        "content": "<p>Yes, building for release (<code>cargo build --release</code>) and using that executable (<code>./target/release/roc examples/cli/example.roc</code>) seems to work.</p>",
        "id": 268451381,
        "sender_full_name": "jan kili",
        "timestamp": 1642537868
    },
    {
        "content": "<p>Does anyone know if there is a difference between <code>roc foo.roc</code> and <code>cargo run foo.roc</code>?</p>",
        "id": 268451421,
        "sender_full_name": "jan kili",
        "timestamp": 1642537894
    },
    {
        "content": "<p>Whoa! This might be the culprit, does <code>cargo run</code> use a dev/debug runner by default?</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">[nix-shell:~/code/clones/roc/examples/cli]$ </span>cargo run example.roc\n<span class=\"go\">    Finished dev [unoptimized + debuginfo] target(s) in 0.29s</span>\n<span class=\"go\">     Running `/Users/jan/code/clones/roc/target/debug/roc example.roc`</span>\n<span class=\"go\">...</span>\n</code></pre></div>",
        "id": 268451537,
        "sender_full_name": "jan kili",
        "timestamp": 1642537968
    },
    {
        "content": "<p>Okay, I have a solution for you <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> , just use the release build/runner/option/thing! <code>cargo run --release examples/cli/example.roc</code> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 268451728,
        "sender_full_name": "jan kili",
        "timestamp": 1642538059
    },
    {
        "content": "<p>eh, what?</p>",
        "id": 268451801,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642538109
    },
    {
        "content": "<p>but really, the presence of the  <code>--release</code> flag matters for whether the compiler hits a panic or produces a working executable?</p>",
        "id": 268452280,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642538383
    },
    {
        "content": "<p>It seems yes, is that bad?</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">[nix-shell:~/code/clones/roc]$ </span>cargo run examples/cli/example.roc\n<span class=\"go\">    Finished dev [unoptimized + debuginfo] target(s) in 0.28s</span>\n<span class=\"go\">     Running `target/debug/roc examples/cli/example.roc`</span>\n<span class=\"go\">thread '&lt;unnamed&gt;' panicked at 'Found unbound type variables {102}</span>\n<span class=\"go\"> in type alias `Random.Seed8` [] : [ Global('Seed8') (Alias `Num.U8`[ but actually (Alias `Num.Num` (Alias `Num.Integer` (Alias `Num.Unsigned8`[ but actually [ Private(`Num.@Unsigned8`) ] ])[ but actually [ Private(`Num.@Integer`) (Alias `Num.Unsigned8`[ but actually [ Private(`Num.@Unsigned8`) ] ]) ] ])[ but actually [ Private(`Num.@Num`) (Alias `Num.Integer` (Alias `Num.Unsigned8`[ but actually [ Private(`Num.@Unsigned8`) ] ])[ but actually [ Private(`Num.@Integer`) (Alias `Num.Unsigned8`[ but actually [ Private(`Num.@Unsigned8`) ] ]) ] ]) ] ]) ]) ]&lt;102&gt;', compiler/can/src/scope.rs:192:17</span>\n<span class=\"go\">note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace</span>\n<span class=\"go\">^C</span>\n\n<span class=\"gp\">[nix-shell:~/code/clones/roc]$ </span>cargo run --release examples/cli/example.roc\n<span class=\"go\">    Finished release [optimized] target(s) in 0.29s</span>\n<span class=\"go\">     Running `target/release/roc examples/cli/example.roc`</span>\n<span class=\"go\">🔨 Rebuilding host... Done!</span>\n<span class=\"go\">a: 18</span>\n<span class=\"go\">b: 18</span>\n<span class=\"go\">c: 15</span>\n<span class=\"go\">d: 15</span>\n<span class=\"go\">e: 17</span>\n<span class=\"go\">f: 17</span>\n<span class=\"go\">g: 14</span>\n<span class=\"go\">h: 14</span>\n<span class=\"go\">i: 12</span>\n<span class=\"go\">j: 12</span>\n<span class=\"go\">k: 19</span>\n<span class=\"go\">l: 19</span>\n<span class=\"go\"> :)</span>\n\n<span class=\"gp\">[nix-shell:~/code/clones/roc]$</span>\n</code></pre></div>",
        "id": 268452368,
        "sender_full_name": "jan kili",
        "timestamp": 1642538437
    },
    {
        "content": "<p>Context: This is for <a href=\"https://github.com/JanCVanB/roc-random/blob/main/example.roc\">roc-random's example module</a> (and <a href=\"https://github.com/JanCVanB/roc-random/blob/main/Random.roc\">the Random.roc library interface</a>) copied (and only modified so that the platform path is correct) into the Roc repo's <code>examples/cli/</code> dir.</p>",
        "id": 268452588,
        "sender_full_name": "jan kili",
        "timestamp": 1642538569
    },
    {
        "content": "<p>oh, ah, no it's fine given that specific error</p>",
        "id": 268454947,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642539709
    },
    {
        "content": "<p>Can I improve the library to not fail in that way, or is it a temporary problem with the dev/debug runner?</p>",
        "id": 268457119,
        "sender_full_name": "jan kili",
        "timestamp": 1642540733
    },
    {
        "content": "<p>my guess  is you're using closures a bunch</p>",
        "id": 268459816,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642542103
    },
    {
        "content": "<p>and that is hitting this code path</p>",
        "id": 268459829,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642542111
    },
    {
        "content": "<p>the check that fails is (clearly) not needed for producing programs, but usually when it fails something is wrong</p>",
        "id": 268459921,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642542150
    },
    {
        "content": "<p>you can safely comment it locally though</p>",
        "id": 268459948,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642542166
    },
    {
        "content": "<p>Thanks, I'd love to know more! What part should I comment(-out?), and which part of the code is a closure? Something related to <code>Seed8</code>?</p>",
        "id": 268465879,
        "sender_full_name": "jan kili",
        "timestamp": 1642545290
    },
    {
        "content": "<p>oh no the assert that makes it fail</p>",
        "id": 268467253,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642546113
    },
    {
        "content": "<p>Ah, I guess what I'm actually asking is this: What can I do as a library author to prevent its users from experiencing this compiler panic when using the library with <code>cargo run</code> without <code>--release</code>?</p>",
        "id": 268468346,
        "sender_full_name": "jan kili",
        "timestamp": 1642546741
    },
    {
        "content": "<p>oh, nothing I think</p>",
        "id": 268469307,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642547194
    },
    {
        "content": "<p>this is one of those \"something we believed was true turned out not to be, so crash\" assertions</p>",
        "id": 268471156,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1642548297
    },
    {
        "content": "<p>we want it to be noisy so we can investigate it and ideally solve the cause rather than the symptom</p>",
        "id": 268471210,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1642548340
    },
    {
        "content": "<p>but we skip those checks altogether in release builds, so on the one hand we don't get the feedback but on the other hand it might happen to work anyway (as it seems to here) despite our assumption being broken <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 268471356,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1642548422
    },
    {
        "content": "<p>oh, no this is something that should be true but we have slipped up</p>",
        "id": 268471785,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642548670
    },
    {
        "content": "<p>it's just that usually the effect is not noticable</p>",
        "id": 268471794,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642548677
    },
    {
        "content": "<p>Is <code>cargo run</code> designed for compiler debugging, app debugging, or app execution?</p>",
        "id": 268471906,
        "sender_full_name": "jan kili",
        "timestamp": 1642548744
    },
    {
        "content": "<p>mostly speed</p>",
        "id": 268472083,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642548858
    },
    {
        "content": "<p>it compiles faster</p>",
        "id": 268472088,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642548863
    },
    {
        "content": "<p>also you get more info if something panics, or if you use a debugger</p>",
        "id": 268472143,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642548905
    },
    {
        "content": "<p>Cool, so then as a library author I'll test to both (release and nonrelease) and report issues with either?</p>",
        "id": 268472952,
        "sender_full_name": "jan kili",
        "timestamp": 1642549550
    },
    {
        "content": "<p>well that should not be necessary</p>",
        "id": 268473361,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642549872
    },
    {
        "content": "<p>we'll get this sorted out now that we have an example that actually fails the assert</p>",
        "id": 268473379,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1642549890
    },
    {
        "content": "<p>High five for the co-discovery, <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> ! <span aria-label=\"high five\" class=\"emoji emoji-1f590\" role=\"img\" title=\"high five\">:high_five:</span>️</p>",
        "id": 268473752,
        "sender_full_name": "jan kili",
        "timestamp": 1642550174
    },
    {
        "content": "<p>One last thing, the <code>roc docs</code> website generator is lovely: <a href=\"https://jancvanb.github.io/roc-random/\">https://jancvanb.github.io/roc-random/</a></p>",
        "id": 268498720,
        "sender_full_name": "jan kili",
        "timestamp": 1642575607
    },
    {
        "content": "<p>that's pretty stuff :D</p>",
        "id": 268594155,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1642621945
    }
]