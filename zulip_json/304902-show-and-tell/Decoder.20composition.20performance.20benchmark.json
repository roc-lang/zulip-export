[
    {
        "content": "<p>This isn't super exciting, but I've been doing lots of custom decoders and so I started working on some better functions for composing decoders. I realised I could either make many decoders inside each other, or one decoder with many decodes, but I wondered if there was much performance difference between the two. So I made a benchmark to compare:</p>\n<p>Turns out there was no difference whatsoever, which is nice because as you can see, one API is much nicer than the other</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>benchmark.roc</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">app</span><span class=\"w\"> </span><span class=\"s\">\"time\"</span>\n<span class=\"w\">    </span><span class=\"n\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">json</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/lukewilliamboswell/roc-json/releases/download/0.6.3/_2Dh4Eju2v_tFtZeMq8aZ9qw2outG04NbkmKpFhXS_4.tar.br\"</span><span class=\"p\">,</span>\n<span class=\"w\">     </span><span class=\"n\">pf</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.8.1/x8URkvfyi9I0QhmVG98roKBUs_AZRkLFwFJVJ3942YA.tar.br\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"kt\">Stdout</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"kt\">Task</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"kt\">Utc</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"kt\">Sleep</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"kt\">Core</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n\n<span class=\"w\">    </span><span class=\"n\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">pf</span>\n\n<span class=\"nf\">benchmark</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"n\">start</span><span class=\"w\"> </span><span class=\"ow\">&lt;-</span><span class=\"w\"> </span><span class=\"kt\">Utc</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">await</span>\n\n<span class=\"w\">    </span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">runBenchmark</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">await</span>\n\n<span class=\"w\">    </span><span class=\"n\">finish</span><span class=\"w\"> </span><span class=\"ow\">&lt;-</span><span class=\"w\"> </span><span class=\"kt\">Utc</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">await</span>\n\n<span class=\"w\">    </span><span class=\"n\">duration</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Utc</span><span class=\"o\">.</span><span class=\"n\">deltaAsMillis</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"w\"> </span><span class=\"n\">finish</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"o\">.</span><span class=\"n\">toStr</span>\n\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"s\">\"$(name): Completed in $(duration)ms\"</span>\n<span class=\"nf\">runBenchmark</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">loop</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"kr\">then</span>\n<span class=\"w\">            </span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">&lt;-</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">benchLoop</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">await</span>\n<span class=\"w\">            </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Step</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"w\">        </span><span class=\"kr\">else</span>\n<span class=\"w\">            </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Done</span><span class=\"w\"> </span><span class=\"p\">{})</span>\n\n<span class=\"o\">#</span><span class=\"w\"> </span><span class=\"kt\">Tight</span><span class=\"w\"> </span><span class=\"n\">loop</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">reduce</span><span class=\"w\"> </span><span class=\"n\">task</span><span class=\"w\"> </span><span class=\"n\">overhead</span>\n<span class=\"nf\">benchLoop</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">fn</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">repeat</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">10000</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"n\">fn</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">        </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">ok</span>\n\n<span class=\"nf\">input</span><span class=\"w\"> </span><span class=\"ow\">=</span>\n<span class=\"w\">    </span><span class=\"s\">\"\"\"</span>\n<span class=\"s\">    {\"</span><span class=\"n\">other9</span><span class=\"s\">\":9}</span>\n<span class=\"s\">    \"\"\"</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"o\">.</span><span class=\"n\">toUtf8</span>\n\n<span class=\"nf\">main</span><span class=\"w\"> </span><span class=\"ow\">=</span>\n<span class=\"w\">    </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"ow\">&lt;-</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">decodeWith</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"n\">contentChangeDecode</span><span class=\"w\"> </span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"s\">\"single Decoder\"</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">await</span>\n<span class=\"w\">    </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"ow\">&lt;-</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">decodeWith</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"n\">contentChangeDecode2</span><span class=\"w\"> </span><span class=\"kt\">Core</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"s\">\"multi Decoder\"</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">await</span>\n<span class=\"w\">    </span><span class=\"kt\">Task</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n\n<span class=\"kt\">PartialChangeEvent</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">FullChangeEvent</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">range</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U8</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">rangeLength</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U64</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">Other</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">other</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U8</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">Other2</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">other2</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U8</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">Other3</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">other3</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U8</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">Other4</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">other4</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U8</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">Other5</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">other5</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U8</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">Other6</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">other6</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U8</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">Other7</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">other7</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U8</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">Other8</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">other8</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U8</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">Other9</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">text</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">other9</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">U8</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">TextDocumentContentChangeEvent</span><span class=\"w\"> </span><span class=\"kt\">:=</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">    </span><span class=\"kt\">PartialChange</span><span class=\"w\"> </span><span class=\"kt\">PartialChangeEvent</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"kt\">FullChange</span><span class=\"w\"> </span><span class=\"kt\">FullChangeEvent</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"kt\">Other</span><span class=\"w\"> </span><span class=\"kt\">Other</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"kt\">Other2</span><span class=\"w\"> </span><span class=\"kt\">Other2</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"kt\">Other3</span><span class=\"w\"> </span><span class=\"kt\">Other3</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"kt\">Other4</span><span class=\"w\"> </span><span class=\"kt\">Other4</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"kt\">Other5</span><span class=\"w\"> </span><span class=\"kt\">Other5</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"kt\">Other6</span><span class=\"w\"> </span><span class=\"kt\">Other6</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"kt\">Other7</span><span class=\"w\"> </span><span class=\"kt\">Other7</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"kt\">Other8</span><span class=\"w\"> </span><span class=\"kt\">Other8</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"kt\">Other9</span><span class=\"w\"> </span><span class=\"kt\">Other9</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"n\">implements</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"kt\">Decoding</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">decoder</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"n\">contentChangeDecode</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"kt\">Encoding</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">toEncoder</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"n\">contentChangeEncoder</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n\n<span class=\"nf\">contentChangeEncoder</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"o\">\\@</span><span class=\"kt\">TextDocumentContentChangeEvent</span><span class=\"w\"> </span><span class=\"n\">change</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">change</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">        </span><span class=\"kt\">PartialChange</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Encode</span><span class=\"o\">.</span><span class=\"n\">toEncoder</span><span class=\"w\"> </span><span class=\"n\">a</span>\n<span class=\"w\">        </span><span class=\"kt\">FullChange</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Encode</span><span class=\"o\">.</span><span class=\"n\">toEncoder</span><span class=\"w\"> </span><span class=\"n\">a</span>\n<span class=\"w\">        </span><span class=\"kt\">Other</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Encode</span><span class=\"o\">.</span><span class=\"n\">toEncoder</span><span class=\"w\"> </span><span class=\"n\">a</span>\n<span class=\"w\">        </span><span class=\"kt\">Other2</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Encode</span><span class=\"o\">.</span><span class=\"n\">toEncoder</span><span class=\"w\"> </span><span class=\"n\">a</span>\n<span class=\"w\">        </span><span class=\"kt\">Other3</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Encode</span><span class=\"o\">.</span><span class=\"n\">toEncoder</span><span class=\"w\"> </span><span class=\"n\">a</span>\n<span class=\"w\">        </span><span class=\"kt\">Other4</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Encode</span><span class=\"o\">.</span><span class=\"n\">toEncoder</span><span class=\"w\"> </span><span class=\"n\">a</span>\n<span class=\"w\">        </span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Encode</span><span class=\"o\">.</span><span class=\"n\">toEncoder</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"kt\">Try</span><span class=\"w\"> </span><span class=\"n\">another</span><span class=\"w\"> </span><span class=\"n\">decode</span><span class=\"w\"> </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">last</span><span class=\"w\"> </span><span class=\"n\">decode</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"nf\">tryOnErr</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">DecodeResult</span><span class=\"w\"> </span><span class=\"kr\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kr\">_</span>\n<span class=\"nf\">tryOnErr</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">decoded</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">try</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">decoded</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">        </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">try</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">        </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">decoded</span>\n\n<span class=\"nf\">contentChangeDecode</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">custom</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">PartialChange</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">FullChange</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">Other</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">Other2</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">Other3</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">Other4</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">Other5</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">Other6</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">Other7</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">Other8</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"kt\">Other9</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"kt\">TextDocumentContentChangeEvent</span>\n\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"kt\">Makes</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">decoder</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">decodes</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"kr\">then</span><span class=\"w\"> </span><span class=\"n\">wraps</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrapper</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"kt\">Useful</span><span class=\"w\"> </span><span class=\"n\">for</span><span class=\"w\"> </span><span class=\"n\">decoding</span><span class=\"w\"> </span><span class=\"kt\">Opaque</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">any</span><span class=\"w\"> </span><span class=\"n\">decode</span><span class=\"w\"> </span><span class=\"kr\">where</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">wish</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">decode</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">intermediate</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">furthur</span><span class=\"w\"> </span><span class=\"n\">pass</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">intermediate</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"n\">eg</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">enum</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">tags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">enum</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">tags</span>\n<span class=\"nf\">wrapDecode</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">wrapper</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">custom</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"n\">wrapper</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"n\">makes</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">decoder</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">tries</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">decode</span><span class=\"w\"> </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">proveded</span><span class=\"w\"> </span><span class=\"n\">firstDecoder</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"kt\">If</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">firstDecoder</span><span class=\"w\"> </span><span class=\"n\">fails</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">attempts</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"n\">decode</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"n\">wrapper</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"kt\">Use</span><span class=\"w\"> </span><span class=\"kt\">Like:</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"p\">```</span><span class=\"n\">roc</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"n\">contentChangeDecode</span><span class=\"w\"> </span><span class=\"ow\">=</span>\n<span class=\"o\">##</span><span class=\"w\">     </span><span class=\"n\">wrapDecode</span><span class=\"w\"> </span><span class=\"kt\">PartialChange</span>\n<span class=\"o\">##</span><span class=\"w\">     </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">FullChange</span>\n<span class=\"o\">##</span><span class=\"w\">     </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapSuccess</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"kt\">TextDocumentContentChangeEvent</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"p\">``</span>\n<span class=\"nf\">wrapOnErr</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">firstDecoder</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wrapper</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">custom</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">decodeWith</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">firstDecoder</span><span class=\"w\"> </span><span class=\"n\">fmt</span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">tryOnErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"kr\">_</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">fromBytesPartial</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"n\">wrapper</span><span class=\"p\">)</span>\n\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"kt\">Takes</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">decoder</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">wraps</span><span class=\"w\"> </span><span class=\"n\">it's</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">provided</span><span class=\"w\"> </span><span class=\"n\">wrapper</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"kt\">Use</span><span class=\"w\"> </span><span class=\"kt\">Like:</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"p\">```</span><span class=\"n\">roc</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"n\">contentChangeDecode</span><span class=\"w\"> </span><span class=\"ow\">=</span>\n<span class=\"o\">##</span><span class=\"w\">     </span><span class=\"n\">wrapDecode</span><span class=\"w\"> </span><span class=\"kt\">PartialChange</span>\n<span class=\"o\">##</span><span class=\"w\">     </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">FullChange</span>\n<span class=\"o\">##</span><span class=\"w\">     </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapSuccess</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"kt\">TextDocumentContentChangeEvent</span>\n<span class=\"o\">##</span><span class=\"w\"> </span><span class=\"p\">``</span>\n<span class=\"nf\">wrapSuccess</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">decoder</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wrapper</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">custom</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">bytes</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">decodeWith</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">decoder</span><span class=\"w\"> </span><span class=\"n\">fmt</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Decode</span><span class=\"o\">.</span><span class=\"n\">mapResult</span><span class=\"w\"> </span><span class=\"n\">wrapper</span>\n\n<span class=\"nf\">contentChangeDecode2</span><span class=\"w\"> </span><span class=\"ow\">=</span>\n<span class=\"w\">    </span><span class=\"n\">wrapDecode</span><span class=\"w\"> </span><span class=\"kt\">PartialChange</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">FullChange</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">Other</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">Other2</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">Other3</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">Other4</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">Other5</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">Other6</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">Other7</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">Other8</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapOnErr</span><span class=\"w\"> </span><span class=\"kt\">Other9</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">wrapSuccess</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"kt\">TextDocumentContentChangeEvent</span>\n</code></pre></div>\n</div></div>",
        "id": 432622879,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1712806845
    },
    {
        "content": "<p>Two questions:</p>\n<ol>\n<li>can you share <code>DecodeUtils</code>?</li>\n<li>Are you sure this doesn't optimize away?</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>\\_ -&gt;\n        _ = fn {}\n        {}\n</code></pre></div>",
        "id": 432624384,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1712808099
    },
    {
        "content": "<p>I'm pretty sure because it takes ages, and if I add more wrapOnErrors it takes longer.</p>",
        "id": 432624540,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1712808170
    },
    {
        "content": "<p>Oh, and one more question:<br>\nIf you have any idea, how does it compare to what you would expect? Would it be comparable to other languages?</p>",
        "id": 432624592,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1712808217
    },
    {
        "content": "<p>Oh I forgot that DecodeUtils was still included. I have inlined all the functions I needed from it</p>",
        "id": 432624670,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1712808260
    },
    {
        "content": "<p>Ah, and <code>Core.roc</code>. That is the other piece needed to run locally.</p>",
        "id": 432624687,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1712808287
    },
    {
        "content": "<p>Unfortunately I have absolutely no clue about that. Benchmarking against others is a much bigger task</p>",
        "id": 432624693,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1712808297
    },
    {
        "content": "<p>Yeah, no worries. I am just always curious around these kinds of implementations. They tend to build a nest of closures for llvm to unravel.</p>",
        "id": 432624738,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1712808339
    },
    {
        "content": "<p>Okay, I updated it to use the roc-json package. Everything is running off local branches because of this null decoding business <span aria-label=\"man facepalming\" class=\"emoji emoji-1f926-200d-2642\" role=\"img\" title=\"man facepalming\">:man_facepalming:</span> Thanks for the catch <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span></p>",
        "id": 432625003,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1712808575
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span>  I have benchmarks!<br>\nI did some testing of decoding a large json file (24MB):<br>\nJsonVal is recursive tag union that can represent all the json primatives for dynamic json decoding.<br>\n<code>jsonVal: Completed 1 runs in 1950ms</code><br>\nThis test takes on a single field from each item in the long json list <br>\n<code>json id only: Completed 1 runs in 1054ms</code></p>\n<p>Dotnet:</p>\n<div class=\"codehilite\"><pre><span></span><code>| Method             | Mean      | Error    | StdDev   | Median    |\n|------------------- |----------:|---------:|---------:|----------:|\n| IdOnly                |  93.16 ms | 1.728 ms | 4.239 ms |  91.63 ms |\n| JsonVal              | 184.21 ms | 1.518 ms | 1.420 ms | 184.50 ms |\n</code></pre></div>\n<p>So we are around 10x slower than the inbuilt decoder in dotnet</p>",
        "id": 433920998,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713418695
    },
    {
        "content": "<p>Rough. Will be interesting to see a breakdown at some point and figure out the bugs. Almost certainly bad copying and refcounting going on.</p>",
        "id": 433921241,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1713418918
    },
    {
        "content": "<p>How would you recommend approaching that?</p>",
        "id": 433921310,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713418954
    },
    {
        "content": "<p>Flame graphs <span aria-label=\"hearts\" class=\"emoji emoji-2665\" role=\"img\" title=\"hearts\">:hearts:</span> <span aria-label=\"fire\" class=\"emoji emoji-1f525\" role=\"img\" title=\"fire\">:fire:</span></p>",
        "id": 433949135,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713421741
    },
    {
        "content": "<p>Okay, I have some answers. Thankyou Luke!:<br>\n20% of the time is spent just doing List.get! So i guess I was correct to have concerns there <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> :)</p>",
        "id": 433961692,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713423571
    },
    {
        "content": "<p>Well I exposed getUnchecked, and tried to make more stuff tail recursive and it's a little better but not that much. About 20-25%... Not really the 10x improvement I'm looking for.</p>",
        "id": 433999305,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1713430509
    }
]