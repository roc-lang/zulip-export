[
    {
        "content": "<p><a href=\"https://github.com/bhansconnect/monkey-roc\">🐵🤘🏼 - Monkey Roc!</a></p>\n<p>I wrote an implementation of the monkey lang interpreter from Writing An Interpreter In Go (<a href=\"http://interpreterbook.com\">interpreterbook.com</a>).</p>\n<p>Was fun to implement and mess around with roc some more. For the most part, I think it turned out ok. I tried to make things kinda DOD inspired, which was probably a mistake (probably should have started with just the simple version). The evaluator is a lot slower than I would like. Since I implemented exactly as specified in the book, I am simulating mutable references in Roc. It just is a bad combo. That said, it does work.</p>\n<p>Also, using an emoji name for the executable was definitely a bad idea, but I like <span aria-label=\"monkey face\" class=\"emoji emoji-1f435\" role=\"img\" title=\"monkey face\">:monkey_face:</span><span aria-label=\"rock on\" class=\"emoji emoji-1f918\" role=\"img\" title=\"rock on\">:rock_on:</span>🏼. The issue is that my terminal does not like emoji. Leads to text glitchiness.</p>",
        "id": 362328891,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1685497925
    },
    {
        "content": "<p>did you do it for theprimeagen's thingy? <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 362405454,
        "sender_full_name": "Georges Boris",
        "timestamp": 1685527437
    },
    {
        "content": "<p>I did it slightly before. then i added it to the prime thing. Though i later went back and simplified the version for prime.</p>",
        "id": 362451242,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1685538280
    }
]