[
    {
        "content": "<p>I am working on a small <strong>e2e framework</strong> for roc that can also be used outside of testing to controll the browser.</p>\n<p>It is basically just a simple webdriver http client wrapped in some roc types.<br>\n(you need a running webdriver server - at least for now)</p>\n<p>There is still a lot to implement (like rendering pdfs, and making screenshots from the browser, but first I need to find / write a base64 decoder)<br>\nAlthough, for me it is already fun to use :)</p>\n<p>Keep in mind that this package is importing the <code>basic-cli</code> platform - which should not be possible and will be blocked by the compiler in the future.<br>\nWhy? - I need to make Http calls to the webdriver...<br>\nSo this package works right now, but will problably stop at some point.<br>\nThe goal is to wait for the <code>module params</code> feature - then I will release a stable version of r2e.</p>\n<p>Here is the repo:  <a href=\"https://github.com/adomurad/r2e\">https://github.com/adomurad/r2e</a><br>\nAnd here is the documentation and tutorials: <a href=\"https://adomurad.github.io/r2e-docs/\">https://adomurad.github.io/r2e-docs/</a><br>\n<em>this are just temporary docs - due to using the <code>basic-cli</code> platform I was not able to use <code>roc docs</code></em></p>\n<p>Here is an example on how to use the repl on <a href=\"http://roc-lang.org\">roc-lang.org</a> :</p>\n<div class=\"codehilite\" data-code-language=\"Elixir\"><pre><span></span><code><span class=\"n\">test2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"s2\">\"use roc repl\"</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"n\">browser</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">   </span><span class=\"c1\"># go to roc-lang.org</span>\n<span class=\"w\">   </span><span class=\"n\">browser</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nc\">Browser</span><span class=\"o\">.</span><span class=\"n\">navigateTo!</span><span class=\"w\"> </span><span class=\"s2\">\"http://roc-lang.org\"</span>\n<span class=\"w\">   </span><span class=\"c1\"># find repl input</span>\n<span class=\"w\">   </span><span class=\"n\">replInput</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">browser</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nc\">Browser</span><span class=\"o\">.</span><span class=\"n\">findElement!</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">Css</span><span class=\"w\"> </span><span class=\"s2\">\"</span><span class=\"err\">#</span><span class=\"s2\">source-input\"</span><span class=\"p\">)</span>\n<span class=\"w\">   </span><span class=\"c1\"># send keys to repl</span>\n<span class=\"w\">   </span><span class=\"n\">replInput</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nc\">Element</span><span class=\"o\">.</span><span class=\"n\">sendKeys!</span><span class=\"w\"> </span><span class=\"s2\">\"0.1+0.2{enter}\"</span>\n<span class=\"w\">   </span><span class=\"c1\"># find repl output element</span>\n<span class=\"w\">   </span><span class=\"n\">outputEl</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">browser</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nc\">Browser</span><span class=\"o\">.</span><span class=\"n\">findElement!</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">Css</span><span class=\"w\"> </span><span class=\"s2\">\".output\"</span><span class=\"p\">)</span>\n<span class=\"w\">   </span><span class=\"c1\"># get output text</span>\n<span class=\"w\">   </span><span class=\"n\">outputText</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">outputEl</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nc\">Element</span><span class=\"o\">.</span><span class=\"n\">getText!</span>\n<span class=\"w\">   </span><span class=\"c1\"># assert text - fail - it is actually 0.3 !!!</span>\n<span class=\"w\">   </span><span class=\"n\">outputText</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nc\">Assert</span><span class=\"o\">.</span><span class=\"n\">shouldBe</span><span class=\"w\"> </span><span class=\"s2\">\"0.3000000001 : Frac *\"</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/22008/Sh5KaDAcxRoADv0IGqAjW92F/r2e-demo.gif\">r2e-demo.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/Sh5KaDAcxRoADv0IGqAjW92F/r2e-demo.gif\" title=\"r2e-demo.gif\"><img src=\"/user_uploads/22008/Sh5KaDAcxRoADv0IGqAjW92F/r2e-demo.gif\"></a></div>",
        "id": 448609501,
        "sender_full_name": "Artur Domurad",
        "timestamp": 1719927682
    },
    {
        "content": "<p>This is awesome! Roc seems like a great fit for this use case and the API looks great <span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span></p>",
        "id": 448614012,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1719928815
    },
    {
        "content": "<p>I love the REPL example, finally we have <code>eval()</code> in Roc lol</p>",
        "id": 448615388,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1719929176
    }
]