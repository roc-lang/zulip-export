[
    {
        "content": "<p>Just wanted to share something I think is pretty cool, and think it's one of the best examples I've contributed to so far, and only possible thanks to <span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span>  and his <a href=\"https://github.com/JanCVanB/roc-random\">JanCVanB/roc-random</a> library. </p>\n<p>Just added <a href=\"https://github.com/roc-lang/examples/pull/20\">roc-lang/examples#20</a> which shows how to generate Random Numbers using a URL build of the package, and the basic-cli platform. I also made a <a href=\"https://lukewilliamboswell.github.io/RandomNumbers/README.html\">Github Pages link</a> so you can see the example pre-merge.</p>",
        "id": 350729955,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1681812345
    },
    {
        "content": "<p>super cool! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 350760977,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1681820194
    },
    {
        "content": "<p>I think it would also be cool to show an example with backpassing</p>",
        "id": 350761036,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1681820209
    },
    {
        "content": "<p>where you build up a generator using an equivalent of <a href=\"https://package.elm-lang.org/packages/elm/random/1.0.0/Random#andThen\">https://package.elm-lang.org/packages/elm/random/1.0.0/Random#andThen</a></p>",
        "id": 350761170,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1681820240
    },
    {
        "content": "<p>(rather than passing the seed around)</p>",
        "id": 350761363,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1681820267
    },
    {
        "content": "<p>There is a <code>next</code> function which does that I think. I'll play with it some more and see if I can make a good example that shows a few different methods. I'm also considering dropping the basic-cli part, and just make this an interface and use tests to show the results. This might make it easier to combine multiple different methids, and also reduces that dependency.</p>",
        "id": 350855514,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1681841905
    },
    {
        "content": "<p>Wow, I love seeing this (new to me) roc-lang/examples repo, and I'm proud to see my algorithm put to good use! Thank you, <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span>  :D</p>",
        "id": 353455406,
        "sender_full_name": "jan kili",
        "timestamp": 1682623346
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> It looks like Roc has a (new to me) remote package sourcing feature - should I/we make a new release on my repo to support this forkless?</p>",
        "id": 353455692,
        "sender_full_name": "jan kili",
        "timestamp": 1682623399
    },
    {
        "content": "<p>I'm also happy to add you/anyone as a collaborator on the repo if we want to centralize work</p>",
        "id": 353455801,
        "sender_full_name": "jan kili",
        "timestamp": 1682623418
    },
    {
        "content": "<p>Ooh, nvm, now I see 1 new issue and 1 new PR on the repo - woohoo!</p>",
        "id": 353456504,
        "sender_full_name": "jan kili",
        "timestamp": 1682623538
    }
]