[
    {
        "content": "<p>I made a PR with a bunch of updates to <a href=\"http://roc-lang.org\">roc-lang.org</a> to make it more informative while still setting expectations about roc being WIP:</p>\n<p><a href=\"https://github.com/roc-lang/roc/pull/4231\">https://github.com/roc-lang/roc/pull/4231</a></p>",
        "id": 302778261,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665116055
    },
    {
        "content": "<p>feedback welcome!</p>",
        "id": 302778265,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665116063
    },
    {
        "content": "<p>if you search for \"netlify/roc-lang/deploy-preview\" and hit Details next to it, you can see what it would look like when deployed</p>",
        "id": 302778296,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665116102
    },
    {
        "content": "<p>That is much more detailed and very clear. Nice write up. </p>\n<p>Also, for fuzzing the formatter, I remember looking at it. Was thinking of setting up a fuzzer from the formatter's data structure, to text, and then though the parser. The main struggle is lifetimes in the formatter's data structure and lack of ownership. Can be worked around but likely to be invasive and annoying to fix.</p>",
        "id": 302786713,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665123493
    },
    {
        "content": "<blockquote>\n<p>The main struggle is lifetimes in the formatter's data structure and lack of ownership.</p>\n</blockquote>\n<p>Can you have it generate arena-allocated structures? Or just wave your hands and pretend they are statically-lifetimed if generated at the beginning of a test?</p>",
        "id": 302860025,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1665151708
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> what do you think about adding a table-of-contents to the web page? With the new large size, I find it challenging to go to a location I would find interesting on the page</p>",
        "id": 302860214,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1665151780
    },
    {
        "content": "<p>seems reasonable! <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 302862084,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665152346
    },
    {
        "content": "<p>I think you can do arena allocated structures, but you need to do your own special arena allocator. Since the fuzzer just gives you a list of bytes and you are essentially distributing that list of bytes across the different generated types.</p>\n<p>Otherwise, I think the more common solution is to use config flags and make it so that when configured for fuzzing, all of the structures use an owned type instead of the limited lifetime type. That is why it can be extremely invasive to fix.</p>",
        "id": 302864383,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665153028
    }
]