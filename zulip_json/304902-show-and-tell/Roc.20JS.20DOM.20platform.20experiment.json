[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"782019\">@Antonin Komenda</span> asked about client side Roc... so I made a small demo using wasm-pack. </p>\n<p><a href=\"https://github.com/lukewilliamboswell/roc-experiment-js-dom\">https://github.com/lukewilliamboswell/roc-experiment-js-dom</a></p>",
        "id": 484196784,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1732499016
    },
    {
        "content": "<p>I've made some major upgrades to this demo... we now have (partially) working Action-State. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> </p>\n<p>I almost got it fully working, but ran into a lambda set issue specifically with handling events. I've got a workaround using an <code>update</code> function and I hope this will be easy to remove in future. </p>\n<p>Anyway, here is a demo of the <a href=\"https://github.com/lukewilliamboswell/roc-experiment-js-dom/blob/main/examples/click.roc\">click example</a> (inspired by the counter example from <a href=\"https://docs.google.com/document/d/16qY4NGVOHu8mvInVD-ddTajZYSsFvFBvQON_hmyHGfo/edit?usp=sharing\">Action-State proposal</a>).</p>\n<p><a href=\"/user_uploads/22008/daZiThoakJCRFEi_x2--EU7T/js-dom-3.gif\">js-dom-3.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/daZiThoakJCRFEi_x2--EU7T/js-dom-3.gif\" title=\"js-dom-3.gif\"><img data-animated=\"true\" data-original-dimensions=\"526x302\" src=\"/user_uploads/thumbnail/22008/daZiThoakJCRFEi_x2--EU7T/js-dom-3.gif/840x560-anim.webp\"></a></div><p>I'm pretty stoked with the performance and size. This demo <code>.wasm</code> is only 190KB for the debug build**.  </p>\n<p>The API is a bit rough... and the \"events\" are hardcoded to <code>onclick</code>, but it's pretty much all there and working.</p>\n<p>Hope to see someone build something cool with this.</p>\n<p>[edit] ** actually by default wasm-pack builds without debug symbols, see <a href=\"https://rustwasm.github.io/wasm-pack/book/commands/build.html\">https://rustwasm.github.io/wasm-pack/book/commands/build.html</a> we need to use <code>--dev</code> to get the full debug symbols and run debug assertions etc, which blows the size up to 1MB.</p>",
        "id": 484670859,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1732698547
    },
    {
        "content": "<p>I wanted to explore what was taking up so much space in the minimal example. I suspect most of it is rust <code>std</code> library stuff which we can remove by adding <code>#![no_std]</code>. This would mean we'd have to roll our own no_std VDOM in rust, but that should be doable I think.</p>",
        "id": 484821579,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1732755485
    },
    {
        "content": "<p>Here's the smaller size branch <a href=\"https://github.com/lukewilliamboswell/roc-experiment-js-dom/tree/minimal-size\">https://github.com/lukewilliamboswell/roc-experiment-js-dom/tree/minimal-size</a>, I just hacked some things out and made sure it was still calling roc in a meaningful way.</p>",
        "id": 484821588,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1732755490
    },
    {
        "content": "<p>So basically this no_std host impl...</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[wasm_bindgen]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">run</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">console</span><span class=\"p\">::</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s\">\"INFO: STARTING APP...\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">boxed_model</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">roc</span><span class=\"p\">::</span><span class=\"n\">roc_init</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">roc_html</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">roc</span><span class=\"p\">::</span><span class=\"n\">roc_render</span><span class=\"p\">(</span><span class=\"n\">boxed_model</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">roc_html</span><span class=\"p\">.</span><span class=\"n\">discriminant</span><span class=\"p\">(),</span>\n<span class=\"w\">        </span><span class=\"n\">roc</span><span class=\"p\">::</span><span class=\"n\">glue</span><span class=\"p\">::</span><span class=\"n\">DiscriminantHtml</span><span class=\"p\">::</span><span class=\"n\">Element</span>\n<span class=\"w\">    </span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">console</span><span class=\"p\">::</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s\">\"HELLO\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 484821597,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1732755494
    },
    {
        "content": "<p>Gives us these sizes...which when compressed is around <code>11KB</code> for a minimal hello-world.</p>\n<p><a href=\"/user_uploads/22008/JlE1LuCPWxMru8iPcWe4172u/Screenshot-2024-11-28-at-11.49.36.png\">Screenshot 2024-11-28 at 11.49.36.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/JlE1LuCPWxMru8iPcWe4172u/Screenshot-2024-11-28-at-11.49.36.png\" title=\"Screenshot 2024-11-28 at 11.49.36.png\"><img data-original-dimensions=\"1554x276\" src=\"/user_uploads/thumbnail/22008/JlE1LuCPWxMru8iPcWe4172u/Screenshot-2024-11-28-at-11.49.36.png/840x560.webp\"></a></div><div class=\"codehilite\"><pre><span></span><code>$ ls -hl\ntotal 64\n-rw-r--r--@ 1 luke  staff   397B 28 Nov 11:49 package.json\n-rw-r--r--@ 1 luke  staff   1.5K 28 Nov 11:49 web.d.ts\n-rw-r--r--@ 1 luke  staff   4.6K 28 Nov 11:49 web.js\n-rw-r--r--@ 1 luke  staff   579B 28 Nov 11:49 web_bg.wasm.d.ts\n-rw-r--r--@ 1 luke  staff    11K 28 Nov 11:49 web_bg.wasm.gz\n</code></pre></div>",
        "id": 484821602,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1732755499
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/304902-show-and-tell/topic/Roc.20JS.20DOM.20platform.20experiment/near/484821579\">said</a>:</p>\n<blockquote>\n<p>we'd have to roll our own no_std VDOM in rust, but that should be doable I think.</p>\n</blockquote>\n<p>I think <span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span> may have already made some progress in this direction if I remember right?</p>",
        "id": 484823079,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1732756776
    },
    {
        "content": "<p>11K compressed for the hello world Action-State application (without a real host) is  smaller than I would have guessed! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 484823144,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1732756810
    },
    {
        "content": "<p>maybe with a real (<code>no_std</code>) host the whole thing could end up being smaller than React</p>",
        "id": 484823191,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1732756854
    },
    {
        "content": "<p>probably not Elm and certainly not Svelte, but React seems very plausible with that number as a starting point</p>",
        "id": 484823221,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1732756876
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281383\">Richard Feldman</span> <a href=\"#narrow/channel/304902-show-and-tell/topic/Roc.20JS.20DOM.20platform.20experiment/near/484823079\">said</a>:</p>\n<blockquote>\n<p>I think <span class=\"user-mention silent\" data-user-id=\"431893\">Brian Carroll</span> may have already made some progress in this direction if I remember right?</p>\n</blockquote>\n<p>No I didn't use any Rust at all. My unfinished project was almost entirely in Roc with some JS and a tiny amount of Zig. It's still in the repo and there's a README explaining what I did and didn't get done.<br>\n<a href=\"https://github.com/roc-lang/roc/tree/main/examples/virtual-dom-wip\">https://github.com/roc-lang/roc/tree/main/examples/virtual-dom-wip</a><br>\nBasic idea was to do the diffing in wasm and then call out to some JS functions to apply the patches. That minimises the amount of data you need to send over the Wasm/JS boundary (that is a bottleneck since everything needs to be serialized).</p>",
        "id": 485144719,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1732904569
    }
]