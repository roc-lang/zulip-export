[
    {
        "content": "<p>I have created a <a href=\"https://github.com/Enkidatron/roc-json-value/releases/tag/0.0.2\">small Roc library</a> for doing Elm-style JSON decoding. The word \"Decoder\" was already taken in Roc :) , so you make <code>Recipe</code>s in this library that describe how you want to try to decode the JSON. Those <code>Recipe</code>s can then be used to decode bytes, <code>Str</code>s, or even JSON <code>Value</code>s (a data type in this library, for valid-but-unknown JSON). </p>\n<p>The API is basically Elm's <code>Json.Decode</code>, with a few helpers from Elm's <code>Json.Decode.Extra</code>. It also has functions for making JSON <code>Value</code>s, so it can be used similarly to Elm's <code>Json.Encode</code>. </p>\n<p>This uses <code>lukewilliamboswell/roc-json</code> under the hood for the actual serialization/deserialization. If you can just use that directly, you should! But if you find yourself needing to decode variably shaped JSON, then I hope this library can be useful to you.</p>",
        "id": 523166844,
        "sender_full_name": "Ben Thomas (enkidatron)",
        "timestamp": 1749502810
    },
    {
        "content": "<p>Awesome! I had been thinking recently about how it would be great to have this</p>",
        "id": 523178422,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1749508064
    }
]