[
    {
        "content": "<p>Thought I might share this <a href=\"https://gist.github.com/lukewilliamboswell/dd372d6a528aa1d78a4f86c1700a897b\">gist</a> which is my first(ish) attempt at a Json number parser that complies with IETF RFC 8259 (2017). Would love any feedback, particularly if there are any performance concerns!</p>\n<p>I had to mess around a fair bit to get it to compile, I had a few <a href=\"https://github.com/roc-lang/roc/issues/5176\">bugs</a> which really slowed me down. I re-remembered that we can't match on constants in a <code>where</code> block yet. Also I wasn't able to use a tuple instead of a Tag.</p>\n<p>I'm pretty happy with the state transition and tests working out so well. It was easy to translate from a drawing I made of the states and transitions into code by using Tags. The <code>expect</code>s made it super easy to do some TDD and confirm it was performing correctly. </p>\n<p>The hardest part I found was to get through a few compiler bugs, and find the correct syntax that would compile. I don't mean that as a criticism, just I bumped into some confusing crashes which slowed me down. </p>\n<p>Also note we can't quite fully support Json numbers att as we don't seem to fully support <code>e</code> or <code>+</code> for exponents. Related <a href=\"https://github.com/roc-lang/roc/issues/5170\">issue</a>. I included the below snippet which shows a workaround which gets us slightly closer to ideal but add a couple of scans through the number bytes. </p>\n<div class=\"codehilite\"><pre><span></span><code>taken\n|&gt; List.dropIf \\b -&gt; b == &#39;+&#39; # TODO not needed if roc supports &quot;1e+2&quot;\n|&gt; List.map \\b -&gt; if b == &#39;E&#39; then &#39;e&#39; else b # TODO not needed if roc supports &quot;1E2&quot;\n</code></pre></div>",
        "id": 343605037,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1679473996
    },
    {
        "content": "<p>nice, thank you for reproducing those bugs! <span aria-label=\"muscle\" class=\"emoji emoji-1f4aa\" role=\"img\" title=\"muscle\">:muscle:</span></p>",
        "id": 343650620,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1679485397
    }
]