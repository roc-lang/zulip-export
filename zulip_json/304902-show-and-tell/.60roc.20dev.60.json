[
    {
        "content": "<p>PSA: now if you run <code>roc dev</code>, it works like <code>roc check</code> except that if the check finds 0 errors, it then runs the program</p>",
        "id": 294600968,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1661139255
    },
    {
        "content": "<p>previously <code>roc</code> (with no subcommand) almost did this, except that it would still try to monomorphize the program even if it found type mismatches, which often led to crashes (which it should not in the long-term, but it does for now because there are still some bugs in the \"didn't type check but let's monomorphize anyway\" code path)</p>",
        "id": 294601008,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1661139345
    },
    {
        "content": "<p>the plan is to repurpose <code>roc</code>-with-no-subcommand exclusively for running hashbang scripts (e.g. the <code>.roc</code> file starts with <code>#!/usr/bin/env roc</code>), because that's the most compatible command to use for that purpose; some <code>env</code> implementations don't accept multiple arguments, so <code>#!/usr/bin/env roc run</code> (for example) wouldn't be supported in those environments</p>",
        "id": 294601078,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1661139446
    },
    {
        "content": "<p>so if you want the \"type-check and then immediately run if there were 0 errors\" behavior, <code>roc dev</code> is now the way to do that!</p>",
        "id": 294601089,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1661139474
    },
    {
        "content": "<p>also, shout-out to <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> for fixing the old approach to this feature which frequently did unnecessary work and then crashed <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 294601157,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1661139544
    },
    {
        "content": "<p>it's much nicer now!</p>",
        "id": 294601163,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1661139562
    },
    {
        "content": "<p>Will there be a way of doing the same but with <code>build</code> instead of <code>run</code>?</p>",
        "id": 294670202,
        "sender_full_name": "Arya Elfren",
        "timestamp": 1661173179
    },
    {
        "content": "<p>hm, what would the use case be? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 294704493,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1661180242
    },
    {
        "content": "<p>so right now if you say <code>build</code>, it reports the errors and then builds the executable anyway</p>",
        "id": 294704560,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1661180266
    },
    {
        "content": "<p>the idea behind not running if there are errors is to save the time of killing the program after it starts running</p>",
        "id": 294704915,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1661180357
    },
    {
        "content": "<p>but when doing a <code>build</code> it just creates an executable but doesn't run it, so that advantage wouldn't really apply!</p>",
        "id": 294705045,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1661180398
    }
]