[
    {
        "content": "<p>This is not a compiler / language bug, but it does affect the community. I have been seeing a fair number of highlighting errors using neovim. During AoC I was able to isolate a nice example of the broken parse tree. Here is the example:</p>\n<p><a href=\"/user_uploads/22008/fFRj4aO5u3YiqYBgi0QQyq_8/Screenshot_20241201_205705.png\">Screenshot_20241201_205705.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/fFRj4aO5u3YiqYBgi0QQyq_8/Screenshot_20241201_205705.png\" title=\"Screenshot_20241201_205705.png\"><img data-original-dimensions=\"1148x574\" src=\"/user_uploads/thumbnail/22008/fFRj4aO5u3YiqYBgi0QQyq_8/Screenshot_20241201_205705.png/840x560.webp\"></a></div><p>Can someone point me to a good explanation of the significant newline / indenting rules, or where this would be implemented in the roc parser so I can patch the tree sitter grammar?</p>",
        "id": 485546347,
        "sender_full_name": "Ryan Barth",
        "timestamp": 1733115748
    },
    {
        "content": "<p>The tree-sitter grammar is very much on hold because of roc's very unstable syntax right now.<br>\n(I'm faldor20 the grammar author btw)<br>\nOnce the purity inference and iterator syntax is in, I'll go in and update it to bring it up to scratch. </p>\n<p>I'm super happy for you to submit a PR though and I can lend a hand. I'm just not personally going to put much work on it while roc is a rapidly moving target. :)</p>",
        "id": 485583913,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733133100
    },
    {
        "content": "<p>If it's interesting, a couple things that cross my mind that we could do to make tree-sitter grammar development easier:</p>\n<ul>\n<li>We could hook that up in our <code>test_syntax</code> crate, to get automated testing for when a test passes on the compiler's parser but gives an error on the tree-sitter one</li>\n<li>We can even hook up automatic minimization to take a given failing test case, and try to find the minimal similar test that parses without errors on the compiler's parser but gives errors under tree-sitter.</li>\n</ul>",
        "id": 485735600,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1733188564
    },
    {
        "content": "<p>Can we add tree-sitter as a fuzz target?</p>",
        "id": 485735688,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733188638
    },
    {
        "content": "<p>We can</p>",
        "id": 485735712,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1733188658
    },
    {
        "content": "<p>I remember a few years ago when I was playing with fuzzing tree-sitter, it immediately fell over</p>",
        "id": 485735770,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1733188684
    },
    {
        "content": "<p>Like, triggering crashes in the C code with relatively benign-looking inputs</p>",
        "id": 485735796,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1733188699
    },
    {
        "content": "<p>Hopefully things are nicer these days?</p>",
        "id": 485735804,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1733188707
    },
    {
        "content": "<p>Also that might have been specific to the grammar I was working with at the time (the rust grammar I think?)</p>",
        "id": 485735821,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1733188726
    },
    {
        "content": "<p>One interesting data point for this particular file is running <code>roc format</code> fixes the TS parse tree.</p>\n<p>Broken pre-formatting: <a href=\"https://github.com/r-bar/advent24/blob/908fc5b735b37093a1a3db79a40c9bd872cc988c/day01/p2.roc\">https://github.com/r-bar/advent24/blob/908fc5b735b37093a1a3db79a40c9bd872cc988c/day01/p2.roc</a><br>\nFixed post-formatting: <a href=\"https://github.com/r-bar/advent24/blob/68346809ed5ee4cbdb21ab166061cb37036f2155/day01/p2.roc\">https://github.com/r-bar/advent24/blob/68346809ed5ee4cbdb21ab166061cb37036f2155/day01/p2.roc</a></p>\n<p>In this case breaking up the <code>Ok count -&gt;</code> branch above the error fixes the issue for the top level declarations below.</p>\n<p>Broken:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"w\">            </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">count</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">toI64</span><span class=\"w\"> </span><span class=\"nv\">count</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">item</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">add</span><span class=\"w\"> </span><span class=\"nv\">accum</span>\n</code></pre></div>\n<p>Ok:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"w\">            </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">count</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"p\">(</span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">toI64</span><span class=\"w\"> </span><span class=\"nv\">count</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">item</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">add</span><span class=\"w\"> </span><span class=\"nv\">accum</span>\n</code></pre></div>",
        "id": 485737013,
        "sender_full_name": "Ryan Barth",
        "timestamp": 1733189539
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"453336\">Joshua Warner</span> <a href=\"#narrow/channel/463736-bugs/topic/Treesitter.20expression.20body.20error/near/485735600\">said</a>:</p>\n<blockquote>\n<p>If it's interesting, a couple things that cross my mind that we could do to make tree-sitter grammar development easier:</p>\n<ul>\n<li>We could hook that up in our <code>test_syntax</code> crate, to get automated testing for when a test passes on the compiler's parser but gives an error on the tree-sitter one</li>\n<li>We can even hook up automatic minimization to take a given failing test case, and try to find the minimal similar test that parses without errors on the compiler's parser but gives errors under tree-sitter.</li>\n</ul>\n</blockquote>\n<p>That's a cool idea! I'd love to have that info, but blocking merges would be pretty annoying, so if it could just warn us that would be awesome!. Updating the grammar isn't always easy, and it's actually quite tolerant, so having it break a little now and again probably isn't a big deal.</p>",
        "id": 485737016,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733189543
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"453714\">Ryan Barth</span> <a href=\"#narrow/channel/463736-bugs/topic/Treesitter.20expression.20body.20error/near/485737013\">said</a>:</p>\n<blockquote>\n<p>One interesting data point for this particular file is running <code>roc format</code> fixes the TS parse tree.<br>\n</p>\n</blockquote>\n<p>Hahahah, look indentation based syntax is hard. The amount of time I spent just on that in the grammar is stupid</p>",
        "id": 485737061,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733189627
    },
    {
        "content": "<p>I have no doubt</p>",
        "id": 485737125,
        "sender_full_name": "Ryan Barth",
        "timestamp": 1733189659
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"651372\">Eli Dowling</span> <a href=\"#narrow/stream/463736-bugs/topic/Treesitter.20expression.20body.20error/near/485737061\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"453714\">Ryan Barth</span> <a href=\"#narrow/channel/463736-bugs/topic/Treesitter.20expression.20body.20error/near/485737013\">said</a>:</p>\n<blockquote>\n<p>One interesting data point for this particular file is running <code>roc format</code> fixes the TS parse tree.<br>\n</p>\n</blockquote>\n<p>Hahahah, look indentation based syntax is hard. The amount of time I spent just on that in the grammar is stupid</p>\n</blockquote>\n<p>You had to create a custom tokenizer right?</p>",
        "id": 485738656,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733190888
    },
    {
        "content": "<p>It uses some c code to do part of the parsing for newlines, yeah. I try to keep the c code part as minimal as possible, it's adapted from the python version if I remember rightly</p>",
        "id": 485745774,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733196311
    }
]