[
    {
        "content": "<p>within <a href=\"https://github.com/drewolson/aoc-roc\">https://github.com/drewolson/aoc-roc</a>, the following command works:</p>",
        "id": 478184682,
        "sender_full_name": "drew",
        "timestamp": 1729561283
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ roc test Aoc/Year2023/Day14.roc\n0 failed and 2 passed in 368 ms.\n</code></pre></div>",
        "id": 478184696,
        "sender_full_name": "drew",
        "timestamp": 1729561290
    },
    {
        "content": "<p>but this command crashes</p>",
        "id": 478184703,
        "sender_full_name": "drew",
        "timestamp": 1729561296
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ roc test Aoc/Year2023/Day09.roc\nthread &#39;main&#39; panicked at crates/compiler/load_internal/src/file.rs:373:85:\ncalled `Option::unwrap()` on a `None` value\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n^C\n</code></pre></div>",
        "id": 478184715,
        "sender_full_name": "drew",
        "timestamp": 1729561309
    },
    {
        "content": "<p>for the life of me i can't spot a reason why</p>",
        "id": 478184720,
        "sender_full_name": "drew",
        "timestamp": 1729561314
    },
    {
        "content": "<p><code>roc test</code> without arguments works fine</p>",
        "id": 478184774,
        "sender_full_name": "drew",
        "timestamp": 1729561326
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ roc test\n0 failed and 5 passed in 423 ms.\n</code></pre></div>",
        "id": 478184778,
        "sender_full_name": "drew",
        "timestamp": 1729561328
    },
    {
        "content": "<p>I'm guessing a bug in the implementation of that feature for <code>roc test</code> to take a file path as an argument</p>",
        "id": 478186844,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1729562614
    },
    {
        "content": "<p>Indeed it is a bit strange</p>",
        "id": 478186924,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1729562648
    },
    {
        "content": "<p>If you can try a debug build of the compiler it might give you more information</p>",
        "id": 478186956,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1729562669
    },
    {
        "content": "<p>iâ€™ll give it a shot later, thanks</p>",
        "id": 478186985,
        "sender_full_name": "drew",
        "timestamp": 1729562688
    },
    {
        "content": "<p>any updates on <a href=\"https://github.com/roc-lang/roc/issues/7175\">https://github.com/roc-lang/roc/issues/7175</a>? i'd love to try roc for aoc this year, but the LSP constantly crashes when opening files in my multi-file project. happy to wait until next year if it's not the right time.</p>",
        "id": 484543828,
        "sender_full_name": "drew",
        "timestamp": 1732635990
    },
    {
        "content": "<p>though it look like <code>roc check</code> no longer fails on this file, so that's good!</p>",
        "id": 484543949,
        "sender_full_name": "drew",
        "timestamp": 1732636042
    },
    {
        "content": "<p>I can take a look at it after I'm done with the breaking changes update, although others are welcome to investigate this high priority issue</p>",
        "id": 484548823,
        "sender_full_name": "Anton",
        "timestamp": 1732637408
    },
    {
        "content": "<p>Looks like it may be an issue with something holding an extra reference to an Arc that contains the module ids.  When i finish up the snake_case work I can take a look</p>",
        "id": 484933396,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732804121
    },
    {
        "content": "<p>Any pointers you can give on tracking down these sort of references would be helpful.</p>",
        "id": 484937217,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732805250
    },
    {
        "content": "<p>Looking at the authors of <a href=\"https://github.com/roc-lang/roc/blame/61c9be564b07398188b2010ca0c03cf2b6df8b90/crates/compiler/load_internal/src/file.rs#L3311C20-L3311C20\">the surrounding code</a>, it's possible that <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span>, <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> or <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> have some good tips.</p>",
        "id": 484938110,
        "sender_full_name": "Anton",
        "timestamp": 1732805542
    },
    {
        "content": "<p>Ok, checking this locally it looks like I'm seeing a different error with the latest.  Now the issue is that there is a dependency that hasn't been solved when type checking completes.</p>\n<p>These are the steps that are not Done at this stage:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Step(pf.PlatformTasks, SolveTypes): NotStarted,\nStep(pf., SolveTypes): NotStarted,\nStep(pf.Stderr, SolveTypes): NotStarted,\nStep(pf., CanonicalizeAndConstrain): NotStarted,\nStep(pf.Stderr, CanonicalizeAndConstrain): NotStarted,\nStep(pf.PlatformTasks, CanonicalizeAndConstrain): Pending,\nStep(pf.InternalHttp, SolveTypes): Pending,\nStep(pf.InternalCommand, SolveTypes): Pending,\nStep(pf.InternalPath, SolveTypes): Pending,\n</code></pre></div>",
        "id": 484942222,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732806809
    },
    {
        "content": "<p>It seems that it is adding the platform modules to be solved, but since they are never used in checking this leaf module, we never typecheck.  It seems that we should only add a Canonicalize/SolveTypes Steps when the module is required.</p>",
        "id": 484959487,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732812961
    },
    {
        "content": "<p>I'm really struggling with this.  It seems that the use case is valid (single file checking), but when we decide to add the msgs for the platform modules, we don't know if the file we are checking even needs them.  So the solutions I see are:</p>\n<ul>\n<li>Thread a flag down to the handle_root_type function on whether or not to load the main path by default.  If we are checking a single file, this would be false.  We would then need a way to say \"Hey this file actually imports from the platform/packages in the main.roc, load it now\".  This seems smart, but would need to be generalized or would feel very rickity.</li>\n<li>Always force Can and TypeChecking on the platform and package modules.  Seems to be the lower effort thing and likely to \"just work\" in most cases, but would require us to do more work than we need to in many cases.</li>\n</ul>\n<p>I'd like to get some thoughts from some of the core team on this. <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> (Sorry, I don't know all who's on the core team).</p>",
        "id": 485226040,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732971493
    },
    {
        "content": "<p>Regardless, I'd probably need a little walk through to understand all the things I need to think about regarding this</p>",
        "id": 485245051,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732985924
    },
    {
        "content": "<p>So the issue is that to check the validity of a single roc file, we also have to check the platform in order to fully solve the type information?</p>\n<p>Also, which specific messages are problematic, do you have an example?</p>",
        "id": 485247785,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1732988252
    },
    {
        "content": "<p>So in file.rs::update when we determine that have finished all type checking because the root_id equals the module_id and some other things, the platform modules have not been solved and we hit an assert that checks that and blows up. </p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>thread 'main' panicked at crates/compiler/load_internal/src/file.rs:2532:17:\nassertion failed: state.dependencies.solved_all()\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>If you ignore this like I'm doing right now when the root type is a module, you get the original issue where there are outstanding references (Arc clones) to state.derived module.</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>An internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nOutstanding references to the derived module\nLocation: crates/compiler/load_internal/src/file.rs:3325:29\n</code></pre></div>",
        "id": 485248243,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732988627
    },
    {
        "content": "<p>We don't need to (from a functional standpoint) check the platform since it's not used.  But this assert makes us have to (probably to ensure all check errors are returned).</p>",
        "id": 485248321,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732988682
    },
    {
        "content": "<p>It seems like the check is there to prevent this latter message from happening (clearing all the work will cause all of the clones to be dropped).</p>",
        "id": 485248442,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732988780
    },
    {
        "content": "<p>It's a lot of different concepts to swim through when I get about 30mins at a time to look into it.</p>",
        "id": 485248481,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1732988812
    },
    {
        "content": "<p>if it helps, i still get the error on this repo <a href=\"https://github.com/drewolson/aoc-roc\">https://github.com/drewolson/aoc-roc</a></p>",
        "id": 485428638,
        "sender_full_name": "drew",
        "timestamp": 1733008861
    },
    {
        "content": "<p><code>roc build</code> works</p>",
        "id": 485428643,
        "sender_full_name": "drew",
        "timestamp": 1733008867
    },
    {
        "content": "<p>however <code>roc check Aoc/Year2023/Day09.roc</code> errors</p>",
        "id": 485428653,
        "sender_full_name": "drew",
        "timestamp": 1733008882
    },
    {
        "content": "<p>(and therefore i get persistent LSP errors)</p>",
        "id": 485428659,
        "sender_full_name": "drew",
        "timestamp": 1733008889
    },
    {
        "content": "<p>i'm on the latest roc, parser, and basic-cli</p>",
        "id": 485428670,
        "sender_full_name": "drew",
        "timestamp": 1733008908
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ roc --version\nroc nightly pre-release, built from commit d72da8eb0fb on Fri Nov 29 09:25:13 UTC 2024\n</code></pre></div>",
        "id": 485428672,
        "sender_full_name": "drew",
        "timestamp": 1733008916
    },
    {
        "content": "<p>It sounds silly but add an import for any module from your platform to the file and itâ€™s good to go</p>",
        "id": 485431305,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733011587
    },
    {
        "content": "<p>sorry can you explain that more?</p>",
        "id": 485431364,
        "sender_full_name": "drew",
        "timestamp": 1733011663
    },
    {
        "content": "<p>you're saying i should import a platform function?</p>",
        "id": 485431586,
        "sender_full_name": "drew",
        "timestamp": 1733011914
    },
    {
        "content": "<p>adding <code>import pf.Stdout</code> still has the same error</p>",
        "id": 485431652,
        "sender_full_name": "drew",
        "timestamp": 1733011960
    },
    {
        "content": "<p>i'd be more than happy to do a workaround for now if i can have working LSP for advent of code <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 485431869,
        "sender_full_name": "drew",
        "timestamp": 1733012212
    },
    {
        "content": "<p>ok weird, this did work for the LSP! but the command line <code>roc check</code> still fails</p>",
        "id": 485432110,
        "sender_full_name": "drew",
        "timestamp": 1733012492
    },
    {
        "content": "<p>Thatâ€™s weird. The roc check will fail now because you have an unused import, but it shouldnâ€™t crash</p>",
        "id": 485432406,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733012794
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ roc check Aoc/Year2023/Day09.roc\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nOutstanding references to the derived module\nLocation: crates/compiler/load_internal/src/file.rs:3311:29\n</code></pre></div>",
        "id": 485432443,
        "sender_full_name": "drew",
        "timestamp": 1733012825
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ head Aoc/Year2023/Day09.roc\nmodule [part1, part2]\n\nimport pf.Stdout\n\nnextVal : List I64 -&gt; I64\nnextVal = \\l -&gt;\n    if List.all l \\n -&gt; n == 0 then\n        0\n    else\n        diffs = List.map2 l (List.dropFirst l 1) \\a, b -&gt; b - a\n</code></pre></div>",
        "id": 485432454,
        "sender_full_name": "drew",
        "timestamp": 1733012841
    },
    {
        "content": "<p>Interesting</p>",
        "id": 485432462,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733012850
    },
    {
        "content": "<p>but weirdly the LSP now works</p>",
        "id": 485432463,
        "sender_full_name": "drew",
        "timestamp": 1733012850
    },
    {
        "content": "<p>Take that as a win I guess</p>",
        "id": 485432474,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733012859
    },
    {
        "content": "<p>Iâ€™m less worried about the single file chdckt</p>",
        "id": 485432480,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733012869
    },
    {
        "content": "<p>Iâ€™m less worried about the single file check</p>",
        "id": 485432486,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733012875
    },
    {
        "content": "<p>But the LSP working is inportant</p>",
        "id": 485432532,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733012886
    },
    {
        "content": "<p><code>roc check</code> does work</p>",
        "id": 485432534,
        "sender_full_name": "drew",
        "timestamp": 1733012894
    },
    {
        "content": "<p>with no arguments</p>",
        "id": 485432536,
        "sender_full_name": "drew",
        "timestamp": 1733012898
    },
    {
        "content": "<p>Yes because main.roc probably uses a platform import</p>",
        "id": 485432545,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733012917
    },
    {
        "content": "<p>actually <code>roc check</code> works before any changes</p>",
        "id": 485432551,
        "sender_full_name": "drew",
        "timestamp": 1733012925
    },
    {
        "content": "<p>Yes</p>",
        "id": 485432596,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733012988
    },
    {
        "content": "<p>During a run of check _something_ has to import from platform</p>",
        "id": 485432655,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733013011
    },
    {
        "content": "<p>Thatâ€™s the bug Iâ€™m trying to fix</p>",
        "id": 485432675,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733013037
    },
    {
        "content": "<p>I doubt Iâ€™ll have much time tonight to work on this, but if I have a commit with a fix, Iâ€™ll share the SHA here</p>",
        "id": 485433968,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733014538
    },
    {
        "content": "<p>I think I have a fix</p>",
        "id": 485437747,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733018291
    },
    {
        "content": "<p>Let me get a PR together</p>",
        "id": 485437753,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733018298
    },
    {
        "content": "<p>Don't have time for that, here's a patch that you can git apply if you have a local repo:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>diff --git a/crates/compiler/load_internal/src/file.rs b/crates/compiler/load_internal/src/file.rs\nindex ff7ce3a50c..ba8c47c95f 100644\n--- a/crates/compiler/load_internal/src/file.rs\n+++ b/crates/compiler/load_internal/src/file.rs\n@@ -658,7 +658,7 @@ struct CanAndCon {\n     module_docs: Option&lt;ModuleDocumentation&gt;,\n }\n\n-#[derive(Debug)]\n+#[derive(Debug, PartialEq, Eq)]\n enum PlatformPath&lt;'a&gt; {\n     NotSpecified,\n     Valid(To&lt;'a&gt;),\n@@ -1141,7 +1141,6 @@ impl&lt;'a&gt; LoadStart&lt;'a&gt; {\n\n         // Load the root module synchronously; we can't proceed until we have its id.\n         let root_start_time = Instant::now();\n-\n         let load_result = load_filename(\n             arena,\n             filename.clone(),\n@@ -1286,7 +1285,6 @@ fn handle_root_type&lt;'a&gt;(\n                 if let (Some(main_path), Some(cache_dir)) = (main_path.clone(), cache_dir) {\n                     let mut messages = Vec::with_capacity(4);\n                     messages.push(header_output.msg);\n-\n                     load_packages_from_main(\n                         arena,\n                         src_dir.clone(),\n@@ -2245,7 +2243,9 @@ fn update&lt;'a&gt;(\n\n                     // If we're building an app module, and this was the platform\n                     // specified in its header's `to` field, record it as our platform.\n-                    if state.opt_platform_shorthand == Some(config_shorthand) {\n+                    if state.opt_platform_shorthand == Some(config_shorthand)\n+                        || state.platform_path == PlatformPath::RootIsModule\n+                    {\n                         debug_assert!(state.platform_data.is_none());\n\n                         state.platform_data = Some(PlatformData {\n@@ -2339,7 +2339,6 @@ fn update&lt;'a&gt;(\n                 extend_module_with_builtin_import(parsed, ModuleId::INSPECT);\n                 extend_module_with_builtin_import(parsed, ModuleId::TASK);\n             }\n-\n             state\n                 .module_cache\n                 .imports\n</code></pre></div>",
        "id": 485437951,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733018483
    },
    {
        "content": "<p>Created a PR after all :-) <a href=\"https://github.com/roc-lang/roc/pull/7283\">https://github.com/roc-lang/roc/pull/7283</a></p>",
        "id": 485438182,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733018735
    },
    {
        "content": "<p>Going to run tests on it locally, pushed it up fast so you can test <span class=\"user-mention\" data-user-id=\"463085\">@drew</span></p>",
        "id": 485438227,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733018762
    },
    {
        "content": "<p>But on my local I created your minimal repro and it is fixed.</p>",
        "id": 485438258,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733018785
    },
    {
        "content": "<p>nice!!</p>",
        "id": 485438312,
        "sender_full_name": "drew",
        "timestamp": 1733018859
    },
    {
        "content": "<p>thanks <span aria-label=\"folded hands\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"folded hands\">:folded_hands:</span></p>",
        "id": 485438315,
        "sender_full_name": "drew",
        "timestamp": 1733018864
    },
    {
        "content": "<p>I'm going to assume I've made a mistake here and some tests will fail, or it will fail on a larger test case.</p>",
        "id": 485438321,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733018868
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> If you have a moment to take a look at that PR and see if there isn't something obvious I'm going to mess  up here?</p>",
        "id": 485438381,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733018914
    },
    {
        "content": "<p>Do you have commit signing setup?</p>",
        "id": 485438444,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733018995
    },
    {
        "content": "<p>I don't see anything obvious <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 485438496,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733019015
    },
    {
        "content": "<p>Thanks for submitting this <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 485438505,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733019030
    },
    {
        "content": "<p>Iâ€™m not setup for it, but I can of needed</p>",
        "id": 485438643,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733019155
    },
    {
        "content": "<p>If needed.</p>",
        "id": 485438645,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733019160
    },
    {
        "content": "<p>Iâ€™m waiting for my test run locally to complete</p>",
        "id": 485438672,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733019183
    },
    {
        "content": "<p>We can only have a single platform right?</p>",
        "id": 485438691,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733019212
    },
    {
        "content": "<p>Yeah that's correct</p>",
        "id": 485438703,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733019227
    },
    {
        "content": "<p>This was so much easier than it looked at first</p>",
        "id": 485438841,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733019360
    },
    {
        "content": "<p>So if we have <code>PlatformPath::RootIsModule</code> we give it a fake <code>platform_data</code>?</p>",
        "id": 485438933,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733019425
    },
    {
        "content": "<p>Is that basically all it was?</p>",
        "id": 485438940,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733019440
    },
    {
        "content": "<p>No Iâ€™d root is module we give it the actual platform data from the platform found in main.roc</p>",
        "id": 485439137,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733019639
    },
    {
        "content": "<p>*if root is</p>",
        "id": 485439143,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733019651
    },
    {
        "content": "<p>Sorry on my phone , canâ€™t edit</p>",
        "id": 485439150,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733019661
    },
    {
        "content": "<p>Nice, works well</p>",
        "id": 485439245,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733019754
    },
    {
        "content": "<p>If you need to sign the commit let me know and Iâ€™ll try to get that done tonight</p>",
        "id": 485439589,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733020166
    },
    {
        "content": "<p>We can merge this one I think. But if you plan on contributing more, please set it up when you can <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 485440582,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733021207
    },
    {
        "content": "<p>All tests passed locally</p>",
        "id": 485445160,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733026115
    },
    {
        "content": "<p>thanks for fixing and merging this! much appreciated.</p>",
        "id": 485447312,
        "sender_full_name": "drew",
        "timestamp": 1733028494
    }
]