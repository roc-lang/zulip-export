[
    {
        "content": "<p>I've noticed that the Zed extension for Roc incorrectly highlights \"to\" as a keyword even when it's part of a variable name. For example, if I have a variable called <code>todos</code>, the \"to\" part gets highlighted as a keyword.</p>\n<p>This doesn't happen in nvim with the same tree-sitter-roc grammar, so it seems to be specific to how the Zed extension is configured.</p>\n<p>Looking at the extension's <code>highlights.scm</code>, I found this:</p>\n<div class=\"codehilite\" data-code-language=\"Scheme\"><pre><span></span><code><span class=\"p\">[</span>\n<span class=\"p\">(</span><span class=\"nf\">implements</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"k\">when</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nf\">is</span><span class=\"p\">)</span>\n<span class=\"s\">\"as\"</span>\n<span class=\"p\">(</span><span class=\"nf\">to</span><span class=\"p\">)</span>\n<span class=\"p\">]</span><span class=\"w\"> </span><span class=\"nv\">@keyword</span><span class=\"o\">.</span><span class=\"nv\">control</span><span class=\"o\">.</span><span class=\"nv\">roc</span>\n</code></pre></div>\n<p><strong>My questions:</strong></p>\n<ol>\n<li>\n<p>Is \"to\" actually a keyword in Roc? I only see it used in module headers like:<br>\n<code>roc\n   app \"test\" provides [main] to \"./platform\"\n   </code></p>\n</li>\n<li>\n<p>Should \"to\" be highlighted at all? I notice nvim doesn't highlight it.</p>\n</li>\n<li>\n<p>Is this <code>(to)</code> node type necessary, or is it a bug in the Zed extension configuration?</p>\n</li>\n</ol>\n<p><strong>My fix:</strong> I removed the <code>(to)</code> line from the highlights.scm and now variables like <code>todos</code> display correctly. But I'm not sure if this breaks highlighting for legitimate uses of \"to\".</p>\n<p>Would love to know if I'm understanding this correctly and whether \"to\" should be treated as a keyword in Roc.</p>",
        "id": 533839589,
        "sender_full_name": "Ruby",
        "timestamp": 1754934082
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"943729\">@Ruby</span>,<br>\nThis header style is no longer used:</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;test&quot; provides [main] to &quot;./platform&quot;\n</code></pre></div>\n<p>I did some checking and <code>to</code> is no longer a keyword and does not need to be highlighted anymore, so I think your fix is correct.</p>",
        "id": 533840189,
        "sender_full_name": "Anton",
        "timestamp": 1754934362
    },
    {
        "content": "<p>Yes, I found that example somewhere deep in the roc codebase and wasn't completely sure about it. </p>\n<p>Thanks <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 533840384,
        "sender_full_name": "Ruby",
        "timestamp": 1754934439
    },
    {
        "content": "<p>I did some extra digging, <code>to</code> still is a header keyword, so not considered a full keyword (past the header) and this old header style does still work with the old (rust) compiler. <code>to</code> has been completely removed from the new (zig) compiler as far as I could tell. You could say it's been informally deprecated :p Preventing <code>to</code> from being highlighted everywhere in the code is still a good fix, because it was never a full keyword to begin with.</p>",
        "id": 533842808,
        "sender_full_name": "Anton",
        "timestamp": 1754935519
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 533988917,
        "sender_full_name": "Ruby",
        "timestamp": 1755007388
    }
]