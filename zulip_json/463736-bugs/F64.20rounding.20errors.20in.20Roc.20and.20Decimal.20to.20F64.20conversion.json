[
    {
        "content": "<p>I am trying to solve this exercise in a unique way: <a href=\"https://exercism.org/tracks/roc/exercises/darts\">https://exercism.org/tracks/roc/exercises/darts</a><br>\nUsing this quadratic equation: <a href=\"https://www.desmos.com/calculator/q7f0iozldx\">https://www.desmos.com/calculator/q7f0iozldx</a><br>\nx coordinate is the dart unit distance from (0,0) and y coordinate is used to determine the points based on the when clause below.</p>\n<p>I have passed almost all tests, but 1 fails due to a precision rounding error in F64 data type:<br>\nAttempts to round y2 by multiplying 100000.0, using Num.round and then dividing by 100000.0 don't work.</p>\n<div class=\"codehilite\"><pre><span></span><code>y2 = (-1.0 / 180.0) * x2 * x2 + (17.0 / 60.0) * x2 - 23.0 / 18.0\nvs\ny2 = (Num.toFrac (Num.round ((Num.toF64 1000000.0) * (-1.0 / 180.0) * x2 * x2 + (17.0 / 60.0) * x2 - 23.0 / 18.0))) / 1000000.0\n\nthread &#39;main&#39; panicked at crates/compiler/gen_llvm/src/llvm/lowlevel.rs:1198:21:\nnot yet implemented: Support converting Dec values to floats\n</code></pre></div>\n<p>Any other ideas on how to eliminate the rounding error on this example?</p>\n<p><code>1 failed and 12 passed.</code></p>\n<div class=\"codehilite\"><pre><span></span><code>[/mnt/exercism-iteration/Darts.roc:7] y2 = -0.9999999999999999\n[/mnt/exercism-iteration/Darts.roc:9] c = 0\n\n28│&gt;  # On the inner circle\n29│&gt;  expect\n30│&gt;      result = score 0.0f64 -1.0f64\n31│&gt;      result == 10\n\nresult : U64\nresult = 5\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">score</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">F64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">F64</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">U64</span>\n<span class=\"nv\">score</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">y</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">x2</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">sqrt</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"nf\">+</span><span class=\"w\"> </span><span class=\"nv\">y</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">y</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nv\">y2</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">-</span><span class=\"mf\">1.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"nf\">/</span><span class=\"w\"> </span><span class=\"mf\">180.</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">x2</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">x2</span><span class=\"w\"> </span><span class=\"nf\">+</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">17.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"nf\">/</span><span class=\"w\"> </span><span class=\"mf\">60.</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">x2</span><span class=\"w\"> </span><span class=\"nf\">-</span><span class=\"w\"> </span><span class=\"mf\">23.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"nf\">/</span><span class=\"w\"> </span><span class=\"mf\">18.</span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"nv\">dbg</span><span class=\"w\"> </span><span class=\"nv\">y2</span>\n<span class=\"w\">    </span><span class=\"nv\">c</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">ceiling</span><span class=\"w\"> </span><span class=\"nv\">y2</span>\n<span class=\"w\">    </span><span class=\"nv\">dbg</span><span class=\"w\"> </span><span class=\"nv\">c</span>\n<span class=\"w\">    </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">c</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">        </span><span class=\"nf\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">10</span>\n<span class=\"w\">        </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">5</span>\n<span class=\"w\">        </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"w\">        </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 484644554,
        "sender_full_name": "Brian Teague",
        "timestamp": 1732685848
    },
    {
        "content": "<p>Not that it fixes the test results, but to get the code to compile, you can do this:</p>\n<div class=\"codehilite\"><pre><span></span><code>y2 = (Num.toF64 (Num.round (1000000.0 * (-1.0 / 180.0) * x2 * x2 + (17.0 / 60.0) * x2 - 23.0 / 18.0))) / 1000000.0\n</code></pre></div>",
        "id": 484648252,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1732688519
    },
    {
        "content": "<p>Oh, I think you need to multiply everything by the <code>1000000.0</code> for it to be correct</p>",
        "id": 484648540,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1732688737
    },
    {
        "content": "<p>Cause the above only multiplies the first term by <code>1000000.0</code></p>",
        "id": 484648625,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1732688780
    },
    {
        "content": "<p>Something like this?</p>\n<div class=\"codehilite\"><pre><span></span><code>y2 = (Num.toF64 (Num.round (1000000.0 * ((-1.0 / 180.0) * x2 * x2 + (17.0 / 60.0) * x2 - 23.0 / 18.0)))) / 1000000.0\n</code></pre></div>",
        "id": 484648665,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1732688812
    },
    {
        "content": "<p>Anyway, I don't think there are any rounding errors here (past expected float inaccuracies), but maybe I am missing something?</p>\n<p>We definitely are missing the function to convert from dec to f64 and should add that.</p>",
        "id": 484648730,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1732688869
    },
    {
        "content": "<p>Worked like a charm.  Thanks!</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">score</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">F64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">F64</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">U64</span>\n<span class=\"nv\">score</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">y</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">distance</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"nf\">+</span><span class=\"w\"> </span><span class=\"nv\">y</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">y</span>\n<span class=\"w\">        </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">sqrt</span>\n<span class=\"w\">    </span><span class=\"nv\">rawScore</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">-</span><span class=\"mf\">1.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"nf\">/</span><span class=\"w\"> </span><span class=\"mf\">180.</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">distance</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">distance</span><span class=\"w\"> </span><span class=\"nf\">+</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">17.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"nf\">/</span><span class=\"w\"> </span><span class=\"mf\">60.</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"nv\">distance</span><span class=\"w\"> </span><span class=\"nf\">-</span><span class=\"w\"> </span><span class=\"mf\">23.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"nf\">/</span><span class=\"w\"> </span><span class=\"mf\">18.</span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"kt\">Need</span><span class=\"w\"> </span><span class=\"nv\">rounded</span><span class=\"w\"> </span><span class=\"nv\">score</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">remove</span><span class=\"w\"> </span><span class=\"nv\">precision</span><span class=\"w\"> </span><span class=\"nv\">errors</span><span class=\"w\"> </span><span class=\"nv\">with</span><span class=\"w\"> </span><span class=\"kt\">F64</span><span class=\"w\"> </span><span class=\"nv\">data</span><span class=\"w\"> </span><span class=\"kr\">type</span>\n<span class=\"w\">    </span><span class=\"nv\">roundedScore</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">rawScore</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"> </span><span class=\"mf\">1000000.</span><span class=\"mi\">0</span>\n<span class=\"w\">        </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">round</span>\n<span class=\"w\">        </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">toF64</span>\n<span class=\"w\">        </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">n</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">n</span><span class=\"w\"> </span><span class=\"nf\">/</span><span class=\"w\"> </span><span class=\"mf\">1000000.</span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">ceiling</span><span class=\"w\"> </span><span class=\"nv\">roundedScore</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">        </span><span class=\"nf\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">10</span>\n<span class=\"w\">        </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">5</span>\n<span class=\"w\">        </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"w\">        </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 484736463,
        "sender_full_name": "Brian Teague",
        "timestamp": 1732718382
    }
]