[
    {
        "content": "<p>(follow-up on <a href=\"#narrow/channel/306878-off-topic/topic/casual.20conversation/near/509760742\">https://roc.zulipchat.com/#narrow/channel/306878-off-topic/topic/casual.20conversation/near/509760742</a>)</p>\n<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> Today I caught it on my system monitor - no CPU hogging, but maxed out my memory - Helix <code>:lsp-stop</code> freed 10GB <span aria-label=\"yum\" class=\"emoji emoji-1f60b\" role=\"img\" title=\"yum\">:yum:</span></p>",
        "id": 510257316,
        "sender_full_name": "jan kili",
        "timestamp": 1743788348
    },
    {
        "content": "<p>Oh interesting, I'll see if I can reproduce</p>",
        "id": 510257388,
        "sender_full_name": "Anton",
        "timestamp": 1743788384
    },
    {
        "content": "<p>I'll move us to a debugging topic then</p>",
        "id": 510257417,
        "sender_full_name": "jan kili",
        "timestamp": 1743788395
    },
    {
        "content": "<p>3 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"306878\" href=\"/#narrow/channel/306878-off-topic/topic/casual.20conversation/with/262159759\">#off topic &gt; casual conversation</a> by <span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span>.</p>",
        "id": 510257546,
        "sender_full_name": "Notification Bot",
        "timestamp": 1743788430
    },
    {
        "content": "<p>Yesterday I ran <code>apt update</code>/<code>upgrade</code> and updated Roc alpha3 from early March to late March</p>",
        "id": 510257926,
        "sender_full_name": "jan kili",
        "timestamp": 1743788566
    },
    {
        "content": "<p>Yeah, I can reproduce it, single letter edits cause 20-40 MiB jumps that never get cleaned up.</p>",
        "id": 510259081,
        "sender_full_name": "Anton",
        "timestamp": 1743788993
    },
    {
        "content": "<p><span aria-label=\"orange heart\" class=\"emoji emoji-1f9e1\" role=\"img\" title=\"orange heart\">:orange_heart:</span></p>",
        "id": 510259322,
        "sender_full_name": "jan kili",
        "timestamp": 1743789068
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7727\">#7727</a> I'll do some digging tomorrow</p>",
        "id": 510259831,
        "sender_full_name": "Anton",
        "timestamp": 1743789255
    },
    {
        "content": "<p>Thank you! It's not a blocker for me :)</p>",
        "id": 510259878,
        "sender_full_name": "jan kili",
        "timestamp": 1743789277
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> still a serious issue though</p>",
        "id": 510261334,
        "sender_full_name": "Anton",
        "timestamp": 1743789756
    },
    {
        "content": "<p>I haven't gotten far yet, I'm struggling to get good traces (with mem allocation info). Currently I have:</p>\n<div class=\"codehilite\"><pre><span></span><code>@bytes[\n        78d56ecad650 __libc_malloc+0 (/usr/lib/x86_64-linux-gnu/libc.so.6)\n        5b99ddbd06f5 crossbeam_channel::channel::bounded::h00081419fd333688+245 (/home/username/gitrepos/roc3/roc/target/debug/roc_language_server)\n        5b99ddb519e5 roc_load_internal::file::load_single_threaded::h72d2df977ee96e5e+597 (/home/username/gitrepos/roc3/roc/target/debug/roc_language_server)\n        5b99ddb34ae7 roc_load::load_single_threaded::h91b57ea8a7617560+487 (/home/username/gitrepos/roc3/roc/target/debug/roc_language_server)\n        78d56ed29c3c __clone3+44 (/usr/lib/x86_64-linux-gnu/libc.so.6)\n]: 8503296\n</code></pre></div>\n<p>I've been using bpftrace, do you have any recommendations <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span>?</p>",
        "id": 510398147,
        "sender_full_name": "Anton",
        "timestamp": 1743877307
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/463736-bugs/topic/lsp.20memory.20leak/near/510259081\">said</a>:</p>\n<blockquote>\n<p>Yeah, I can reproduce it, single letter edits cause 20-40 MiB jumps that never get cleaned up.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> suggested earlier that he thinks the old parser likely has memory leaks. I would guess the s is what you are seeing. Though 40MiB sounds like a lot. We might just be keeping arenas alive and making new asts instead of dumping the old arena before making a new ast.</p>",
        "id": 510402578,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1743880359
    },
    {
        "content": "<p>And no suggests past use valgrind if possible. With all its tracking flags, it can give a ton of info.</p>",
        "id": 510402663,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1743880423
    },
    {
        "content": "<p>At least we wonâ€™t have to worry about that with the new parser!</p>",
        "id": 510405419,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1743882426
    },
    {
        "content": "<p><code>valgrind --leak-check=full --track-origins=yes ...</code> is clean, so I'm going to check the arenas now.</p>",
        "id": 511171538,
        "sender_full_name": "Anton",
        "timestamp": 1744204874
    },
    {
        "content": "<p>heaptrack is a nice tool for this :)<br>\nWhen trying out some changes I've managed to make the problem worse (increased memory usage) :p this may help me find the cause though <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 511235353,
        "sender_full_name": "Anton",
        "timestamp": 1744221820
    },
    {
        "content": "<p>Heaptrack and Massif are both great (and in the new compiler Tracy)</p>",
        "id": 511236113,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1744222122
    },
    {
        "content": "<p>I suspect the problem may come from <code>crates/language_server/src/registry.rs:update_document</code>, that function has a lot of shady vibes :p in the sense that it may be keeping references alive too long. I'll give this one more day of investigating tomorrow.</p>",
        "id": 511708218,
        "sender_full_name": "Anton",
        "timestamp": 1744394847
    },
    {
        "content": "<p>When I keep repeating the same two edits (in the Roc code) the memory gains are very inconsistent, sometimes very small (as they should be), sometimes ~30 MiB.  I can't explain that given everything I've learned about this issue, I'm calling it quits <span aria-label=\"white flag\" class=\"emoji emoji-1f3f3\" role=\"img\" title=\"white flag\">:white_flag:</span></p>",
        "id": 511832780,
        "sender_full_name": "Anton",
        "timestamp": 1744481702
    },
    {
        "content": "<p>I've also experienced this issue where the memory allocated by the lsp slowly grows and I have to kill and restart it. Happens over a period of 30 or so minutes</p>",
        "id": 518084728,
        "sender_full_name": "Nathan Kamenchu",
        "timestamp": 1747233500
    }
]