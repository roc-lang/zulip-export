[
    {
        "content": "<p>I have an app file which checks without errors or warnings. <code>dev</code>, <code>build</code> or <code>run</code> all produce</p>\n<blockquote>\n<p>thread '&lt;unnamed&gt;' panicked at crates/compiler/mono/src/ir.rs:5927:10: called <code>Option::unwrap()</code> on a <code>None</code> value</p>\n</blockquote>\n<p>I am on  roc nightly pre-release, built from commit d72da8eb0fb on Fri Nov 29 09:25:13 UTC 2024, and my Basic-CLI is 0.17.0.</p>\n<p>This happens when I attempt to print (either debug or in Stdout.line) a string constructed by a function in a package I am loading locally. The function operates as expected if tested or <code>dbg</code>ed in the package code itself.</p>\n<p>Well above my ability to guess what's happening. Certainly eminently possible that the mistake is mine.</p>",
        "id": 485501458,
        "sender_full_name": "Paul Stanley",
        "timestamp": 1733075829
    },
    {
        "content": "<p>Can you drop a repro here?</p>",
        "id": 485503283,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733077298
    },
    {
        "content": "<p>How much do you need? The problem is that it could well be an interaction with the underlying package I'm pulling in. The problem file is <a href=\"https://github.com/PaulStanley/unicode/blob/main/examples/lowercase.roc\">https://github.com/PaulStanley/unicode/blob/main/examples/lowercase.roc</a> (But bear in mind this is messy WIP ...)</p>\n<p>The stack trace if that helps is  </p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Stacktrace</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>0:        0x103169fe8 - __mh_execute_header</p>\n<p>1:        0x10263aa44 - __mh_execute_header</p>\n<p>2:        0x103166064 - __mh_execute_header</p>\n<p>3:        0x103169de0 - __mh_execute_header</p>\n<p>4:        0x10316b4fc - __mh_execute_header</p>\n<p>5:        0x10316b1f8 - __mh_execute_header</p>\n<p>6:        0x10316baf4 - __mh_execute_header</p>\n<p>7:        0x10316b8a4 - __mh_execute_header</p>\n<p>8:        0x10316a480 - __mh_execute_header</p>\n<p>9:        0x10316b664 - __mh_execute_header</p>\n<p>10:        0x1047d5a38 - __ZN4llvm15SmallVectorBaseIyE8grow_podEPvmm</p>\n<p>11:        0x1047d5ac0 - __ZN4llvm15SmallVectorBaseIyE8grow_podEPvmm</p>\n<p>12:        0x1047d59bc - __ZN4llvm15SmallVectorBaseIyE8grow_podEPvmm</p>\n<p>13:        0x102d497d0 - __mh_execute_header</p>\n<p>14:        0x102d5773c - __mh_execute_header</p>\n<p>15:        0x102d35248 - __mh_execute_header</p>\n<p>16:        0x102d573e0 - __mh_execute_header</p>\n<p>17:        0x102d3fb14 - __mh_execute_header</p>\n<p>18:        0x102d638e8 - __mh_execute_header</p>\n<p>19:        0x102d43e20 - __mh_execute_header</p>\n<p>20:        0x102d5769c - __mh_execute_header</p>\n<p>21:        0x102d3fb14 - __mh_execute_header</p>\n<p>22:        0x102d638e8 - __mh_execute_header</p>\n<p>23:        0x102d43e20 - __mh_execute_header</p>\n<p>24:        0x102d5769c - __mh_execute_header</p>\n<p>25:        0x102d5a540 - __mh_execute_header</p>\n<p>26:        0x102d56e78 - __mh_execute_header</p>\n<p>27:        0x102d3fb14 - __mh_execute_header</p>\n<p>28:        0x102d638e8 - __mh_execute_header</p>\n<p>29:        0x102d43e20 - __mh_execute_header</p>\n<p>30:        0x102d5a490 - __mh_execute_header</p>\n<p>31:        0x102d42ae8 - __mh_execute_header</p>\n<p>32:        0x102d35328 - __mh_execute_header</p>\n<p>33:        0x102d573e0 - __mh_execute_header</p>\n<p>34:        0x102d3fb14 - __mh_execute_header</p>\n<p>35:        0x102d3a8b4 - __mh_execute_header</p>\n<p>36:        0x102d38ab4 - __mh_execute_header</p>\n<p>37:        0x102c69cbc - __mh_execute_header</p>\n<p>38:        0x102c022e0 - __mh_execute_header</p>\n<p>39:        0x102bf7894 - __mh_execute_header</p>\n<p>40:        0x102c02d64 - __mh_execute_header</p>\n<p>41:        0x103170360 - __mh_execute_header</p>\n<p>42:        0x184bc72e4 - __pthread_deallocate</p>\n</div></div>",
        "id": 485503624,
        "sender_full_name": "Paul Stanley",
        "timestamp": 1733077587
    },
    {
        "content": "<p>This error is definitely coming from compiling a call to <code>dbg</code></p>",
        "id": 485504322,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733078176
    },
    {
        "content": "<p>OK. Well, found the problem -- and I think it makes sense. I had left a couple of <code>dbg</code> in the library file, and that was doing it. With those removed, all is good.</p>\n<p>This maybe <em>should</em> be an error (or warning) because dbg code shouldn't really stay in library files I guess in production. But ... not the easiest thing to spot!</p>",
        "id": 485504625,
        "sender_full_name": "Paul Stanley",
        "timestamp": 1733078440
    },
    {
        "content": "<p>But ... nice to see it working with the famous turkish dotless i (and ... even better really the final sigma ...)</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>In Turkish    thıs ıs a greek word: σαββατος. and for lìthuanıan\n</code></pre></div>\n\n</blockquote>",
        "id": 485504726,
        "sender_full_name": "Paul Stanley",
        "timestamp": 1733078531
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7295\">#7295</a></p>",
        "id": 485589239,
        "sender_full_name": "Anton",
        "timestamp": 1733134819
    }
]