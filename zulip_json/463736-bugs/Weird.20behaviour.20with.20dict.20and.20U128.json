[
    {
        "content": "<p>So I am using a dictionary and using a type {U64, U8} as key, then it works, however if I just changed type to {U128,U8} I start to get some really weird issues...  It says keys exist that shouldnt exist. However if I change the code to all using U64 it runs flawlessly. Code used is here, Warning for spoiler for AoC day 11: <a href=\"https://gist.github.com/jonwarghed/d5606997fb705f5ce2a3c09a3ab98705\">https://gist.github.com/jonwarghed/d5606997fb705f5ce2a3c09a3ab98705</a></p>",
        "id": 488152090,
        "sender_full_name": "Jon Erik Kemi Warghed",
        "timestamp": 1733938644
    },
    {
        "content": "<p>Thanks for reporting this <span class=\"user-mention\" data-user-id=\"787168\">@Jon Erik Kemi Warghed</span><br>\nThere is a lot of output if I execute <code>roc test</code>,  both when using <code>U128</code> and <code>U64</code>, can you narrow this down a bit?</p>",
        "id": 488160786,
        "sender_full_name": "Anton",
        "timestamp": 1733941696
    },
    {
        "content": "<p>We may just hash u128 wrong.</p>",
        "id": 488163562,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733942648
    },
    {
        "content": "<p>Sure let me see if I can make it more easily reproducible as well.</p>",
        "id": 488164019,
        "sender_full_name": "Jon Erik Kemi Warghed",
        "timestamp": 1733942824
    },
    {
        "content": "<p>Code is not much easier, but the output should be clearer, please let me know, I am kinda new in Roc. So not easy to force types correctly yet for a minimal example :)</p>",
        "id": 488165863,
        "sender_full_name": "Jon Erik Kemi Warghed",
        "timestamp": 1733943463
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/atX-hDOAJj9Yu7GeA0eZSDUS/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/atX-hDOAJj9Yu7GeA0eZSDUS/image.png\" title=\"image.png\"><img data-original-dimensions=\"1985x198\" src=\"/user_uploads/thumbnail/22008/atX-hDOAJj9Yu7GeA0eZSDUS/image.png/840x560.webp\"></a></div>",
        "id": 488165912,
        "sender_full_name": "Jon Erik Kemi Warghed",
        "timestamp": 1733943481
    },
    {
        "content": "<p>This is the input? <code>0 1 10 99 999</code></p>",
        "id": 488166472,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733943653
    },
    {
        "content": "<p>also, what type of machine are you on?</p>",
        "id": 488166630,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733943700
    },
    {
        "content": "<p>Ah sorry example input is 125 17</p>",
        "id": 488166649,
        "sender_full_name": "Jon Erik Kemi Warghed",
        "timestamp": 1733943705
    },
    {
        "content": "<p>❯ uname -a<br>\nLinux jotunheim 6.6.63 <a href=\"https://github.com/roc-lang/roc/issues/1\">#1</a>-NixOS SMP PREEMPT_DYNAMIC Fri Nov 22 14:38:37 UTC 2024 x86_64 GNU/Linux</p>",
        "id": 488166759,
        "sender_full_name": "Jon Erik Kemi Warghed",
        "timestamp": 1733943729
    },
    {
        "content": "<p>thanks. Seems target specific. Works on mac. So probably is alignment or some silly call conv thing.</p>",
        "id": 488166928,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733943788
    },
    {
        "content": "<p>on m1 mac see:</p>\n<div class=\"codehilite\"><pre><span></span><code>────────────────────────────────────────────────────────────────────────────────\n[/tmp/bug.roc:80] (&quot;Inserting&quot;, curr, result) = (&quot;Inserting&quot;, {pebble: 125, target: 1}, 1)\n[/tmp/bug.roc:87] (&quot;Inserting&quot;, curr, r) = (&quot;Inserting&quot;, {pebble: 17, target: 1}, 2)\n[/tmp/bug.roc:103] end_memory.brain = {{pebble: 125, target: 1}: 1, {pebble: 17, target: 1}: 2}\n── EXPECT FAILED in /tmp/bug.roc ───────────────────────────────────────────────\n</code></pre></div>",
        "id": 488166975,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733943805
    },
    {
        "content": "<p>possible, let me know if I should do anything else.</p>",
        "id": 488167592,
        "sender_full_name": "Jon Erik Kemi Warghed",
        "timestamp": 1733944003
    },
    {
        "content": "<p>I'll test on my linux box. See if I can repro</p>",
        "id": 488167667,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733944029
    },
    {
        "content": "<p>yeah, I can repro</p>",
        "id": 488167797,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733944078
    },
    {
        "content": "<p>Cool, I have a devenv.lock if needed.</p>",
        "id": 488167893,
        "sender_full_name": "Jon Erik Kemi Warghed",
        "timestamp": 1733944097
    },
    {
        "content": "<p>Woah, this looks to be a <code>List.append</code> bug.</p>",
        "id": 488178982,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733947937
    },
    {
        "content": "<p><del>That or an inspect printout bug</del></p>",
        "id": 488179035,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733947953
    },
    {
        "content": "<p>This is logging from the list insertion in the dictionary:</p>\n<div class=\"codehilite\"><pre><span></span><code>[/tmp/MyDict.roc:466] data0 = [({pebble: 125, target: 1}, 1)]\n[/tmp/MyDict.roc:467] (&quot;Inserting&quot;, key, value) = (&quot;Inserting&quot;, {pebble: 17, target: 1}, 2)\n[/tmp/MyDict.roc:469] data1 = [({pebble: 125, target: 1}, 1), ({pebble: 322962136477993009152, target: 0}, 36893488147419103233)]\n[/tmp/MyDict.roc:471] List.get data1 dataIndex = (Ok ({pebble: 322962136477993009152, target: 0}, 36893488147419103233))\n</code></pre></div>",
        "id": 488179370,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733948065
    },
    {
        "content": "<p>So somehow these types break <code>List.append</code>.</p>",
        "id": 488179446,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733948094
    },
    {
        "content": "<p>Seems like we might be writting at the wrong offset. <code>322962136477993009152</code> constains <code>17</code> along with garbage. <code>36893488147419103233</code> contains both <code>1</code> and <code>2</code></p>",
        "id": 488186155,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733950329
    },
    {
        "content": "<p>Minimal repro is literally just this:</p>\n<div class=\"codehilite\"><pre><span></span><code>app [main] { pf: platform &quot;https://github.com/roc-lang/basic-cli/releases/download/0.17.0/lZFLstMUCUvd5bjnnpYromZJXkQUrdhbva4xdBInicE.tar.br&quot; }\n\nimport pf.Stdout\n\nmain =\n    x = []\n    Stdout.line! (Inspect.toStr x)\n    a = ({pebble: 125u128, target: 1u8}, 1u128)\n    Stdout.line! &quot;Inserting: $(Inspect.toStr a)&quot;\n    y = List.append x a\n    Stdout.line! (Inspect.toStr y)\n    b = ({pebble: 17, target: 1}, 2)\n    Stdout.line! &quot;Inserting: $(Inspect.toStr b)&quot;\n    z = List.append y b\n    Stdout.line! (Inspect.toStr z)\n</code></pre></div>",
        "id": 488193175,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733953006
    },
    {
        "content": "<p>Oh, this is just llvm thinking that i128 should be aligned to 8 bytes instead of 16</p>",
        "id": 488198784,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733955289
    },
    {
        "content": "<p>So it ends up calculating the gep instruction wrong</p>",
        "id": 488198803,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733955300
    },
    {
        "content": "<p>If you assume alignment of 8, <code>{ { i128, i8 }, i128 }</code> has a size of <code>40</code>. If the alignment is <code>16</code>, the size is <code>48</code></p>",
        "id": 488198872,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733955332
    },
    {
        "content": "<p>This honestly might be a pain to fix. Is a version of llvm with i128 alignment changed to 16 released yet? If so, updating to that version of llvm may be the best fix (work we already have to do anyway).</p>",
        "id": 488199049,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733955402
    },
    {
        "content": "<p>Looks like LLVM 20 should have it?</p>",
        "id": 488199328,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733955522
    },
    {
        "content": "<p>The v18 update has been a good amount of work, we should try to separately upgrade from LLVM 18 to 20</p>",
        "id": 488512882,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733955609
    },
    {
        "content": "<p>Really, not until 20? The rust issue related to this thought it should get release in 18.</p>",
        "id": 488513291,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733955809
    },
    {
        "content": "<p>Also, saw some micro benchmarks showing the alignment leading to a 12% perf gain. Clearly, these targeted alignment related issues, but just surprising a bit. Looking at rust projects updating to 1.78.0. some got perf gains of up to 20%. but most got 0% to 5% gains.</p>",
        "id": 488513649,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733955979
    },
    {
        "content": "<p>Let me get a specific answer, this was from loose GH issue investigating</p>",
        "id": 488514456,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733956353
    },
    {
        "content": "<p><a href=\"https://godbolt.org/z/c5vaPd9or\">https://godbolt.org/z/c5vaPd9or</a></p>",
        "id": 488525515,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733961412
    },
    {
        "content": "<p>It is fixed in 18</p>",
        "id": 488525519,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733961415
    },
    {
        "content": "<blockquote>\n<p>we should try to separately upgrade from LLVM 18 to 20</p>\n</blockquote>\n<p>Also, I think 20 is trunk. 19 is the newest release.</p>",
        "id": 488525672,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733961497
    },
    {
        "content": "<p>Also, can confirm that this bug is fixed with <a href=\"https://github.com/roc-lang/roc/pull/6921\">https://github.com/roc-lang/roc/pull/6921</a></p>",
        "id": 488536997,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733968938
    },
    {
        "content": "<p>This should be fixed on main now</p>",
        "id": 488761493,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734063163
    }
]