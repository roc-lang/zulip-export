[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>app [main!] {\n    pf: platform &quot;../basic-cli/platform/main.roc&quot;,\n}\nimport pf.Stdout\n\n\nmain! = \\{} -&gt;\n    _ = Num.pow 1 1\n    Stdout.write! &quot;hi&quot;\n</code></pre></div>\n<p>Running num.Pow is giving a compiler error, is this a known issue? Current running  on roc commit d782542 (PI)</p>",
        "id": 486807285,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733695562
    },
    {
        "content": "<p>There could be a few things going on here. </p>\n<p>Does this happen for you in the REPL? if you use <code>$ roc repl</code>?</p>",
        "id": 486807483,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733695702
    },
    {
        "content": "<p>Can you share the error message too please?</p>",
        "id": 486807549,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733695759
    },
    {
        "content": "<p>repl works fine!</p>\n<p>here is the error</p>\n<div class=\"codehilite\"><pre><span></span><code>An internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nUndefined Symbol in relocation, (+124a, Relocation { kind: PltRelative, encoding: Generic, size: +20, target: Symbol(SymbolIndex(+71)), addend: +fffffffffffffffc, implicit_addend: false }): Ok(Symbol { name: &quot;log&quot;, address: +0, size: +0, kind: Unknown, section: Undefined, scope: Unknown, weak: false, flags: Elf { st_info: +10, st_other: +0 } })\nLocation: crates/linker/src/elf.rs:1452:25\n</code></pre></div>",
        "id": 486807640,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733695816
    },
    {
        "content": "<p>It only fails when you assign the value</p>",
        "id": 486807646,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733695829
    },
    {
        "content": "<p>To a discard binding</p>",
        "id": 486807675,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733695857
    },
    {
        "content": "<p>Does that track with what you see <span class=\"user-mention\" data-user-id=\"773510\">@Agustin Romero</span> ?</p>",
        "id": 486807698,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733695879
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>Num.pow 1 1\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>a = Num.pow 1 1\n</code></pre></div>\n<p>works in Repl</p>\n<p>But </p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>_ = Num.pow 1 1\n</code></pre></div>\n<p>crashes in Repl. But I think binding to a _ in the repl always crashes.  Is that known?</p>",
        "id": 486807788,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733695952
    },
    {
        "content": "<p>Oh yeah</p>",
        "id": 486807805,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733695978
    },
    {
        "content": "<p>not really.</p>\n<p>this crashes </p>\n<div class=\"codehilite\"><pre><span></span><code>app [main!] {\n    pf: platform &quot;../basic-cli/platform/main.roc&quot;,\n}\nimport pf.Stdout\n\nmain! = \\{} -&gt; Stdout.write! &quot;$(Inspect.toStr (2^2))\\n&quot;\n\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nambient functions don&#39;t unify\nLocation: crates/compiler/unify/src/unify.rs:202:18\n</code></pre></div>",
        "id": 486807808,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733695982
    },
    {
        "content": "<p>Only handles ident binding</p>",
        "id": 486807813,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733695985
    },
    {
        "content": "<p>and assigning to a variable crashes aswell</p>\n<div class=\"codehilite\"><pre><span></span><code>app [main!] {\n    pf: platform &quot;../basic-cli/platform/main.roc&quot;,\n}\nimport pf.Stdout\n\nmain! = \\{} -&gt;\n    a = 2 ^ 2\n    Stdout.write! &quot;&quot;\n\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nUndefined Symbol in relocation, (+124a, Relocation { kind: PltRelative, encoding: Generic, size: +20, target: Symbol(SymbolIndex(+71)), addend: +fffffffffffffffc, implicit_addend: false }): Ok(Symbol { name: &quot;log&quot;, address: +0, size: +0, kind: Unknown, section: Undefined, scope: Unknown, weak: false, flags: Elf { st_info: +10, st_other: +0 } })\nLocation: crates/linker/src/elf.rs:1452:25\n</code></pre></div>",
        "id": 486807900,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733696054
    },
    {
        "content": "<p>Are you using the legacy linker?</p>",
        "id": 486807954,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733696124
    },
    {
        "content": "<blockquote>\n<p><code>Undefined Symbol in relocation</code></p>\n</blockquote>\n<p>this makes me think it may be linker related</p>",
        "id": 486807980,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733696161
    },
    {
        "content": "<p>no i wasn't let me give that a try</p>",
        "id": 486808034,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733696187
    },
    {
        "content": "<p>Oh... the <code>log</code> has me thinking maybe the way I'm handling the <code>Err</code> from main is the issue.</p>\n<p>Can you add a type annotation to <code>main!</code> and try again?</p>",
        "id": 486808050,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733696218
    },
    {
        "content": "<p>legacy linker makes it run</p>",
        "id": 486808096,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733696275
    },
    {
        "content": "<p>I'm confused where this <code>log</code> symbol is coming from</p>",
        "id": 486808150,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733696291
    },
    {
        "content": "<p>adding the type annotation didn't help</p>",
        "id": 486808271,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733696409
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>app [main!] {\n    pf: platform &quot;../basic-cli/platform/main.roc&quot;,\n}\nimport pf.Stdout\n\nmain! : {} =&gt; Result {} [StdoutErr [\n        AlreadyExists,\n        BrokenPipe,\n        Interrupted,\n        NotFound,\n        Other Str,\n        OutOfMemory,\n        PermissionDenied,\n        Unsupported,\n    ]]\nmain! = \\{} -&gt;\n    a = 2 ^ 2\n    Stdout.write! &quot;&quot;\n\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nUndefined Symbol in relocation, (+124a, Relocation { kind: PltRelative, encoding: Generic, size: +20, target: Symbol(SymbolIndex(+71)), addend: +fffffffffffffffc, implicit_addend: false }): Ok(Symbol { name: &quot;log&quot;, address: +0, size: +0, kind: Unknown, section: Undefined, scope: Unknown, weak: false, flags: Elf { st_info: +10, st_other: +0 } })\nLocation: crates/linker/src/elf.rs:1452:25\n</code></pre></div>",
        "id": 486808294,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733696435
    },
    {
        "content": "<p>And you're running x64 linux right?</p>",
        "id": 486808424,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733696549
    },
    {
        "content": "<p>It's working ok for me on my arm64 mac</p>",
        "id": 486808451,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733696585
    },
    {
        "content": "<p>x64 linux, correct</p>",
        "id": 486808463,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733696601
    },
    {
        "content": "<p>We have a related issue <a href=\"https://github.com/roc-lang/roc/issues/7068\">https://github.com/roc-lang/roc/issues/7068</a></p>",
        "id": 486808492,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733696632
    },
    {
        "content": "<p>Totally missed it. Would that be a good first issue for me to solve?</p>",
        "id": 486808648,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733696759
    },
    {
        "content": "<p>I suspect this is a known issue, I'm having trouble tracking down the related Issue. </p>\n<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> would probably know from looking at this error message if we are already tracking.</p>",
        "id": 486808711,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733696784
    },
    {
        "content": "<p>I'm asking if adding the recommendation could be a good first issue, not expecting to fix the actual issue myself <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 486808904,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733696965
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"773510\">Agustin Romero</span> <a href=\"#narrow/channel/463736-bugs/topic/Bug.3A.20Running.20num.2EPow.20results.20in.20a.20crash/near/486808648\">said</a>:</p>\n<blockquote>\n<p>Totally missed it. Would that be a good first issue for me to solve?</p>\n</blockquote>\n<p>Anton has labelled it as an intermediate issue. </p>\n<p>Maybe for providing more information as recommended in this issue it's as simple as including a note in <code>internal_error</code> macro message. That would be easy to do.</p>",
        "id": 486808920,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733696993
    },
    {
        "content": "<p>if you think it's possible i'll take a look, have some spare time right now</p>",
        "id": 486809162,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733697180
    },
    {
        "content": "<p>why does pow need log....strange</p>",
        "id": 486814193,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733701648
    },
    {
        "content": "<p>Should i create a fork to create a PR,  i'd be changing a single line</p>",
        "id": 486815505,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733702794
    },
    {
        "content": "<p>If you don't have contributor / write access to the repo you will need a fork.</p>",
        "id": 486816573,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733703792
    },
    {
        "content": "<p>got it.<br>\n<a href=\"https://github.com/roc-lang/roc/pull/7323\">https://github.com/roc-lang/roc/pull/7323</a></p>",
        "id": 486816943,
        "sender_full_name": "Agustin Romero",
        "timestamp": 1733704108
    }
]