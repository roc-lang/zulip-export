[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span>, am I using your platform templates wrong, or did a Roc update in the last 6 months break them all?</p>\n<div class=\"codehilite\"><pre><span></span><code>jan@mackey roc-platform-template-rust % roc build.roc\n── STATEMENT AFTER EXPRESSION in ...tFmNkvEICPErI9ptji_ySjicO6CkucY/Effect.roc ─\n\nI just finished parsing an expression with a series of definitions,\n\nand this line is indented as if it&#39;s intended to be part of that\nexpression:\n\n 1│  hosted Effect\n 2│      exposes [\n 3│          Effect,\n 4│          after,\n 5│          args,\n 6│          map,\n 7│          always,\n 8│          forever,\n 9│          loop,\n10│          dirList,\n11│          dirCreate,\n12│          dirCreateAll,\n13│          dirDeleteEmpty,\n14│          dirDeleteAll,\n15│          envDict,\n16│          envVar,\n17│          cwd,\n18│          setCwd,\n19│          exePath,\n20│          stdoutLine,\n21│          stdoutWrite,\n22│          stderrLine,\n23│          stderrWrite,\n24│          stdinLine,\n25│          stdinBytes,\n26│          ttyModeCanonical,\n27│          ttyModeRaw,\n28│          sendRequest,\n29│          fileReadBytes,\n30│          fileDelete,\n31│          fileWriteUtf8,\n32│          fileWriteBytes,\n33│          pathType,\n34│          posixTime,\n35│          tcpConnect,\n36│          tcpClose,\n37│          tcpReadUpTo,\n38│          tcpReadExactly,\n39│          tcpReadUntil,\n40│          tcpWrite,\n41│          sleepMillis,\n42│          commandStatus,\n43│          commandOutput,\n44│      ]\n45│      imports [\n46│          InternalHttp.{ Request, InternalResponse },\n47│          InternalFile,\n48│          InternalTcp,\n49│          InternalCommand,\n50│          InternalPath,\n51│      ]\n52│      generates Effect with [after, map, always, forever, loop]\n53│\n54│  stdoutLine : Str -&gt; Effect (Result {} Str)\n     ^\n\nHowever, I already saw the final expression in that series of\ndefinitions.\n\nTip: An expression like `4`, `&quot;hello&quot;`, or `functionCall MyThing` is\nlike `return 4` in other programming languages. To me, it seems like\nyou did `return 4` followed by more code in the lines after, that code\nwould never be executed!\n\nTip: If you are working with `Task`, this error can happen if you\nforgot a `!` somewhere.%\njan@mackey roc-platform-template-rust %\n</code></pre></div>\n<p>I get this error in all of them:<br>\n<a href=\"https://github.com/lukewilliamboswell/roc-platform-template-c\">https://github.com/lukewilliamboswell/roc-platform-template-c</a><br>\n<a href=\"https://github.com/lukewilliamboswell/roc-platform-template-go\">https://github.com/lukewilliamboswell/roc-platform-template-go</a><br>\n<a href=\"https://github.com/lukewilliamboswell/roc-platform-template-rust\">https://github.com/lukewilliamboswell/roc-platform-template-rust</a><br>\n<a href=\"https://github.com/lukewilliamboswell/roc-platform-template-swift\">https://github.com/lukewilliamboswell/roc-platform-template-swift</a><br>\n<a href=\"https://github.com/lukewilliamboswell/roc-platform-template-zig\">https://github.com/lukewilliamboswell/roc-platform-template-zig</a></p>",
        "id": 480347644,
        "sender_full_name": "jan kili",
        "timestamp": 1730677404
    },
    {
        "content": "<p>They're definitely outdated.</p>",
        "id": 480347709,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730677465
    },
    {
        "content": "<p>I have been planning on giving them some love/uplift once purity inference lands. Though I wasn't tracking they were broken</p>",
        "id": 480347718,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730677488
    },
    {
        "content": "<p>After purity inference the host API get's so much nicer</p>",
        "id": 480347738,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730677509
    },
    {
        "content": "<p>I'm also thinking of killing the repo <a href=\"https://github.com/lukewilliamboswell/roc-glue-code-gen\">https://github.com/lukewilliamboswell/roc-glue-code-gen</a> and removing all references to that. It was an idea I had but probably a bit too ambitious to try and get Glue scripts for all the different languages.</p>",
        "id": 480347803,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730677578
    },
    {
        "content": "<p>My recommendation for rust platforms now is just to pin to the roc repo <code>roc_std</code> etc</p>",
        "id": 480347826,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730677614
    },
    {
        "content": "<p>And for zig, that's still a bit hand rolled. You can copy-paste the builtins, but there is a lot of stuff in there that's not needed. So it's not really a std library implementation.</p>",
        "id": 480347851,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730677650
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/463736-bugs/topic/platform.20templates.20outdated.3F/near/480347826\">said</a>:</p>\n<blockquote>\n<p>My recommendation for rust platforms now is just to pin to the roc repo <code>roc_std</code> etc</p>\n</blockquote>\n<p>Sweet, can you link me an example of this to copy/paste?</p>",
        "id": 480347924,
        "sender_full_name": "jan kili",
        "timestamp": 1730677684
    },
    {
        "content": "<p>For the others, everything needs to be hand rolled. Though it's totally doable for simple types like <code>u64</code>, <code>i64</code> and structs etc</p>",
        "id": 480347935,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730677690
    },
    {
        "content": "<p><a href=\"https://github.com/lukewilliamboswell/roc-ray/blob/main/Cargo.toml\">https://github.com/lukewilliamboswell/roc-ray/blob/main/Cargo.toml</a></p>",
        "id": 480347955,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730677712
    },
    {
        "content": "<p>Let me know if there's anything actionable I can help with <a href=\"#narrow/channel/316715-contributing/topic/Help.20upgrade.2Ftest.20purity.20inference/near/478391839\">https://roc.zulipchat.com/#narrow/channel/316715-contributing/topic/Help.20upgrade.2Ftest.20purity.20inference/near/478391839</a> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 480347961,
        "sender_full_name": "jan kili",
        "timestamp": 1730677721
    },
    {
        "content": "<p><a href=\"https://github.com/lukewilliamboswell/roc-ray/blob/main/Cargo.toml\">https://github.com/lukewilliamboswell/roc-ray/blob/main/Cargo.toml</a></p>\n<p>I've been spending most of my time lately in roc-ray... so that's all up to date. The purity-inference branch is the bleeding edge.<br>\nSweet, can you link me an example of this to copy/paste?</p>",
        "id": 480347997,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730677773
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> <a href=\"#narrow/channel/463736-bugs/topic/platform.20templates.20outdated.3F/near/480347961\">said</a>:</p>\n<blockquote>\n<p>Let me know if there's anything actionable I can help with <a href=\"#narrow/channel/316715-contributing/topic/Help.20upgrade.2Ftest.20purity.20inference/near/478391839\">https://roc.zulipchat.com/#narrow/channel/316715-contributing/topic/Help.20upgrade.2Ftest.20purity.20inference/near/478391839</a> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>My general thoughts on this is that without early return, <code>try</code> and purity-inference in the nightlies, it's going to be a challenge to get basic-cli upgraded. The examples lean very heavily on unwrapping Results. I've done the platform and the host, so it's just the examples now that need doing. It should only be an hour or so to do once everything else is ready.</p>",
        "id": 480348180,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730677932
    },
    {
        "content": "<p>Overwriting <code>roc-platform-template-rust/Cargo.toml</code> with <code>roc-ray/Cargo.toml</code> doesn't influence that <code>roc build.roc</code> error. Did you have a nontrivial patch in mind?<br>\n<a href=\"/user_uploads/22008/u2W0nLUFNo7HOnNdGfCzNmsL/Screen-Shot-2024-11-03-at-4.55.20-PM.png\">Screen Shot 2024-11-03 at 4.55.20 PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/u2W0nLUFNo7HOnNdGfCzNmsL/Screen-Shot-2024-11-03-at-4.55.20-PM.png\" title=\"Screen Shot 2024-11-03 at 4.55.20 PM.png\"><img data-original-dimensions=\"1920x1200\" src=\"/user_uploads/thumbnail/22008/u2W0nLUFNo7HOnNdGfCzNmsL/Screen-Shot-2024-11-03-at-4.55.20-PM.png/840x560.webp\"></a></div>",
        "id": 480348426,
        "sender_full_name": "jan kili",
        "timestamp": 1730678228
    },
    {
        "content": "<p>Sorry, I didn't mean copy the whole thing... I was just referring to this part</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"n\">roc_std</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/roc-lang/roc.git\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"n\">roc_std_heap</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/roc-lang/roc.git\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 480349123,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730678769
    },
    {
        "content": "<p>Still nope <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span><br>\n<a href=\"/user_uploads/22008/bTs57rDQMB2ZqY5JD2pSOpgN/Screen-Shot-2024-11-03-at-5.07.11-PM.png\">Screen Shot 2024-11-03 at 5.07.11 PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/bTs57rDQMB2ZqY5JD2pSOpgN/Screen-Shot-2024-11-03-at-5.07.11-PM.png\" title=\"Screen Shot 2024-11-03 at 5.07.11 PM.png\"><img data-original-dimensions=\"1920x1200\" src=\"/user_uploads/thumbnail/22008/bTs57rDQMB2ZqY5JD2pSOpgN/Screen-Shot-2024-11-03-at-5.07.11-PM.png/840x560.webp\"></a></div>",
        "id": 480349184,
        "sender_full_name": "jan kili",
        "timestamp": 1730678861
    },
    {
        "content": "<p>Currently the crate <code>roc_host</code> get's it's <code>roc_std</code> dependency from another crate in the same workspace (in the repo) but instead I think it's better to just point at the roc repo instead of vendoring it</p>",
        "id": 480349186,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730678864
    },
    {
        "content": "<p>Yeah, and then in the roc_host <code>Cargo.toml</code> you will need to use the workspace dependency</p>",
        "id": 480349233,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730678887
    },
    {
        "content": "<p>Or it is probably easier just to put that dep in the <code>crates/roc_host/Cargo.toml</code></p>",
        "id": 480349250,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730678912
    },
    {
        "content": "<p>Instead of the root workspace <code>Cargo.toml</code></p>",
        "id": 480349259,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730678926
    },
    {
        "content": "<p>We won't need the roc_std_heap dependency for the template</p>",
        "id": 480349283,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730678979
    },
    {
        "content": "<p>Still nope?<br>\n<a href=\"/user_uploads/22008/coxV_QPQtwFOJRz1IBv6PRIT/Screen-Shot-2024-11-03-at-5.09.48-PM.png\">Screen Shot 2024-11-03 at 5.09.48 PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/coxV_QPQtwFOJRz1IBv6PRIT/Screen-Shot-2024-11-03-at-5.09.48-PM.png\" title=\"Screen Shot 2024-11-03 at 5.09.48 PM.png\"><img data-original-dimensions=\"1920x1200\" src=\"/user_uploads/thumbnail/22008/coxV_QPQtwFOJRz1IBv6PRIT/Screen-Shot-2024-11-03-at-5.09.48-PM.png/840x560.webp\"></a></div>",
        "id": 480349335,
        "sender_full_name": "jan kili",
        "timestamp": 1730679005
    },
    {
        "content": "<p>Yay, the fix you just pushed yields a much later error!</p>\n<div class=\"codehilite\"><pre><span></span><code>jan@mackey roc-platform-template-rust % git pull\nremote: Enumerating objects: 24, done.\nremote: Counting objects: 100% (24/24), done.\nremote: Compressing objects: 100% (6/6), done.\nremote: Total 14 (delta 8), reused 14 (delta 8), pack-reused 0 (from 0)\nUnpacking objects: 100% (14/14), 2.85 KiB | 224.00 KiB/s, done.\nFrom https://github.com/lukewilliamboswell/roc-platform-template-rust\n   9e44526..399fc2d  main       -&gt; origin/main\nUpdating 9e44526..399fc2d\nFast-forward\n README.md                  |  4 ----\n build.roc                  |  7 +------\n bundle.sh                  | 24 ++++++++++++++++++++++++\n crates/roc_host/Cargo.toml |  2 +-\n glue.roc                   | 27 ---------------------------\n platform/Effect.roc        | 10 +---------\n platform/Stdout.roc        |  4 +---\n platform/main.roc          |  4 ++--\n 8 files changed, 30 insertions(+), 52 deletions(-)\n create mode 100644 bundle.sh\n delete mode 100644 glue.roc\njan@mackey roc-platform-template-rust % roc build.roc\nDownloading https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br\n    into /Users/jan/.cache/roc/packages\n\n[8.6 / 8.6 MB]\nBUILD INFO: Geting native target...\nBUILD INFO: Building cargo; mode: DEBUG for target MacosX64...\n    Updating crates.io index\n    Updating git repository `https://github.com/roc-lang/roc.git`\nwarning: skipping duplicate package `host` found at `/Users/jan/.cargo/git/checkouts/roc-f2007fde281427d6/69dd8d7/examples/glue/rust-platform`\nwarning: skipping duplicate package `host` found at `/Users/jan/.cargo/git/checkouts/roc-f2007fde281427d6/69dd8d7/examples/cli/false-interpreter/platform`\nwarning: skipping duplicate package `host` found at `/Users/jan/.cargo/git/checkouts/roc-f2007fde281427d6/69dd8d7/examples/platform-switching/rust-platform`\n  Downloaded arrayvec v0.7.6\n  Downloaded libc v0.2.150\n  Downloaded 2 crates (750.6 KB) in 0.42s\n   Compiling libc v0.2.150\n   Compiling static_assertions v1.1.0\n   Compiling arrayvec v0.7.6\n   Compiling roc_host v0.0.1 (/Users/jan/_code/_roc/roc-platform-template-rust/crates/roc_host)\n   Compiling roc_std v0.0.1 (https://github.com/roc-lang/roc.git#69dd8d77)\nerror[E0658]: labels on blocks are unstable\n   --&gt; /Users/jan/.cargo/git/checkouts/roc-f2007fde281427d6/69dd8d7/crates/roc_std/src/roc_str.rs:630:21\n    |\n630 |         let start = &#39;blk: {\n    |                     ^^^^\n    |\n    = note: see issue #48594 &lt;https://github.com/rust-lang/rust/issues/48594&gt; for more information\n\nerror[E0658]: labels on blocks are unstable\n   --&gt; /Users/jan/.cargo/git/checkouts/roc-f2007fde281427d6/69dd8d7/crates/roc_std/src/roc_str.rs:642:19\n    |\n642 |         let end = &#39;blk: {\n    |                   ^^^^\n    |\n    = note: see issue #48594 &lt;https://github.com/rust-lang/rust/issues/48594&gt; for more information\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `roc_std` due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nProgram exited with error:\n    (ErrBuildingRustTarget (CmdError (ExitCode -99)))\n\nTip: If you do not want to exit on this error, use `Task.mapErr` to handle the error.\nDocs for `Task.mapErr`: &lt;https://www.roc-lang.org/packages/basic-cli/0.15.0/Task#mapErr&gt;\njan@mackey roc-platform-template-rust %\n</code></pre></div>",
        "id": 480349936,
        "sender_full_name": "jan kili",
        "timestamp": 1730679706
    },
    {
        "content": "<p>No urgency on this - I'll take a look at your purity-inference work in roc-ray like you suggested via DM <span aria-label=\"dancing\" class=\"emoji emoji-1f57a\" role=\"img\" title=\"dancing\">:dancing:</span></p>\n<p>Update: I'll try again tomorrow to build the Roc compiler from source (on the purity-inference branch) on my other laptop running Fedora, cause this macbook is sad.</p>",
        "id": 480350012,
        "sender_full_name": "jan kili",
        "timestamp": 1730679786
    },
    {
        "content": "<p>Hey, does anyone know why might my <code>cargo build</code> be freezing at the <code>roc_host</code> build step of <code>roc-platform-template-rust</code> after trying to make some purity-inference updates? <a href=\"https://github.com/lukewilliamboswell/roc-platform-template-rust/pull/2/files\">https://github.com/lukewilliamboswell/roc-platform-template-rust/pull/2/files</a></p>\n<p>It's not just the <code>, branch = \"purity-inference\"</code> change in <code>Cargo.toml</code>, because the build succeeds if that's the only local change.</p>",
        "id": 480801834,
        "sender_full_name": "jan kili",
        "timestamp": 1730841613
    },
    {
        "content": "<p>What happens if you <code>cargo check</code>?</p>",
        "id": 480803206,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1730842298
    },
    {
        "content": "<p>The same:</p>\n<div class=\"codehilite\"><pre><span></span><code>[jan@framey roc-platform-template-rust]$ cargo check\n    Checking arrayvec v0.7.6\n    Checking static_assertions v1.1.0\n    Checking libc v0.2.150\n   Compiling roc_host v0.0.1 (/home/jan/_code/_roc/roc-platform-template-rust/crates/roc_host)\n    Checking roc_std v0.0.1 (https://github.com/roc-lang/roc.git?branch=purity-inference#2b8d9aa4)\n^C  Building [================&gt;           ] 7/11: roc_host(build)\n[jan@framey roc-platform-template-rust]$ git switch main\nSwitched to branch &#39;main&#39;\n[jan@framey roc-platform-template-rust]$ cargo check\n    Updating git repository `https://github.com/roc-lang/roc.git`\n     Locking 1 package to latest compatible version\n      Adding roc_std v0.0.1 (https://github.com/roc-lang/roc.git#544a5dcf)\n   Compiling roc_host v0.0.1 (/home/jan/_code/_roc/roc-platform-template-rust/crates/roc_host)\n    Checking roc_std v0.0.1 (https://github.com/roc-lang/roc.git#544a5dcf)\nwarning: roc_host@0.0.1: SUCCESSFULLY BUILT APP STUB DYNAMIC LIBRARY &quot;/home/jan/_code/_roc/roc-platform-template-rust/platform/libapp.so&quot;\n    Checking host v0.0.1 (/home/jan/_code/_roc/roc-platform-template-rust/crates/roc_host_lib)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 1.82s\n[jan@framey roc-platform-template-rust]$\n</code></pre></div>",
        "id": 480824238,
        "sender_full_name": "jan kili",
        "timestamp": 1730855026
    }
]