[
    {
        "content": "<p>Hi!, I have created for myself <strong>rocup</strong> (<a href=\"https://github.com/appblue/rocup\">https://github.com/appblue/rocup</a>) simple tool for installing the latest nightly build version of the compiler and making it available on the <code>PATH</code> by symlinking to the /usr/local/bin (usually available in the path on U*ix systems).</p>\n<p>The tool keeps all previously downloaded nightly versions, so subsequent executions allow for selection of one of the previous versions.</p>\n<p>Hope it will be useful for someone :)</p>",
        "id": 439097029,
        "sender_full_name": "Krzysztof Kielak",
        "timestamp": 1715891798
    },
    {
        "content": "<p>BTW, there was a problem with the installation procedure - it should be fixed now</p>",
        "id": 439106121,
        "sender_full_name": "Krzysztof Kielak",
        "timestamp": 1715895515
    },
    {
        "content": "<p>This is very cool, thank you for sharing!</p>",
        "id": 439110172,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1715897402
    },
    {
        "content": "<p>Yes, very nicely done! Also, respect for keeping the name consistent with expectations. I would have named it <code>rocon</code>, for the memes at the cost of confusing every newcomer.<span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 439154903,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1715925457
    },
    {
        "content": "<p>nice! <span class=\"user-mention\" data-user-id=\"719536\">@Krzysztof Kielak</span> do you have any interest in integrating this into <code>roc</code> itself? We <a href=\"#narrow/stream/304641-ideas/topic/Roc.20version.20management/near/324964346\">talked about that</a> awhile back - it's something I've never seen a language do, but I think it would be awesome because (just like with testing and formatting and package management) it's something every language wants, so why not ship it with the <code>roc</code> CLI itself? <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 439158526,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1715927185
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> I would love to work with the team on that! I will review past conversations and \"rust-off\" my Rust skills :)</p>",
        "id": 439168521,
        "sender_full_name": "Krzysztof Kielak",
        "timestamp": 1715931418
    },
    {
        "content": "<p>awesome! Feel free to start a thread in <a class=\"stream\" data-stream-id=\"316715\" href=\"/#narrow/stream/316715-contributing\">#contributing</a> if you have any questions about any part of it, including Rust questiosn! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 439170208,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1715932173
    },
    {
        "content": "<p>So funny how I finally got to do the same just now before reading this <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> <br>\n<a href=\"https://github.com/rgripper/roc-installer/blob/main/install.sh\">https://github.com/rgripper/roc-installer/blob/main/install.sh</a></p>\n<div class=\"codehilite\"><pre><span></span><code>curl -fSL https://raw.githubusercontent.com/rgripper/roc-installer/main/install.sh | bash -\n</code></pre></div>\n<p>Is there a reason for <code>sudo</code>s in your script <span class=\"user-mention\" data-user-id=\"719536\">@Krzysztof Kielak</span> ? (I'm not a shell expert)</p>\n<p>I personally absolutely for including such a one-liner install script instead of what is there now (looking at how tools like <code>pnpm</code> did it). For someone who past the \"play with roc on the website\" stage, but can't be bothered manually running it every time we need to update it (or for anyone who periodically corrupts their WSL distro). OFC that's until we get the proper self-install.</p>",
        "id": 439446915,
        "sender_full_name": "Vladimir Zotov",
        "timestamp": 1716133210
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"625587\">@Vladimir Zotov</span> I'm using <code>sudo</code>, so I can put the links into <code>/usr/local/bin</code> directory. This is one time operation, as we are dealing with double indirection:</p>\n<p><code>/usr/local/bin/roc</code> -&gt; <code>~/.rocup/roc/roc</code> and <code>~/.rocup/roc</code> symlink is linking to currently selected nightly build directory in the <code>~/.rocup</code> directory</p>\n<p>If the links are already present the only modifications happens in <code>~/.rocup</code> directory. The other option would be to add <code>~/.rocup/roc</code> directory to the <code>PATH</code> ... as you decided to do it.</p>",
        "id": 439452569,
        "sender_full_name": "Krzysztof Kielak",
        "timestamp": 1716138740
    },
    {
        "content": "<p>BTW, I have started digging around to add this option to <code>roc</code>CLI tool, as suggested by <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> - will keep you posted</p>",
        "id": 439452837,
        "sender_full_name": "Krzysztof Kielak",
        "timestamp": 1716138993
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281383\">Richard Feldman</span> <a href=\"#narrow/stream/397893-announcements/topic/rocup.20-.20compiler.20installation.20management.20tool/near/439158526\">said</a>:</p>\n<blockquote>\n<p>it's something I've never seen a language do</p>\n</blockquote>\n<p>This has started to appear elsewhere recently. Definitely both <code>deno</code> and <code>bun</code> have upgrade commands that IMO work really nicely (but they are designed to track the latest version and are not multi-version configurers like <code>nvm</code>). Julia has <code>julia +1.10</code> for example to run Julia 1.10, like the proposed <code>roc use ...</code>, with a seperate <code>juliaup</code> CLI utility to actually install and upgrade versions (it works by making the default <code>julia</code> in PATH a simple program that looks for the <code>+x.y</code> setting and dispatches to the \"real\" <code>julia</code> binary as appropriate).</p>",
        "id": 439808490,
        "sender_full_name": "Andy Ferris",
        "timestamp": 1716295379
    },
    {
        "content": "<p>I love having a good upgrade tool integrated! One thing that would be really cool as well (at some indeterminate point in the future), would be to have it configurable in a way that's shareable with your coworkers and co-contributors (not to mention your CI pipeline). If the upgrading mechanism is part of the <code>roc</code> binary, then maybe there's an officially sanctioned place to store that kind of information too. I don't know if there are plans to have something like a <code>roc.toml</code> configuration file where that might live.</p>",
        "id": 439832373,
        "sender_full_name": "Kasper Møller Andersen",
        "timestamp": 1716302245
    },
    {
        "content": "<p>We planned to put version info in the file with the app header, so people can easily share single file scripts</p>",
        "id": 439832787,
        "sender_full_name": "Anton",
        "timestamp": 1716302391
    },
    {
        "content": "<p>And then another mechanism to help your <code>roc</code> binary pull the correct version from some unofficial repository (in case your company wants hermetic builds, or you're generally not allowed to pull from the internet, but you can pull from a local JFrog repo). The fact that the Elm binaries basically require Internet access to build has been quite a pain for us where I work for example <span aria-label=\"face with diagonal mouth\" class=\"emoji emoji-1fae4\" role=\"img\" title=\"face with diagonal mouth\">:face_with_diagonal_mouth:</span></p>",
        "id": 439833448,
        "sender_full_name": "Kasper Møller Andersen",
        "timestamp": 1716302550
    },
    {
        "content": "<p>yeah it’s an explicit goal to never have a roc.toml or anything like that - it should always be possible to give someone a single .roc file that specifies both all the code and also all the dependencies and metadata! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 439851924,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1716307758
    },
    {
        "content": "<p>Interesting observation: the tool <code>juliaup</code> for managing installation of Julia programming language is written in Rust ...</p>",
        "id": 440061875,
        "sender_full_name": "Krzysztof Kielak",
        "timestamp": 1716373879
    },
    {
        "content": "<p>Yeah, Julia's JIT takes a little while to spin up, so it's not suitable for short running scripts, plus there's no way to bundle a Julia script into a standalone executable without including the entire Julia compiler yet. However most of Julia itself is actually written in Julia, whereas Roc's compiler is mostly Rust <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> Glad people pick the best tool for the job instead of insisting on self hosting everything <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 440079342,
        "sender_full_name": "Hannes",
        "timestamp": 1716380476
    },
    {
        "content": "<p>hello I just ran rocup and found an error message that was already solved in this issue <a href=\"https://github.com/roc-lang/roc/issues/6053\">https://github.com/roc-lang/roc/issues/6053</a> but not solved in my case. I feel like there's a version mismatch but I don't know where to go.</p>\n<div class=\"codehilite\"><pre><span></span><code>roc dev\ndyld[4825]: Library not loaded: /opt/homebrew/opt/z3/lib/libz3.4.12.dylib\n  Referenced from: &lt;272B98B2-FD66-358E-BE02-A5B8B0A20C95&gt; /Users/viniciusataide/.bin/roc_nightly-macos_apple_silicon-2024-01-08-b58121ff06f/roc\n  Reason: tried: &#39;/opt/homebrew/opt/z3/lib/libz3.4.12.dylib\n</code></pre></div>\n<p>and the z3 version installed by brew is </p>\n<div class=\"codehilite\"><pre><span></span><code>libz3.4.13.0.0.dylib\n</code></pre></div>",
        "id": 443296147,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1717766092
    },
    {
        "content": "<p>maybe downgrade my brew z3 version installation?</p>",
        "id": 443296264,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1717766129
    },
    {
        "content": "<p>why is it looking for a specific version? maybe my mistake was using rocup with an existing manual roc installation. would that be it?</p>",
        "id": 443296322,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1717766155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"679486\">@Vinicius Ataide</span> , unfortunately <code>rocup</code> is not managing any dependencies for <code>roc</code> compiler - only downloading the latest version of the compiler available, or potentially activating one of the already downloaded/installed old versions</p>",
        "id": 443296625,
        "sender_full_name": "Krzysztof Kielak",
        "timestamp": 1717766270
    },
    {
        "content": "<p>oh makes sense. so what would I do? downgrade z3?</p>",
        "id": 443296850,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1717766342
    },
    {
        "content": "<p>I wanna use the latest version and don't worry about making support for that I know I'm at the bleeding edge and wanna learn</p>",
        "id": 443296928,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1717766373
    },
    {
        "content": "<p>sometimes <code>brew</code> allows for different versions to coexist .. maybe that's an option?</p>",
        "id": 443297464,
        "sender_full_name": "Krzysztof Kielak",
        "timestamp": 1717766546
    },
    {
        "content": "<p>in my case I'm still on <code>1.2.11</code> for <code>libz</code></p>\n<div class=\"codehilite\"><pre><span></span><code>~ % rocup\n.. apple silicon Mac detected\n.. downloading latest release of the Roc compiler\n.. extracting: roc_nightly-macos_apple_silicon-latest.tar.gz\n.. trying to install nth latest local version (n = 1)\n\n.. list locally available versions - with selecion marked &#39;-&gt;&#39;\n   -----------------------------------------------------------\n -&gt;  .rocup/roc_nightly-macos_apple_silicon-2024-06-07-b3c28ebe66b/roc\n     .rocup/roc_nightly-macos_apple_silicon-2024-06-01-fa526c99ece/roc\n     .rocup/roc_nightly-macos_apple_silicon-2024-05-27-9fcd5a3fe88/roc\n     .rocup/roc_nightly-macos_apple_silicon-2024-05-22-33075285b72/roc\n     .rocup/roc_nightly-macos_apple_silicon-2024-05-21-45a7e448dd4/roc\n     .rocup/roc_nightly-macos_apple_silicon-2024-05-20-7e1a82f048f/roc\n     .rocup/roc_nightly-macos_apple_silicon-2024-05-13-e5ea6dc4617/roc\n     .rocup/roc_nightly-macos_apple_silicon-2024-05-11-dd9a6ff2e4a/roc\n\n.. creating local symlink to selected downloaded version\n.. installation complete\n.. .. rocup tool is now available in /usr/local/bin/rocup\n.. .. roc compiler is now available in /usr/local/bin/roc\n.. .. roc language server is now available in /usr/local/bin/roc_language_server\n.. .. roc compiler version: roc nightly pre-release, built from commit b3c28ebe66b on Fri Jun  7 09:11:53 UTC 2024\n\n~ % otool -L /usr/local/bin/roc\n/usr/local/bin/roc:\n    /usr/lib/libffi.dylib (compatibility version 1.0.0, current version 30.0.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1311.100.3)\n    /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.11)\n    /opt/homebrew/opt/zstd/lib/libzstd.1.dylib (compatibility version 1.0.0, current version 1.5.6)\n    /usr/lib/libncurses.5.4.dylib (compatibility version 5.4.0, current version 5.4.0)\n    /usr/lib/libxml2.2.dylib (compatibility version 10.0.0, current version 10.9.0)\n    /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 1300.23.0)\n    /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration (compatibility version 1.0.0, current version 1163.100.19)\n    /System/Library/Frameworks/Security.framework/Versions/A/Security (compatibility version 1.0.0, current version 60158.100.133)\n    /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1858.112.0)\n    /usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0)\n</code></pre></div>",
        "id": 443298128,
        "sender_full_name": "Krzysztof Kielak",
        "timestamp": 1717766752
    },
    {
        "content": "<p>yeah I'm trying to install an older z3 but it's hard haha <a href=\"https://stackoverflow.com/questions/3987683/homebrew-install-specific-version-of-formula\">https://stackoverflow.com/questions/3987683/homebrew-install-specific-version-of-formula</a></p>",
        "id": 443298385,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1717766826
    },
    {
        "content": "<p>I don't care about having a newer z3 installed</p>",
        "id": 443298673,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1717766928
    },
    {
        "content": "<p>There is a workaround that is used in CI <a href=\"https://github.com/roc-lang/roc/blob/main/.github/workflows/nightly_macos_apple_silicon.yml#L18\">https://github.com/roc-lang/roc/blob/main/.github/workflows/nightly_macos_apple_silicon.yml#L18</a></p>",
        "id": 443300368,
        "sender_full_name": "JRI98",
        "timestamp": 1717767514
    },
    {
        "content": "<p>It is probably enough to run <code>export LIBRARY_PATH=/opt/homebrew/Cellar/zstd/1.5.6/lib</code></p>",
        "id": 443300499,
        "sender_full_name": "JRI98",
        "timestamp": 1717767566
    },
    {
        "content": "<p>will try that thanks</p>",
        "id": 443300634,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1717767611
    },
    {
        "content": "<p>same error but this is a good clue</p>",
        "id": 443301041,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1717767755
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"639239\">JRI98</span> <a href=\"#narrow/stream/397893-announcements/topic/rocup.20-.20compiler.20installation.20management.20tool/near/443300499\">said</a>:</p>\n<blockquote>\n<p>It is probably enough to run <code>export LIBRARY_PATH=/opt/homebrew/Cellar/zstd/1.5.6/lib</code></p>\n</blockquote>\n<p>where did you get the clue about this should be the correct version number</p>",
        "id": 443304118,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1717768712
    },
    {
        "content": "<p>From the file above</p>",
        "id": 443327898,
        "sender_full_name": "JRI98",
        "timestamp": 1717777134
    }
]