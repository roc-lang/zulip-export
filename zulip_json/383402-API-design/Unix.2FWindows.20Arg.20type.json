[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461444\">Sam Mohr</span> <a href=\"#narrow/channel/383402-API-design/topic/Lossy.20unicode.20conversion.20builtins/near/489896475\">said</a>:</p>\n<blockquote>\n<p>Which means creating an <code>Arg := [Unix (List U8), Windows (List U16)]</code> type and just crashing on <code>Windows</code> for now. Once these are implemented, it should be a simple change to properly support 16-bit encoded strings in <code>basic-cli</code> and Weaver</p>\n</blockquote>\n<p>Just wanting to clarify here <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> <span class=\"user-mention\" data-user-id=\"461444\">@Sam Mohr</span>  -- I think we want an alias, not an opaque type right?</p>",
        "id": 490068871,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734652687
    },
    {
        "content": "<p>Is another way to say that \"structural\"? like non-opaque</p>",
        "id": 490068903,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734652709
    },
    {
        "content": "<p>I was thinking opaque because I want it to eventually be compatible with static dispatch</p>",
        "id": 490068931,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734652734
    },
    {
        "content": "<p>Which only works for custom types</p>",
        "id": 490068936,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734652741
    },
    {
        "content": "<p>That was the whole <code>Thing.to_raw_os_str()</code> thing right?</p>",
        "id": 490069038,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734652803
    },
    {
        "content": "<p>Yep</p>",
        "id": 490069080,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734652814
    },
    {
        "content": "<p>Or the <code>arg.display() : Str</code> thing</p>",
        "id": 490069115,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734652828
    },
    {
        "content": "<p>7 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"383402\" href=\"/#narrow/channel/383402-API-design/topic/Lossy.20unicode.20conversion.20builtins\">#API design &gt; Lossy unicode conversion builtins</a> by <span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span>.</p>",
        "id": 490069249,
        "sender_full_name": "Notification Bot",
        "timestamp": 1734652905
    },
    {
        "content": "<p>yeah I think this should be opaque</p>",
        "id": 490069388,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734652955
    },
    {
        "content": "<p>Link to beginning of original discussion in basic-cli <a class=\"message-link\" href=\"/#narrow/channel/316715-contributing/topic/basic-cli.20purity.20inference/near/489552963\">#contributing &gt; basic-cli purity inference @ ðŸ’¬</a></p>",
        "id": 490070932,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734653798
    },
    {
        "content": "<p>Did we decide on replacement for <code>display : Arg -&gt; Str</code> or crash?</p>",
        "id": 490070970,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734653826
    },
    {
        "content": "<p>replacement</p>",
        "id": 490071111,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734653914
    },
    {
        "content": "<p>Ofc... hence the whole <code>Str.from_utf8_lossy : List U8 -&gt; Str</code> functions <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 490072896,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734654991
    },
    {
        "content": "<p>I think the plan is for Weaver just to <code>crash</code> in the meantime until we got those</p>",
        "id": 490072956,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734655043
    },
    {
        "content": "<p>Yep</p>",
        "id": 490072968,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734655052
    },
    {
        "content": "<p>And basic-cli with <code>Arg.display</code> too</p>",
        "id": 490073007,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734655078
    },
    {
        "content": "<p>Ok, I think we've got a draft</p>\n<div class=\"codehilite\" data-code-language=\"Perl\"><pre><span></span><code><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">    </span><span class=\"n\">Arg</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">to_os_raw</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">display</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\"># os_str's are not necessarily valid utf-8 or utf-16</span>\n<span class=\"c1\"># so we store as raw bytes internally to avoid</span>\n<span class=\"c1\"># common mistakes</span>\n<span class=\"n\">Arg</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">    </span><span class=\"n\">Unix</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">List</span><span class=\"w\"> </span><span class=\"n\">U8</span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"n\">Windows</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">List</span><span class=\"w\"> </span><span class=\"n\">U16</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\">## Unwrap the raw bytes for decoding, typically this will be</span>\n<span class=\"c1\">## consumed by a package and not an end user</span>\n<span class=\"n\">to_os_raw</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nn\">Arg</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Unix</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">List</span><span class=\"w\"> </span><span class=\"n\">U8</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">Windows</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">List</span><span class=\"w\"> </span><span class=\"n\">U16</span><span class=\"p\">)]</span>\n<span class=\"n\">to_os_raw</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">\\</span><span class=\"nv\">@Arg</span><span class=\"w\"> </span><span class=\"nn\">inner</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">inner</span>\n\n<span class=\"c1\">## Convert an Arg to a Utf8 string for display purposes</span>\n<span class=\"c1\">##</span>\n<span class=\"n\">display</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nn\">Arg</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">Str</span>\n<span class=\"n\">display</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">\\</span><span class=\"nv\">@Arg</span><span class=\"w\"> </span><span class=\"nn\">arg</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">arg</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">        </span><span class=\"n\">Unix</span><span class=\"w\"> </span><span class=\"nn\">maybe_utf8</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">            </span><span class=\"c1\"># TODO replace with Str.from_utf8_lossy : List U8 -&gt; Str</span>\n<span class=\"w\">            </span><span class=\"c1\"># see https://github.com/roc-lang/roc/issues/7390</span>\n<span class=\"w\">            </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">Str</span><span class=\"o\">.</span><span class=\"n\">fromUtf8</span><span class=\"w\"> </span><span class=\"n\">maybe_utf8</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">                </span><span class=\"n\">Ok</span><span class=\"w\"> </span><span class=\"nn\">str</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">str</span>\n<span class=\"w\">                </span><span class=\"n\">Err</span><span class=\"w\"> </span><span class=\"nn\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"w\"> </span><span class=\"s\">\"tried to display invalid utf-8\"</span>\n\n<span class=\"w\">        </span><span class=\"n\">Windows</span><span class=\"w\"> </span><span class=\"nn\">_maybe_utf16</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">            </span><span class=\"c1\"># TODO replace with Str.from_utf16_lossy : List U16 -&gt; Str</span>\n<span class=\"w\">            </span><span class=\"c1\"># see https://github.com/roc-lang/roc/issues/7390</span>\n<span class=\"w\">            </span><span class=\"n\">crash</span><span class=\"w\"> </span><span class=\"s\">\"display for utf-16 not yet supported\"</span>\n</code></pre></div>",
        "id": 490073623,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734655457
    },
    {
        "content": "<p>Looks good to me! I think the suggestion for naming on <code>to_os_raw</code> was just <code>to_raw</code>, but either works for me</p>",
        "id": 490073700,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734655509
    },
    {
        "content": "<p>It's a nod to <a href=\"https://doc.rust-lang.org/std/ffi/struct.OsStr.html\">OsStr</a></p>",
        "id": 490073822,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734655572
    },
    {
        "content": "<p>Yep</p>",
        "id": 490073842,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734655583
    },
    {
        "content": "<p>Call me crazy... but I'm going to try and make this a package and see if that works. I'm assuming we can have the platform re-export the type so app authors don't need to import the package also just to work with it. But it could mean that Weaver could also use the same opaque type.</p>",
        "id": 490074101,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734655780
    },
    {
        "content": "<p>I'll experiment for a little to see if it works</p>",
        "id": 490074200,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734655828
    },
    {
        "content": "<p>That would probably be a better way to go about this, we would just need to get used to managing an upstream library from <code>basic-cli</code></p>",
        "id": 490074657,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734656104
    },
    {
        "content": "<p>Aka we don't have semver yet, so I don't know how this interaction will work</p>",
        "id": 490074692,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734656133
    },
    {
        "content": "<p>Yeah, it doesn't work I think. Looks like something hangs with <code>roc check</code> and I'm not keen to dig too much rn.. I'd rather get this into basic-cli</p>",
        "id": 490074782,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734656167
    },
    {
        "content": "<p>This ArgOs / OsStr / OsStrExt thing is a deep rabbit hole. Just digging through the rust API's for this in <code>std::env</code> and <code>std::os::windows</code> etc and there's a lot here to get it right</p>",
        "id": 490081938,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734660927
    },
    {
        "content": "<p>Really validates for me this is the right direction we're heading in... but slowing down an intial implementation</p>",
        "id": 490081970,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734660958
    },
    {
        "content": "<p>Found the answers I'm looking for in <a href=\"https://docs.rs/widestring/latest/widestring/\">https://docs.rs/widestring/latest/widestring/</a></p>",
        "id": 490083808,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734662309
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/383402-API-design/topic/Unix.2FWindows.20Arg.20type/near/490081938\">said</a>:</p>\n<blockquote>\n<p>This ArgOs / OsStr / OsStrExt thing is a deep rabbit hole. Just digging through the rust API's for this in <code>std::env</code> and <code>std::os::windows</code> etc and there's a lot here to get it right</p>\n</blockquote>\n<p>Don't forget CowStr</p>",
        "id": 490086396,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1734664424
    },
    {
        "content": "<p>Which I was just reminded of, looking at our html rendering code</p>",
        "id": 490086439,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1734664442
    },
    {
        "content": "<p>I've got something drafted... <a href=\"https://github.com/roc-lang/basic-cli/pull/293\">https://github.com/roc-lang/basic-cli/pull/293</a></p>\n<p>It's working on macos, but not linux for some reason. Just investigating</p>",
        "id": 490087887,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734665509
    }
]