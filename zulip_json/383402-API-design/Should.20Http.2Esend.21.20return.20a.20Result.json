[
    {
        "content": "<p>With the last release of basic-cli, the signature from <code>Http.send!</code> changed from <a href=\"https://www.roc-lang.org/packages/basic-cli/0.17.0/Http#send\">Request =&gt; Result Response [HttpErr Err]</a> to <a href=\"https://www.roc-lang.org/packages/basic-cli/0.18.0/Http#send!\">Request =&gt; Response</a> ( I changed the old signature to use purity inference for better comparison).</p>\n<p><a href=\"https://github.com/roc-lang/basic-cli/pull/288\">Here is the related PR.</a></p>\n<p>I could not find any discussion about this.</p>\n<p>The old API distinct between an error that happens on the other computer (the webserver) and on your own computer. When the webserver returns an 500er, the function returns <code>Ok Result{status: 500,...}</code>. When the request can not be send (for example, there is no internet connection or the url can not be resolved), it returns an <code>Err (HttpErr Err)</code>.</p>\n<p>The new API always returns a <code>Response</code>. If a local error happens, it generates an Response object with the status <code>500</code> and uses the body field for the error message.</p>\n<p>I liked the old API better. I think the <code>Response</code> should only represent the data, that is returned from the webserver. If an error happens on your own computer, it is not a Response, it is an error.</p>\n<p>Would you consider changing it back to the old behavior?</p>",
        "id": 491960064,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1736076946
    },
    {
        "content": "<p>I agree, I think it should return a result</p>",
        "id": 491972243,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1736088221
    },
    {
        "content": "<p>I feel like the change was a mistake</p>",
        "id": 491973490,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1736089273
    },
    {
        "content": "<p>Probably unified with some basic webserver apis</p>",
        "id": 491973795,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1736089528
    },
    {
        "content": "<p>Anyway, almost certainly should return a result</p>",
        "id": 491973812,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1736089544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> should be able to provide some good info here</p>",
        "id": 492077493,
        "sender_full_name": "Anton",
        "timestamp": 1736159565
    },
    {
        "content": "<p>I dont think it was a deliberate decision, just when unifying the API I must have overlooked it. Agree it makes more sense and we should change it back.</p>",
        "id": 492084469,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736162276
    },
    {
        "content": "<p>Implemented in <a href=\"https://github.com/roc-lang/basic-cli/pull/309\">https://github.com/roc-lang/basic-cli/pull/309</a></p>\n<p>It's just one commit built on top of the latest breaking change... so the PR looks much bigger than it really is.</p>",
        "id": 492647832,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736406362
    },
    {
        "content": "<p>Needs some QA/testing at some point.</p>",
        "id": 492647938,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736406394
    },
    {
        "content": "<p>With this (and snake builtins) merged, is there any plan for a v0.19.0 on the near horizon?</p>",
        "id": 492970429,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1736522085
    },
    {
        "content": "<p>We're making a whole lot of breaking changes soon with snake_case builtins, PNC syntax, and more</p>",
        "id": 492970720,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1736522163
    },
    {
        "content": "<p>Once that drops, yes</p>",
        "id": 492970748,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1736522170
    },
    {
        "content": "<p>Before that can happen, we want to finish with the easy breaking syntax changes</p>",
        "id": 492970800,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1736522186
    },
    {
        "content": "<p>Aka <code>${interpolation}</code> and <code>|| x + 123</code></p>",
        "id": 492970857,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1736522203
    },
    {
        "content": "<p>Sweet, makes sense. <span aria-label=\"working on it\" class=\"emoji emoji-1f6e0\" role=\"img\" title=\"working on it\">:working_on_it:</span></p>",
        "id": 492971133,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1736522286
    }
]