[
    {
        "content": "<p>splitting this off from <a href=\"#narrow/stream/304641-ideas/topic/.E2.9C.94.20randomness.20in.20Task\">https://roc.zulipchat.com/#narrow/stream/304641-ideas/topic/.E2.9C.94.20randomness.20in.20Task</a> as a note about an API design idea in the future where we have module params</p>",
        "id": 411225534,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1704387189
    },
    {
        "content": "<p>in that world, we can have a randomness package with two modules:</p>\n<ul>\n<li><code>Gen</code>, which doesn't have any module params, and which describes everything in terms of generators and seeds - e.g. <code>Gen.u16 1 1000</code> might give you back a <code>Gen U16</code> that generates <code>U16</code>s between 1 and 1000</li>\n<li><code>Random</code>, which takes a module param of <code>secureSeed : Task U64 *</code> that platforms must provide (it should provide high-quality randomness, e.g. from <code>/dev/random</code>), and which offers task-based randomness - e.g. <code>Random.generate : Gen a -&gt; Task a *</code>, and then also convenience functions like <code>Random.u16 1 1000</code> which gives you back a <code>Task U16 *</code> that you can run without providing a seed (because the task will automatically go ask the platform for a seed)</li>\n</ul>",
        "id": 411226205,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1704387452
    },
    {
        "content": "<p>this solves the problem of \"chaining together a mix of interleaved <code>Gen</code>s and <code>Task</code>s does not work nicely\" by giving <code>Gen</code> a way to be wrapped in <code>Task</code></p>",
        "id": 411226346,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1704387510
    },
    {
        "content": "<p>also it means beginners who don't necessarily want to use <code>Gen</code> can just use the <code>Random.u16</code> convenience functions (which are slower, because they have to go to the OS each time to get randomness, and also they require a <code>Task</code>, and also they are not reproducible using a <code>Seed</code> - all of which are reasons to learn <code>Gen</code> later!) because at first they probably know how tasks work and just want to get a random number or something.</p>",
        "id": 411226610,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1704387616
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"569850\">@Fletch Canny</span> since I saw you <a href=\"#narrow/stream/231634-beginners/topic/Tail.20call.20optimization.20with.20monadic.20interfaces/near/410950264\">mentioned</a> you've been porting a randomness library from Elm!</p>",
        "id": 411226615,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1704387617
    }
]