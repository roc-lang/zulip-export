[
    {
        "content": "<p>Day 5 <a href=\"https://github.com/mulias/roctoberfest/blob/main/advent_2022/day_05/main.roc\">https://github.com/mulias/roctoberfest/blob/main/advent_2022/day_05/main.roc</a></p>\n<ul>\n<li>This is one of those puzzles where parsing the full input is foolish because it's complicated and easy to hard code, but I did it anyways. I had previously written this parser in my own parser language so I already knew the shape of the thing, but I did have to implement 2d matrix transpose to get the data in the format I wanted.</li>\n<li>Ended up writing an <code>orCrash</code> helper,  dealing with <code>Err</code> values as localized fatal errors is just easier for this kind of thing.</li>\n<li><a href=\"https://github.com/mulias/roctoberfest/commit/6ef1ddd39d30e3be2a3a7f7db4f7fc7f8f6a2bb3\">This commit</a> prints the solution with <code>roc run</code>, prints nothing with <code>roc dev</code> and seg faults with <code>roc test</code>. The seg fault is fixed by <a href=\"https://github.com/mulias/roctoberfest/commit/fab95c169017172b99c724c8f906e821d6f7d994\">this commit</a>, so it seems to be from trying to use <code>dbg</code> on a struct containing a list of structs and a dict.</li>\n</ul>",
        "id": 395053465,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1696515280
    }
]