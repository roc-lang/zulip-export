[
    {
        "content": "<p>Whoa! Either I don't understand how Zulip works or Roctoberfest is a smash hit!<br>\n<a href=\"/user_uploads/22008/kt2QXh5HnvMUWo4e602nYjGz/Screen-Shot-2022-10-01-at-8.17.59-AM.png\">Screen-Shot-2022-10-01-at-8.17.59-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/kt2QXh5HnvMUWo4e602nYjGz/Screen-Shot-2022-10-01-at-8.17.59-AM.png\" title=\"Screen-Shot-2022-10-01-at-8.17.59-AM.png\"><img src=\"/user_uploads/22008/kt2QXh5HnvMUWo4e602nYjGz/Screen-Shot-2022-10-01-at-8.17.59-AM.png\"></a></div>",
        "id": 301827777,
        "sender_full_name": "jan kili",
        "timestamp": 1664633961
    },
    {
        "content": "<p>Either way, it beginssssssssssss <span aria-label=\"nerd\" class=\"emoji emoji-1f913\" role=\"img\" title=\"nerd\">:nerd:</span></p>",
        "id": 301827814,
        "sender_full_name": "jan kili",
        "timestamp": 1664633985
    },
    {
        "content": "<p>I invited everyone to the stream because it is easy to miss a new stream otherwise.</p>",
        "id": 301827972,
        "sender_full_name": "Anton",
        "timestamp": 1664634048
    },
    {
        "content": "<p>Uuuh?</p>\n<div class=\"codehilite\"><pre><span></span><code>This True tag has the type:\n\n    [True]a\n\nBut count needs its 2nd argument to be:\n\n    Bool\n</code></pre></div>\n<p>for reference, the signature is <code>count : List a, a -&gt; Nat</code>, which I'm using to count the number of depth increases in example one.<br>\nThe error message makes me assume that <code>True</code> is interpreted as a closed single tag? Do I need to manually import <code>True</code>?</p>",
        "id": 301977333,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1664748321
    },
    {
        "content": "<p>I think that you need to say explicitly <code>Bool.True</code></p>",
        "id": 301977437,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1664748418
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>I am trying to parse a qualified name here:\n\n27â”‚      |&gt; count Bool.True\n                           ^\n\nThis looks like a qualified tag name to me, but tags cannot be\nqualified! Maybe you wanted a qualified name, something like\nJson.Decode.string?\n</code></pre></div>",
        "id": 301977463,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1664748460
    },
    {
        "content": "<p>So this was a recent change where they made bools into opaque types. Should be <code>True</code> to <code>Bool.true</code></p>",
        "id": 301977525,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664748497
    },
    {
        "content": "<p>Lowercase T in the second example</p>",
        "id": 301977673,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664748527
    },
    {
        "content": "<p>that works. I remember seeing somewhere that <code>true</code> was lowercase, but using it without prefix didn't work so I defaulted to the syntax mentioned in the current <a href=\"https://www.roc-lang.org/builtins/Bool\">docs</a><br>\nIt also feels a bit strange to have user-defined tags be upper camelcase, but not Bool values. although I gotta say that roc is not the only language that does that, so <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 301977801,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1664748675
    },
    {
        "content": "<p>So internally, there is a statement in the Bool module that is essentially:</p>\n<div class=\"codehilite\"><pre><span></span><code>Export true\n\ntrue = True\n</code></pre></div>\n<p>Once save as a variable, it is no longer capatilized because variable must start with a lowercase letter.</p>",
        "id": 301977937,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664748807
    },
    {
        "content": "<p>But yeah, i get the confusion</p>",
        "id": 301978009,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664748869
    },
    {
        "content": "<p>fair, that's consistent, just a bit confusing coming from Elm</p>",
        "id": 301978443,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1664749328
    },
    {
        "content": "<p>might be something the compiler could drop a hint about to prevent some headscratching</p>",
        "id": 301978481,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1664749372
    },
    {
        "content": "<p>oops, yeah I need to update the tutorial to explain this <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 301978627,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1664749537
    },
    {
        "content": "<p>tl;dr use <code>Bool.true</code> and <code>Bool.false</code> instead of <code>True</code> and <code>False</code> and everything should work out!</p>",
        "id": 301978644,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1664749561
    },
    {
        "content": "<p>Unlike what the doc says, <code>Str.graphemes</code> does not exist <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 302122043,
        "sender_full_name": "Shritesh Bhattarai",
        "timestamp": 1664821529
    },
    {
        "content": "<p>Ran into this too. Can workaround it using <code>toUtf8</code> for simple stuff but it would be great to have that function.</p>",
        "id": 302164046,
        "sender_full_name": "Mike Kalvas",
        "timestamp": 1664838383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"452038\">@Shritesh Bhattarai</span> where is <code>Str.graphemes</code> mentioned?</p>",
        "id": 302234061,
        "sender_full_name": "Anton",
        "timestamp": 1664880635
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/blob/f6c981294a8389b0583d9b81813fbb44b581f782/crates/compiler/builtins/roc/Str.roc#L157\">https://github.com/roc-lang/roc/blob/f6c981294a8389b0583d9b81813fbb44b581f782/crates/compiler/builtins/roc/Str.roc#L157</a></p>",
        "id": 302235285,
        "sender_full_name": "Ghislain",
        "timestamp": 1664881122
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"550485\">Mike Kalvas</span> <a href=\"#narrow/stream/347488-roctoberfest/topic/Random/near/302164046\">said</a>:</p>\n<blockquote>\n<p>Ran into this too. Can workaround it using <code>toUtf8</code> for simple stuff but it would be great to have that function.</p>\n</blockquote>\n<p>You could use <code>toScalars</code> as well. It returns a <code>List U32</code> where each element represents the unicode code point of a character</p>",
        "id": 302397563,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1664953285
    },
    {
        "content": "<p>FYI, <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> just added positional arguments to <code>examples/interactive/cli-platform</code>! Passing primary+required information (like the path to your input data file?) should be much simpler now - let us know if it's broken or awesome!</p>",
        "id": 302786588,
        "sender_full_name": "jan kili",
        "timestamp": 1665123418
    },
    {
        "content": "<p>The CLI platform directory in the Roc repo will be moving today! (We're simplifying the organization of examples <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>) If you update your clone of the Roc repo, then you'll need to update your apps' platform path, too.</p>",
        "id": 302922793,
        "sender_full_name": "jan kili",
        "timestamp": 1665171649
    }
]