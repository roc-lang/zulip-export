[
    {
        "content": "<p>Welcome!</p>\n<p>What are you personally curious about in Roctoberfest? Do you expect to make time for multiple/regular sessions? Did you already do Advent of Code 2021?</p>\n<p>What questions do you have for the Roc veterans here?</p>",
        "id": 301628302,
        "sender_full_name": "jan kili",
        "timestamp": 1664539128
    },
    {
        "content": "<p>Hello!</p>\n<p>First time doing advent of code <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> and I'd love to maybe stream some sessions trying to tackle it using Roc.</p>",
        "id": 301647919,
        "sender_full_name": "Georges Boris",
        "timestamp": 1664544832
    },
    {
        "content": "<p>I could see streaming definitely being valuable, particularly to help us find all friction points.</p>",
        "id": 301649399,
        "sender_full_name": "Anton",
        "timestamp": 1664545276
    },
    {
        "content": "<p>I did a few of them in BQN....but i think the solutions will be different enough that it is no big deal. Will be interesting to try this in Roc.</p>",
        "id": 301657581,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664547392
    },
    {
        "content": "<p>One question: is the plan to collect feedback via threads in this topic?</p>",
        "id": 301658444,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664547609
    },
    {
        "content": "<p>I had to <code>ln -s c++/* .</code> inside <code> /opt/homebrew/opt/llvm@13/lib</code> to make it work</p>",
        "id": 301979710,
        "sender_full_name": "Shritesh Bhattarai",
        "timestamp": 1664750891
    },
    {
        "content": "<p>Hi, tried to install roc<br>\nI'm on MacOS 11, Intel<br>\nGetting</p>\n<p>Referenced from: /Users/Sebastian/Downloads/roc_nightly-macos_x86_64-2022-10-01-2b91154/./roc (which was built for Mac OS X 12.0)<br>\n  Expected in: /usr/lib/libc++.1.dylib<br>\nI can't upgrade to 12, because my laptop is too old<br>\nSo it seems a build for MacOS 11 would be great to have</p>",
        "id": 301979727,
        "sender_full_name": "Sebastian Porto",
        "timestamp": 1664750924
    },
    {
        "content": "<p>ah, I was gonna say I could make you an 11 build, but my macOS Intel laptop is on 12 already <span aria-label=\"confounded\" class=\"emoji emoji-1f616\" role=\"img\" title=\"confounded\">:confounded:</span></p>",
        "id": 301979909,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1664751129
    },
    {
        "content": "<p>maybe  there could be one of these for macos 11 <a href=\"https://github.com/roc-lang/roc/blob/main/.github/workflows/nightly_macos_x86_64.yml\">https://github.com/roc-lang/roc/blob/main/.github/workflows/nightly_macos_x86_64.yml</a>?</p>",
        "id": 301980018,
        "sender_full_name": "Sebastian Porto",
        "timestamp": 1664751295
    },
    {
        "content": "<p>I suspect this will be a common issue - people stuck in Macos 11</p>",
        "id": 301980053,
        "sender_full_name": "Sebastian Porto",
        "timestamp": 1664751343
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> if we did it for macOS 11 only, would that binary Just Work on 12?</p>",
        "id": 301980108,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1664751384
    },
    {
        "content": "<p>or would two different binaries be necessary</p>",
        "id": 301980114,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1664751398
    },
    {
        "content": "<p>because I just ran into this: how would I combine <code>Effect</code>s which might fail with pure functions which return <code>Result</code>?<br>\nSpecifically, I'm reading a line and want to convert the line to a <code>Nat</code>, which might fail. Is there a nicer way than matching the result and returning <code>Task.succeed</code> and <code>Task.fail</code>?<br>\nAlso, is there a way to detect when <code>Stdin.line</code> is done with the input? I would try and check for <code>EOF</code>, but since I'm \"stuck\" on the first question and already here I though I might ask this as well.<br>\nThe question are specific to the cli-plaform i guess?</p>",
        "id": 301981190,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1664752341
    },
    {
        "content": "<blockquote>\n<p>Is there a nicer way than matching the result and returning Task.succeed and <a href=\"http://Task.fail\">Task.fail</a>?</p>\n</blockquote>\n<p>I think some variant of the task module had <code>Task.fromResult</code>, but I don't think it is in the cli platform variant. Should be easy enough to write the function once and use it multiple times.</p>",
        "id": 301981829,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664753095
    },
    {
        "content": "<p>Should be doable with a <code>when</code> clause. Something like:</p>\n<div class=\"codehilite\" data-code-language=\"Elixir\"><pre><span></span><code><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nc\">Stdin</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nc\">Task</span><span class=\"o\">.</span><span class=\"n\">await</span><span class=\"w\"></span>\n<span class=\"ow\">when</span><span class=\"w\"> </span><span class=\"nc\">Str</span><span class=\"o\">.</span><span class=\"n\">toI64</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"n\">num</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Task</span><span class=\"o\">.</span><span class=\"n\">succeed</span><span class=\"w\"> </span><span class=\"n\">num</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nc\">Err</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Task</span><span class=\"o\">.</span><span class=\"n\">fail</span><span class=\"w\"> </span><span class=\"nc\">SomeErr</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 301981949,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664753280
    },
    {
        "content": "<blockquote>\n<p>is there a way to detect when Stdin.line is done with the input?</p>\n</blockquote>\n<p>Looks like the platform isn't setup for this yet. I am pretty sure it will panic if Stdin runs out of data. That is probably something we need to fix. Make it return a Result Str of some sort. That is probably a good advent of code related issue to fix.</p>",
        "id": 301982094,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664753414
    },
    {
        "content": "<p>that's basically what i did. i might extract my own <code>fromResult</code> i guess.<br>\nI think I found a... bug in the roc typechecker?<br>\nI'm basically doing a recursive task function (simplified):</p>\n<div class=\"codehilite\"><pre><span></span><code>myTask : Task Nat &lt;the error type&gt; &lt;the effects type&gt;\nmyTask =\n    nextValue &lt;- await readNat\n    if &lt;some condition&gt; then\n        myTask\n    else\n        Task.succeed &lt;return value&gt;\n</code></pre></div>\n<p>Running <code>roc check</code> on this file hangs. maybe indefinitely, maybe for a long time.<br>\nI know there's <code>Task.loop</code> which does exactly this looping, and that might work, but it seems that this should not be unresolvable</p>",
        "id": 301982239,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1664753621
    },
    {
        "content": "<p>Can you post an issue to github with your roc code? Would be good for a repro.</p>",
        "id": 301982526,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664753869
    },
    {
        "content": "<p>Maybe we have a issue with using a task in a recursive way....not sure.</p>",
        "id": 301982588,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664753920
    },
    {
        "content": "<p>hmm... I created a minimal example to post to github, and now I'm getting a compiler panic saying that something's not implemented for <code>InvalidCycle</code>, which seems more intentional. Now I'm wondering if that's a different problem than the hang...</p>",
        "id": 301982859,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1664754252
    },
    {
        "content": "<p>nevermind, it just doesn't <em>always</em> hang O.o</p>",
        "id": 301983063,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1664754503
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/4153\">issue</a></p>",
        "id": 301983287,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1664754771
    },
    {
        "content": "<p>What am I doing wrong? I solved day 1 but got stuck in refactoring it for tidiness. I've removed all of my parsing and calculating and it's still angry:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">app</span><span class=\"w\"> </span><span class=\"s\">\"1a\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">pf</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"../roc/examples/interactive/cli-platform/main.roc\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">pf</span><span class=\"p\">.</span><span class=\"nx\">File</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">pf</span><span class=\"p\">.</span><span class=\"nx\">Path</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">pf</span><span class=\"p\">.</span><span class=\"nx\">Program</span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"nx\">Program</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">pf</span><span class=\"p\">.</span><span class=\"nx\">Stdout</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">pf</span><span class=\"p\">.</span><span class=\"nx\">Task</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"nx\">to</span><span class=\"w\"> </span><span class=\"nx\">pf</span><span class=\"w\"></span>\n\n<span class=\"nv\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">attempt</span><span class=\"w\"> </span><span class=\"nx\">solve</span><span class=\"w\"> </span><span class=\"nx\">exit</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Program</span><span class=\"p\">.</span><span class=\"nx\">noArgs</span><span class=\"w\"></span>\n\n<span class=\"nv\">solve</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nv\">read</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"1a_input.txt\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Path</span><span class=\"p\">.</span><span class=\"nx\">fromStr</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">File</span><span class=\"p\">.</span><span class=\"nx\">readUtf8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">input</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">await</span><span class=\"w\"> </span><span class=\"nx\">read</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">input</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"></span>\n\n<span class=\"nv\">exit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">result</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nv\">code</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"nx\">result</span><span class=\"w\"> </span><span class=\"o\">is</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">Ok</span><span class=\"w\"> </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">Err</span><span class=\"w\"> </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">succeed</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Program</span><span class=\"p\">.</span><span class=\"nx\">exit</span><span class=\"w\"> </span><span class=\"nx\">code</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>[jan@framey roctoberfest]$ export RUST_BACKTRACE=1 &amp;&amp; roc dev 1a.roc\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\n🔨 Rebuilding platform...\nthread &#39;main&#39; panicked at &#39;not yet implemented: Report a file open error&#39;, src/lib.rs:247:13\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nfatal runtime error: failed to initiate panic, error 5\nAborted (core dumped)\n[jan@framey roctoberfest]$\n</code></pre></div>",
        "id": 301999015,
        "sender_full_name": "jan kili",
        "timestamp": 1664773466
    },
    {
        "content": "<p>Are you sure to have a file named <code>1a_input.txt</code>?</p>",
        "id": 302020955,
        "sender_full_name": "Ghislain",
        "timestamp": 1664786542
    },
    {
        "content": "<p>I'll try out making macos 11(x86_64) nightlies.</p>",
        "id": 302033721,
        "sender_full_name": "Anton",
        "timestamp": 1664791619
    },
    {
        "content": "<p>We should probably make a separate topic for every question, zulip works best that way :)</p>",
        "id": 302033900,
        "sender_full_name": "Anton",
        "timestamp": 1664791689
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"528453\">@Ghislain</span> ! I forgot to change my file name from _data... <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 302057492,
        "sender_full_name": "jan kili",
        "timestamp": 1664801761
    },
    {
        "content": "<p>We should have better behaviour than this for a missing file though!</p>",
        "id": 302142410,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1664828666
    },
    {
        "content": "<p>Sorry for being dumb/blind, where do I find the tasks of each day? <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 302419389,
        "sender_full_name": "Johannes",
        "timestamp": 1664962266
    },
    {
        "content": "<p>There are no dumb questions here :) It was easy to miss, here you go: <a href=\"https://adventofcode.com/2021\">https://adventofcode.com/2021</a></p>",
        "id": 302420279,
        "sender_full_name": "Anton",
        "timestamp": 1664962671
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span>  thanks, mate! <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 302420433,
        "sender_full_name": "Johannes",
        "timestamp": 1664962735
    }
]