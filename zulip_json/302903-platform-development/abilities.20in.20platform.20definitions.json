[
    {
        "content": "<p>is there a way to include constraints / required certain iplemented abilities when defining the types required by a platform</p>",
        "id": 514759480,
        "sender_full_name": "Nathan Kamenchu",
        "timestamp": 1745831103
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"697408\">@Nathan Kamenchu</span>,<br>\nCan you be more specific here: \"when defining the types required by a platform\"</p>",
        "id": 514763950,
        "sender_full_name": "Anton",
        "timestamp": 1745832251
    },
    {
        "content": "<p>I don't think you can specify in the header currently, but would need to double check. If you can't specify in the header, you might be able to just use it with the ability and that should add the requirement.</p>",
        "id": 514855887,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1745857406
    },
    {
        "content": "<p>I needed a type in the requires section of the platform header to implement a certain ability. <br>\nI got around it by providing a function to create an opaque type with the constraint</p>",
        "id": 514951256,
        "sender_full_name": "Nathan Kamenchu",
        "timestamp": 1745901030
    },
    {
        "content": "<p>Is it possible to expose a function from the platform that as one of the required types as an argument?</p>",
        "id": 514960598,
        "sender_full_name": "Nathan Kamenchu",
        "timestamp": 1745904274
    },
    {
        "content": "<p>Yes, I think that should work. Note that they are not truly required <strong>types</strong> but identifiers with a specific type (usually functions).</p>",
        "id": 514997230,
        "sender_full_name": "Anton",
        "timestamp": 1745916034
    },
    {
        "content": "<p>I think I may not have explained myself fully, I was referring to the part with  <code>Model</code> <br>\nI went for a different design, but I was investigating if it was possible to expose a function to the application that uses this <code>Model</code> type</p>\n<p>It doesn't seem possible because the main.roc file which contains the platform definition and has access to this <code>Model</code> type can only expose modules and not functions to the application built against this platform and as far as I can tell these modules cannot import from the main.roc file</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>platform \"webserver\"\n    requires { Model } {\n        init! : {} =&gt; Result Model [Exit I32 Str]_,\n        respond! : Http.Request, Model =&gt; Result Http.Response [ServerErr Str]_,\n    }\n    exposes [\n        Cmd,\n        Dir,\n        Env,\n        File,\n        FileMetadata,\n        Http,\n        MultipartFormData,\n        Path,\n        Sqlite,\n        Stderr,\n        Stdout,\n        Tcp,\n        Url,\n        Utc,\n    ]\n    packages {}\n    imports []\n    provides [init_for_host!, respond_for_host!]\n</code></pre></div>",
        "id": 515133760,
        "sender_full_name": "Nathan Kamenchu",
        "timestamp": 1745951543
    },
    {
        "content": "<blockquote>\n<p>these modules cannot import from the main.roc file</p>\n</blockquote>\n<p>Yes, I think that's correct</p>",
        "id": 515239806,
        "sender_full_name": "Anton",
        "timestamp": 1746001659
    }
]