[
    {
        "content": "<p>hey, just trying to read some tagged unions (these: <a href=\"https://github.com/rtfeldman/rbt/blob/f6fb63e103147e795d7187b8d1a76842354f3c35/Rbt.roc\">https://github.com/rtfeldman/rbt/blob/f6fb63e103147e795d7187b8d1a76842354f3c35/Rbt.roc</a>) out of Roc using Rust and having some difficulties, specifically getting some segfaults. Y'all got any tips on how to read the memory for tags? Here's what I'm working with now: <a href=\"https://github.com/rtfeldman/rbt/blob/2c9337212cc59a05814f88e5adfa869ba86c2cf9/src/lib.rs\">https://github.com/rtfeldman/rbt/blob/2c9337212cc59a05814f88e5adfa869ba86c2cf9/src/lib.rs</a></p>\n<p>Also, there has to be a better way to debug this than to try things blindly—what is it? I know I could make a lot more progress if I knew how to enter a debugger or at least dump the memory to stdout somehow. Surely options exist and I'm just unaware of them. Someone enlighten me so I can get off your lawn. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 259725571,
        "sender_full_name": "Brian Hicks",
        "timestamp": 1635593084
    },
    {
        "content": "<p>getting tagged unions out of roc into rust or anything will be tricky. There are a lot of ways that we can represent those compactly (e.g. just a number if none of the tags have payloads as a simple example)</p>",
        "id": 259725748,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635593373
    },
    {
        "content": "<p>looks like you actually just want to pass records though?</p>",
        "id": 259725812,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635593450
    },
    {
        "content": "<p>then what's important is that roc sorts fields first by alignment, and then alphabetically. That has to be mirrored on the rust side to have things line up</p>",
        "id": 259725876,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635593523
    },
    {
        "content": "<p>thing is, eventually Tool will need to depend on Job, creating a loop. If I understand that correctly, it means that all the records will need to exist in a single union. Is that right? So even though I’m currently just making private records, I think it will have to change</p>",
        "id": 259729108,
        "sender_full_name": "Brian Hicks",
        "timestamp": 1635598093
    },
    {
        "content": "<p>so I think I'd need to do this:</p>\n<div class=\"codehilite\"><pre><span></span><code>RbtObj : [ InternalJob { command : RbtObj, ... }, InternalCommand { tool : RbtObj }, InternalTool { ..., from : RbtObj } ]\n\nJob : [ @Job RbtObj ]\nCommand : [ @Command RbtObj ]\nTool : [ @Tool RbtObj ]\n</code></pre></div>\n<p>Does that seem right? I don't like that it loses type safety, but I don't know that there's a cleaner way to resolve the cycle between the type aliases that it creates. Then I'm gonna have to unwrap two levels of tags here.</p>",
        "id": 260417560,
        "sender_full_name": "Brian Hicks",
        "timestamp": 1636124790
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> any advice here?</p>",
        "id": 260575548,
        "sender_full_name": "Brian Hicks",
        "timestamp": 1636293673
    },
    {
        "content": "<p>I don't think this is needed. What sort of functions would you want to write for the host &lt;-&gt; roc communication?</p>",
        "id": 260575668,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1636293784
    },
    {
        "content": "<p>or rather, what are their signatures</p>",
        "id": 260575673,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1636293790
    },
    {
        "content": "<p>In this host, the Roc code just provides data for the platform to use. It’s for build specification.</p>",
        "id": 260580711,
        "sender_full_name": "Brian Hicks",
        "timestamp": 1636299739
    },
    {
        "content": "<p>I wasn’t planning on exposing any functions at all</p>",
        "id": 260580721,
        "sender_full_name": "Brian Hicks",
        "timestamp": 1636299768
    },
    {
        "content": "<p>There will be a separate discovery platform that will though</p>",
        "id": 260580814,
        "sender_full_name": "Brian Hicks",
        "timestamp": 1636299898
    }
]