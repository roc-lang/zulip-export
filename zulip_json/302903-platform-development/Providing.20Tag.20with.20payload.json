[
    {
        "content": "<p>I am trying to provide a function to the host, that expects as its argument a tag with a payload. For example</p>\n<div class=\"codehilite\"><pre><span></span><code>main_for_host : [TagWithoutPlayload, TagWithPayload U64] -&gt; U64\nmain_for_host = \\tag -&gt;\n    when tag is\n        TagWithoutPlayload -&gt; 0\n        TagWithPayload payload -&gt; payload\n</code></pre></div>\n<p>When I try to build this with <code>roc build --lib main.roc</code>, I get the error:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at /home/ossi/.cargo/git/checkouts/inkwell-946411d814d2c9f8/89e06af/src/values/enums.rs:325:13:\nFound StructValue(StructValue { struct_value: Value { name: &quot;&quot;, address: 0x5b8843bbdf78, is_const: false, is_null: false, is_undef: false, llvm_value: &quot;{ [1 x i64], i8 } %1&quot;, llvm_type: &quot;{ [1 x i64], i8 }&quot; } }) but expected PointerValue variant\n</code></pre></div>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>stack backtrace:</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>0:     0x5b8812410c06 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h410d4c66be4e37f9<br>\n   1:     0x5b8812441b60 - core::fmt::write::he40921d4802ce2ac<br>\n   2:     0x5b881240ccaf - std::io::Write::write_fmt::h5de5a4e7037c9b20<br>\n   3:     0x5b88124109e4 - std::sys_common::backtrace::print::h11c067a88e3bdb22<br>\n   4:     0x5b8812412277 - std::panicking::default_hook::{{closure}}::h8c832ecb03fde8ea<br>\n   5:     0x5b8812411fd9 - std::panicking::default_hook::h1633e272b4150cf3<br>\n   6:     0x5b8812412708 - std::panicking::rust_panic_with_hook::hb164d19c0c1e71d4<br>\n   7:     0x5b88124125e2 - std::panicking::begin_panic_handler::{{closure}}::h0369088c533c20e9<br>\n   8:     0x5b8812411106 - std::sys_common::backtrace::__rust_end_short_backtrace::hc11d910daf35ac2e<br>\n   9:     0x5b8812412334 - rust_begin_unwind<br>\n  10:     0x5b880edb7235 - core::panicking::panic_fmt::ha6effc2775a0749c<br>\n  11:     0x5b880f23e6d5 - inkwell::values::enums::BasicValueEnum::into_pointer_value::hbd976666511d6782<br>\n  12:     0x5b880f0fec54 - roc_gen_llvm::llvm::build::expose_function_to_host_help_c_abi::h7992b6ac86f4b241<br>\n  13:     0x5b880f1055ca - roc_gen_llvm::llvm::build::build_procedures_help::hc994ab110cdaf270<br>\n  14:     0x5b880f102848 - roc_gen_llvm::llvm::build::build_procedures::h1f3f247796d6a05c<br>\n  15:     0x5b880f091207 - roc_build::program::gen_from_mono_module::h6bba7a02f572a3c1<br>\n  16:     0x5b880f094f26 - roc_build::program::build_loaded_file::h11af494e00a9a193<br>\n  17:     0x5b880f093eb2 - roc_build::program::build_file::h295c38165d494be8<br>\n  18:     0x5b880eff80f8 - roc_cli::build::h669d4227302fd51a<br>\n  19:     0x5b880eebe1d2 - roc::main::h74e9db8daa7f404a<br>\n  20:     0x5b880eeb3863 - std::sys_common::backtrace::__rust_begin_short_backtrace::h3986deeb5e13037c<br>\n  21:     0x5b880eeb3a83 - std::rt::lang_start::{{closure}}::ha25b4e86b1702b62<br>\n  22:     0x5b8812402c21 - std::rt::lang_start_internal::h4d236095b69a230b<br>\n  23:     0x5b880eec11d5 - main<br>\n  24:     0x7454b3e3314e - __libc_start_call_main<br>\n  25:     0x7454b3e33209 - __libc_start_main@@GLIBC_2.34<br>\n  26:     0x5b880eeb2435 - _start<br>\n  27:                0x0 - &lt;unknown&gt;</p>\n</div></div>\n<p>It works, if the function only has one Tag (for example <code>[TagWithPayload U64]</code>. It also works, if  both tags do not have a payload (for example <code>[TagWithoutPlayload, TagWithPayload]</code>).</p>\n<p>Am I doing something forbidden or is this a bug?</p>",
        "id": 491809335,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1735936522
    },
    {
        "content": "<p>Definitely a bug</p>",
        "id": 491811849,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735937886
    },
    {
        "content": "<p>Looks like a call conv issue if I had to guess</p>",
        "id": 491811860,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735937894
    },
    {
        "content": "<p>Yeah, I think it has a struct and is trying to use it as a pointer when passing to/from the host</p>",
        "id": 491812071,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1735938022
    }
]