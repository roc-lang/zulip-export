[
    {
        "content": "<p>Are there any docs to explain the basics of how you'd implement a host for a platform? Maybe something like a little guide that says 'to expose a function from the host, make sure it looks like [...]'?</p>\n<p>I remember reading a while back that it wasn't a stable API so it wasn't going to get written down, but maybe something has changed in the time since.</p>\n<p><a href=\"https://github.com/roc-lang/roc/blob/d9217caae5153c0427dba3e820bb1bf0faedda73/examples/hello-world/platform/host.c\">https://github.com/roc-lang/roc/blob/d9217caae5153c0427dba3e820bb1bf0faedda73/examples/hello-world/platform/host.c</a> for example has </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">roc__mainForHost_1_exposed_generic</span><span class=\"p\">(</span><span class=\"k\">struct</span> <span class=\"nc\">RocStr</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">string</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n<p>, which is associated (somehow) with the <code>platform/main.roc</code></p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">mainForHost</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"w\"></span>\n<span class=\"nv\">mainForHost</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">main</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but that's about as far as I can guess.  Maybe the <code>1</code> is the number of arguments, but I'm not sure about the rest!</p>",
        "id": 299272102,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1663390070
    },
    {
        "content": "<p>From what I can tell, roc__mainForHost_1_exposed_generic is actually hardcoded, and is required. I'm working through building a platform from nothing, and I might try to write an article explaining how to get set up from scratch.</p>",
        "id": 305106591,
        "sender_full_name": "Thomas",
        "timestamp": 1666256385
    },
    {
        "content": "<p>the <code>1</code> is the index of the layout. We can have a function like <code>List.single : a -&gt; List a</code> and use it with multiple types, say <code>Str</code> and <code>I64</code>. These functions have the same name, but different type, and to make them distinct we \"hash\" the type and make it part of the name</p>",
        "id": 305107751,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666256807
    },
    {
        "content": "<p>the assumption here is that there is only one specialization of the <code>mainForHost</code> function, so we pick type index 1</p>",
        "id": 305107797,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666256827
    },
    {
        "content": "<p>we want to automate all of this setup btw</p>",
        "id": 305107842,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666256846
    },
    {
        "content": "<p>That's interesting...</p>",
        "id": 305108191,
        "sender_full_name": "Thomas",
        "timestamp": 1666256998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> do you wanna take a look at my issue in <a class=\"stream-topic\" data-stream-id=\"302903\" href=\"/#narrow/stream/302903-Writing-a-platform/topic/Thinking.20out.20loud\">#Writing a platform &gt; Thinking out loud</a>  ?<br>\n(At the very bottom)</p>",
        "id": 305109850,
        "sender_full_name": "Thomas",
        "timestamp": 1666257732
    },
    {
        "content": "<p>Hey folks - I'm reviving this topic to know if something like this is currently available somewhere :)</p>",
        "id": 485086494,
        "sender_full_name": "Georges Boris",
        "timestamp": 1732882589
    },
    {
        "content": "<p>Nope, but there are a lot more example platforms and templates</p>",
        "id": 485148495,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1732906871
    }
]