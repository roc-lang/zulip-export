[
    {
        "content": "<p>Hi</p>\n<p>I am trying to write a zig-platform that uses SDL. I am not able, to get it build for the surgical or the legacy linker.</p>\n<p>When I build it for the surgical linker, I first create a <code>libapp.so</code> from an example app and then compile the zig-code with it. I get a <code>dynhost</code>-executable. If I start this executalbe it works. It starts the program with the compiled roc code.</p>\n<p>But when I try to to start it with <code>roc run</code>, I get the error:</p>\n<div class=\"codehilite\"><pre><span></span><code>ðŸ”¨ Rebuilding platform...\nSegmentation fault at address 0x78c5b62c8098\n/home/ossi/zig/0.13.0/files/lib/compiler_rt/memcpy.zig:14:9: 0x5a929e0bb258 in memcpy (compiler_rt)\n    if (len != 0) {\n        ^\nUnwind error at address `:0x5a929e0bb258` (error.InvalidCFA), trace may be incomplete\n</code></pre></div>\n<p>I have no idea, what is going on or how to fix it. Does anybody of you have seen an error like this? </p>\n<p>The code is here: <a href=\"https://github.com/ostcar/roc-turtle\">https://github.com/ostcar/roc-turtle</a></p>\n<p>To build an run the <code>dynhost</code> run:</p>\n<div class=\"codehilite\"><pre><span></span><code>zig build preprocess\n./platform/dynhost\n</code></pre></div>",
        "id": 456205486,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1722711652
    },
    {
        "content": "<p>We've been hitting more issues in general with zig 0.13. noticed that on the branch upgrading llvm and zig. No idea why though</p>",
        "id": 456230033,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1722723536
    },
    {
        "content": "<p>So issues that go away in release fast due to skipping extra checks. Others that stick.</p>\n<p>Not havimg a trace makes that really hard to guess. Can you form a debug build of the zig host and see if you get a stack trace.</p>",
        "id": 456230210,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1722723626
    },
    {
        "content": "<p>The zig version is not the issue. I get the same behavior , when I downgrade the code for zig 0.11.0 and compile it with that zig version.</p>\n<p>Here is a branch, that for zig 0.11.0: <a href=\"https://github.com/ostcar/roc-turtle/tree/zig-11\">https://github.com/ostcar/roc-turtle/tree/zig-11</a></p>\n<div class=\"codehilite\"><pre><span></span><code>zig version\n0.11.0\n\nzig build preprocess\n\n./platform/dynhost  # this works\n\nroc build examples/roc/main.roc  # this works\n\n./examples/roc/main\nSegmentation fault at address 0x74800dd69098\n/home/ossi/zig/0.11.0/files/lib/compiler_rt/memcpy.zig:14:9: 0x5918d42d06d8 in memcpy (compiler_rt)\n    if (len != 0) {\n        ^\nUnwind error at address `:0x5918d42d06d8` (error.InvalidCFA), trace may be incomplete\n</code></pre></div>",
        "id": 456277377,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1722752420
    },
    {
        "content": "<p>I don't know how to create a better stack trace. I build zig from source and I get the same output:</p>\n<div class=\"codehilite\"><pre><span></span><code>../zig/build-master/stage3/bin/zig version\n0.14.0-dev.839+a931bfada\n\n../zig/build-master/stage3/bin/zig build preprocess\n\nroc run examples/roc/main.roc\nðŸ”¨ Rebuilding platform...\nSegmentation fault at address 0x7748756ce098\n/home/ossi/src/zig/build-master/stage3/lib/zig/compiler_rt/memcpy.zig:14:9: 0x5d23a1a51f48 in memcpy (compiler_rt)\n    if (len != 0) {\n        ^\nUnwind error at address `:0x5d23a1a51f48` (error.InvalidCFA), trace may be incomplete\n</code></pre></div>",
        "id": 456281477,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1722754829
    },
    {
        "content": "<p>I think I found a solution.</p>\n<p>When I use zig 0.11.0 and set <code>dynhost.disable_stack_probing = true;</code> (dynhost is the compiling step), it works.</p>\n<p>They removed this option somewhere between 0.11.0 and 0.13.0. I have to check if there is an alternative.</p>",
        "id": 456284184,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1722757194
    },
    {
        "content": "<p>Ok. Found it. They changed the option in this <a href=\"https://github.com/ziglang/zig/commit/c20ad51c621ba18d2c90cc96d1b550831dc5d7a3\">commit</a>. The new way to disable stack probing is with <code>dynhost.root_module.stack_check = false;</code></p>",
        "id": 456285249,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1722758139
    },
    {
        "content": "<p>This fixed a number of failing tests on the llvm upgrade branch. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 456294075,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1722764824
    },
    {
        "content": "<p>Happy to help <span aria-label=\"heart kiss\" class=\"emoji emoji-1f618\" role=\"img\" title=\"heart kiss\">:heart_kiss:</span></p>",
        "id": 456294223,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1722764868
    },
    {
        "content": "<p>Also gave me a good idea for another potential issue I'm looking into</p>",
        "id": 456295653,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1722765497
    }
]