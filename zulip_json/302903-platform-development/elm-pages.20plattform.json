[
    {
        "content": "<p>Hi everyone!</p>\n<p>I recently had an idea of building a elm-pages plattform that would handle the custom BackendTasks (similar to ports). But I'm running into issues getting Roc to do what I want, so I though I'd ask here if someone could help me out.</p>\n<p>What I want to achieve:</p>\n<ul>\n<li>Write a collection of functions in Roc for things I want to do \"server-side\".</li>\n<li>Compile those into a JavaScript file that elm-pages can call.</li>\n<li>Generate an Elm file where all the functions have the correct types and bindings to elm-pages' BackendTask.</li>\n</ul>\n<p>Currently, an idea that I want to play with is to write a feed reader. I want to write the part that fetches and reads the feed (<code>fetchFeed(url)</code>) in Roc. This function should be exposed as a JavaScript function in a special file (<code>custom-backend-task.js</code>) so that in Elm I can call <code>BackendTask.custom.run \"fetchFeed\" feedUrlJsonValue fetchFeedResultDecoder</code>and it will go into that .js file and look for a function \"fetchFeed\" to execute.</p>\n<p>Additionally, I'd like Roc to output a definition like <code>fetchFeed url = BackendTask.custom.run \"fetchFeed\" (encodeFetchFeedUrl url) fetchFeedResultDecoder</code> along with the <code>encodeFetchFeedUrl</code> and <code>feetchFeedResultDecoder</code> so that I can conveniently call <code>fetchFeed</code> and all the types stay in sync with the Roc code.</p>\n<p>Right now, I'm struggling with the first part: Getting Roc code running via JS. I'm trying to run the <a href=\"https://github.com/roc-lang/roc/tree/main/examples/nodejs-interop/wasm\">node-js wasm example</a> in Windows Subsystem on Linux, but I'm getting the following error messages which I'm stuck on.</p>\n<p>If there is a better approach for what I want to achieve, please tell me. :)</p>\n<div class=\"codehilite\"><pre><span></span><code>jojo@Windows-PC:~/code/roc/examples/nodejs-interop/wasm$ roc --version\nroc nightly pre-release, built from commit b5f68bc on Fr 23 Feb 2024 09:01:37 UTC\njojo@Windows-PC:~/code/roc/examples/nodejs-interop/wasm$ roc build --target=wasm32\nðŸ”¨ Rebuilding platform...\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: https://github.com/roc-lang/roc/issues/new/choose\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;Error:\n    Failed to rebuild host.zig:\n        The executed command was:\n            HOME=/home/jojo PATH=/home/jojo/.deno/bin:/home/jojo/.vscode-server/bin/903b1e9d8990623e3d7da1df3d33db3e42d80eda/bin/remote-cli:/home/jojo/.cargo/bin:/home/jojo/.deno/bin:/home/jojo/.nvm/versions/node/v18.16.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Python39/Scripts/:/mnt/c/Python39/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/Program Files/dotnet/:/mnt/c/Program Files/Microsoft SQL Server/130/Tools/Binn/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files/Microsoft SQL Server/110/Tools/Binn/:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Program Files (x86)/dotnet/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Users/Jojo/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/Jojo/AppData/Local/Programs/Microsoft VS Code/bin:/snap/bin:/usr/local/bin/roc_nightly-linux_x86_64:/opt/zig:/home/jojo/path/to/zig:/usr/local/bin/roc_nightly-linux_x86_64:/opt/zig zig build-obj platform/host.zig -femit-llvm-ir=platform/main.bc --mod glue::/usr/local/bin/roc_nightly-linux_x86_64/crates/compiler/builtins/bitcode/src/glue.zig --deps glue --library c -target wasm32-wasi -fPIC -fstrip\n        stderr of that command:\n            error: unrecognized file extension of parameter &#39;glue&#39;\n&#39;, crates/compiler/build/src/link.rs:1421:21\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nthread &#39;main&#39; panicked at &#39;Failed to (re)build platform.: Any { .. }&#39;, crates/compiler/build/src/program.rs:985:46\njojo@Windows-PC:~/code/roc/examples/nodejs-interop/wasm$ cargo run build --target=wasm32\n   Compiling roc_bitcode_bc v0.0.1 (/home/jojo/code/roc/crates/compiler/builtins/bitcode/bc)\n   Compiling roc_bitcode v0.0.1 (/home/jojo/code/roc/crates/compiler/builtins/bitcode)\n   Compiling roc_gen_wasm v0.0.1 (/home/jojo/code/roc/crates/compiler/gen_wasm)\n   Compiling wasi_libc_sys v0.0.1 (/home/jojo/code/roc/crates/wasi-libc-sys)\n   Compiling roc_gen_dev v0.0.1 (/home/jojo/code/roc/crates/compiler/gen_dev)\nerror: failed to run custom build command for `roc_bitcode_bc v0.0.1 (/home/jojo/code/roc/crates/compiler/builtins/bitcode/bc)`\n\nCaused by:\n  process didn&#39;t exit successfully: `/home/jojo/code/roc/target/debug/build/roc_bitcode_bc-e514aeb23796a812/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n  Compiling host ir to: /home/jojo/code/roc/crates/compiler/builtins/bitcode/bc/../zig-out/builtins-host.ll\n  Compiling 64-bit bitcode to: /home/jojo/code/roc/crates/compiler/builtins/bitcode/bc/../zig-out/builtins-host.bc\n\n  --- stderr\n  An internal compiler expectation was broken.\n  This is definitely a compiler bug.\n  Please file an issue here: https://github.com/roc-lang/roc/issues/new/choose\n  thread &#39;main&#39; panicked at &#39;zig build ir -Drelease=true failed with:\n\n    /home/jojo/code/roc/crates/compiler/builtins/bitcode/build.zig:101:9: error: local variable is never mutated\n  /home/jojo/code/roc/crates/compiler/builtins/bitcode/build.zig:101:9: note: consider using &#39;const&#39;\n\n  &#39;, crates/compiler/builtins/bitcode/bc/build.rs:126:21\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\nerror: failed to run custom build command for `roc_bitcode v0.0.1 (/home/jojo/code/roc/crates/compiler/builtins/bitcode)`\n\nCaused by:\n  process didn&#39;t exit successfully: `/home/jojo/code/roc/target/debug/build/roc_bitcode-7ed61b98c8726b16/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n  Compiling zig object `object` to: /home/jojo/code/roc/crates/compiler/builtins/bitcode/zig-out/builtins-host.o\n\n  --- stderr\n  An internal compiler expectation was broken.\n  This is definitely a compiler bug.\n  Please file an issue here: https://github.com/roc-lang/roc/issues/new/choose\n  thread &#39;main&#39; panicked at &#39;zig build object -Drelease=true failed with:\n\n    /home/jojo/code/roc/crates/compiler/builtins/bitcode/build.zig:101:9: error: local variable is never mutated\n  /home/jojo/code/roc/crates/compiler/builtins/bitcode/build.zig:101:9: note: consider using &#39;const&#39;\n\n  &#39;, crates/compiler/builtins/bitcode/build.rs:188:21\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 423151155,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1708764704
    },
    {
        "content": "<p>I think I found a workaround by using the basic-cli plattform and calling the binary via Node's child_process.execFile. So I can start playing around with programming in Roc.</p>\n<p>But I'd still be interested in how to do this properly and also how to generate the accompanying Elm bindings, if anyone would have the time and interest to teach me about it. :)</p>",
        "id": 423152301,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1708765653
    },
    {
        "content": "<p>Can you share the output of <code>zig version</code> <span class=\"user-mention\" data-user-id=\"455781\">@Johannes Maas</span>?</p>",
        "id": 423167023,
        "sender_full_name": "Anton",
        "timestamp": 1708778701
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>jojo@Windows-PC:~/code/feed-reader$ zig version\n0.12.0-dev.2825+dd1fc1cb8\n</code></pre></div>",
        "id": 423169589,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1708781149
    },
    {
        "content": "<p>Oh, I should try to install v11. Will do that later.</p>",
        "id": 423169640,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1708781165
    },
    {
        "content": "<p>I'm getting different errors, but I have to do something else right now. Will have another look later.</p>",
        "id": 423171032,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1708782221
    },
    {
        "content": "<p>Ok, so I got the NodeJS-Interop-WASM example running with <code>cargo run build --target=wasm32</code>. (<code>roc build --target=wasm32</code> crashes with <code>thread 'main' panicked at 'cannot find </code>wasi-libc.a<code>', crates/compiler/build/src/link.rs:121:5</code>, though I just installed the current nightly.)</p>\n<p>So I don't yet understand what the WASM platform does, but that's a separate issue. Before I dive in, is there a way to output the TS-types to call my Roc code from NodeJS? Is this what <code>roc glue</code> is for? Where can I find out more? :)</p>",
        "id": 430583680,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1711973527
    },
    {
        "content": "<p>Hey! This is a cool idea. I think you're right that <code>roc glue</code> will be the mechanism for getting types for a new platform. I don't think it's set up for js yet though.</p>",
        "id": 435687131,
        "sender_full_name": "Drew Lazzeri",
        "timestamp": 1714188327
    },
    {
        "content": "<p>Here's a recent comment about the current state of Glue: <a href=\"#narrow/stream/302903-Writing-a-platform/topic/.E2.9C.94.20How.20do.20I.20generate.20glue.20with.20roc.20glue.3F/near/350189504\">https://roc.zulipchat.com/#narrow/stream/302903-Writing-a-platform/topic/.E2.9C.94.20How.20do.20I.20generate.20glue.20with.20roc.20glue.3F/near/350189504</a></p>\n<p>It seems to me that only Rust and Zig have started glue plugins.</p>",
        "id": 435688947,
        "sender_full_name": "Drew Lazzeri",
        "timestamp": 1714190272
    }
]