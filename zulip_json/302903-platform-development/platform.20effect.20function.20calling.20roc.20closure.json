[
    {
        "content": "<p>Is it possible for a platform effect to take in a roc closure as a callback?</p>\n<p>I see <a href=\"https://github.com/roc-lang/roc/blob/1d1f9a376983623e54a43cebb39c8c732bc721e5/examples/cli/false-interpreter/platform/src/lib.rs#L233\">this example</a> has a todo to figure out how to call the closure pointer</p>\n<p>Could the <code>roc__mainForHost_0_caller</code> work to call arbitrary closures or would that only work for main? Would manually boxing the closure help?</p>",
        "id": 408620533,
        "sender_full_name": "John Murray",
        "timestamp": 1702908989
    },
    {
        "content": "<p>Theoretically</p>",
        "id": 408636699,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702914051
    },
    {
        "content": "<p>Though, I wouldn't expect it to work easily currently</p>",
        "id": 408636781,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702914075
    },
    {
        "content": "<p>That said, it may not generate in an exposed manner unless the closure is exposed via the mainForHost.</p>",
        "id": 408636875,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702914108
    },
    {
        "content": "<p>A lot of the changes to platforms that are coming are related to this. In the new form, the standard will be that all effects take a continuation.</p>",
        "id": 408637008,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702914140
    },
    {
        "content": "<p>Anyway, what is your goal? That may give me a better idea of what could be done.</p>",
        "id": 408637084,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702914166
    },
    {
        "content": "<p>The use case i have is to try to hook up roc code to <a href=\"https://github.com/proptest-rs/proptest\">this rust property based testing lib</a></p>\n<p>it wants all the tests to be in a closure like</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">runner</span><span class=\"p\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">generators</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">|&lt;</span><span class=\"n\">generated</span><span class=\"w\"> </span><span class=\"n\">vals</span><span class=\"o\">&gt;|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">       </span><span class=\"c1\">// test logic that would call the closure</span>\n<span class=\"w\">    </span><span class=\"p\">}).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n</code></pre></div>\n<p>So in an ideal world the effect func would be something like </p>\n<div class=\"codehilite\" data-code-language=\"rut\"><pre><span></span><code>fn roc_fx_run_pbt(val_gen: Foo, testFn: RocFn) {\nlet mut runner = TestRunner::default();\n    runner.run(val_gen, |generated| {\n        testFn(generated)\n    }).unwrap();\n}\n</code></pre></div>",
        "id": 408637991,
        "sender_full_name": "John Murray",
        "timestamp": 1702914453
    },
    {
        "content": "<p>I think i could probably get away with having my testing platform take in a list of tests in the mainForHost and just repeatedly call main over and over with different generated values to run the tests multiple times</p>",
        "id": 408638256,
        "sender_full_name": "John Murray",
        "timestamp": 1702914542
    },
    {
        "content": "<p>I'm a bit confused, why would that be an effect? Isn't that the main goal of the platform. Why not just make main be the function you are property testing?</p>",
        "id": 408639864,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702915042
    },
    {
        "content": "<p>I wonder if it would currently work to just have main return a list of closures</p>",
        "id": 408640373,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702915214
    },
    {
        "content": "<p>Not actually sure.</p>",
        "id": 408640403,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702915224
    },
    {
        "content": "<p>I was hoping to have one 1 roc app that would run many different pbt tests so it would be something like</p>\n<div class=\"codehilite\"><pre><span></span><code>main =\n    _ &lt;- pf.PBT &lt;some type to specify generator&gt; (\\&lt;gen vals&gt; -&gt; test1)\n    _ &lt;- pf.PBT &lt;some type to specify diff generator&gt; (\\&lt;gen vals2&gt; -&gt; test2)\n</code></pre></div>\n<p>so the list of closures approach would probably be fine. Ill mess around with that</p>",
        "id": 408641178,
        "sender_full_name": "John Murray",
        "timestamp": 1702915427
    },
    {
        "content": "<p>I would say, try it, and see what llvm ir we generate (mono ir might also be useful to look at).</p>",
        "id": 408642512,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702915811
    },
    {
        "content": "<p>That is the only way to tell if this might work currently or not</p>",
        "id": 408642548,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702915829
    },
    {
        "content": "<p>But I do think it is totally untested.</p>",
        "id": 408642584,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702915840
    },
    {
        "content": "<p>My gut feeling is that it will generate something useless cause we won't actually expose the functions. So you will have a closure capture with no function to actually pass the data to.</p>",
        "id": 408642718,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702915888
    },
    {
        "content": "<p>On the otherhand, I know that main returning a record of closures works, so maybe a list of closures could work too. Though it is also untested.</p>",
        "id": 408642993,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702915980
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"666594\">John Murray</span> <a href=\"#narrow/stream/302903-Writing-a-platform/topic/platform.20effect.20function.20calling.20roc.20closure/near/408620533\">said</a>:</p>\n<blockquote>\n<p>Is it possible for a platform effect to take in a roc closure as a callback?</p>\n</blockquote>\n<p>technically yes, but in practice the glue for it isn't there yet - <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> and <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> and I have been working on this for quite awhile</p>",
        "id": 408661482,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702922319
    },
    {
        "content": "<p>once we have \"effect interpreters\" working, this will work too <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 408661517,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702922330
    },
    {
        "content": "<p>because that's all about passing Roc closures to the host</p>",
        "id": 408661556,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702922346
    },
    {
        "content": "<p>Is there a desgin/plan doc for effect interpreters? I've heard that mentioned a few times so curious what it looks like</p>",
        "id": 408662173,
        "sender_full_name": "John Murray",
        "timestamp": 1702922516
    },
    {
        "content": "<p>Thought the doc would be linked here, but guess not... <a href=\"https://www.roc-lang.org/plans\">https://www.roc-lang.org/plans</a></p>\n<p>We should add details here when we collect docs and such</p>",
        "id": 408663928,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702923092
    },
    {
        "content": "<p>oh yeah we should also remove \"<code>Inspect</code> Inference\" from that page since it exists now! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 408664066,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702923157
    }
]