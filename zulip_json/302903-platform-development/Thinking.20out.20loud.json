[
    {
        "content": "<p>I‚Äôm going to do some thinking out loud here as I start to get my bearings by reading code and documentation. Feel free to chime in if you‚Äôd like, but I don‚Äôt have any expectation of community responsiveness.ÔøºÔøºÔøº</p>",
        "id": 256318339,
        "sender_full_name": "Luis Gutierrez",
        "timestamp": 1633467679
    },
    {
        "content": "<p>So far I‚Äôve looked at the Hello World examples in C and zig. It looks like the host files implement some common methods (memory management‚Ä¶ anything else?Ôøº). I guess each host must implement some minimal interface to be a valid platform. I wonder if that interface is documented anywhere. (Hmm, also what‚Äôs with the ‚Äúplatform‚Äù and ‚Äúhost‚Äù names? Are they synonyms, or are they different somehow?Ôøº) If not, I wonder if it makes sense to start this documentation. I‚Äôm also curious what this interface depends on‚Äî might give some insight on thinking about the stability of this interface.Ôøº</p>",
        "id": 256318888,
        "sender_full_name": "Luis Gutierrez",
        "timestamp": 1633467937
    },
    {
        "content": "<p>I am also interested in some kind of documentation on these things!</p>\n<p>What is the \"glue\"?<br>\nWhat is needed to start a platform from scratch using a C compiler and the roc binary?<br>\nAre there any assumptions or dependency on Rust tooling in order to set up a platform from scratch?</p>",
        "id": 303408738,
        "sender_full_name": "Thomas",
        "timestamp": 1665488481
    },
    {
        "content": "<p>I'm definitely not a platform expert but to the best of my knowledge:</p>\n<blockquote>\n<p>What is the \"glue\"?</p>\n</blockquote>\n<p>Our <a href=\"https://github.com/roc-lang/roc/tree/main/crates/glue\">glue rust crate</a> <a href=\"https://github.com/roc-lang/roc/blob/main/crates/glue/src/glue.rs\">generates rust code</a> to connect a roc app with its rust platform.</p>\n<blockquote>\n<p>What is needed to start a platform from scratch using a C compiler and the roc binary?</p>\n</blockquote>\n<p>Check out <a href=\"https://github.com/roc-lang/roc/blob/main/crates/cli_testing_examples/platform-switching/c-platform/host.c\">this c platform example</a>.</p>\n<blockquote>\n<p>Are there any assumptions or dependency on Rust tooling in order to set up a platform from scratch?</p>\n</blockquote>\n<p>Our glue generator is made for rust platforms. If you want to work with a c platform no Rust tooling is necessary.</p>",
        "id": 303410595,
        "sender_full_name": "Anton",
        "timestamp": 1665489212
    },
    {
        "content": "<p>I have looked at c-platform / zig-platform and friends here, but I'm mostly confused about how to go from pf.roc + main.roc into something runnable I think...</p>\n<p>Does Roc make assumptions about the name or location about my host.c file? (or host.o or similar?)</p>\n<p>What exactly do I need to provide to a Roc platform from the native side assuming I start out with a host.c file exactly like the above link</p>",
        "id": 303411030,
        "sender_full_name": "Thomas",
        "timestamp": 1665489368
    },
    {
        "content": "<p>I tried the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>platform &quot;basic&quot;\n    requires {} { main : Str }\n    exposes []\n    packages {}\n    imports []\n    provides [mainForHost]\n\nmainForHost = main\n</code></pre></div>\n<p>And I got the following when attempting <code>roc run</code> (main.roc)</p>\n<div class=\"codehilite\"><pre><span></span><code>üî® Rebuilding platform...\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: https://github.com/roc-lang/roc/issues/new/choose\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;No such file or directory (os error 2)&#39;, crates/linker/src/lib.rs:357:29\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nthread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Any { .. }&#39;, crates/cli/src/build.rs:307:46\n</code></pre></div>\n<p>What is the \"internal compiler expectation\", and how to I fulfill it rather than breaking it?</p>",
        "id": 303411863,
        "sender_full_name": "Thomas",
        "timestamp": 1665489647
    },
    {
        "content": "<p>Interestingly, if I make an empty host.c file in the same directory, I get the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>üî® Rebuilding platform...\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }&#39;, crates/compiler/build/src/link.rs:456:22\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nthread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Any { .. }&#39;, crates/cli/src/build.rs:307:46\n</code></pre></div>",
        "id": 303422005,
        "sender_full_name": "Thomas",
        "timestamp": 1665489696
    },
    {
        "content": "<p>Can you run examples/helloWorld.roc without errors?</p>",
        "id": 303422109,
        "sender_full_name": "Anton",
        "timestamp": 1665489728
    },
    {
        "content": "<p>No, because I don't have the Rust tooling correctly set up on my machine</p>",
        "id": 303422236,
        "sender_full_name": "Thomas",
        "timestamp": 1665489772
    },
    {
        "content": "<p>How about crates/cli_testing_examples/platform-switching/rocLovesC.roc?</p>",
        "id": 303422471,
        "sender_full_name": "Anton",
        "timestamp": 1665489854
    },
    {
        "content": "<p>I'll have to clone the repo, give me a second<br>\nI just have the nightly release atm</p>",
        "id": 303422625,
        "sender_full_name": "Thomas",
        "timestamp": 1665489908
    },
    {
        "content": "<p>Wow, that is actually interesting</p>",
        "id": 303423153,
        "sender_full_name": "Thomas",
        "timestamp": 1665489980
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>~/Projects/github.com/roc-lang/roc/crates/cli_testing_examples/platform-switching$ roc run rocLovesC.roc\n\n# (Padding added for separation)\n\nüî® Rebuilding platform...\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }&#39;, crates/compiler/build/src/link.rs:456:22\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nthread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Any { .. }&#39;, crates/cli/src/build.rs:307:46\n</code></pre></div>",
        "id": 303423198,
        "sender_full_name": "Thomas",
        "timestamp": 1665490003
    },
    {
        "content": "<p>I have roc_nightly-linux_x86_64-2022-10-10-07ceabc</p>",
        "id": 303423294,
        "sender_full_name": "Thomas",
        "timestamp": 1665490041
    },
    {
        "content": "<p>I do have a boken rustc in my PATH, could that be messing with Roc's assumptions? I'll try removing it</p>",
        "id": 303423462,
        "sender_full_name": "Thomas",
        "timestamp": 1665490093
    },
    {
        "content": "<p>Not sure what OS you are on but I think you need to do your equivalent of <code>sudo apt install build-essential clang</code></p>",
        "id": 303423633,
        "sender_full_name": "Anton",
        "timestamp": 1665490167
    },
    {
        "content": "<p>I am on Debian 11, but is there a way for me to do my host building myself? Or will Roc always rely on system-installed build tools no matter what I do?</p>",
        "id": 303424155,
        "sender_full_name": "Thomas",
        "timestamp": 1665490220
    },
    {
        "content": "<p>We have a flag you can pass to the roc binary something like --prebuilt-platform that would allow you to build the host yourself I think.</p>",
        "id": 303424411,
        "sender_full_name": "Anton",
        "timestamp": 1665490325
    },
    {
        "content": "<p>I'll look for this, thanks :)</p>",
        "id": 303424441,
        "sender_full_name": "Thomas",
        "timestamp": 1665490337
    },
    {
        "content": "<p>I'm going to be AFK for 10 mins</p>",
        "id": 303424485,
        "sender_full_name": "Anton",
        "timestamp": 1665490359
    },
    {
        "content": "<p>Roc now spits out <a href=\"http://libapp.so\">libapp.so</a> apparently! (but still errors with the above error) I'll mess around a bit with this file</p>",
        "id": 303425218,
        "sender_full_name": "Thomas",
        "timestamp": 1665490618
    },
    {
        "content": "<p>I'm not entirely sure what I did differently</p>",
        "id": 303425274,
        "sender_full_name": "Thomas",
        "timestamp": 1665490645
    },
    {
        "content": "<p>Can you tell me what <code>clang --version</code> returns?</p>",
        "id": 303426798,
        "sender_full_name": "Anton",
        "timestamp": 1665491192
    },
    {
        "content": "<p>I didn't really build anything yet, I don't have clang installed globally, but I would use zig cc, so that returns <code>clang version 15.0.0 (git@github.com:ziglang/zig-bootstrap.git 9be8396b715b10f64d8a94b2d0d9acb77126d8ca)</code></p>",
        "id": 303427622,
        "sender_full_name": "Thomas",
        "timestamp": 1665491525
    },
    {
        "content": "<p>Roc spits out <a href=\"http://libapp.so\">libapp.so</a> without any global clang installation when I just do <code>roc build</code> now, and it seems to have roc__mainForHost symbols in it, although Roc still crashes with that Rust error above</p>",
        "id": 303427827,
        "sender_full_name": "Thomas",
        "timestamp": 1665491615
    },
    {
        "content": "<p>Do you want a Rust stack trace?</p>",
        "id": 303427852,
        "sender_full_name": "Thomas",
        "timestamp": 1665491630
    },
    {
        "content": "<p>Summarized:<br>\nGiven files:<br>\npf.roc:</p>\n<div class=\"codehilite\"><pre><span></span><code>platform &quot;basic&quot;\n    requires {} { main : Str }\n    exposes []\n    packages {}\n    imports []\n    provides [mainForHost]\n\nmainForHost = main\n</code></pre></div>\n<p>main.roc:</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;basic&quot;\n    packages { pf: &quot;pf.roc&quot; }\n    imports []\n    provides [main] to pf\n\nmain = &quot;Hello&quot;\n</code></pre></div>\n<p>Running <code>roc build</code> will produce <a href=\"http://libapp.so\">libapp.so</a> in current folder and then crash with the following message (with RUST_BACKTRACE=1)</p>\n<div class=\"codehilite\"><pre><span></span><code>üî® Rebuilding platform...\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: https://github.com/roc-lang/roc/issues/new/choose\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;No such file or directory (os error 2)&#39;, crates/linker/src/lib.rs:357:29\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/std/src/panicking.rs:584:5\n   1: core::panicking::panic_fmt\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/core/src/panicking.rs:143:14\n   2: roc_linker::open_mmap\n   3: roc_linker::elf::preprocess_elf\n   4: roc_linker::build_and_preprocess_host\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\nthread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Any { .. }&#39;, crates/cli/src/build.rs:307:46\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/std/src/panicking.rs:584:5\n   1: core::panicking::panic_fmt\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/core/src/panicking.rs:143:14\n   2: core::result::unwrap_failed\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/core/src/result.rs:1785:5\n   3: roc_cli::build::build_file\n   4: roc_cli::build\n   5: roc::main\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>\n</code></pre></div>",
        "id": 303428267,
        "sender_full_name": "Thomas",
        "timestamp": 1665491777
    },
    {
        "content": "<p>(Without rustc or clang in PATH)</p>",
        "id": 303428366,
        "sender_full_name": "Thomas",
        "timestamp": 1665491815
    },
    {
        "content": "<p>If I pass <code>--prebuilt-platform true</code> it will NOT produce a <a href=\"http://libapp.so\">libapp.so</a> file, and will crash with a similar, but slightly different error:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }&#39;, crates/cli/src/build.rs:451:74\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/std/src/panicking.rs:584:5\n   1: core::panicking::panic_fmt\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/core/src/panicking.rs:143:14\n   2: core::result::unwrap_failed\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/core/src/result.rs:1785:5\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\nthread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Any { .. }&#39;, crates/cli/src/build.rs:307:46\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/std/src/panicking.rs:584:5\n   1: core::panicking::panic_fmt\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/core/src/panicking.rs:143:14\n   2: core::result::unwrap_failed\n             at /rustc/fe5b13d681f25ee6474be29d748c65adcd91f69e/library/core/src/result.rs:1785:5\n   3: roc_cli::build::build_file\n   4: roc_cli::build\n   5: roc::main\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n</code></pre></div>",
        "id": 303429047,
        "sender_full_name": "Thomas",
        "timestamp": 1665492059
    },
    {
        "content": "<p>The \"No such file or directory\" is because roc is trying to call <code>clang</code>, see <a href=\"https://github.com/roc-lang/roc/blob/940be28ef03cff647c048e59e8b147d948cc0372/crates/compiler/build/src/link.rs#L407\">this line</a>.</p>",
        "id": 303435694,
        "sender_full_name": "Anton",
        "timestamp": 1665494386
    },
    {
        "content": "<p>Only the code path where I don't pass <code>--prebuilt-platform true</code> actually compiles the Roc code though, I'm not sure how to tell it to not compile anything except the Roc parts</p>",
        "id": 303442810,
        "sender_full_name": "Thomas",
        "timestamp": 1665496472
    },
    {
        "content": "<blockquote>\n<p>value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }'</p>\n</blockquote>\n<p>i've seen the same error due to missing clang install.  i wonder how difficult it would be to improve that from a panic to  error message stating something like \"'clang' couldn't be found\"?  and the same for when rust/zig arent found. i've been confused by similar error messages due to not having a rust compiler.</p>",
        "id": 303446845,
        "sender_full_name": "Travis",
        "timestamp": 1665497578
    },
    {
        "content": "<p>i'm on debian too. at the time i had clang-14 installed. my solution was to just <code>ln -s /usr/bin/clang-14 ~/.local/bin/clang</code>. this assumes ~/.local/bin is in your path.</p>",
        "id": 303447376,
        "sender_full_name": "Travis",
        "timestamp": 1665497726
    },
    {
        "content": "<p>but then i was told by richard that roc expects clang-13 and that while 14 might be an ok alternative its not recommended</p>",
        "id": 303448069,
        "sender_full_name": "Travis",
        "timestamp": 1665497899
    },
    {
        "content": "<p>Platforms and building them currently have a lot of sharp edges. We definitely need to plan out and improve their development. Currently, the compiler just implicitly knows a number of commands for building various types of platforms, but it is definitely not scalable. It also does not give good error messages. Long term there are many larger plans around platforms (and the ecosystem), but currently the knowledge is pretty sparse.</p>",
        "id": 303448438,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665498005
    },
    {
        "content": "<blockquote>\n<p>but then i was told by richard that roc expects clang-13 and that 14 might be an ok alternative but not recommended</p>\n</blockquote>\n<p>Shouldn't actually matter. Richard was trying to match llvm versions, but we consume the platform as an object file which is fully compiled to assembly, so no llvm matching needs to be done.</p>",
        "id": 303448590,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665498052
    },
    {
        "content": "<blockquote>\n<p>What is the \"glue\"?</p>\n</blockquote>\n<p>Extra not on glue, the long term plan is for it to generate a mix of languages using plugins that anyone can write. Currently rust is just the only supported language.</p>",
        "id": 303448768,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665498112
    },
    {
        "content": "<p>hmm in that case if Thomas already has zig installed maybe just symlink or alias clang to 'zig cc'?</p>",
        "id": 303448928,
        "sender_full_name": "Travis",
        "timestamp": 1665498149
    },
    {
        "content": "<blockquote>\n<p>Does Roc make assumptions about the name or location about my host.c file? (or host.o or similar?)</p>\n</blockquote>\n<p>Yes. That is all adhoc right now</p>",
        "id": 303448932,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665498150
    },
    {
        "content": "<blockquote>\n<p>hmm in that case if Thomas already has zig installed maybe just symlink or alias clang to 'zig cc'?</p>\n</blockquote>\n<p>Yeah, that should theoretically work. Though have to make sure the roc program actually reads the alias. Some shells don't seem to pass aliases to run applications (not sure exactly how that works).</p>",
        "id": 303449294,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665498261
    },
    {
        "content": "<p>Definitely should work to put a <code>clang</code> shell script in your path that just called <code>zig cc</code> with all of the args.</p>",
        "id": 303449395,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665498295
    },
    {
        "content": "<p>As an extra note, platform pains are extra apparent because we don't have any form of package ecosystem yet. Long term, end users won't need to compile platforms (at least generally speaking). The compiler will download a prebuilt platform and link to that. As such, you would see these errors unless creating a new platform</p>",
        "id": 303449791,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665498413
    },
    {
        "content": "<p>Also, roc has an option to not link and just dump an object file that can be consumed by anything. That is how I got roc running on a microcontroller, for example. Using that feature means you could use another languages build tooling if wanted.</p>",
        "id": 303450246,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665498533
    },
    {
        "content": "<p>Also, I think this points more towards the need for a platform dev beginners sessions (along with a write up probably). It used to be that the api change a lot, so we really didn't want to try and document it. Now it has been much more stable, so some good docs and better error messages would probably be worth investing in.</p>",
        "id": 303450555,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665498608
    },
    {
        "content": "<p>Any appetite for Roc Meetup #2? I was thinking maybe mid/late November, to give time for both Roctoberfest and AoC23</p>",
        "id": 303455531,
        "sender_full_name": "jan kili",
        "timestamp": 1665499933
    },
    {
        "content": "<p>Haha, just posted a comment about it and in beginners chat.</p>",
        "id": 303455621,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665499960
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"551275\">Travis</span> <a href=\"#narrow/stream/302903-Writing-a-platform/topic/Thinking.20out.20loud/near/303448928\">said</a>:</p>\n<blockquote>\n<p>hmm in that case if Thomas already has zig installed maybe just symlink or alias clang to 'zig cc'?</p>\n</blockquote>\n<p>I'll try this, thanks :)</p>",
        "id": 303868301,
        "sender_full_name": "Thomas",
        "timestamp": 1665676435
    },
    {
        "content": "<p>Seems like I got quite a bit further this time around, I made a <code>host.zig</code> file and populated it with stubs, now I'm running into this (<code>roc build &amp;&amp; ./basic</code>):</p>\n<div class=\"codehilite\"><pre><span></span><code>üî® Rebuilding platform...\n0 errors and 0 warnings found in 767 ms while successfully building:\n\n    basic\n./basic: symbol lookup error: ./basic: undefined symbol: roc__mainForHost_1_exposed_generic\n</code></pre></div>\n<p>main.roc:</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;basic&quot;\n    packages { pf: &quot;pf.roc&quot; }\n    imports []\n    provides [main] to pf\n\nmain = &quot;Hello&quot;\n</code></pre></div>\n<p>pf.roc:</p>\n<div class=\"codehilite\"><pre><span></span><code>platform &quot;basic&quot;\n    requires {} { main : Str }\n    exposes []\n    packages {}\n    imports []\n    provides [mainForHost]\n\nmainForHost = main\n</code></pre></div>",
        "id": 305096814,
        "sender_full_name": "Thomas",
        "timestamp": 1666252389
    },
    {
        "content": "<p>Here's my host.zig file:</p>\n<div class=\"codehilite\" data-code-language=\"Zig\"><pre><span></span><code><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">@import</span><span class=\"p\">(</span><span class=\"s\">\"std\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"kr\">extern</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"n\">roc__mainForHost_1_exposed_generic</span><span class=\"p\">([</span><span class=\"o\">*</span><span class=\"p\">]</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"kr\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kr\">var</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1024</span><span class=\"p\">]</span><span class=\"kt\">u8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">undefined</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">roc__mainForHost_1_exposed_generic</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">buf</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"p\">.</span><span class=\"n\">getStdOut</span><span class=\"p\">().</span><span class=\"n\">writer</span><span class=\"p\">().</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s\">\"{any}</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.{</span><span class=\"n\">buf</span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"k\">catch</span><span class=\"w\"> </span><span class=\"p\">{};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"kr\">export</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"n\">roc_alloc</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"p\">.</span><span class=\"n\">getStdOut</span><span class=\"p\">().</span><span class=\"n\">writeAll</span><span class=\"p\">(</span><span class=\"s\">\"roc_alloc</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">catch</span><span class=\"w\"> </span><span class=\"p\">{};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"kr\">export</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"n\">roc_realloc</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"p\">.</span><span class=\"n\">getStdOut</span><span class=\"p\">().</span><span class=\"n\">writeAll</span><span class=\"p\">(</span><span class=\"s\">\"roc_realloc</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">catch</span><span class=\"w\"> </span><span class=\"p\">{};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"kr\">export</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"n\">roc_dealloc</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"p\">.</span><span class=\"n\">getStdOut</span><span class=\"p\">().</span><span class=\"n\">writeAll</span><span class=\"p\">(</span><span class=\"s\">\"roc_dealloc</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">catch</span><span class=\"w\"> </span><span class=\"p\">{};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"kr\">export</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"n\">roc_panic</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"p\">.</span><span class=\"n\">getStdOut</span><span class=\"p\">().</span><span class=\"n\">writeAll</span><span class=\"p\">(</span><span class=\"s\">\"roc_panic</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">catch</span><span class=\"w\"> </span><span class=\"p\">{};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"kr\">export</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"n\">roc_memcpy</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"p\">.</span><span class=\"n\">getStdOut</span><span class=\"p\">().</span><span class=\"n\">writeAll</span><span class=\"p\">(</span><span class=\"s\">\"roc_memcpy</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">catch</span><span class=\"w\"> </span><span class=\"p\">{};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"kr\">export</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"n\">roc_memset</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"p\">.</span><span class=\"n\">getStdOut</span><span class=\"p\">().</span><span class=\"n\">writeAll</span><span class=\"p\">(</span><span class=\"s\">\"roc_memset</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">catch</span><span class=\"w\"> </span><span class=\"p\">{};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 305096961,
        "sender_full_name": "Thomas",
        "timestamp": 1666252457
    },
    {
        "content": "<p>hmm</p>",
        "id": 305110463,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666258012
    },
    {
        "content": "<p>not sure, this looks very similar to the <code>examples/platform-switching/zig-platform/host.zig</code>, which is working fine</p>",
        "id": 305110524,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666258035
    },
    {
        "content": "<p>why are you passing a <code>const</code> pointer to <code>mainForHost</code>? we're going to write stuff into that pointer</p>",
        "id": 305110613,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666258075
    },
    {
        "content": "<p>to debug this you'd kind of need to look at the generated llvm IR. are you using nix on linux/mac?</p>",
        "id": 305110753,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666258122
    },
    {
        "content": "<p>if so you can add the <code>--debug</code> flag, and it will spit out annotated llvm IR next to the .roc file of your app</p>",
        "id": 305110819,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666258152
    },
    {
        "content": "<p>you need the <code>debugir</code> tool for this which I believe the nix thing will install. You can also build it from source yourself of course</p>",
        "id": 305110895,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666258188
    },
    {
        "content": "<p>(which is what I do)</p>",
        "id": 305110904,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666258194
    },
    {
        "content": "<p>yes, <code>nix develop</code> will automatically have debugir available.</p>",
        "id": 305112738,
        "sender_full_name": "Anton",
        "timestamp": 1666258981
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/302903-Writing-a-platform/topic/Thinking.20out.20loud/near/305110753\">said</a>:</p>\n<blockquote>\n<p>to debug this you'd kind of need to look at the generated llvm IR. are you using nix on linux/mac?</p>\n</blockquote>\n<p>No, I'm just a user trying to bootstrap a basic app + platform from nothing, I'm not on nix</p>",
        "id": 305118041,
        "sender_full_name": "Thomas",
        "timestamp": 1666261184
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/302903-Writing-a-platform/topic/Thinking.20out.20loud/near/305110613\">said</a>:</p>\n<blockquote>\n<p>why are you passing a <code>const</code> pointer to <code>mainForHost</code>? we're going to write stuff into that pointer</p>\n</blockquote>\n<p>Changed, heh, I'm really just trying things until it sticks</p>",
        "id": 305118168,
        "sender_full_name": "Thomas",
        "timestamp": 1666261223
    },
    {
        "content": "<p>right well that symbol should exist, so I'm interested to see what llvm generated</p>",
        "id": 305119952,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666261717
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/302903-Writing-a-platform/topic/Thinking.20out.20loud/near/305119952\">said</a>:</p>\n<blockquote>\n<p>right well that symbol should exist, so I'm interested to see what llvm generated</p>\n</blockquote>\n<p>Can you reproduce the issue on your machine? I posted all files I used</p>",
        "id": 305125523,
        "sender_full_name": "Thomas",
        "timestamp": 1666263335
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/302903-Writing-a-platform/topic/Thinking.20out.20loud/near/305119952\">said</a>:</p>\n<blockquote>\n<p>right well that symbol should exist, so I'm interested to see what llvm generated</p>\n</blockquote>\n<p>I got the LLVM IR, from what I can tell, it does output something that looks correct:</p>\n<div class=\"codehilite\" data-code-language=\"LLVM\"><pre><span></span><code><span class=\"k\">define</span><span class=\"w\"> </span><span class=\"k\">void</span><span class=\"w\"> </span><span class=\"vg\">@roc__mainForHost_1_exposed_generic</span><span class=\"p\">(</span><span class=\"nv\">%str.RocStr</span><span class=\"p\">*</span><span class=\"w\"> </span><span class=\"nv nv-Anonymous\">%0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"/user_uploads/22008/jI5ZZL2joQ5PxuXBNgg4816D/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/jI5ZZL2joQ5PxuXBNgg4816D/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/jI5ZZL2joQ5PxuXBNgg4816D/image.png\"></a></div>",
        "id": 305795994,
        "sender_full_name": "Thomas",
        "timestamp": 1666610449
    },
    {
        "content": "<p>I'll try making a git repo for this stuff I think, but first I'll try upgrading</p>",
        "id": 305796229,
        "sender_full_name": "Thomas",
        "timestamp": 1666610547
    }
]