[
    {
        "content": "<p>When I try to use Num.sqrt or Num.sqrtChecked or Num.pow 1/2 I get some variant of </p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;internal error: entered unreachable code: Unrecognized dec binary operation: NumPow&#39;, crates/compiler/gen_llvm/src/llvm/lowlevel.rs:2386:13\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>am I doing something wrong or is this just not built out yet?</p>\n<p>powInt seems to work just fine though.</p>\n<p>Full stacktrace doesn't seem super useful</p>\n<div class=\"codehilite\" data-code-language=\"thread\"><pre><span></span><code>stack backtrace:\n   0:        0x10381d9fc - __mh_execute_header\n   1:        0x102dd586c - __mh_execute_header\n   2:        0x1038196a4 - __mh_execute_header\n   3:        0x10381d814 - __mh_execute_header\n   4:        0x103821550 - __mh_execute_header\n   5:        0x1038212fc - __mh_execute_header\n   6:        0x103821b34 - __mh_execute_header\n   7:        0x103821920 - __mh_execute_header\n   8:        0x1038204bc - __mh_execute_header\n   9:        0x1038216d4 - __mh_execute_header\n  10:        0x106233570 - __ZN4llvm15SmallVectorBaseIyE8grow_podEPvmm\n  11:        0x103258a48 - __mh_execute_header\n  12:        0x103222f90 - __mh_execute_header\n  13:        0x103227418 - __mh_execute_header\n  14:        0x10322d7bc - __mh_execute_header\n  15:        0x103237c4c - __mh_execute_header\n  16:        0x103234f88 - __mh_execute_header\n  17:        0x10360029c - __mh_execute_header\n  18:        0x1030509cc - __mh_execute_header\n  19:        0x102f61ca0 - __mh_execute_header\n  20:        0x102f57fa4 - __mh_execute_header\n  21:        0x102f57fc8 - __mh_execute_header\n  22:        0x1038124fc - __mh_execute_header\n  23:        0x102f650f4 - __mh_execute_header```\n</code></pre></div>",
        "id": 406339060,
        "sender_full_name": "Pearce Keesling",
        "timestamp": 1701879149
    },
    {
        "content": "<p>This happens in roc test, roc run (with or without optimize), and in the repl</p>",
        "id": 406339155,
        "sender_full_name": "Pearce Keesling",
        "timestamp": 1701879185
    },
    {
        "content": "<p>I thought we had caught all of these for our custom <code>Dec</code> type, but I guess not. For now, you can use <code>F32</code> or <code>F64</code> as the type and that should workaround this</p>",
        "id": 406339862,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701879401
    },
    {
        "content": "<p>tracked in <a href=\"https://github.com/roc-lang/roc/issues/6208\">#6208</a></p>",
        "id": 406341102,
        "sender_full_name": "Anton",
        "timestamp": 1701879817
    },
    {
        "content": "<p>Oh awesome thanks for the quick unblock!</p>",
        "id": 406341871,
        "sender_full_name": "Pearce Keesling",
        "timestamp": 1701880079
    }
]