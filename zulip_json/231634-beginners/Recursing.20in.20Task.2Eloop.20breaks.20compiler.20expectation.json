[
    {
        "content": "<p>When making a recursive call inside a <code>Task.loop</code>, the compiler crashes with:</p>\n<div class=\"codehilite\"><pre><span></span><code>An internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nI thought a non-nullable-unwrapped variant for a lambda set was impossible: how could such a lambda set be created without a base case?\nLocation: crates/compiler/mono/src/layout.rs:1705:61\n</code></pre></div>\n<p>Min repro:</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">app</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">main</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"ss\">cli</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"no\">Task</span><span class=\"o\">.</span><span class=\"n\">loop</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">\\{}</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"no\">Task</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"no\">Step</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">main!</span><span class=\"p\">))</span>\n</code></pre></div>",
        "id": 472590124,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1727222217
    },
    {
        "content": "<p>This is a reduction from the following, which produces the same error:</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">app</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">main</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"ss\">cli</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"> </span><span class=\"s2\">\"https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">Stdout</span>\n<span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">cli</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"w\"> </span><span class=\"n\">exposing</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"no\">Path</span><span class=\"o\">]</span>\n\n<span class=\"n\">main</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">Task</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"n\">_</span>\n<span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">    </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fileTree!</span><span class=\"w\"> </span><span class=\"s2\">\".\"</span>\n<span class=\"w\">    </span><span class=\"no\">Stdout</span><span class=\"o\">.</span><span class=\"n\">line!</span><span class=\"w\"> </span><span class=\"n\">str</span>\n\n<span class=\"n\">fileTree</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"no\">Task</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"w\"> </span><span class=\"n\">_</span>\n<span class=\"n\">fileTree</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">\\</span><span class=\"n\">pathStr</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"no\">Path</span><span class=\"o\">.</span><span class=\"n\">fromStr</span><span class=\"w\"> </span><span class=\"n\">pathStr</span>\n<span class=\"w\">    </span><span class=\"n\">fileTreeHelper</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"n\">fileTreeHelper</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">Path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">U64</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"no\">Task</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"w\"> </span><span class=\"n\">_</span>\n<span class=\"n\">fileTreeHelper</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">\\</span><span class=\"n\">basePath</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"n\">prependNewline</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">\\</span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"o\">.</span><span class=\"n\">isEmpty</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"w\"> </span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"w\"> </span><span class=\"n\">str</span>\n<span class=\"w\">    </span><span class=\"n\">appendNewline</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">\\</span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"o\">.</span><span class=\"n\">isEmpty</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n<span class=\"w\">    </span><span class=\"n\">prefix</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"s2\">\"\"</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"no\">Str</span><span class=\"o\">.</span><span class=\"n\">repeat</span><span class=\"w\"> </span><span class=\"s2\">\"  \"</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"w\"> </span><span class=\"s2\">\"- \"</span>\n<span class=\"w\">    </span><span class=\"n\">contents</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"no\">Path</span><span class=\"o\">.</span><span class=\"n\">listDir!</span><span class=\"w\"> </span><span class=\"n\">basePath</span>\n<span class=\"w\">    </span><span class=\"n\">buildStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">\\</span><span class=\"n\">previous</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">subcontents</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"s2\">\"$(appendNewline previous)$(prefix)$(current)$(subcontents)\"</span>\n\n<span class=\"w\">    </span><span class=\"c1\"># yes, this would be cleaner with pure recursion... 🙄</span>\n<span class=\"w\">    </span><span class=\"no\">Task</span><span class=\"o\">.</span><span class=\"n\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">accumulation</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">paths</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">contents</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">\\{</span><span class=\"w\"> </span><span class=\"n\">accumulation</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">paths</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"n\">paths</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">            </span><span class=\"o\">[]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"no\">Task</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"no\">Done</span><span class=\"w\"> </span><span class=\"n\">accumulation</span><span class=\"p\">)</span>\n\n<span class=\"w\">            </span><span class=\"o\">[</span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"n\">as</span><span class=\"w\"> </span><span class=\"n\">pathsTail</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"no\">Path</span><span class=\"o\">.</span><span class=\"n\">isDir!</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"k\">then</span>\n<span class=\"w\">                    </span><span class=\"n\">subcontents</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fileTreeHelper!</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">depth</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">prependNewline</span>\n<span class=\"w\">                    </span><span class=\"n\">newString</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">buildStr</span><span class=\"w\"> </span><span class=\"n\">accumulation</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"no\">Path</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">subcontents</span>\n<span class=\"w\">                    </span><span class=\"no\">Task</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"no\">Step</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">accumulation</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">newString</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">paths</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">pathsTail</span><span class=\"w\"> </span><span class=\"p\">})</span>\n<span class=\"w\">                </span><span class=\"k\">else</span>\n<span class=\"w\">                    </span><span class=\"n\">newString</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">buildStr</span><span class=\"w\"> </span><span class=\"n\">accumulation</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"no\">Path</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"s2\">\"\"</span>\n<span class=\"w\">                    </span><span class=\"no\">Task</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"no\">Step</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">accumulation</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">newString</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">paths</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">pathsTail</span><span class=\"w\"> </span><span class=\"p\">})</span>\n</code></pre></div>",
        "id": 472590215,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1727222284
    },
    {
        "content": "<p>Almost certainly unrelated to <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/Compiler.20panic.20with.20module.20params\">#beginners &gt; Compiler panic with module params</a> , but both bugs involve <code>Task.loop</code>.</p>",
        "id": 472590421,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1727222430
    },
    {
        "content": "<p>Note that in the full code version, changing </p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"no\">Task</span><span class=\"o\">.</span><span class=\"n\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"ss\">accumulation</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"err\">“”</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">paths</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">contents</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">\\{</span><span class=\"w\"> </span><span class=\"n\">accumulation</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">paths</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n</code></pre></div>\n<p>To</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"no\">Task</span><span class=\"o\">.</span><span class=\"n\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"ss\">accumulation</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"err\">“”</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">paths</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">Path</span><span class=\"o\">.</span><span class=\"n\">listDir!</span><span class=\"w\"> </span><span class=\"n\">basePath</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">\\{</span><span class=\"w\"> </span><span class=\"n\">accumulation</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">paths</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n</code></pre></div>\n<p>Produces another error of its own.</p>",
        "id": 472597356,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1727228119
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"518883\">@Ian McLerran</span>, I added your reproduction to <a href=\"https://github.com/roc-lang/roc/issues/6252\">#6252</a></p>",
        "id": 472854207,
        "sender_full_name": "Anton",
        "timestamp": 1727343362
    }
]