[
    {
        "content": "<p>Hi, I am trying to make a helper function to lookup a value or lazyly calculate it if the key is not present in the cache.</p>\n<p>Is it possible to make a function with bound parameters but not call it until later?</p>\n<p>This is what I got so far:</p>\n<div class=\"codehilite\"><pre><span></span><code>getOrCalculate: Dict a b, a, (() -&gt; b) -&gt; b\ngetOrCalculate = \\cache, id, calculateFn -&gt;\n    when Dict.get id is\n        Ok v -&gt;\n            { cache, value: v }\n        Err KeyNotFound -&gt;\n            v = calculateFn\n            { cache: Dict.insert cache id v, value: v }\n</code></pre></div>\n<p>and it fails because <code>()</code> is not the right way to type \"a function with no parameters\", but how do I make it <em>not</em> be just a const?</p>\n<div class=\"codehilite\"><pre><span></span><code>I am partway through parsing a parenthesized type:\n\n48â”‚  getOrCalculate: Dict a b, a, (() -&gt; b) -&gt; b\n</code></pre></div>",
        "id": 405770717,
        "sender_full_name": "Johan Lindskogen",
        "timestamp": 1701678376
    },
    {
        "content": "<p>Use can use <code>{}</code> an empty record to make a thunk</p>",
        "id": 405770862,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701678449
    },
    {
        "content": "<p>Try </p>\n<div class=\"codehilite\"><pre><span></span><code>getOrCalculate: Dict a b, a, ({} -&gt; b) -&gt; (Dict a b, b)\ngetOrCalculate = \\cache, id, calculateFn -&gt;\n    when Dict.get cache id is\n        Ok v -&gt; (cache, v)\n        Err KeyNotFound -&gt;\n            v = calculateFn {}\n            (Dict.insert cache id v, v)\n</code></pre></div>",
        "id": 405771202,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701678589
    },
    {
        "content": "<p>Oh, cool! I will try that! Thank you for the response!</p>",
        "id": 405772275,
        "sender_full_name": "Johan Lindskogen",
        "timestamp": 1701678968
    },
    {
        "content": "<p>Works as a charm! This is what I ended up with!</p>\n<div class=\"codehilite\"><pre><span></span><code>getOrCalculate : Dict a b, a, ({} -&gt; b) -&gt; { updatedCache : Dict a b, value : b }\ngetOrCalculate = \\cache, id, calculateFn -&gt;\n    when Dict.get cache id is\n        Ok v -&gt;\n            { updatedCache: cache, value: v }\n\n        Err KeyNotFound -&gt;\n            v = calculateFn {}\n            { updatedCache: Dict.insert cache id v, value: v }\n</code></pre></div>",
        "id": 405778465,
        "sender_full_name": "Johan Lindskogen",
        "timestamp": 1701680712
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"668691\">Johan Lindskogen</span> has marked this topic as resolved.</p>",
        "id": 405778476,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701680716
    }
]