[
    {
        "content": "<p>Two days ago, I gave a presentation on parser combinators, and it was a great success! However, due to issues I encountered in <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/channel/231634-beginners/topic/Why.20is.20my.20parser.20causing.20a.20stack.20overflow.3F/with/501389940\">#beginners &gt; Why is my parser causing a stack overflow?</a>, I had to switch the talk from Roc to Elm. During the Q&amp;A, I noticed some confusion about currying, and I believe the presentation would have been even better if I had used Roc.</p>\n<p>That said, there’s interest in delivering the talk with Roc, though I’m not sure when that will be possible given the current challenges. Although <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> kindly found a workaround, I’d prefer to wait until the issue is fully resolved rather than implement a temporary fix.</p>\n<p>My question is: Is there an ETA on when the new compiler will be released? No rush at all—I just want to manage the expectations of the Roc enthusiasts from my recent presentation.</p>",
        "id": 502727426,
        "sender_full_name": "Kevin Hovsäter",
        "timestamp": 1740820126
    },
    {
        "content": "<p>Short answer, no ETA yet</p>",
        "id": 502727531,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740820231
    },
    {
        "content": "<p>We'd love to give a date, but there's enough changes that we're making architecturally at the same time as we are rewriting the whole thing to make it a hard estimate</p>",
        "id": 502727580,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740820297
    },
    {
        "content": "<p>We'd like to have v0.1.0 released this year, which should be possible, but it's hard to make a guarantee</p>",
        "id": 502727595,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740820319
    },
    {
        "content": "<p>That all said, we'll definitely have a \"fully-working compiler\" that you can run yourself in the next few months, but it won't have all the features yet, just a basic set of features working end-to-end</p>",
        "id": 502727657,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740820359
    },
    {
        "content": "<p>Said version would be compiled from source, which isn't that hard, but still, it won't be \"published\" per se</p>",
        "id": 502727679,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740820390
    },
    {
        "content": "<p>Yeah, it's hard to estimate. Everyone working on the new compiler is volunteering their time around personal commitments and work. </p>\n<p>We're pretty excited about it, and things are happening really fast, but I don't know how to estimate how far away a working compiler is yet.</p>",
        "id": 502729012,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1740821546
    },
    {
        "content": "<p>Im personally really keen to build an online playground, and exploring the embedded use cases for roc. I think that will be much nicer with our new designs. We might even have something experimental sooner because that's mostly using the dev interpreter and not the full llvm build pipeline.</p>",
        "id": 502729143,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1740821657
    },
    {
        "content": "<p>That's completely fair. Thanks for the update. Could you clarify what counts as \"essential features\"? My parser is pretty basic aside from opaque types, but if I'm not mistaken, the current implementation for opaque types won't be included in the new compiler.</p>\n<p>I'm willing to help out wherever possible, though I'm not quite sure where to get started. Please let me know if there's any way I can contribute. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 502729291,
        "sender_full_name": "Kevin Hovsäter",
        "timestamp": 1740821769
    },
    {
        "content": "<p>There's lots of stuff you can help out with!</p>",
        "id": 502729320,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740821802
    },
    {
        "content": "<p>But to answer your question, \"essential features\" that will get us on the ground and running would be the ability to write multiple modules which include functions and strings, and that's enough to show that everything works together</p>",
        "id": 502729443,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740821894
    },
    {
        "content": "<p>We'll be starting with the new interpreter which picks things up post typechecking</p>",
        "id": 502729466,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740821915
    },
    {
        "content": "<p>Meaning the whole second half of the compiler (the build phase) won't block us from getting code running</p>",
        "id": 502729492,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740821942
    },
    {
        "content": "<p>Feel free to DM me or any of the contributors if you (or anyone reading this) wants to discuss what you could contribute</p>",
        "id": 502729552,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1740821996
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"452574\">Kevin Hovsäter</span> has marked this topic as resolved.</p>",
        "id": 502731197,
        "sender_full_name": "Notification Bot",
        "timestamp": 1740823349
    },
    {
        "content": "<p>As a note, due to building an interpreter that skips most of the optimization passes and many \"hard parts\" of implementing roc. I think it is possible that we may have a fully functional interpreted roc quite a while before we have a fully functional optimized roc.</p>",
        "id": 502765015,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1740847849
    },
    {
        "content": "<p>I agree with this, we are probably 2 weeks away from a functionally complete parser, and I know a lot of progress has been made in Can.  And with Brendan working on the interpreter that will probably go pretty fast as well (which is great for us having some form of E2E testing in place)</p>",
        "id": 502771061,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740852035
    },
    {
        "content": "<p>Y'all are impressive. <span aria-label=\"clap\" class=\"emoji emoji-1f44f\" role=\"img\" title=\"clap\">:clap:</span></p>",
        "id": 502796857,
        "sender_full_name": "jan kili",
        "timestamp": 1740870121
    },
    {
        "content": "<p>I'm not sure how it would do for your use case, but Gleam is sometimes worth a look as a stop gap especially given the new Roc syntax direction</p>",
        "id": 503152542,
        "sender_full_name": "Ray Myers",
        "timestamp": 1741048478
    },
    {
        "content": "<p>I've been messing around with Nim, which is interesting enough (albeit no Roc of course). I like Gleam (and Elixir etc.) but for some tooling I'm trying to write, I'm unwilling to pay the VM startup cost, and am looking for small, tight binaries.<br>\nFortunately, AI-assisted coding gets you up to speed really quick with new languages, and your hard-earned existing general-purpose computing knowledge helps even more in that context (for example, if you force them to use TDD, they write better code! Just like humans! But also just like humans, you have to keep reminding them... lol)</p>",
        "id": 504628358,
        "sender_full_name": "Peter Marreck",
        "timestamp": 1741622657
    }
]