[
    {
        "content": "<p>I'm getting a panic message from the compiler.</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;constructor must be known in the indexable type if we are exhautiveness checking&#39;, crates/compiler/can/src/exhaustive.rs:211:41\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>Usually the compiler points me in the general direction of the problem, so I was surprised by this. Obviously there is an issue with my code and I'll work on troubleshooting it to figure out what caused it, but I wondered if this is a known panic scenario and if it could get caught and provide some more user friendly feedback from the compiler instead?</p>",
        "id": 427177207,
        "sender_full_name": "Jeffrey Mudge",
        "timestamp": 1710697453
    },
    {
        "content": "<p>I seem to have found the issue. A <code>when x is</code> pattern match didn't have all possibilities and adding an <code>_ -&gt;</code> branch is now getting me useful compiler errors again. It's strange since I'm certain I've gotten missing possibility errors previously when pattern matching like that, so I'm not sure what was different this time.</p>",
        "id": 427178754,
        "sender_full_name": "Jeffrey Mudge",
        "timestamp": 1710697879
    },
    {
        "content": "<p>this definitely looks like a compiler bug!</p>",
        "id": 427178761,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710697888
    },
    {
        "content": "<p>if there's a way you could reproduce it, that would be helpful to narrowing down what the problem is</p>",
        "id": 427178819,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710697906
    },
    {
        "content": "<p>I can reproduce it now, but it's got a fair amount of supporting code. Let me see if I can get a simpler reproduction.</p>",
        "id": 427179284,
        "sender_full_name": "Jeffrey Mudge",
        "timestamp": 1710698023
    },
    {
        "content": "<p>appreciate it, thank you! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 427181680,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710698689
    },
    {
        "content": "<p>Here's the issue: <a href=\"https://github.com/roc-lang/roc/issues/6594\">https://github.com/roc-lang/roc/issues/6594</a> </p>\n<p>Basically, I had two exhaustiveness issues and the combination caused the problem. Fixing either one allows the compiler to give normal error messages again. </p>\n<p>I don't know how hard it would be to detect and give a compiler error instead of a panic, but it's reported now in any case.</p>",
        "id": 427187661,
        "sender_full_name": "Jeffrey Mudge",
        "timestamp": 1710700351
    }
]