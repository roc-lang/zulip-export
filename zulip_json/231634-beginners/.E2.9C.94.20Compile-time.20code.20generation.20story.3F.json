[
    {
        "content": "<p>Is compile-time code generation considered or planned?</p>\n<p>Basically the idea is that you can write regular program code (so here Roc) that is called by the compiler as part of the compilation process, in order to generate more code. Examples include Zig, Jai, F# type-providers</p>\n<p>For example, you might turn a GraphQL schema into a GraphQL client at compile-time.</p>\n<p>The advantages of this:</p>\n<ul>\n<li>Standardized way to do code generation without reliance on external build-systems</li>\n<li>Code generation is done in the language that the user already knows (and not, say template macros)</li>\n<li>Enables complex compile-time behaviour without complicating the type-system, which makes things like type-inference harder</li>\n</ul>",
        "id": 412401820,
        "sender_full_name": "njlr",
        "timestamp": 1704999080
    },
    {
        "content": "<p>so there is a plan to do compile-time evaluation of constants (e.g. if I write <code>foo = ...</code> at the top level, that will always get evaluated at compile time), which covers some of those use cases although probably not all of them</p>",
        "id": 412402119,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1704999228
    },
    {
        "content": "<p>Some related discussion is in <a class=\"stream-topic\" data-stream-id=\"304641\" href=\"/#narrow/stream/304641-ideas/topic/Comptime.20metaprogramming.20for.20ROC\">#ideas &gt; Comptime metaprogramming for ROC</a></p>",
        "id": 412406942,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705001148
    },
    {
        "content": "<p>Ah yes, that's exactly what I mean. Thanks!</p>",
        "id": 412407058,
        "sender_full_name": "njlr",
        "timestamp": 1705001194
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"680630\">njlr</span> has marked this topic as resolved.</p>",
        "id": 412407062,
        "sender_full_name": "Notification Bot",
        "timestamp": 1705001197
    }
]