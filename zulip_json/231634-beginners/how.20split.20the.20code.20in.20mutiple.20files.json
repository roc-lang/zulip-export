[
    {
        "content": "<p>There is any docs where I can read on how to spleet a code in mutliple file?</p>",
        "id": 313859478,
        "sender_full_name": "Vincenzo Palazzo (vincenzopalazzo)",
        "timestamp": 1670191379
    },
    {
        "content": "<p>I'm not sure about docs, but you can split code into different modules and then just import them. I use this in my <a href=\"https://github.com/lukewilliamboswell/roc-things/tree/main/aoc-2022\">AoC</a> where I have a Parser.roc which I import. For putting things in folders e.g. Internal, you then import them with <code>imports [ Internal.Parser.{ Parser } ]</code> for example.</p>",
        "id": 313860192,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1670191946
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/231634-beginners/topic/how.20split.20the.20code.20in.20mutiple.20files/near/313860192\">said</a>:</p>\n<blockquote>\n<p>I'm not sure about docs, but you can split code into different modules and then just import them. I use this in my <a href=\"https://github.com/lukewilliamboswell/roc-things/tree/main/aoc-2022\">AoC</a> where I have a Parser.roc which I import. For putting things in folders e.g. Internal, you then import them with <code>imports [ Internal.Parser.{ Parser } ]</code> for example.</p>\n</blockquote>\n<p>mh! so if I had a file called cli and inside the file there is an export function caller parse, the import is like <code>imports [cli.{parse}]</code></p>",
        "id": 313860741,
        "sender_full_name": "Vincenzo Palazzo (vincenzopalazzo)",
        "timestamp": 1670192455
    },
    {
        "content": "<p>?</p>",
        "id": 313860745,
        "sender_full_name": "Vincenzo Palazzo (vincenzopalazzo)",
        "timestamp": 1670192459
    },
    {
        "content": "<p>or the name of the module that I need to import need to start with an upper letter?</p>",
        "id": 313861742,
        "sender_full_name": "Vincenzo Palazzo (vincenzopalazzo)",
        "timestamp": 1670193327
    },
    {
        "content": "<p>I think uppercase might be required</p>",
        "id": 313863893,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1670194830
    },
    {
        "content": "<p>Is there a way to do the opposite? Have essentially a submodule / namespace in the same file? I wanted to build a \"Grid\" module with specific types and functions defined within the same \"08.roc\" file.</p>",
        "id": 314789926,
        "sender_full_name": "Shritesh Bhattarai",
        "timestamp": 1670541074
    },
    {
        "content": "<p>I don't think that is possible currently</p>",
        "id": 314793717,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1670543060
    },
    {
        "content": "<p>The closest you could get would be a struct with a bunch of lambdas in it.</p>",
        "id": 314793743,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1670543079
    },
    {
        "content": "<p>That would kinda be \"namespacing\", but definitely not the same</p>",
        "id": 314793783,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1670543109
    }
]