[
    {
        "content": "<p>I seem to run into this compile error often in various contexts. What does it mean?</p>\n<div class=\"codehilite\"><pre><span></span><code>I just finished parsing an expression with a series of definitions,\n\nand this line is indented as if it&#39;s intended to be part of that\nexpression:\n\n 1│  app [main] { pf: platform &quot;https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br&quot; }\n 2│\n 3│  import pf.Stdin\n 4│  import pf.Stdout\n 5│  import pf.Tty\n 6│  import pf.Sleep\n 7│\n 8│  main =\n 9│      Stdout.line! &quot;Hello, World!&quot;\n10│      Tty.enableRawMode {}\n11│      Sleep.millis! 1000\n12│      input = Stdin.bytes {}\n         ^\n\nHowever, I already saw the final expression in that series of\ndefinitions\n</code></pre></div>",
        "id": 472405231,
        "sender_full_name": "Jared Cone",
        "timestamp": 1727158218
    },
    {
        "content": "<p>I think the error is in line 10. You forgot the <code>!</code>.</p>\n<p>That means, that roc thinks, that you want to return a Task in line 10, instead of \"awaiting\" it.</p>\n<p>In other languages, it would look like this:</p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"nx\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"p\">(</span><span class=\"s2\">\"Hello, World\"</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nx\">Tty</span><span class=\"p\">.</span><span class=\"nx\">enableRawMode</span><span class=\"p\">({});</span>\n<span class=\"w\">  </span><span class=\"k\">await</span><span class=\"w\"> </span><span class=\"nx\">Sleep</span><span class=\"p\">.</span><span class=\"nx\">milis</span><span class=\"p\">(</span><span class=\"mf\">1000</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">input</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Stdin</span><span class=\"p\">.</span><span class=\"nx\">bytes</span><span class=\"p\">({});</span><span class=\"w\"> </span><span class=\"c1\">// you probably want to use await / ! , here as well</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 472406035,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1727158651
    },
    {
        "content": "<p>thanks!</p>",
        "id": 472407936,
        "sender_full_name": "Jared Cone",
        "timestamp": 1727159467
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"481285\">@Jared Cone</span> how would you rephrase this error message to give the best tip to your past self?</p>",
        "id": 472426304,
        "sender_full_name": "Anton",
        "timestamp": 1727165005
    },
    {
        "content": "<p>Maybe if the error was on line 10 (where I forgot the '!'), and the message was something like:</p>\n<div class=\"codehilite\"><pre><span></span><code>This expression is not an assignment, so the result of this expression becomes the return value of the function.\nHowever there appears to be additional lines to the function after this final expression.\nThese additional lines will not be evaluated.\n</code></pre></div>\n<p>and if the final expression is a Task, throw in a \"Did you forget to await the Task by using the '!' suffix?\"</p>",
        "id": 472618188,
        "sender_full_name": "Jared Cone",
        "timestamp": 1727243653
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"481285\">@Jared Cone</span>, improving the line number and detecting a Task would take some time, so I tried to make some quick improvements by adding some tips to the error message, see <a href=\"https://github.com/roc-lang/roc/pull/7120\">PR#7120</a>.</p>",
        "id": 472952207,
        "sender_full_name": "Anton",
        "timestamp": 1727374945
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481285\">Jared Cone</span> has marked this topic as resolved.</p>",
        "id": 473271158,
        "sender_full_name": "Notification Bot",
        "timestamp": 1727491722
    }
]