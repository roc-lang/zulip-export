[
    {
        "content": "<p>Am I mistaken or do these functions not exist? How would I go about doing things like that? Do I actually need to implement them myself?</p>",
        "id": 487050736,
        "sender_full_name": "Scally",
        "timestamp": 1733763909
    },
    {
        "content": "<p>I think you are looking for <code>joinMap</code></p>",
        "id": 487051495,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1733764102
    },
    {
        "content": "<p>And <code>join</code> instead of flatten</p>",
        "id": 487051605,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1733764127
    },
    {
        "content": "<p>Ah cool, thanks. What about something like joinMapWithIndex?</p>",
        "id": 487052611,
        "sender_full_name": "Scally",
        "timestamp": 1733764376
    },
    {
        "content": "<p>As far as I know, it doesn't exists. I use mapWithIndex followed by join in that case. Slightly less performant, but it works</p>",
        "id": 487052983,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1733764464
    },
    {
        "content": "<p>If you really want the full performance, you'd need to use <code>walk(WithIndex)</code> and allocate the buffer manually up front with <code>List.withCapacity</code></p>",
        "id": 487053207,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1733764517
    },
    {
        "content": "<p>If you have fold(walk) you can build anything as my old CTO once told me</p>",
        "id": 487062212,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733767058
    }
]