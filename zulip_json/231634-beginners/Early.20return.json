[
    {
        "content": "<p>Roc doesn't have a return statement yet, correct? Any plans to add? Something like</p>\n<div class=\"codehilite\"><pre><span></span><code>if expr then\n    return Err(MyError)\n</code></pre></div>\n<p>If I have many checks in a row like that, is there a functional pattern to achieve that elegantly?</p>\n<p>If there was a <code>Bool.then</code> function perhaps something like <code>expr |&gt; Bool.then(Err(MyError))?</code></p>",
        "id": 497316680,
        "sender_full_name": "Ben",
        "timestamp": 1738549675
    },
    {
        "content": "<blockquote>\n<p>Roc doesn't have a return statement</p>\n</blockquote>\n<p>It does... here's a working example</p>\n<div class=\"codehilite\"><pre><span></span><code>app [main!] { pf: platform &quot;https://github.com/roc-lang/basic-cli/releases/download/0.19.0/Hj-J_zxz7V9YurCSTFcFdu6cQJie4guzsPMUi5kBYUk.tar.br&quot; }\n\nmain! = |_|\n    if Bool.true then\n        return Err(Exit(1,&quot;This is a test error message&quot;))\n    else\n        Ok({})\n</code></pre></div>",
        "id": 497317107,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1738549941
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ roc test.roc\nThis is a test error message\n</code></pre></div>",
        "id": 497317120,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1738549953
    },
    {
        "content": "<p>If I have logic following my if block, I guess I need to assign the result of the if expression? I can't omit the else right? Feels a bit clunky :(</p>\n<div class=\"codehilite\"><pre><span></span><code>_ = if Bool.true then\n        return Err(Exit(1,&quot;This is a test error message&quot;))\n    else\n        Ok({})\nOk({})\n</code></pre></div>",
        "id": 497317534,
        "sender_full_name": "Ben",
        "timestamp": 1738550268
    },
    {
        "content": "<p>If you have a larger example I may be able to help you find a nicer pattern. I was just answering your immediate question of if there is a <code>return</code>.</p>",
        "id": 497317980,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1738550593
    },
    {
        "content": "<p>This is a pretty common pattern I write in imperative code, where I'll check a bunch of conditions and return early with errors</p>\n<div class=\"codehilite\"><pre><span></span><code>T : {field1, field2}\nmy_func = |a, b|\n    if a.field1 &gt; b.field1 then\n        return Err(Error1)\n\n    if a.field2 == 0 then\n        return Err(Error2)\n\n    if a.field1 * b.field2 &gt; 100 then\n        return Err(Error3)\n\n    # preconditions passed, do logic with a and b\n    # ....\n    # return result of that calculation\n    Ok({})\n</code></pre></div>",
        "id": 497320340,
        "sender_full_name": "Ben",
        "timestamp": 1738552255
    },
    {
        "content": "<p>yeah I'd like to support this!</p>",
        "id": 497320460,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1738552333
    },
    {
        "content": "<p>I guess it's a bit of an edge case for the language because <code>if</code> is supposed to be an expression and always have a matching else block? I think this could also extend to the <code>crash</code> and <code>dbg</code> keywords, where dbg has an effect for the user, and if you crash then there's no point of an else</p>",
        "id": 497320764,
        "sender_full_name": "Ben",
        "timestamp": 1738552606
    },
    {
        "content": "<p>e.g. I feel like it should be valid to replace the three returns above with crash or dbg and still have it compile</p>",
        "id": 497320802,
        "sender_full_name": "Ben",
        "timestamp": 1738552638
    },
    {
        "content": "<p>However I suppose it can remove some of the sense of purity / orthoganal-ness / consistency etc.?</p>",
        "id": 497320836,
        "sender_full_name": "Ben",
        "timestamp": 1738552678
    },
    {
        "content": "<p>Yeah, now that we have return, we should be able to just make this work.</p>",
        "id": 497321894,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738553452
    },
    {
        "content": "<p>Should also work with crash.</p>",
        "id": 497321905,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738553461
    },
    {
        "content": "<p>Not sure about debug. Cause debug returns the passed in value after printing it</p>",
        "id": 497321950,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738553497
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/channel/231634-beginners/topic/Early.20return/near/497321950\">said</a>:</p>\n<blockquote>\n<p>Not sure about debug. Cause debug returns the passed in value after printing it</p>\n</blockquote>\n<p>Here is sounded, as if it could be possible: <a class=\"message-link\" href=\"/#narrow/channel/304641-ideas/topic/conditional.20dbg/near/493170025\">#ideas &gt; conditional dbg @ ðŸ’¬</a></p>",
        "id": 497346095,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1738566766
    }
]