[
    {
        "content": "<p>I'm playing around with basic-webserver, and running <code>glue-gen.sh</code> results in some syntax errors (which I have <a href=\"https://github.com/roc-lang/roc/pull/6432\">a fix for</a>) and some failing assertions (which get <a href=\"https://github.com/roc-lang/basic-webserver/commit/c91cfbd65f1b4dd6073b9c953aff07212166d354\">commented out in the basic-webserver repo</a>).</p>",
        "id": 418317813,
        "sender_full_name": "Jared",
        "timestamp": 1706289362
    },
    {
        "content": "<p>Any tips on how to find out what the <code>size_of</code> those unions actually are, and how to fix the calculations?</p>",
        "id": 418317925,
        "sender_full_name": "Jared",
        "timestamp": 1706289395
    },
    {
        "content": "<p><code>assert_eq!()</code> is apparently invalid to use in a top-level const, so I'm not sure where to go from there</p>",
        "id": 418318017,
        "sender_full_name": "Jared",
        "timestamp": 1706289430
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> knows a trick for that, but I forget what it is</p>",
        "id": 418318055,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1706289450
    },
    {
        "content": "<p>ah ok, I managed to put an assert_eq in <a href=\"http://server.rs\">server.rs</a> <code>run_server()</code>, so I at least know what the number should be now</p>",
        "id": 418318482,
        "sender_full_name": "Jared",
        "timestamp": 1706289595
    },
    {
        "content": "<p>Just assert with == works for some types, numbers mostly</p>",
        "id": 418318940,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1706289750
    },
    {
        "content": "<p>So assert with == doesn't tell you what the number actually was, if the assertion fails</p>",
        "id": 418319781,
        "sender_full_name": "Jared",
        "timestamp": 1706290060
    },
    {
        "content": "<p>ok noob question: is there a way to do a <code>debug log</code> in roc code? RustGlue.roc is huge and I'd like to quickly introspect what's going on in the middle of it.</p>",
        "id": 418321539,
        "sender_full_name": "Jared",
        "timestamp": 1706290702
    },
    {
        "content": "<p><code>dbg someValue</code></p>",
        "id": 418324343,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1706291649
    },
    {
        "content": "<p>That said, no idea if glue is wired up to support it.</p>",
        "id": 418324395,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1706291672
    },
    {
        "content": "<p>for the assert, you can make a type error by doing something like <code>assert!([0; 42] == [0; YOUR_VALUE])</code></p>",
        "id": 418324724,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1706291794
    },
    {
        "content": "<p>oh nice</p>",
        "id": 418326315,
        "sender_full_name": "Jared",
        "timestamp": 1706292401
    },
    {
        "content": "<p>hm yeah looks like <code>roc glue</code> doesn't show the <code>dbg</code>s</p>",
        "id": 418326478,
        "sender_full_name": "Jared",
        "timestamp": 1706292463
    },
    {
        "content": "<p>they should be somewhere, but you may not get to see the stdout of that process</p>",
        "id": 418326729,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1706292544
    },
    {
        "content": "<p>It would be really nice to fix this particular issue. That would mean we dont have to keep the glue for basic-webserver and basic-cli checked into the repo but can use the script to generate locally when doing platform dev.</p>",
        "id": 418343994,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1706299529
    },
    {
        "content": "<p>you mean remove/adjust the failing asserts?</p>",
        "id": 418353940,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1706304714
    },
    {
        "content": "<p>The glue bugs that generate invalid rust for those platforms.</p>",
        "id": 418356158,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1706305895
    }
]