[
    {
        "content": "<p>Is there any way to get a stack trace from errors? <br>\nI have some PathDoesNotExist error reaching the top level of my basic-cli main function but it's quite annoying to try figuring out what line caused it originally.</p>",
        "id": 482910936,
        "sender_full_name": "Scally",
        "timestamp": 1731891263
    },
    {
        "content": "<p>I find wrapping my errors with another tag is a nice way to add additional context. Then when it bubbles all the way to the top (if I don't handle it) then I get a more helpful error message. </p>\n<p><a href=\"https://github.com/lukewilliamboswell/roc-htmx-tailwindcss-demo/blob/4785bb65c46feb1533e2abd8c52ffcb456a710a6/src/Sql/Session.roc#L60\">Here is an example</a> that uses <code>mapErr</code> with a tag.</p>",
        "id": 482912153,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1731892337
    },
    {
        "content": "<p>I also find adding type annotations can help on functions, or using the hover in my editor to see the inferred type at a given point, can help track down where it's coming from.</p>",
        "id": 482912206,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1731892397
    },
    {
        "content": "<p>Theoretically crashing with the error can give a backtrack, but I don't think it is reliable</p>",
        "id": 482915848,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731895250
    }
]