[
    {
        "content": "<p>Hi peeps,<br>\nI've been looking at <a href=\"https://github.com/lukewilliamboswell/roc-platform-template-wasi/\">https://github.com/lukewilliamboswell/roc-platform-template-wasi/</a><br>\nI was trying to understand how to glue WASI APIs (e.g. <a href=\"https://github.com/WebAssembly/wasi-http/blob/main/proxy.md\">https://github.com/WebAssembly/wasi-http/blob/main/proxy.md</a>) to access from Roc side just as a PoC. <br>\nAny hints, references, examples?</p>",
        "id": 483934226,
        "sender_full_name": "Vladimir Zotov",
        "timestamp": 1732289308
    },
    {
        "content": "<p>It depends on a few things, like what host toolchain you prefer (rust/zig/c etc). I would suggest Rust is probably possible using wit bindgen -- I've seen a blog post that went this direction, though the preview 2 stuff is more experimental.</p>\n<p>I would definitely recommend just letting the native cargo toolchain drive linking and everything for now. </p>\n<p>So build roc stuff into an object file like <code>roc build --no-link --target wasm32 app.roc</code> and then link that when you build your <code>.wasm</code> module.</p>",
        "id": 484000035,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1732313760
    },
    {
        "content": "<p>Maybe you could help me a bit more here. Roc will need a platform import, so I assume I need to provide the mapping to Roc. Are you saying I could just use a Rust platform, map existing wadi types from rust to Roc and then have both compiled to wasm? It might be gibberish what I just wrote, as my understanding is quite fuzzy here</p>",
        "id": 484733992,
        "sender_full_name": "Vladimir Zotov",
        "timestamp": 1732717669
    },
    {
        "content": "<p>The demo js dom thing I've just shared in another thread is a good end to end example of doing WASI with roc. </p>\n<p>I made a WASI cli binary to help me debug things without the complications of the broswer. You could copy that as a starting point. Here is the <a href=\"http://main.rs\">main.rs</a> for that.</p>\n<p><a href=\"https://github.com/lukewilliamboswell/roc-experiment-js-dom/blob/main/crates/cli/src/main.rs\">https://github.com/lukewilliamboswell/roc-experiment-js-dom/blob/main/crates/cli/src/main.rs</a></p>\n<p>This is just using Preview 1 stuff though which is included in Rust stdlib. There is a Preview 2 target but it is new and I dont think you can use it yet, so if you want to use the experimental APIs you need to generate the lowlevel bindings from WIT files manually I think.</p>",
        "id": 484765413,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1732727383
    }
]