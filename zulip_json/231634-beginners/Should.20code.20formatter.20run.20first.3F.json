[
    {
        "content": "<p>So I have the following code I copied (by hand) from the online tutorial:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nv\">pf</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">platform</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.10.0/vNe6s9hWzoTZtFmNkvEICPErI9ptji_ySjicO6CkucY.tar.br\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Stdout</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Task</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">=</span>\n<span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"I'm a Roc application!\"</span>\n</code></pre></div>\n<p>This refuses to compile because the last line isn't indented. I would have expected the code formatter to run first but is that expectation a bad one?</p>\n<p>The reason I didn't indent is that I hit <code>&lt;RETURN&gt;</code> after writing <code>main =</code> and the editor I'm using (Zed at the moment) didn't indent so I just assumed it would be handled by the code formatter.</p>",
        "id": 447194735,
        "sender_full_name": "pyrmont",
        "timestamp": 1719402035
    },
    {
        "content": "<p>The code doesn't parse, so I don't think the formatter can fix it. </p>\n<p>Running the formatter manually gives. </p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc format testa.roc\nWe ran into an issue while compiling your code.\nSadly, we don&#39;t have a pretty error message for this case yet.\nIf you can&#39;t figure out the problem from the context below, please reach out at: https://roc.zulipchat.com/\nUnexpected parse failure when parsing this formatting:\n\n&quot;app [main] {\\n    pf: platform \\&quot;https://github.com/roc-lang/basic-cli/releases/download/0.10.0/vNe6s9hWzoTZtFmNkvEICPErI9ptji_ySjicO6CkucY.tar.br\\&quot;,\\n}\\n\\nimport pf.Stdout\\nimport pf.Task\\n\\nmain =\\nStdout.line! \\&quot;I&#39;m a Roc application!\\&quot;\\n&quot;\n\nParse error was:\n\nExpr(IndentEnd(@189), @148)\n</code></pre></div>",
        "id": 447195105,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719402182
    },
    {
        "content": "<p>I guess another question is should it be able to parse? or can it be made to parse this reliably?</p>",
        "id": 447195198,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719402225
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> was working on a related upgrade to the parser using the concept of blocks. Maybe he has some thoughts on this.</p>",
        "id": 447195376,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719402283
    },
    {
        "content": "<p>I guess my other question is 'If it's an error not to indent after writing <code>main =</code> and starting a newline, should Zed not be indenting automatically?'</p>",
        "id": 447195621,
        "sender_full_name": "pyrmont",
        "timestamp": 1719402363
    },
    {
        "content": "<p>There's a lot going on here actually ;)</p>",
        "id": 448989111,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1720062179
    },
    {
        "content": "<p>That code in and of itself isn't ambiguous and we could parse it just fine if we wanted to</p>",
        "id": 448989170,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1720062244
    },
    {
        "content": "<p>However - that quickly becomes no longer true if you put anything after that last line, since we wouldn't be able to disambiguate whether you meant for that to be part of the <code>main =</code> or be part of the global scope</p>",
        "id": 448989281,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1720062310
    },
    {
        "content": "<p>Thanks for the reply, <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> :) I appreciate this perhaps isn't your area but am I correct in thinking there's no ambiguity that when I hit Return after writing <code>main =</code>, the editor should indent?</p>",
        "id": 448996452,
        "sender_full_name": "pyrmont",
        "timestamp": 1720066748
    },
    {
        "content": "<p>I think VS Code extension does this sometimes, but the zed one doesn't. Maybe its a language server thing? or specific to certain editors?</p>",
        "id": 449000207,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720068405
    },
    {
        "content": "<p>it should be specific to editors, the language server takes as configuration whether the client (editor) wants code formating changes</p>",
        "id": 449003989,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1720070421
    },
    {
        "content": "<p>In the Emacs roc-mode package, we mostly use tree-sitter-based indentation, but I couldn't figure out a way to solve this problem using tree-sitter. So I ended up using <a href=\"https://gitlab.com/tad-lispy/roc-mode/-/blob/945f46f2fda4a71b0f953473146f3eb51ee32873/roc-mode.el#L424-438\">a heuristic</a> that seems to work okay: if the previous line (skipping blank lines and ignoring comments) ends with <code>=</code>, <code>[</code>, <code>{</code>, <code>(</code>, <code>-&gt;</code>, <code>:</code>, <code>expect-fx</code>, <code>is</code>, <code>then</code>, <code>else</code>, <code>expect</code>, <code>where</code>, <code>dbg</code>, <code>app</code>, <code>package</code>, <code>platform</code>, <code>module</code>, <code>exposes</code>, <code>imports</code>, <code>import</code>, <code>with</code>, <code>packages</code>, <code>requires</code>, or <code>provides</code>, then indent the current line by 4 spaces more than the previous line.</p>",
        "id": 449004645,
        "sender_full_name": "Ajai Nelson",
        "timestamp": 1720070793
    }
]