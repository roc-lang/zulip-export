[
    {
        "content": "<p>The <a href=\"https://www.roc-lang.org/builtins/List#sortAsc\">description</a> in the docs:</p>\n<blockquote>\n<p>Sorts a list in ascending order (lowest to highest), using a function which specifies a way to represent each element as a number.</p>\n</blockquote>\n<p>makes me think of some other function which could be implemented in terms of List.sortWith </p>\n<div class=\"codehilite\"><pre><span></span><code>sortAscBy = \\list, select -&gt;\n    List.sortWith list \\a, b -&gt;\n        when (select a, select b) is\n            (sA, sB) if sA &lt; sB -&gt; LT\n            (sA, sB) if sA &gt; sB -&gt; GT\n            _ -&gt; EQ\n\nexpect\n    actual =\n        sortAscBy\n            [\n                (1, &quot;a&quot;),\n                (3, &quot;b&quot;),\n                (2, &quot;c&quot;),\n            ]\n            \\(n, _) -&gt; n\n\n    actual\n    == [(1, &quot;a&quot;), (2, &quot;c&quot;), (3, &quot;b&quot;)]\n</code></pre></div>\n<p>rather than sortAsc itself which is not a higher order function. Is this a mistake?</p>",
        "id": 424432314,
        "sender_full_name": "Alex Nuttall",
        "timestamp": 1709402646
    },
    {
        "content": "<p>I assume the doc is wrong and it is just supposed to sort lists of numbers.</p>",
        "id": 424433088,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709403298
    },
    {
        "content": "<p>That said, sortby could be useful. Also, maybe ascending/descending should be a tag instead of in the function name.</p>",
        "id": 424433215,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709403401
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 424433226,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709403414
    },
    {
        "content": "<p>Anyway, suggestions and api updates are definitely welcome.</p>",
        "id": 424433282,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709403478
    },
    {
        "content": "<p>Oh also, there was definitely discussion on adding a proper <code>Orderable</code> or similar feature to make this generic.</p>",
        "id": 424433368,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709403557
    },
    {
        "content": "<p><a class=\"stream-topic\" data-stream-id=\"304641\" href=\"/#narrow/stream/304641-ideas/topic/ordering.2Fsorting.20ability\">#ideas &gt; ordering/sorting ability</a> I think</p>",
        "id": 424433403,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709403601
    },
    {
        "content": "<p>I'll fix the docs.</p>",
        "id": 424434276,
        "sender_full_name": "Anton",
        "timestamp": 1709404253
    },
    {
        "content": "<p>I do think think sortWith is pretty verbose, and sortBy covers 90% of the cases where it's useful</p>",
        "id": 424436007,
        "sender_full_name": "Alex Nuttall",
        "timestamp": 1709405599
    },
    {
        "content": "<p>Only for numbers, until we have something like ord, sortby is pretty limited</p>",
        "id": 424439352,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709407989
    },
    {
        "content": "<p>yeah nothing is blocking <code>Ord</code> if anyone wants to work on it!</p>",
        "id": 424440697,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1709409077
    },
    {
        "content": "<p>we've talked about the design in <a href=\"#narrow/stream/304641-ideas/topic/ordering.2Fsorting.20ability\">https://roc.zulipchat.com/#narrow/stream/304641-ideas/topic/ordering.2Fsorting.20ability</a></p>",
        "id": 424440786,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1709409140
    },
    {
        "content": "<p>Wasn't sure if it resolved to s single design or not... Agreed implementation being this?</p>\n<div class=\"codehilite\"><pre><span></span><code># Sort.roc\nSort implements\n    compare : a, a -&gt; [LessThan, Equal, GreaterThan] where a implements Sort\n</code></pre></div>\n<p>Then need to add auto derive. Will not add it to string? But will add it to all numbers including floats?</p>",
        "id": 424446655,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709414523
    },
    {
        "content": "<p>I've just added an <a href=\"https://github.com/roc-lang/roc/issues/6551\">issue #6551</a> to track this.</p>",
        "id": 424574159,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1709525626
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/List.2EsortAsc.20.2F.20sortDesc.20docs/near/424446655\">said</a>:</p>\n<blockquote>\n<p>Will not add it to string? But will add it to all numbers including floats?</p>\n</blockquote>\n<p>yeah, don't add it to <code>Str</code> - and then I think let's start out with not adding it to floats and see how it goes in practice</p>",
        "id": 424643590,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1709555810
    },
    {
        "content": "<p>(Rust doesn't have it for floats, seems to be ok)</p>",
        "id": 424643652,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1709555831
    },
    {
        "content": "<p>maybe we'll end up wanting it, but it's easier to add it later than to try to remove it later <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 424643729,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1709555854
    }
]