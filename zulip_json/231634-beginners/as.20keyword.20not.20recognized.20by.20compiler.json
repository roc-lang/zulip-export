[
    {
        "content": "<p>I am walking through the Roc tutorial, and got to the introduction of the <code>as</code> keyword. However I get the following compiler error when I run:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"err\">──</span><span class=\"w\"> </span><span class=\"nx\">MISSING</span><span class=\"w\"> </span><span class=\"nx\">ARROW</span><span class=\"w\"> </span><span class=\"err\">───────────────────────────────────────────────────</span><span class=\"w\"> </span><span class=\"nx\">Hello</span><span class=\"p\">.</span><span class=\"nx\">roc</span><span class=\"w\"> </span><span class=\"err\">─</span><span class=\"w\"></span>\n<span class=\"nx\">I</span><span class=\"w\"> </span><span class=\"nx\">am</span><span class=\"w\"> </span><span class=\"nx\">partway</span><span class=\"w\"> </span><span class=\"nx\">through</span><span class=\"w\"> </span><span class=\"nx\">parsing</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"nx\">function</span><span class=\"w\"> </span><span class=\"nx\">argument</span><span class=\"w\"> </span><span class=\"nx\">list</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">but</span><span class=\"w\"> </span><span class=\"nx\">I</span><span class=\"w\"> </span><span class=\"nx\">got</span><span class=\"w\"> </span><span class=\"nx\">stuck</span><span class=\"w\"></span>\n<span class=\"nv\">here</span><span class=\"o\">:</span><span class=\"w\"></span>\n<span class=\"mi\">10</span><span class=\"err\">│</span><span class=\"w\">  </span><span class=\"nv\">addAndStringify</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">iguanas</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">lizards</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"nx\">as</span><span class=\"w\"> </span><span class=\"nx\">counts</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">                                              </span><span class=\"o\">^</span><span class=\"w\"></span>\n<span class=\"nx\">I</span><span class=\"w\"> </span><span class=\"nx\">was</span><span class=\"w\"> </span><span class=\"nx\">expecting</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">next</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>My code is verbatim what is shown in the tutorial (Lines 383-384):</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">addAndStringify</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">iguanas</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">lizards</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"nx\">as</span><span class=\"w\"> </span><span class=\"nx\">counts</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">toStr</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">counts</span><span class=\"p\">.</span><span class=\"nx\">birds</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">lizards</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Any ideas what might be going on here?</p>\n<p>NOTE: I am on commit 35de4c6 - latest from main at time of writing</p>",
        "id": 295330828,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1661474366
    },
    {
        "content": "<p>Looking across current Roc code and poking around a bit, I think that <code>as</code> is currently only available in a limited scope.</p>\n<p>It seems that it works in type definitions where it is used for some platform related type naming, but I don't see any variable naming use cases.</p>",
        "id": 295344843,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1661479842
    },
    {
        "content": "<p>Would you mind filing a bug for this?</p>",
        "id": 295344848,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1661479855
    },
    {
        "content": "<p>Then someone with more context on this feature can take a proper look.</p>",
        "id": 295344862,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1661479882
    },
    {
        "content": "<p>I guess for now, we are stuck with destructuring:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">addAndStringify</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">counts</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">iguanas</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">lizards</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">counts</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">toStr</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">counts</span><span class=\"p\">.</span><span class=\"nx\">birds</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">lizards</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 295344942,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1661479978
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> Thanks so much for the response! I can definitely file an issue for this. On a side note, I'm still working on comprehending the codebase. Would you mind pointing me toward which files you were looking at to find the behavior of the <code>as</code> keyword?</p>",
        "id": 295476669,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1661535203
    },
    {
        "content": "<p>Okay, per your recommendation, I've opened an issue for this <a href=\"https://github.com/roc-lang/roc/issues/3906\">here</a></p>",
        "id": 295481505,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1661536673
    },
    {
        "content": "<p>In this case, I didn't feel like actually digging into the parser or anything complex. Instead I:</p>\n<ol>\n<li>Ran a number of examples manually through the compiler to see if anything worked.</li>\n<li>Looked for all uses of <code>as</code> in <code>.roc</code> files.</li>\n</ol>",
        "id": 295486062,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1661538025
    }
]