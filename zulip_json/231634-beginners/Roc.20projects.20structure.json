[
    {
        "content": "<p>Can someone please correct my understanding of existing project types in Roc (if it's wrong) and how to reuse code.</p>\n<ul>\n<li>Platforms are more or less clear, we have <a href=\"https://github.com/roc-lang/basic-cli/blob/main/platform/main.roc#L1-L23\">examples</a></li>\n<li><a href=\"https://github.com/lukewilliamboswell/roc-awesome?tab=readme-ov-file#roc-applications-\">Apps too</a>. Every app has to have a platform to execute on. <code>main.roc</code> is an entrypoint.</li>\n<li>Module is a more general thing - just a file exposing types or terms.</li>\n</ul>\n<p>So far so good.</p>\n<ul>\n<li>Interfaces. Are they still a thing? And if yes - what are they? I couldn't find any docs, but see them from time to time (e.g. in <a href=\"https://github.com/Hasnep/roc-datetimes/blob/main/src/Conversion.roc#L1-L37\"><code>roc-datetime</code></a>)</li>\n<li>Packages are supposed to be reusable libs and don't have an associated platform. And that's the only things I could figure out about them. The rest are the questions:</li>\n</ul>\n<ol>\n<li>What is the correct way to write a header? I see at least two options: <a href=\"https://github.com/Hasnep/roc-html/blob/main/src/main.roc\">roc-html</a> and <a href=\"https://github.com/Subtlesplendor/roc-parser/blob/main/package/main.roc\">roc-parser</a></li>\n<li>How do I use a 3rd-party package from my package? I see some examples <a href=\"https://www.roc-lang.org/examples/ImportPackageFromModule/README.html\">for apps</a>, but not for packages. I tried <code>package [Foo] { html: \"https://github.com/Hasnep/roc-html/[something].tar.br\" }</code>, but if I import anything in <code>html</code> the build just hangs (compiler is getting several <code>BuildTask</code>s, last of them being <code>Solve</code>, then getting stuck in <code>load_single_threaded</code> loop, although <code>load_multi_threaded</code> seems to be busier)</li>\n<li>It seems to be a bug in compiler that I'm about to debug and report, but I'm curious if I'm doing anything wrong.</li>\n<li>Different packages have different folder structure. Is it correct that it doesn't matter as long as final <code>tar.br</code> has <code>main.roc</code>?</li>\n</ol>",
        "id": 480207273,
        "sender_full_name": "chuwy",
        "timestamp": 1730544575
    },
    {
        "content": "<blockquote>\n<p>Interfaces. Are they still a thing?</p>\n</blockquote>\n<p><code>interface</code> has been renamed to <code>module</code></p>",
        "id": 480208801,
        "sender_full_name": "Anton",
        "timestamp": 1730545781
    },
    {
        "content": "<blockquote>\n<p>What is the correct way to write a header? I see at least two options: <a href=\"https://github.com/Hasnep/roc-html/blob/main/src/main.roc\">roc-html</a> and <a href=\"https://github.com/Subtlesplendor/roc-parser/blob/main/package/main.roc\">roc-parser</a></p>\n</blockquote>\n<p>Like in roc-html is the most up to date way to do it</p>",
        "id": 480208941,
        "sender_full_name": "Anton",
        "timestamp": 1730545908
    },
    {
        "content": "<p>Thanks! At least I was doing all the right way. I guess it means I just stumbled upon a bug in a compiler</p>",
        "id": 480209014,
        "sender_full_name": "chuwy",
        "timestamp": 1730545955
    },
    {
        "content": "<p>Presumably this one? <a href=\"https://github.com/roc-lang/roc/issues/6889\">https://github.com/roc-lang/roc/issues/6889</a></p>",
        "id": 480209040,
        "sender_full_name": "chuwy",
        "timestamp": 1730545991
    },
    {
        "content": "<p>I'll take a look</p>",
        "id": 480209305,
        "sender_full_name": "Anton",
        "timestamp": 1730546207
    },
    {
        "content": "<p>Yes, that issue still reproduces and is likely what is causing your problem too, I've changed it's priority to high</p>",
        "id": 480209572,
        "sender_full_name": "Anton",
        "timestamp": 1730546456
    },
    {
        "content": "<p>Thanks again! I'll post some more info there</p>",
        "id": 480209594,
        "sender_full_name": "chuwy",
        "timestamp": 1730546478
    }
]