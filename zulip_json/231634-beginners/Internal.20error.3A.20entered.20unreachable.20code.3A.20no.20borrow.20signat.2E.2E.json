[
    {
        "content": "<p>Hi there. I have a very small recursive program that gives a compiler error:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc dev ./src/main.roc\nthread &#39;main&#39; panicked at crates/compiler/mono/src/borrow.rs:396:33:\ninternal error: entered unreachable code: no borrow signature for LambdaName { name: `40.IdentId(4)`, niche: Niche(Captures([])) } layout\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>The program is included here:</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>app [main] {\n    pf: platform \"https://github.com/roc-lang/basic-cli/releases/download/0.10.0/vNe6s9hWzoTZtFmNkvEICPErI9ptji_ySjicO6CkucY.tar.br\",\n}\n\nimport pf.Stdout\nimport pf.Stdin\nimport pf.Task\n\nmain =\n    runPrompt\n\nrun = \\input -&gt;\n    execute input\nrunPrompt =\n    Stdout.write! \"Give me input: \"\n    input = Stdin.line!\n    _ = run input\n    runPrompt\n\nexecute = \\input -&gt;\n    Stdout.line! \"You gave me: $(input)\"\n</code></pre></div>\n<p>Does anyone know what is going on here?</p>\n<p>(And essentially what I want to be able to do is run the program forever until the user stops giving new prompts by sending a stop signal with CTRL+c or the likes)</p>",
        "id": 450271163,
        "sender_full_name": "Jamie Neubert Pedersen",
        "timestamp": 1720555274
    },
    {
        "content": "<p>At first glance it lacks <code>!</code> after <code>run</code>, so it’s <code>_ = run! input</code> but it's probably not connected with the error. Can’t check right now</p>",
        "id": 450279624,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1720556946
    },
    {
        "content": "<p>I think you need <a href=\"https://www.roc-lang.org/packages/basic-cli/Task#forever\">Task.forever</a> or <a href=\"https://www.roc-lang.org/packages/basic-cli/Task#loop\">Task.loop</a> today to workaround these compiler bugs</p>",
        "id": 450297125,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720562643
    },
    {
        "content": "<p>Recursive tasks due to how we compile effects can break the compiler</p>",
        "id": 450297291,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720562683
    },
    {
        "content": "<p>This is a nice minimal repro though</p>",
        "id": 450297452,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720562751
    },
    {
        "content": "<p>A fixed version:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kr\">main </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">forever</span><span class=\"w\"> </span><span class=\"nv\">runPrompt</span>\n\n<span class=\"nv\">run</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">input</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">execute</span><span class=\"w\"> </span><span class=\"nv\">input</span>\n<span class=\"nv\">runPrompt</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">write</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"Give me input: \"</span>\n<span class=\"w\">    </span><span class=\"nv\">input</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Stdin</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span>\n<span class=\"w\">    </span><span class=\"nv\">run</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nv\">input</span>\n\n<span class=\"nv\">execute</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">input</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"You gave me: $(input)\"</span>\n</code></pre></div>",
        "id": 450297470,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720562759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"584248\">@Kiryl Dziamura</span>  Thanks, but yeah it didn't fix the error.</p>\n<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> thank you for the information and the version that works <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 450340462,
        "sender_full_name": "Jamie Neubert Pedersen",
        "timestamp": 1720584817
    }
]