[
    {
        "content": "<p>Got an issue where running <code>roc check</code> on a file is resulting in:</p>\n<div class=\"codehilite\"><pre><span></span><code>roc check EmptyModule.roc\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nOutstanding references to the derived module\nLocation: crates/compiler/load_internal/src/file.rs:3299:29\n</code></pre></div>\n<p>This is happening for various roc files I have in a directory, including a test roc file that just has <code>module []</code> in it.</p>\n<p>If I move the file to a different directory (no other roc files in it), <code>roc check</code> succeeds.</p>",
        "id": 478206517,
        "sender_full_name": "Jared Cone",
        "timestamp": 1729574138
    },
    {
        "content": "<p>I can work around it right now. I have a <code>main.roc</code> that <code>roc check</code> succeeds for. If I have it import the module that is crashing, <code>roc check</code> knows to run on that file too, and <code>roc check</code> succeeds. So I'm hitting this when running <code>roc check</code> on specific files, and it happens even if the file is empty or only has <code>module []</code> in it, so it isn't an issue with the contents of the file.</p>",
        "id": 478206941,
        "sender_full_name": "Jared Cone",
        "timestamp": 1729574534
    },
    {
        "content": "<p>This looks like <a href=\"https://github.com/roc-lang/roc/issues/7175\">#7175</a></p>",
        "id": 478238053,
        "sender_full_name": "Anton",
        "timestamp": 1729587841
    }
]