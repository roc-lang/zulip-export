[
    {
        "content": "<p>Can anyone explain where I'm going wrong with the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>Students : List Student\nRes : Result Students [Err Str]\nreadStudents : JsonData -&gt; Res\nreadStudents= \\json -&gt;\n    when json is\n        Object obj -&gt;\n            students = Dict.get obj &quot;students&quot;\n                when students is\n                    Ok a -&gt; readStudentsList a\n                    _ -&gt; Err &quot;students not found in the object&quot;\n        _ -&gt; Err &quot;Expected Json Object&quot;\n\nreadStudentsList : JsonData -&gt; Result Students [Err Str]\n...\n</code></pre></div>\n<p>on my second branch of my second pattern match, I'm getting an error of <br>\nSomething is off with the 2nd branch of this<br>\n<code>when</code> expression:<br>\n// code above<br>\nThis <code>Err</code> tag application has the type:<br>\n[<br>\nErr Str,<br>\nOk Students,<br>\n]<br>\nBut the type annotation on <code>readStudents</code> says it should be:<br>\nResult Students [Err Str]</p>\n<p>Is this not how I should be chaining together functions which return Results of the same type?</p>",
        "id": 448445928,
        "sender_full_name": "Monica",
        "timestamp": 1719871401
    },
    {
        "content": "<p>Maybe you want this?</p>\n<div class=\"codehilite\"><pre><span></span><code>students =\n    Dict.get obj &quot;students&quot;\n    |&gt; \\studentsResult -&gt;\n        when studentsResult is\n            Ok a -&gt; readStudentsList a\n                _ -&gt; Err &quot;students not found in the object&quot;\n</code></pre></div>",
        "id": 448458858,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719876118
    },
    {
        "content": "<p>Something like this might be easier to follow</p>\n<div class=\"codehilite\"><pre><span></span><code>students =\n    Dict.get obj &quot;students&quot;\n    |&gt; Result.map readStudentsList\n    |&gt; Result.mapErr \\_ -&gt; Err &quot;students not found in the object&quot;\n</code></pre></div>",
        "id": 448459010,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719876190
    },
    {
        "content": "<p>If you can share the type of <code>JsonData</code> and <code>Student</code> I can make a more complete example</p>",
        "id": 448459432,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719876405
    },
    {
        "content": "<p>Ok so this code works, but I've made some assumptions </p>\n<div class=\"codehilite\"><pre><span></span><code>emptyStudents : Students\nemptyStudents = []\n\nreadStudents : JsonData -&gt; Result Students [Err Str]\nreadStudents = \\json -&gt;\n    when json is\n\n        Object obj -&gt;\n\n            Dict.get obj &quot;students&quot;\n            |&gt; Result.map \\_ -&gt; emptyStudents\n            |&gt; Result.mapErr \\_ -&gt; Err &quot;students not found in the object&quot;\n\n        _ -&gt;\n            Err (Err &quot;Expected Json Object&quot;)\n</code></pre></div>",
        "id": 448459674,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719876531
    },
    {
        "content": "<p>I think one possible point of confusion is that you have named the Tag in your error union as <code>Err</code> which is also the name of the tag in a Result, so to return a valid <code>Result _ [Err Str]</code> you need to use <code>Err (Err \"my msg\")</code></p>",
        "id": 448459884,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719876630
    },
    {
        "content": "<p>If you change the error to something more descriptive like </p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">readStudents</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">JsonData</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"w\"> </span><span class=\"kt\">Students</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">StudentsNotFoundInObj</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">ExepectedJsonOjbect</span><span class=\"p\">]</span>\n<span class=\"nv\">readStudents</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">json</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">json</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n\n<span class=\"w\">        </span><span class=\"kt\">Object</span><span class=\"w\"> </span><span class=\"nv\">obj</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n\n<span class=\"w\">            </span><span class=\"kt\">Dict</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nv\">obj</span><span class=\"w\"> </span><span class=\"s\">\"students\"</span>\n<span class=\"w\">            </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"nf\">.</span><span class=\"nv\">map</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">emptyStudents</span>\n<span class=\"w\">            </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"nf\">.</span><span class=\"nv\">mapErr</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">StudentsNotFoundInObj</span>\n\n<span class=\"w\">        </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">            </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">ExepectedJsonOjbect</span>\n</code></pre></div>",
        "id": 448459991,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719876691
    },
    {
        "content": "<p>Is it more idiomatic to to use tag unions like this for errors rather than storing them in Strings?</p>",
        "id": 448532201,
        "sender_full_name": "Monica",
        "timestamp": 1719907524
    },
    {
        "content": "<p>Yes, I would say so. It's nice to be able to merge them and also exhaustively handle them too elsewhere in the program.</p>",
        "id": 448532797,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719907703
    },
    {
        "content": "<p>This is where I've gotten to with your help:</p>\n<div class=\"codehilite\"><pre><span></span><code>Student : {\n    name : Str,\n    modules : List (Module)\n}\n\nModule : {\n    name : Str,\n    credits : I64\n}\n\nJsonData : [\n    String Str,\n    Number U64,\n    Null,\n    Object (Dict Str JsonData),\n    Arr (List JsonData),\n]\n\nreadStudents : JsonData -&gt; Result (List Student) [StudentsNotFoundInObj, ExepectedJsonOjbect, EmptyListOfStudents, ExpectedJsonArray]\nreadStudents= \\json -&gt;\n    when json is\n        Object obj -&gt;\n            Dict.get obj &quot;students&quot;\n            |&gt; Result.map \\_ -&gt; readStudentsList\n            |&gt; Result.mapErr \\_ -&gt; StudentsNotFoundInObj\n        _ -&gt; Err ExepectedJsonOjbect\n\nreadStudentsList : JsonData -&gt; Result (List Student) [EmptyListOfStudents, ExpectedJsonArray]\n</code></pre></div>",
        "id": 448533103,
        "sender_full_name": "Monica",
        "timestamp": 1719907811
    },
    {
        "content": "<p>But I am confused about the error message I am getting </p>\n<div class=\"codehilite\"><pre><span></span><code>This when expression produces:\n\n    Result (JsonData -&gt; Result (List Student) [\n        EmptyListOfStudents,\n        ExpectedJsonArray,\n    ]) […]\n\nBut the type annotation on readStudents says it should be:\n\n    Result (List Student) […]\n</code></pre></div>",
        "id": 448533268,
        "sender_full_name": "Monica",
        "timestamp": 1719907861
    },
    {
        "content": "<p>Is this because my call to <code>readStudentsList</code> also returns a result? And I need to flatten them in order to either get my <code>Ok</code> or my <code>Err</code>?</p>",
        "id": 448533390,
        "sender_full_name": "Monica",
        "timestamp": 1719907917
    },
    {
        "content": "<p><code>Dict.get obj \"students\"</code> will return a result, you are mapping the Ok value into another  function <code>readStudentsList</code> which also returns a result. That is why you have nested results. Also you you have no actually provided a value to call <code>readStudentsList</code>, so that is why it shows as a Fn.</p>\n<p>Try using <code>|&gt; Result.try readStudentsList</code> instead</p>",
        "id": 448533680,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719908009
    },
    {
        "content": "<p><a href=\"https://www.roc-lang.org/builtins/Result#try\">Result.try</a> returns a new result, if the previous is an Err than it doesn't do anything.</p>",
        "id": 448533869,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719908076
    },
    {
        "content": "<p>Ahhhh</p>",
        "id": 448533985,
        "sender_full_name": "Monica",
        "timestamp": 1719908109
    },
    {
        "content": "<p>that compiles yep</p>",
        "id": 448534045,
        "sender_full_name": "Monica",
        "timestamp": 1719908127
    },
    {
        "content": "<p>what if I have an error in <code>readStudentsList</code>? Is it possible to bubble up the errors from <code>readStudentsList</code></p>",
        "id": 448534308,
        "sender_full_name": "Monica",
        "timestamp": 1719908193
    },
    {
        "content": "<p>That is what <code>Result.try</code> will do.  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 448535254,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719908500
    },
    {
        "content": "<p>Ahhhhh that makes a lot of sense thanks!!</p>",
        "id": 448537402,
        "sender_full_name": "Monica",
        "timestamp": 1719909113
    }
]