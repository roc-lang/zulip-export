[
    {
        "content": "<p>code :<br>\napp \"hello\"<br>\n    packages { pf: \"/home/arti/roc/examples/cli/cli-platform/main.roc\" }<br>\n    imports [pf.Stdout, pf.Program]<br>\n    provides [main] to pf</p>\n<p>main = <br>\n    num = addAndStringify 4  5<br>\n    Stdout.line \"hiden number \\(num)\" |&gt; Program.quick</p>\n<p>addAndStringify = \\num1, num2 -&gt;<br>\n    sum = num1 + num2<br>\n    if sum == 0 then<br>\n        \"\"<br>\n    else<br>\n        Num.toStr (num1 + num2)</p>\n<p>error:<br>\n roc dev </p>\n<p>── TYPE MISMATCH ──────────────────────────────────────────────────── main.roc ─</p>\n<p>This 2nd argument to isEq has an unexpected type:</p>\n<p>14│      if sum == 0 then<br>\n                   ^</p>\n<p>The argument is a number of type:</p>\n<div class=\"codehilite\"><pre><span></span><code>Num *\n</code></pre></div>\n\n<p>But isEq needs its 2nd argument to be:</p>\n<div class=\"codehilite\"><pre><span></span><code>Num a | a has Eq\n</code></pre></div>\n\n<p>── TYPE MISMATCH ──────────────────────────────────────────────────── main.roc ─</p>\n<p>This 1st argument to addAndStringify has an unexpected type:</p>\n<p>9│      num = addAndStringify 4  5<br>\n                              ^</p>\n<p>The argument is a number of type:</p>\n<div class=\"codehilite\"><pre><span></span><code>Num *\n</code></pre></div>\n\n<p>But addAndStringify needs its 1st argument to be:</p>\n<div class=\"codehilite\"><pre><span></span><code>Num * | * has Eq\n</code></pre></div>\n\n<p>── TYPE MISMATCH ──────────────────────────────────────────────────── main.roc ─</p>\n<p>This 2nd argument to addAndStringify has an unexpected type:</p>\n<p>9│      num = addAndStringify 4  5<br>\n                                 ^</p>\n<p>The argument is a number of type:</p>\n<div class=\"codehilite\"><pre><span></span><code>Num *\n</code></pre></div>\n\n<p>But addAndStringify needs its 2nd argument to be:</p>\n<div class=\"codehilite\"><pre><span></span><code>Num * | * has Eq\n</code></pre></div>\n\n<p>────────────────────────────────────────────────────────────────────────────────</p>\n<p>3 errors and 0 warnings found in 39 ms.</p>\n<p>You can run the program anyway with roc run</p>\n<p>a bit unexpected : )</p>",
        "id": 312250992,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1669406403
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> how can we do a better job here?</p>",
        "id": 312251281,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1669406529
    },
    {
        "content": "<p><code>Num *</code> should always be <code>Eq</code></p>",
        "id": 312251296,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1669406537
    },
    {
        "content": "<p>is there version which have it done  right ?</p>",
        "id": 312251391,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1669406588
    },
    {
        "content": "<p>I mean nightly build ?</p>",
        "id": 312251426,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1669406612
    },
    {
        "content": "<p>I think this is <a href=\"https://github.com/roc-lang/roc/issues/4594\">https://github.com/roc-lang/roc/issues/4594</a> probably?</p>",
        "id": 312251528,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669406666
    },
    {
        "content": "<p>yes looks like it</p>",
        "id": 312251566,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1669406688
    },
    {
        "content": "<p>for now you just need to tell the compiler what types your numbers have</p>",
        "id": 312251597,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1669406703
    },
    {
        "content": "<p>so <code>num = addAndStringify 4i64 5</code> would probably do it</p>",
        "id": 312251644,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1669406727
    },
    {
        "content": "<p>I tried u8 before and it doesn't worked  but I will try again</p>",
        "id": 312251862,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1669406864
    },
    {
        "content": "<p>maybe you need a type signature on the function then</p>",
        "id": 312252005,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1669406930
    },
    {
        "content": "<p>main = <br>\n    num = addAndStringify 4i8  5i8<br>\n    Stdout.line \"hiden number \\(num)\" |&gt; Program.quick</p>\n<p>addAndStringify = \\num1, num2 -&gt;<br>\n    sum = num1 + num2<br>\n    if sum == 0i8 then<br>\n        \"\"<br>\n    else<br>\n        Num.toStr (num1 + num2)</p>",
        "id": 312252201,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1669407056
    },
    {
        "content": "<p>works</p>",
        "id": 312252208,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1669407060
    },
    {
        "content": "<p>maybe I messed up before</p>",
        "id": 312252238,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1669407076
    }
]