[
    {
        "content": "<p>I recently updated my mac OS. Now when I try to run <code>cargo build</code> on roc I get an error <code>ld: library 'zstd' not found</code> and <code>ld: warning: ignoring duplicate libraries: '-lm'</code>.</p>\n<p>Has anyone else come across these issues?</p>\n<p>I have zstd installed I think. </p>\n<div class=\"codehilite\"><pre><span></span><code>$ which zstd\n/opt/homebrew/bin/zstd\n</code></pre></div>",
        "id": 444154378,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1718172173
    },
    {
        "content": "<p>I can build things using <code>nix develop</code> so not a total blocker.. though I use to be able to build this way also</p>",
        "id": 444154491,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1718172231
    },
    {
        "content": "<p>zstd is the executable I wonder if you need the shared lib separately</p>",
        "id": 444154810,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1718172377
    },
    {
        "content": "<p>I have the library... not sure why ld can't find it</p>\n<div class=\"codehilite\"><pre><span></span><code>$ pwd\n/opt/homebrew/Cellar/zstd/1.5.6/lib\n$ ls -al\ntotal 2784\ndrwxr-xr-x   8 luke  admin     256 Jun  3 19:11 .\ndrwxr-xr-x  13 luke  admin     416 Jun  7 19:02 ..\ndrwxr-xr-x   3 luke  admin      96 Mar 22 09:05 cmake\n-rw-r--r--   1 luke  admin  669440 Jun  3 19:11 libzstd.1.5.6.dylib\nlrwxr-xr-x   1 luke  admin      19 Mar 22 09:05 libzstd.1.dylib -&gt; libzstd.1.5.6.dylib\n-r--r--r--   1 luke  admin  753312 Mar 22 09:05 libzstd.a\nlrwxr-xr-x   1 luke  admin      15 Mar 22 09:05 libzstd.dylib -&gt; libzstd.1.dylib\ndrwxr-xr-x   3 luke  admin      96 Jun  3 19:11 pkgconfig\n</code></pre></div>",
        "id": 444155116,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1718172532
    },
    {
        "content": "<p>Maybe it's meant to be symlink'd somewhere without the version number</p>",
        "id": 444155208,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1718172579
    },
    {
        "content": "<p>But I would have thought homebrew would manage all that</p>",
        "id": 444155236,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1718172595
    },
    {
        "content": "<p>I'm seeing the same thing; any tips? Did you end up figuring it out?</p>",
        "id": 449155720,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1720122370
    },
    {
        "content": "<p>Ahh, found this in the CI config:</p>\n<div class=\"codehilite\"><pre><span></span><code>    env:\n      LIBRARY_PATH: /opt/homebrew/Cellar/zstd/1.5.6/lib\n</code></pre></div>",
        "id": 449156315,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1720122794
    },
    {
        "content": "<p>Setting that env var seems to make things work for me</p>",
        "id": 449156327,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1720122803
    },
    {
        "content": "<p>why do we depend on zstd? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> </p>\n<p>is it LLVM?</p>",
        "id": 462815824,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1723824286
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>│   │   │   │   ├── snafu v0.7.5\n│   │   │   │   │   ├── backtrace v0.3.69\n│   │   │   │   │   │   ├── addr2line v0.21.0\n│   │   │   │   │   │   │   └── gimli v0.28.0\n│   │   │   │   │   │   ├── cfg-if v1.0.0\n│   │   │   │   │   │   ├── libc v0.2.149\n│   │   │   │   │   │   ├── miniz_oxide v0.7.1\n│   │   │   │   │   │   │   └── adler v1.0.2\n│   │   │   │   │   │   ├── object v0.32.2\n│   │   │   │   │   │   │   ├── crc32fast v1.3.2\n│   │   │   │   │   │   │   │   └── cfg-if v1.0.0\n│   │   │   │   │   │   │   ├── flate2 v1.0.28\n│   │   │   │   │   │   │   │   ├── crc32fast v1.3.2 (*)\n│   │   │   │   │   │   │   │   └── miniz_oxide v0.7.1 (*)\n│   │   │   │   │   │   │   ├── hashbrown v0.14.3 (*)\n│   │   │   │   │   │   │   ├── indexmap v2.1.0\n│   │   │   │   │   │   │   │   ├── equivalent v1.0.1\n│   │   │   │   │   │   │   │   └── hashbrown v0.14.3 (*)\n│   │   │   │   │   │   │   ├── memchr v2.6.4\n│   │   │   │   │   │   │   └── ruzstd v0.5.0\n│   │   │   │   │   │   │       ├── byteorder v1.5.0\n│   │   │   │   │   │   │       ├── derive_more v0.99.17 (proc-macro)\n</code></pre></div>",
        "id": 462818842,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723824986
    },
    {
        "content": "<p>From <code>cargo tree</code>, it seems that <code>snafu</code> has a backtrace feature that when enabled, brings in <code>backtrace</code> which uses it</p>",
        "id": 462819073,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723825028
    },
    {
        "content": "<p><code>rg -i zstd</code> only brings up that usage and then us installing <code>zstd</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>❯ rg -i zstd\nCargo.lock\n1707: &quot;ruzstd&quot;,\n3360:name = &quot;ruzstd&quot;\n\n.github/workflows/nightly_macos_apple_silicon.yml\n18:      LIBRARY_PATH: /opt/homebrew/Cellar/zstd/1.5.6/lib\n\nwww/content/install/macos_x86_64.md\n24:   brew install z3 zstd\n</code></pre></div>",
        "id": 462819404,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723825087
    },
    {
        "content": "<p>oh wow</p>",
        "id": 462820856,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1723825554
    },
    {
        "content": "<p>so we could get rid of snafu and get rid of that dependency?</p>",
        "id": 462820868,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1723825561
    },
    {
        "content": "<p>we barely even use snafu! <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 462820938,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1723825580
    },
    {
        "content": "<p>I believe so!</p>",
        "id": 462820981,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723825599
    },
    {
        "content": "<p>I'll make a PR</p>",
        "id": 462820996,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723825606
    },
    {
        "content": "<p>Actually, we just have to disable backtraces. Would you rather disable backtraces or remove it in favor of manually implementing std::error::Error for the...</p>",
        "id": 462821210,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723825692
    },
    {
        "content": "<p>2 enums we have</p>",
        "id": 462821299,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723825741
    },
    {
        "content": "<p>I'm leaning towards remove</p>",
        "id": 462821338,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723825756
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7003\">https://github.com/roc-lang/roc/pull/7003</a></p>",
        "id": 462826790,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723827938
    },
    {
        "content": "<p>Seems like we were also \"using\" it in the <code>object</code> crate, in that the crate has a <code>compression</code> feature that brings in zstd. By disabling the feature, we removed the dependency.</p>",
        "id": 462826979,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723827998
    },
    {
        "content": "<p>If tests all run correctly (beyond it compiling for me locally), then we're good to go.</p>",
        "id": 462827016,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723828019
    },
    {
        "content": "<p>There's a chance, though, that there's an OSX-only code portion that uses the compression feature, in which case this PR is moot and can be closed</p>",
        "id": 462827113,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723828072
    },
    {
        "content": "<p>I think it's a good change regardless!</p>",
        "id": 462831900,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1723830381
    },
    {
        "content": "<p>All the tests pass, so it looks like we don't need <code>zstd</code><em>or</em> <code>z3</code></p>",
        "id": 462836310,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723832475
    },
    {
        "content": "<p>It's on auto-merge, just needs an approval</p>",
        "id": 462836341,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723832488
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281383\">Richard Feldman</span> <a href=\"#narrow/stream/231634-beginners/topic/ld.3A.20library.20'zstd'.20not.20found/near/462815824\">said</a>:</p>\n<blockquote>\n<p>why do we depend on zstd? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> </p>\n<p>is it LLVM?</p>\n</blockquote>\n<p>This is why these \"basic\" questions are useful!</p>",
        "id": 462836710,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723832654
    }
]