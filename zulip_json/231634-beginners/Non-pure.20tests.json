[
    {
        "content": "<p>It seems like with the way <code>expect</code> works, it must always test pure code. What is the plan for testing non-pure code? I think I remember hearing something about mocking out Tasks at one point. That would make it so that the tests are effectively still pure. What if I need side effects in tests? For example, I was trying to think of how property-based testing would work since you’d need a way to generate randomness.</p>",
        "id": 341212286,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1678589859
    },
    {
        "content": "<p>I don't know the details of how it will work, but the plan is to have <code>expect-fx</code> for that</p>",
        "id": 341212699,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678590171
    },
    {
        "content": "<p>Also, for property based tests, I would assume eventually if they are wanted, they would be built into the language test runner. That way it can control the randomness (that or maybe done somehow through <code>expect-fx</code> or similar.</p>",
        "id": 341212764,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678590216
    },
    {
        "content": "<p>And yeah, with the changes to Tasks, it should be able to mock and test them in pure roc, theoretcially with <code>expect</code></p>",
        "id": 341212821,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678590243
    },
    {
        "content": "<p>Ah I hadn’t heard about <code>expect-fx</code>, cool. Out of curiosity, are there any designs/examples of what mocking Tasks would look like?</p>",
        "id": 341213059,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1678590388
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> do you have a doc for this? The effect interpreter stuff that enables task mocking?</p>",
        "id": 341213219,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678590530
    },
    {
        "content": "<p>yeah I don't have an example yet unfortunately, it's still WIP</p>",
        "id": 341215711,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1678592188
    }
]