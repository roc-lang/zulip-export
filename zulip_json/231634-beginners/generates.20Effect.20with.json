[
    {
        "content": "<p>Where can I find what functions can be generated with <code>generates Effect with</code>? I’m curious if there’s something like <code>traverse : List a, (a -&gt; Effect b c) -&gt; Effect (List b) c</code></p>",
        "id": 327445891,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676244699
    },
    {
        "content": "<p>it's in <code>crates/compiler/can/src/effect_module.rs </code>, currently we can generate </p>\n<div class=\"codehilite\"><pre><span></span><code>pub(crate) struct HostedGeneratedFunctions {\n    pub(crate) after: bool,\n    pub(crate) map: bool,\n    pub(crate) always: bool,\n    pub(crate) loop_: bool,\n    pub(crate) forever: bool,\n}\n</code></pre></div>",
        "id": 327446470,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1676245252
    },
    {
        "content": "<p>so, no traverse, but traverse can be expressed in terms of <code>after</code></p>",
        "id": 327446490,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1676245271
    },
    {
        "content": "<p>or even in terms of <code>Task</code>: </p>\n<div class=\"codehilite\"><pre><span></span><code>map2 : Task a err, Task b err, (a, b -&gt; c) -&gt; Task c err\nmap2 = \\task1, task2, mapper -&gt;\n    task1 |&gt; Task.await \\value1 -&gt;\n        task2 |&gt; Task.map \\value2 -&gt;\n            mapper value1 value2\n\ntraverse : List a, (a -&gt; Task b err) -&gt; Task (List b) err\ntraverse = \\list, f -&gt;\n    walker : Task (List b) err, a -&gt; Task (List b) err\n    walker = \\state, element -&gt; map2 state (f element) List.append\n\n    initialState = Task.succeed (List.withCapacity (List.len list))\n    List.walk list initialState walker\n\ncombine : List (Task a err) -&gt; Task (List a) err\ncombine = \\list -&gt; traverse list (\\x -&gt; x)\n</code></pre></div>",
        "id": 327446524,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1676245319
    }
]