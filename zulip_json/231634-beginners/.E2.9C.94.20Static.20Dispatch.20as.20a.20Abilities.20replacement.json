[
    {
        "content": "<p>Hello, I have started learning roc for fun, and I have read static dispatch proposal. I am a bit confused about substituting abilities with it. </p>\n<p>Rust allows to impl trait <code>A</code> for type <code>B</code> if either trait or type came from the module the impl block is.</p>\n<p>While proposal talks about how you can easily substitute abilities with static dispatch by having a function in the module, there is absolutely nothing that talks about how can I extend existing types when I want to create <em>my</em> ability.</p>\n<p>Can you guys tell me how it should go?</p>",
        "id": 535683858,
        "sender_full_name": "EnDeRBeaT",
        "timestamp": 1755869767
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"950624\">@EnDeRBeaT</span>,<br>\nAllowing extension of existing types is not planned. From <a class=\"message-link\" href=\"/#narrow/channel/304641-ideas/topic/static.20dispatch.20-.20on.20Str/near/495605290\">#ideas &gt; static dispatch - on Str @ ðŸ’¬</a> :</p>\n<blockquote>\n<p>In general, methods only get defined in the module of the custom type</p>\n</blockquote>\n<p>Feel free to share a specific problem that you would solve with extension of an existing type and we can discuss how to tackle it instead.</p>",
        "id": 535698782,
        "sender_full_name": "Anton",
        "timestamp": 1755873854
    },
    {
        "content": "<p>Hi!<br>\nI do not have a concrete example on hand, I just wanted to point out that it doesn't seem like static dispatch can't fully replace abilities.</p>\n<p>For example, you would not be able to define a new \"ability\" (<a href=\"https://www.roc-lang.org/abilities#defining-a-new-ability\">https://www.roc-lang.org/abilities#defining-a-new-ability</a>), because you can't extend other types.</p>",
        "id": 535707504,
        "sender_full_name": "EnDeRBeaT",
        "timestamp": 1755876614
    },
    {
        "content": "<p>With the example provided there under \"Advanced Topic: Defining a new Ability\", you need to control the type definition of <code>Color</code> to add <code>CustomInspect { ...</code>. This will work similarly with static dispatch except you need to make a module (file) Color.roc. I believe current abilities do not support the extension of existing types. You can only \"extend\" existing types if you wrap them in a new type, which will also be possible with static dispatch.</p>",
        "id": 535713179,
        "sender_full_name": "Anton",
        "timestamp": 1755878434
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/channel/231634-beginners/topic/Static.20Dispatch.20as.20a.20Abilities.20replacement/near/535713179\">said</a>:</p>\n<blockquote>\n<p>if you wrap them in a new type</p>\n</blockquote>\n<p>Okay, I think that it might be easier to do in Roc than in Rust, hence there is not a lot of need. Thank you</p>",
        "id": 535713674,
        "sender_full_name": "EnDeRBeaT",
        "timestamp": 1755878568
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"950624\">EnDeRBeaT</span> has marked this topic as resolved.</p>",
        "id": 535713703,
        "sender_full_name": "Notification Bot",
        "timestamp": 1755878576
    }
]