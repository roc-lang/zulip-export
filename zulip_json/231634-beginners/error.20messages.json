[
    {
        "content": "<p>Anyone spot my error below?</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;Tester&quot;\n    packages { base: &quot;platform&quot; }\n    imports [base.Task,  Test]\n    provides [ main ] to base\n\nmain : Task.Task {} []\nmain =\n    t1 = { name : &quot;1 + 1 = 2&quot;, test: 1 + 1 == 2 }\n    t2 = { name : &quot;2 + 2 = 5&quot;, test: 2 + 2 == 5 }\n    #\n    # The first three lines below succeed, the last one fails: emitted runtime error ...\n    # Test.evalTest t1\n    # Test.evalTest t2\n    # Test.strListToStr [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] &quot;,&quot;\n    List.map [t1,t2] evalTest |&gt; Test.strListToStr &quot;,&quot;\n       |&gt; Task.putLine\n</code></pre></div>\n<p>The code is in the <code>jim</code> branch: see <code>Tester.roc</code> and <code>Test.roc</code></p>",
        "id": 249015017,
        "sender_full_name": "James Carlson",
        "timestamp": 1628619052
    },
    {
        "content": "<p>In the above code, fail on <code>List.map [t1,t2] evalTest |&gt; Test.strListToStr \",\"</code>, no useful error messages, just \"error\"</p>",
        "id": 249022693,
        "sender_full_name": "James Carlson",
        "timestamp": 1628622766
    },
    {
        "content": "<p>did you compile the roc compiler in release or debug mode (debug is the default)?</p>",
        "id": 249023147,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628623004
    },
    {
        "content": "<p>Probably debug: <code>target/debug/roc examples/benchmarks/Tester.roc</code>.  I don't remember how I installed it.</p>",
        "id": 249023996,
        "sender_full_name": "James Carlson",
        "timestamp": 1628623393
    },
    {
        "content": "<p>Here is the full error message:</p>\n<div class=\"codehilite\"><pre><span></span><code>➜  roc git:(jim) vr test\n    Finished dev [unoptimized + debuginfo] target(s) in 1.02s\n     Running `target/debug/roc examples/benchmarks/Tester.roc`\nemitted runtime error LookupNotInScope(|L 17-17, C 21-29| Ident(IdentStr { is_small_str: true, string: &quot;evalTest&quot;, elements: [101, 118, 97, 108, 84, 101, 115, 116] }), {&quot;U8&quot;, &quot;F64&quot;, &quot;Binary32&quot;, &quot;Integer&quot;, &quot;Nat&quot;, &quot;I128&quot;, &quot;Decimal&quot;, &quot;Dec&quot;, &quot;Signed8&quot;, &quot;Dict&quot;, &quot;Str&quot;, &quot;Binary64&quot;, &quot;Result&quot;, &quot;I64&quot;, &quot;U64&quot;, &quot;FloatingPoint&quot;, &quot;F32&quot;, &quot;Float&quot;, &quot;Unsigned8&quot;, &quot;Natural&quot;, &quot;Signed16&quot;, &quot;Signed64&quot;, &quot;main&quot;, &quot;Int&quot;, &quot;Num&quot;, &quot;U16&quot;, &quot;Set&quot;, &quot;t2&quot;, &quot;I32&quot;, &quot;t1&quot;, &quot;Unsigned32&quot;, &quot;Signed128&quot;, &quot;List&quot;, &quot;Unsigned16&quot;, &quot;Signed32&quot;, &quot;Unsigned64&quot;, &quot;Unsigned128&quot;, &quot;U32&quot;, &quot;Bool&quot;, &quot;I16&quot;, &quot;I8&quot;, &quot;U128&quot;})\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, compiler/mono/src/ir.rs:7649:35\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 249025167,
        "sender_full_name": "James Carlson",
        "timestamp": 1628623916
    },
    {
        "content": "<p>so that says that <code>evalTest</code> is not in scope</p>",
        "id": 249026148,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628624306
    },
    {
        "content": "<p>Good to know that I can extract info from those messages.  Thanks!</p>\n<p>I put in the missing <code>Test.</code> so as to have <code>List.map [t1,t2] Test.evalTest |&gt; Test.strListToStr \",\"</code></p>\n<p>Alas, I still get an error:</p>\n<div class=\"codehilite\"><pre><span></span><code>➜  roc git:(jim) ✗ vr test\n    Finished dev [unoptimized + debuginfo] target(s) in 0.69s\n     Running `target/debug/roc examples/benchmarks/Tester.roc`\nerror: Failed at the test script\n</code></pre></div>\n<p>The script is <code>cargo run examples/benchmarks/Tester.roc</code></p>",
        "id": 249026842,
        "sender_full_name": "James Carlson",
        "timestamp": 1628624641
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430829\">@James Carlson</span> it would be awesome if you could post an issue with a <code>.roc</code> file that reproduces that <code>LookupNotInScope</code> error, so we can make sure it gives a proper compile-time error!</p>",
        "id": 249039270,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628630303
    },
    {
        "content": "<p>Will do!</p>",
        "id": 249039549,
        "sender_full_name": "James Carlson",
        "timestamp": 1628630482
    },
    {
        "content": "<p>it would give one if we didn't panic later in mono</p>",
        "id": 249039684,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628630536
    },
    {
        "content": "<p>the real reason I think is that we don't make specializations when we know the function will blow up when we call it</p>",
        "id": 249039719,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628630559
    },
    {
        "content": "<p>but the mono machinery assumes that function does exist</p>",
        "id": 249039732,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628630566
    },
    {
        "content": "<p>This message illustrates the use of a small testing framework (LOL!) in interface <code>Test</code> of the <code>jim</code> branch (<code>examples/benchmarks</code>). It is for the parser project I'm working on. Here is an example (code is in <code>ParseApp</code>).</p>\n<div class=\"codehilite\"><pre><span></span><code>➜  roc git:(jim) ✗ cargo run examples/benchmarks/ParseApp.roc\n    Finished dev [unoptimized + debuginfo] target(s) in 0.27s\n     Running `target/debug/roc examples/benchmarks/ParseApp.roc`\nPass :: run &quot;abcd any =&gt; &quot;a&quot;\nPass :: run &quot;abcd&quot; satisfy (\\u -&gt; u == 97)) =&gt; &quot;a&quot;\nPass :: Use &#39;second&#39; to recognize &quot;a&quot; then &quot;b&quot; returning &quot;b&quot;\nPass :: Use &#39;first&#39; to recognize &quot;a&quot; then &quot;b&quot; returning &quot;a&quot;\nPass :: Use map to shift output of parser: run &quot;abcd&quot; (map any (\\u -&gt; u + 25)) == &quot;z&quot;\nPass :: Use andThen to recognize strings beginning with two repeated letters (succeed on input &quot;aaxyz&quot;)\nruntime: 0.380ms\n</code></pre></div>\n<p>Of course you can also get <code>Fail ::</code></p>\n<p>Tests look like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>p4 = {name : &quot;Use &#39;first&#39; to recognize \\&quot;a\\&quot; then \\&quot;b\\&quot; returning \\&quot;a\\&quot;&quot;, test : run &quot;abcd&quot; (first  satisfyA satisfyB) == &quot;a&quot;}\n</code></pre></div>\n<p>A \"suite\" of tests is run like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>[Test.eval p1, Test.eval p2, Test.eval p3, Test.eval p4, Test.eval p5, Test.eval p6]\n    |&gt; Test.strListToStr &quot;\\n&quot;\n          |&gt; Task.putLine\n</code></pre></div>\n<p>For some reason, the more beautiful yet seemingly equivalent code below gives an error:</p>\n<div class=\"codehilite\"><pre><span></span><code> List.map [p1, p2, p3, p4, p5, p6] Test.eval\n       |&gt; Test.strListToStr &quot;\\n&quot;\n       |&gt; Task.putLine\n</code></pre></div>\n<p>The error message is not informative:</p>\n<div class=\"codehilite\"><pre><span></span><code>➜  roc git:(jim) vr parser\n    Finished dev [unoptimized + debuginfo] target(s) in 0.88s\n     Running `target/debug/roc examples/benchmarks/ParseApp.roc`\nerror: Failed at the parser script\n</code></pre></div>\n<p>Here <code>vr parser == cargo run examples/benchmarks/ParseApp.roc</code></p>",
        "id": 249074979,
        "sender_full_name": "James Carlson",
        "timestamp": 1628665684
    },
    {
        "content": "<p>I get a segmentation fault for the code with <code>List.map</code>, as expected there are some valgrind errors. I'll make an issue.</p>",
        "id": 249085758,
        "sender_full_name": "Anton",
        "timestamp": 1628674068
    },
    {
        "content": "<p>#1569</p>",
        "id": 249086786,
        "sender_full_name": "Anton",
        "timestamp": 1628674811
    },
    {
        "content": "<p>taking a look. segfaults are bad</p>",
        "id": 249088524,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628676164
    },
    {
        "content": "<p>interesting, filling a list with these <code>    p1 = {name : \"test1\", test: 1 }</code> values is fine (the test field is an i64) but <code>    p1 = {name : \"test1\", test: 1 == 1 }</code> is not (test field is a bool)</p>",
        "id": 249090670,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628677950
    },
    {
        "content": "<p>likely something bad in our stack size calculation</p>",
        "id": 249090678,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628677961
    },
    {
        "content": "<p>What is the syntax for running <code>cargo run examples/benchmarks/ParseApp.roc</code> with  <code>RUST_BACKTRACE=1</code>?</p>",
        "id": 249105679,
        "sender_full_name": "James Carlson",
        "timestamp": 1628687983
    },
    {
        "content": "<p>I usually just set that variable in my current shell</p>",
        "id": 249106357,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628688301
    },
    {
        "content": "<p>so depends on the shell you use</p>",
        "id": 249106377,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628688307
    },
    {
        "content": "<p>I usually do <code>RUST_BACKTRACE=1 cargo run ....</code></p>",
        "id": 249108203,
        "sender_full_name": "Anton",
        "timestamp": 1628689188
    },
    {
        "content": "<p>Suppose that one has an interface exposing <code>foo</code> and an app importing that interface.  Suppose that the app compiles. Does that mean that <code>foo</code> was successfully compiled?  Weaker: can one assume that <code>foo</code> typechecks?</p>",
        "id": 249188820,
        "sender_full_name": "James Carlson",
        "timestamp": 1628731106
    },
    {
        "content": "<p>it should mean that <code>foo</code> typechecks</p>",
        "id": 249192080,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628735716
    },
    {
        "content": "<p>whenever you import an interface module, it gets fully type-checked just like whatever imported it!</p>",
        "id": 249192086,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628735746
    },
    {
        "content": "<p>I see that the \"map over list of records\" bug has been fixed. (Yay!). So one can now do things like this in <code>ParserApp.roc</code> to run tests</p>\n<div class=\"codehilite\"><pre><span></span><code>    Test.run [p1, p2, p3, p4, p5, p6, p7, p8]\n      |&gt; Task.putLine\n</code></pre></div>\n<p>For example:</p>\n<div class=\"codehilite\"><pre><span></span><code>➜  roc git:(jim) vr parser\n    Finished dev [unoptimized + debuginfo] target(s) in 0.90s\n     Running `target/debug/roc examples/benchmarks/ParseApp.roc`\n\nPass :: run &quot;abcd any =&gt; &quot;a&quot;\nPass :: run &quot;abcd&quot; satisfy (\\u -&gt; u == 97)) =&gt; &quot;a&quot;\nPass :: Use &#39;second&#39; to recognize &quot;a&quot; then &quot;b&quot; returning &quot;b&quot;\nPass :: Use &#39;first&#39; to recognize &quot;a&quot; then &quot;b&quot; returning &quot;a&quot;\nPass :: Use map to shift output of parser: run &quot;abcd&quot; (map any (\\u -&gt; u + 25)) == &quot;z&quot;\nPass :: Use andThen to recognize strings beginning with two repeated letters (succeed on input &quot;aaxyz&quot;)\nPass :: is successful (positive)\nPass :: is successful (negative)\n\nruntime: 0.460ms\n</code></pre></div>",
        "id": 249216038,
        "sender_full_name": "James Carlson",
        "timestamp": 1628762489
    },
    {
        "content": "<p>QUESTION. would it not be better if I made sister directory of <code>benchmarks</code> for the parser etc code?  <br>\nE.g., directory <code>parser</code>.</p>\n<p>The number of files is growing:</p>\n<div class=\"codehilite\"><pre><span></span><code>Loop.roc\nPair.roc\nParseApp.roc\nParser.roc\nTest.roc\nTester.roc\nUtility.roc\n</code></pre></div>\n<p>If I did this, would <code>cargo run examples/parser/ParseApp.roc</code> work properly?</p>",
        "id": 249216771,
        "sender_full_name": "James Carlson",
        "timestamp": 1628763027
    },
    {
        "content": "<p>The following line in <code>ParserApp.roc</code> causes a panic:</p>\n<div class=\"codehilite\"><pre><span></span><code>oneOfResult = (oneOf [satisfyA, satisfyB]) [97, 98, 99, 100]\n</code></pre></div>\n<p>Here is the definition of <code>oneOf</code> (in file <code>Parser.roc</code>):</p>\n<div class=\"codehilite\"><pre><span></span><code>oneOf : List (Parser a) -&gt; Parser a\noneOf = \\parserList -&gt;\n          \\input -&gt; when List.first parserList is\n              Ok p -&gt;\n                output = p input\n                if List.len output == 1 then output else (oneOf (List.drop parserList 1)) input\n              Err _ -&gt; [ ]\n</code></pre></div>\n<p>The error message with <code>RUST_BACKTRACE=1</code> is rather long, but it begins like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>     Running `target/debug/roc examples/benchmarks/ParseApp.roc`\nthread &#39;main&#39; panicked at &#39;internal error: entered unreachable code: symbol/layout combo must be in DeclarationToIndex&#39;, compiler/mono/src/borrow.rs:223:9\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/std/src/panicking.rs:515:5\n   1: core::panicking::panic_fmt\n             at /rustc/a178d0322ce20e33eac124758e837cbd80a6f633/library/core/src/panicking.rs:92:14\n   2: roc_mono::borrow::DeclarationToIndex::get_param_offset\n             at ./compiler/mono/src/borrow.rs:223:9\n   3: roc_mono::borrow::ParamMap::get_param_offset\n</code></pre></div>\n<p>QUESTION:  is the cause of the panic my code or the compiler?</p>",
        "id": 249220373,
        "sender_full_name": "James Carlson",
        "timestamp": 1628766125
    },
    {
        "content": "<p>should be possible to have a <code>parser</code> folder. just make sure to also copy the <code>platform</code> folder</p>",
        "id": 249222625,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628768002
    },
    {
        "content": "<p>and that panic is probably caused by a type error earlier in the pipeline</p>",
        "id": 249222643,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628768018
    },
    {
        "content": "<p>Thanks, I'll make that folder and investigate my types</p>",
        "id": 249223679,
        "sender_full_name": "James Carlson",
        "timestamp": 1628768645
    },
    {
        "content": "<p>I've moved all my code in the <code>jim</code> branch to <code>examples/parser</code></p>",
        "id": 249224230,
        "sender_full_name": "James Carlson",
        "timestamp": 1628769005
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> , I'm trying to see where my code for the <code>oneOf</code> parser is going wrong.  I asked Richard about type-checking:</p>\n<blockquote>\n<p>James Carlson: Suppose that one has an interface exposing foo and an app importing that interface. Suppose that the app compiles. Does that mean that foo was successfully compiled? Weaker: can one assume that foo typechecks?</p>\n</blockquote>\n<blockquote>\n<p>Richard Feldman: it should mean that foo typechecks</p>\n</blockquote>\n<blockquote>\n<p>Richard Feldman: whenever you import an interface module, it gets fully type-checked just like whatever imported it!</p>\n</blockquote>\n<p>So on the basis of this, I would think that the code for <code>oneOf</code> in <code>examples/Parser.roc</code> is correct .... ????</p>\n<p>ASSUMING that is the case, then the culprit has to be</p>\n<div class=\"codehilite\"><pre><span></span><code>oneOfResult = (oneOf [satisfyA, satisfyB]) [97, 98, 99, 100]\n</code></pre></div>\n<p>Here the parser <code>oneOf : List (Parser a) -&gt; Parser a</code> is applied to a list of parsers, so it returns a parser.  That parser is then applied to a list of <code>U8</code>, which is as it should be:</p>\n<div class=\"codehilite\"><pre><span></span><code>Parser a : List U8 -&gt; List ([Pair a (List U8)])\n</code></pre></div>\n<p>There must be an error somewhere, but I don't see it.</p>\n<p>The files are <code>parser/Parser.roc</code> and <code>parser/ParserTest.roc</code> where</p>\n<div class=\"codehilite\"><pre><span></span><code>oneOf : List (Parser a) -&gt; Parser a\noneOf = \\parserList -&gt;\n          \\input -&gt; when List.first parserList is\n              Ok p -&gt;\n                output = p input\n                if List.len output == 1 then output else (oneOf (List.drop parserList 1)) input\n              Err _ -&gt; [ ]\n</code></pre></div>",
        "id": 249226023,
        "sender_full_name": "James Carlson",
        "timestamp": 1628770140
    },
    {
        "content": "<p>it might be that the result not being used is a problem here</p>",
        "id": 249241937,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628778578
    },
    {
        "content": "<p><code>oneOfResult</code> is dead code eliminated</p>",
        "id": 249241963,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628778591
    },
    {
        "content": "<p>because I don't see a type error when  i run the code</p>",
        "id": 249242040,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628778608
    },
    {
        "content": "<p>Hmm ... I ran <code>ParserTest.roc</code> with</p>\n<div class=\"codehilite\"><pre><span></span><code>p9 = {name: &quot;test of oneOf combinator&quot;, test: List.len oneOfResult == 1}\n...\n...\nTest.run [p1, p2, p3, p4, p5, p6, p7, p8, p9]\n      |&gt; Task.putLine\n</code></pre></div>\n<p>This produced a long error message.  So that argues against dead-code elimination being the problem.  How do we assure ourselves that both <code>oneOf</code> and <code>oneOfResult</code> type-check?  I think Richard's comment takes care of the first.  Is there a way of type-checking an interface or app with running the code?</p>",
        "id": 249256763,
        "sender_full_name": "James Carlson",
        "timestamp": 1628785304
    },
    {
        "content": "<p>Something interesting: I moved <code>oneOfResult</code> from <code>ParserTest</code> to <code>Parser</code> on the theory that this way we could verify whether <code>oneOfResult</code> type checks. This configuration ran without error.  I'm relieved, but still puzzled.</p>",
        "id": 249257430,
        "sender_full_name": "James Carlson",
        "timestamp": 1628785619
    },
    {
        "content": "<p>Hmm ... something really weird is going on.  Consider the following tests:</p>\n<div class=\"codehilite\"><pre><span></span><code>    p9 = {name: &quot;test of oneOf combinator&quot;, test: List.len oneOfResult == 1}\n    p10 = {name: &quot;test (2) of oneOf combinator&quot;, test: List.len ((oneOf [satisfyA, satisfyB]) [97, 98, 99, 100]) == 1}\n</code></pre></div>\n<p>where</p>\n<div class=\"codehilite\"><pre><span></span><code>oneOfResult = (oneOf [satisfyA, satisfyB]) [97, 98, 99, 100]\n</code></pre></div>\n<p>Including <code>p10</code> in the tests causes a crash.  But this is a violation of referential transparency, since the difference between <code>p9</code> and <code>p10</code> is a substitution.  Could there be a problem with the compiler?</p>",
        "id": 249258051,
        "sender_full_name": "James Carlson",
        "timestamp": 1628785942
    },
    {
        "content": "<p>took a deeper look and there is a bug somewhere, will try to track it down</p>",
        "id": 249258112,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628785980
    },
    {
        "content": "<p>thanks for all your testing btw!</p>",
        "id": 249258143,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628785993
    },
    {
        "content": "<p>Thanks Folkert, good luck!</p>",
        "id": 249258167,
        "sender_full_name": "James Carlson",
        "timestamp": 1628786006
    },
    {
        "content": "<p>Ah ... the testing is good for me also.  Finding the boundary between my errors and the compiler bugs is the hard part.</p>",
        "id": 249258298,
        "sender_full_name": "James Carlson",
        "timestamp": 1628786051
    },
    {
        "content": "<p>btw you can also write <code>oneOf</code> as </p>\n<div class=\"codehilite\"><pre><span></span><code>oneOf = \\parserList -&gt;\n    \\input -&gt;\n        List.walkUntil parserList\n            (\\p, accum -&gt;\n                output = p input\n                if List.len output == 1 then\n                    Stop output\n\n                else\n                    Continue accum\n            )\n            []\n</code></pre></div>\n<p>triggers the same problem, but it's a lot more efficient because you're not dropping items from a list one-by-one</p>",
        "id": 249260654,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628787210
    },
    {
        "content": "<p>well I made some issues <a href=\"https://github.com/rtfeldman/roc/issues/1576\">https://github.com/rtfeldman/roc/issues/1576</a> and <a href=\"https://github.com/rtfeldman/roc/issues/1575\">https://github.com/rtfeldman/roc/issues/1575</a> the problem seems to be that different function types (specifically different closure, so functions that capture things) in the same list causes some problems when generating code</p>",
        "id": 249266137,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628789455
    },
    {
        "content": "<p>Mmm ... very nice!  I will use that code.  Didn't know about <code>walkUntil</code>, but can see it is really handy.  I was going to rig up something with <code>loop</code> and <code>Step</code> as in Elm, but this is much better.</p>",
        "id": 249282267,
        "sender_full_name": "James Carlson",
        "timestamp": 1628796961
    },
    {
        "content": "<p>yea this will actually exit early</p>",
        "id": 249282448,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628797053
    },
    {
        "content": "<p>I'm fairly close to being able to interesting things: <code>oneOf</code>, <code>andThen</code>, and <code>map</code> are the most important combinators.  Once I get something barebones but interesting, I will go back and add some error handling. Nonexistent at present.</p>",
        "id": 249282839,
        "sender_full_name": "James Carlson",
        "timestamp": 1628797212
    },
    {
        "content": "<p>(FYI, I moved the above conversations from <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/strings\">#beginners &gt; strings</a> and <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/syntax.20\">#beginners &gt; syntax </a> to give error messages their own topic!)</p>",
        "id": 249298814,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628805805
    },
    {
        "content": "<p>I have a simple testing interface that may be of some use to folks just working with roc code.  Here is an example. In file <code>examples/parser/Pair.roc</code>, I have the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>## TESTS\n\ninc = \\x -&gt; x + 1\np1 = Pair 1 0\n\nt1 = {name: &quot;mapFirst, first&quot;, test: (Pair.mapFirst p1 inc |&gt; Pair.first) == 2 }\nt2 = {name: &quot;mapSecond, second&quot;, test: (Pair.mapSecond p1 inc |&gt; Pair.second) == 1 }\nt3 = {name: &quot;map2, first coordinate&quot;, test: (Pair.map2 p1 inc inc|&gt; Pair.first) == 2 }\nt4 = {name: &quot;map2, second coordinate&quot;, test: (Pair.map2 p1 inc inc|&gt; Pair.second) == 1 }\n\ntests = [t1, t2, t3, t4]\n</code></pre></div>\n<p>Of all this, only <code>tests</code> is exposed.  Then, in <code>examples/parser/TestRunner.roc</code>, there is</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;testRunner&quot;\n     packages { base: &quot;platform&quot; }\n     imports [base.Task, Test, Pair]\n     provides [ main ] to base\n\nmain : Task.Task {} []\nmain =\n\n    Test.run Pair.tests\n    |&gt; Task.putLine\n</code></pre></div>\n<p>The command <code>cargo run parser/TestRunner.roc</code>, executed from <code>examples</code>, yields the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>Pass :: mapFirst, first\nPass :: mapSecond, second\nPass :: map2, first coordinate\nPass :: map2, second coordinate\n</code></pre></div>\n<p>A feature of this approach is that (a) the tests reside in the file whose code is tested (b) the test code is very compact, as is the test runner.</p>",
        "id": 249369865,
        "sender_full_name": "James Carlson",
        "timestamp": 1628866256
    },
    {
        "content": "<p>Cool stuff :)</p>",
        "id": 249370224,
        "sender_full_name": "Anton",
        "timestamp": 1628866422
    },
    {
        "content": "<p>Thanks Anton!</p>",
        "id": 249370261,
        "sender_full_name": "James Carlson",
        "timestamp": 1628866439
    },
    {
        "content": "<p>wow, very nice! I have a design in mind for a <code>roc test</code> command, but it's a ways off from being implemented, so this is great!!!</p>",
        "id": 249370440,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628866526
    },
    {
        "content": "<p>Jim, I think you just created Roc's first-ever genuinely useful programming tool written entirely in Roc <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 249370569,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628866568
    },
    {
        "content": "<p>I plan to add</p>\n<div class=\"codehilite\"><pre><span></span><code>showFailures : List Test -&gt; Str\n</code></pre></div>\n<p>but atm am blocked by </p>\n<div class=\"codehilite\"><pre><span></span><code>Utility.filterList : List a, (a -&gt; Bool) -&gt; List a\n</code></pre></div>\n<p>which creates panic.</p>",
        "id": 249370650,
        "sender_full_name": "James Carlson",
        "timestamp": 1628866599
    },
    {
        "content": "<p>Haha! Thanks!! It is a stopgap pending the real thing.</p>",
        "id": 249370710,
        "sender_full_name": "James Carlson",
        "timestamp": 1628866638
    },
    {
        "content": "<p>is there a bug report for that one? Folkert and I are planning to pair on bugfixes this weekend!</p>",
        "id": 249370718,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628866642
    },
    {
        "content": "<p>I will make one.  I always struggle with the question: is it my code, or something else.</p>",
        "id": 249370802,
        "sender_full_name": "James Carlson",
        "timestamp": 1628866682
    },
    {
        "content": "<p>if it's a panic or segfault, it's definitely a compiler bug <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 249371033,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628866795
    },
    {
        "content": "<p>well, or a platform bug - but I assume you're not making changes to the platform haha</p>",
        "id": 249371135,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628866818
    },
    {
        "content": "<p>the compiler should never panic or segfault, or generate application code that panics (in the Rust sense) or segfaults</p>",
        "id": 249371199,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628866841
    },
    {
        "content": "<p>so definitely please file issues for any of those that you see! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 249371283,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628866876
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> good news (see below in the code, filterList) — it is running fine now.  Will file issues going forward when I see them.</p>\n<div class=\"codehilite\"><pre><span></span><code># Test of examples/parser/Utility.roc\n\ncargo run parser/TestUtility.roc\n\nPass :: concatStrList [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] == &quot;abc&quot;\nPass :: concatStrListWithSeparator [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;] &quot;.&quot; == &quot;a.b.c&quot;\nPass :: isEven 4 == True\nPass :: isEven 5 == False\nPass :: filterList [1,2,3,4,5,6] isEven == [2,4,6]\nPass :: showU8 97 == &quot;a&quot;\nPass :: showU8Pair (Pair 97 [98, 99]) == &quot;(a, bc)&quot;\n</code></pre></div>",
        "id": 249376772,
        "sender_full_name": "James Carlson",
        "timestamp": 1628869442
    },
    {
        "content": "<p>Just posted an issue, #1581, <a href=\"https://github.com/rtfeldman/roc/issues/1581\">https://github.com/rtfeldman/roc/issues/1581</a>, regarding a panic when calling function <code>Test.failures</code></p>",
        "id": 249390038,
        "sender_full_name": "James Carlson",
        "timestamp": 1628876599
    },
    {
        "content": "<p>huh, that's an old one</p>",
        "id": 249393187,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628878062
    },
    {
        "content": "<p>fix should be simple there</p>",
        "id": 249393193,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628878067
    },
    {
        "content": "<p>What does this one mean?</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;There were still outstanding Arc references to module_ids&#39;, /Users/jxxcarlson/dev/roc/roc/compiler/load/src/file.rs:1576:33\n</code></pre></div>",
        "id": 249421295,
        "sender_full_name": "James Carlson",
        "timestamp": 1628893334
    },
    {
        "content": "<p>does that happen consistently?</p>",
        "id": 249421754,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628893798
    },
    {
        "content": "<p>that one is usually a race condition somewhere</p>",
        "id": 249421800,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1628893805
    },
    {
        "content": "<p>I know at least one way to produce it (have made an issue for this, #1574: <a href=\"https://github.com/rtfeldman/roc/issues/1574\">https://github.com/rtfeldman/roc/issues/1574</a> -- I can't remember what produced the one above, but I will keep my eye out for such things and raise issues where I already have not.</p>",
        "id": 249422562,
        "sender_full_name": "James Carlson",
        "timestamp": 1628894477
    },
    {
        "content": "<p>honesty the next time you see it, if you could just share what code caused it, that would help even if it doesn't reproduce consistently - that way we can run the command in a loop until it reproduces <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 249422951,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628894853
    },
    {
        "content": "<p>Will do</p>",
        "id": 249425620,
        "sender_full_name": "James Carlson",
        "timestamp": 1628897395
    },
    {
        "content": "<p>Just filed ##1583, <a href=\"https://github.com/rtfeldman/roc/issues/1583\">https://github.com/rtfeldman/roc/issues/1583</a>, re panic when trying to test the <code>manyAux</code> combinator.</p>",
        "id": 249425708,
        "sender_full_name": "James Carlson",
        "timestamp": 1628897465
    },
    {
        "content": "<p>Panic 1 (I'll post simple versions of these as I find them)</p>\n<p>Interface (note the missing comma after baz)</p>\n<div class=\"codehilite\"><pre><span></span><code>interface Panic exposes [foo, bar, baz\n  yada] imports [ ]\n\nfoo = 1\nbar = 2\nbaz = 3\nyada = 4\n</code></pre></div>\n<p>app:</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;test&quot;\n    packages { base: &quot;platform&quot; }\n    imports [base.Task, Panic]\n    provides [ main ] to base\n\nmain : Task.Task {} []\nmain =\n\n    Str.fromInt Panic.foo |&gt;\n       Task.putLine\n</code></pre></div>",
        "id": 249426564,
        "sender_full_name": "James Carlson",
        "timestamp": 1628898376
    },
    {
        "content": "<p>excellent, thanks!</p>",
        "id": 249426907,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628898784
    },
    {
        "content": "<p>Panic2:  note the missing comma in the  definition of <code>foo</code>. Put it back in =&gt; no Panic</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;panic&quot;\n    packages { base: &quot;platform&quot; }\n    imports [base.Task]\n    provides [ main ] to base\n\nmain : Task.Task {} []\nmain =\n\n    foo = {a: 1 b: 2}\n\n\n    foo.a + foo.b |&gt;  Str.fromInt |&gt;\n       Task.putLine\n</code></pre></div>",
        "id": 249502247,
        "sender_full_name": "James Carlson",
        "timestamp": 1629019189
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430829\">@James Carlson</span> I created #1589 for this, thanks for the find :)</p>",
        "id": 249503251,
        "sender_full_name": "Anton",
        "timestamp": 1629020511
    },
    {
        "content": "<p>A new version of the <code>Test</code> interface in <code>examples/parser</code> of the <code>jim</code> branch.</p>\n<p>The code</p>\n<div class=\"codehilite\"><pre><span></span><code>[t1,t2,t3] |&gt; Test.run &quot;Test of test interface&quot;  |&gt; Task.putLine\n</code></pre></div>\n<p>produces this:</p>\n<div class=\"codehilite\"><pre><span></span><code>Test of test interface\n----------------------\nPass :: isEven\nPass :: filterList\nFail :: Bozo\n</code></pre></div>\n<p>where for example</p>\n<div class=\"codehilite\"><pre><span></span><code>    filteredList = Utility.filterList [1,2,3,4,5,6] Utility.isEven\n    t2 = {name : &quot;filterList&quot;, test: List.len filteredList == 3}\n</code></pre></div>",
        "id": 249510172,
        "sender_full_name": "James Carlson",
        "timestamp": 1629030794
    },
    {
        "content": "<p>There is also a way to show failures only:</p>\n<div class=\"codehilite\"><pre><span></span><code>Test of test interface, failures only\n-------------------------------------\nFail :: Bozo\n</code></pre></div>\n<p>using </p>\n<div class=\"codehilite\"><pre><span></span><code>t1,t2,t3] |&gt; Test.runF &quot;Test of test interface, failures only&quot;  |&gt; Task.putLine\n</code></pre></div>",
        "id": 249510235,
        "sender_full_name": "James Carlson",
        "timestamp": 1629030908
    },
    {
        "content": "<p>Feel free to create a PR to add this test framework to trunk! Perhaps a folder named testframework under examples?</p>",
        "id": 249511095,
        "sender_full_name": "Anton",
        "timestamp": 1629032218
    },
    {
        "content": "<p>Will do!</p>",
        "id": 249511173,
        "sender_full_name": "James Carlson",
        "timestamp": 1629032352
    },
    {
        "content": "<p>Ridiculous code below, but it does cause panic:</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;panic&quot;\n    packages { base: &quot;platform&quot; }\n    imports [base.Task]\n    provides [ main ] to base\n\nmain : Task.Task {} []\nmain =\n\n    q1 = &quot;a&quot;\n    q2 = &quot;b&quot;\n    foo = [q1, q2, 3]  # &lt;== Oops, typo!\n\n    List.len foo |&gt;  Str.fromInt |&gt;\n       Task.putLine\n</code></pre></div>",
        "id": 249511287,
        "sender_full_name": "James Carlson",
        "timestamp": 1629032479
    },
    {
        "content": "<p>sorry what is the typo?</p>",
        "id": 249511366,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629032552
    },
    {
        "content": "<p>\"3\" instead of \"q3\"?</p>",
        "id": 249511378,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629032583
    },
    {
        "content": "<p>Yes</p>",
        "id": 249511383,
        "sender_full_name": "James Carlson",
        "timestamp": 1629032594
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> , the test code depends on several functions in <code>parser/Utility.roc</code>.  For the PR, shall I incorporate those functions in the code for testing?</p>",
        "id": 249511454,
        "sender_full_name": "James Carlson",
        "timestamp": 1629032716
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Utility.concatStrListWithSeparator, Utility.strRepeat, Utility.concatStrList, Utility.filterList\n</code></pre></div>",
        "id": 249511546,
        "sender_full_name": "James Carlson",
        "timestamp": 1629032828
    },
    {
        "content": "<p>Yeah sure, sounds good!</p>",
        "id": 249511574,
        "sender_full_name": "Anton",
        "timestamp": 1629032876
    },
    {
        "content": "<p>PR request #1590: <a href=\"https://github.com/rtfeldman/roc/pull/1590\">https://github.com/rtfeldman/roc/pull/1590</a> --- adds <code>Test.roc</code> , a bare-bones testing \"framework\"</p>",
        "id": 249512932,
        "sender_full_name": "James Carlson",
        "timestamp": 1629034528
    },
    {
        "content": "<p>Did I see a remark on being able to write code with holes -- so that the type checker can help out the poor struggling programmer?  That would be truly awesome! (or a dream!!)</p>",
        "id": 249536521,
        "sender_full_name": "James Carlson",
        "timestamp": 1629071695
    },
    {
        "content": "<p>indeed! <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 249536894,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629072224
    },
    {
        "content": "<p>QUESTION: I have the types</p>\n<div class=\"codehilite\"><pre><span></span><code>Step state a : [ Loop state, Done a ]\nParser a : List U8 -&gt; List [Pair a (List U8)]\n</code></pre></div>\n<p>Now consider  <code>Parser (Step state a)</code>. I  get the error message  below in code like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>loop : (state -&gt; Parser (Step state a)), state -&gt; Parser a\nloop = \\nextState, s -&gt;\n  \\input -&gt;\n      ps =  (nextState s)                 # Parser (Step state a))\n      when ps is\n          Parser (Loop s2) -&gt;\n            ...\n\n          Parser (Done aa) -&gt;\n       ...\n</code></pre></div>\n<p>ERROR MESSAGE</p>\n<div class=\"codehilite\"><pre><span></span><code>The 1st pattern in this when is causing a mismatch:\n\n85│            Parser (Loop s2) -&gt;\n               ^^^^^^^^^^^^^^^\n\nThe first pattern is trying to matchParser values of type:\n\n    [ Parser [ Loop a ]b ]c\n\nBut the expression between when and is has the type:\n\n    List U8 -&gt; List [ Pair (Step state a) (List U8) ]\n</code></pre></div>\n<p>But I would argue that </p>\n<div class=\"codehilite\"><pre><span></span><code>(1)   List U8 -&gt; List [ Pair (Step state a) (List U8) ] == Parser (Step state a)\n</code></pre></div>\n<p>and that </p>\n<div class=\"codehilite\"><pre><span></span><code>(2) Parser (Loop s2).\n</code></pre></div>\n<p>is one of the two variants of type <code>Step state a</code> so that there is no type error in this code.  I must be missing something, but I don't see what it is.</p>",
        "id": 249551898,
        "sender_full_name": "James Carlson",
        "timestamp": 1629093361
    },
    {
        "content": "<p>Hmm that does look like it should work</p>",
        "id": 249565078,
        "sender_full_name": "Anton",
        "timestamp": 1629105364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430829\">@James Carlson</span>  can you try simplifying the types further and check if the error still occurs?</p>",
        "id": 249565232,
        "sender_full_name": "Anton",
        "timestamp": 1629105488
    },
    {
        "content": "<p>in your case <code>Parser</code> is just a type alias, not a tag union</p>",
        "id": 249571654,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629109729
    },
    {
        "content": "<p>so you can remove the <code>Parser</code> in <code>Parser (Loop s2)</code></p>",
        "id": 249571672,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629109743
    },
    {
        "content": "<p>I am trying to port Richard's console package (Elm) to roc.  But I get this:</p>\n<div class=\"codehilite\"><pre><span></span><code>3│  greenColor : Str\n4│  greenColor = Str.fromUtf8 [27, 91, 51, 50, 109]\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThis fromUtf8 call produces:\n\n    Result Str [ BadUtf8 Utf8ByteProblem Nat ]b\n</code></pre></div>",
        "id": 249710243,
        "sender_full_name": "James Carlson",
        "timestamp": 1629203045
    },
    {
        "content": "<p>The idea is to imitate code like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>green : String -&gt; String\ngreen str =\n    String.join &quot;&quot; [ &quot;\\u{001B}[32m&quot;, str, &quot;\\u{001B}[39m&quot; ]\n</code></pre></div>\n<p>where <code>greenColor</code> replaces \"\\u{001B}[32m\" and I say</p>\n<div class=\"codehilite\"><pre><span></span><code>green : Str -&gt; Str\ngreen = \\str -&gt;\n    Utility.concatStrList [ greenColor, str, clearColor ]\n</code></pre></div>",
        "id": 249711154,
        "sender_full_name": "James Carlson",
        "timestamp": 1629203608
    },
    {
        "content": "<p>well turning raw bytes into utf8 is an operation that can fail</p>",
        "id": 249711562,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629203812
    },
    {
        "content": "<p>in this case you can probably do <code>|&gt; Result.withDefault \"\"</code></p>",
        "id": 249711580,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629203822
    },
    {
        "content": "<p>Ah yes, thanks!</p>",
        "id": 249713125,
        "sender_full_name": "James Carlson",
        "timestamp": 1629204600
    },
    {
        "content": "<p>Demo of interface <code>Console</code> in branch <code>jim</code>,  folder <code>examples/parser:</code></p>\n<p><a href=\"/user_uploads/22008/TmT7aVENtR_LvLmX3A_V64YL/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/TmT7aVENtR_LvLmX3A_V64YL/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/TmT7aVENtR_LvLmX3A_V64YL/image.png\"></a></div><p>Run with </p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;foo&quot;\n    packages { base: &quot;platform&quot; }\n    imports [base.Task,  Console, StrExtra]\n    provides [ main ] to base\n\n\nmain : Task.Task {} []\nmain =\n  StrExtra.concat [\n       Console.bgCyan (Console.black &quot;This is a test:&quot;),\n       Console.green &quot; The grass is green, but &quot;,\n       Console.red &quot;roses are red.&quot;\n    ] |&gt; Task.putLine\n</code></pre></div>",
        "id": 249724266,
        "sender_full_name": "James Carlson",
        "timestamp": 1629209470
    },
    {
        "content": "<p>oh, very fancy</p>",
        "id": 249724521,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629209560
    },
    {
        "content": "<p>Just Richard's Elm library ported to Richard's language <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 249724673,
        "sender_full_name": "James Carlson",
        "timestamp": 1629209621
    },
    {
        "content": "<p>Followed his API word-for-word</p>",
        "id": 249724958,
        "sender_full_name": "James Carlson",
        "timestamp": 1629209742
    },
    {
        "content": "<p>but we can actually print to the console <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 249725350,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629209896
    },
    {
        "content": "<p>that's very cool</p>",
        "id": 249737418,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1629215030
    },
    {
        "content": "<p>that's awesome! <span aria-label=\"heart eyes cat\" class=\"emoji emoji-1f63b\" role=\"img\" title=\"heart eyes cat\">:heart_eyes_cat:</span></p>",
        "id": 249746207,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629218915
    },
    {
        "content": "<p>incidentally, in Roc you can do <code>\"\\u(001B)[32m\"</code> for unicode escapes (the <code>\\u(...)</code> is equivalent to <code>\\u{...}</code> in Elm)</p>",
        "id": 249746224,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629218924
    },
    {
        "content": "<p>That's good to know (\"\\u(001B)[32m\").  Meanwhile, just for fun:</p>\n<p><a href=\"/user_uploads/22008/Go_snaIe4VEtYOi-u-bdYGDQ/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/Go_snaIe4VEtYOi-u-bdYGDQ/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/Go_snaIe4VEtYOi-u-bdYGDQ/image.png\"></a></div>",
        "id": 249796435,
        "sender_full_name": "James Carlson",
        "timestamp": 1629247685
    },
    {
        "content": "<p>so cool!!!</p>",
        "id": 249796944,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629248405
    },
    {
        "content": "<p>also that's a nice sub-millisecond runtime on that test suite <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 249797024,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629248459
    },
    {
        "content": "<p>Sub-millisecond is soooo good!</p>",
        "id": 249921707,
        "sender_full_name": "James Carlson",
        "timestamp": 1629327348
    },
    {
        "content": "<p>The <code>many</code> combinator,</p>\n<div class=\"codehilite\"><pre><span></span><code>many : Parser a -&gt; Parser (List a)\n</code></pre></div>\n<p>now type-checks, as does a test for it:</p>\n<div class=\"codehilite\"><pre><span></span><code>q3 = {name: &quot;many lowerCase&quot;, test: Parser.run [97, 99, 100, 0] (many lowerCase) == [Pair [97, 98, 99] [0]] }\n</code></pre></div>\n<p>I'll be able to run this test (and the one for <code>oneOf</code>) as soon as some panic issues are resolved.</p>",
        "id": 249987161,
        "sender_full_name": "James Carlson",
        "timestamp": 1629380219
    },
    {
        "content": "<p>you are up to date with  latest trunk? if yes, can you get the panic down to just a single file, then put the source of that file in an issue?</p>",
        "id": 249989128,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629381056
    },
    {
        "content": "<p>Interesting!  I had pulled trunk earlier this morning, IIRC.  But now there are changes.  I first ran the old tests:</p>\n<p><a href=\"/user_uploads/22008/0__2Pl0nWtYwONzsxS165LBp/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/0__2Pl0nWtYwONzsxS165LBp/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/0__2Pl0nWtYwONzsxS165LBp/image.png\"></a></div><p>Looks like <code>andThen</code> (used by <code>first</code> and <code>second</code> needs some attention.  Then I ran the tests for <code>oneOf</code> and <code>many</code> individually.  They created panics.</p>\n<p>The \"missing-comma-in-exposes-list\" error still causes a panic.</p>\n<p>I will make a distilled one-file version of the 'oneOf' panic and also of the 'many' panic.</p>",
        "id": 249992205,
        "sender_full_name": "James Carlson",
        "timestamp": 1629382313
    },
    {
        "content": "<p>Interesting that <code>andThen</code> now fails when it didn't before.  I'll make a one-file version of this also.</p>",
        "id": 249992351,
        "sender_full_name": "James Carlson",
        "timestamp": 1629382373
    },
    {
        "content": "<p>((If I can't easily fix it))</p>",
        "id": 249992437,
        "sender_full_name": "James Carlson",
        "timestamp": 1629382406
    },
    {
        "content": "<p>Hmmm, having  trouble  composing even the simplest file today.  The below panics, but I can't see why.</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;oneOfPanic&quot;\n     packages { base: &quot;platform&quot; }\n     imports [base.Task]\n     provides [ main ] to base\n\nmain : Task.Task {} []\nmain =\n   &quot;hello&quot; |&gt; Task.putline\n</code></pre></div>",
        "id": 249997217,
        "sender_full_name": "James Carlson",
        "timestamp": 1629384571
    },
    {
        "content": "<p><code>putline</code> should be <code>putLine</code></p>",
        "id": 250092108,
        "sender_full_name": "Anton",
        "timestamp": 1629449134
    },
    {
        "content": "<p>My  goodness!  I need better glasses and more sleep!!  Thanks.</p>",
        "id": 250094508,
        "sender_full_name": "James Carlson",
        "timestamp": 1629450430
    },
    {
        "content": "<p>Got this error a moment ago after pulling <code>trunk</code> and merging into <code>jim</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>➜  examples git:(jim) ✗ cargo run parser/ParserTest.roc\n    Finished dev [unoptimized + debuginfo] target(s) in 0.66s\n     Running `/Users/jxxcarlson/dev/roc/roc/target/debug/roc parser/ParserTest.roc`\nUndefined symbols for architecture x86_64:\n  &quot;_roc_panic&quot;, referenced from:\n      l_Num_add_3fc76dac52173e2f6971f0328553dc78618dec1a96b6375eceeb2fe9a98a3a0 in roc_app0elG65.o\nld: symbol(s) not found for architecture x86_64\n</code></pre></div>",
        "id": 250134502,
        "sender_full_name": "James Carlson",
        "timestamp": 1629473988
    },
    {
        "content": "<p>I fixed a common cause of the \"symbol/layout {:?} {:?} combo must be in DeclarationToIndex\" style error here <a href=\"https://github.com/rtfeldman/roc/pull/1609\">https://github.com/rtfeldman/roc/pull/1609</a></p>",
        "id": 250171750,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629493128
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430829\">@James Carlson</span> the <code>roc_panic</code> error is because we just added a new requirement for hosts to expose a function with that name</p>",
        "id": 250176406,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629495917
    },
    {
        "content": "<p>if your platform is using Rust, here's what you'd need to add to its <code>lib.rs</code>:</p>\n<p><a href=\"https://github.com/rtfeldman/roc/blob/19d56fa7d4ec256b7e8fff28f3af50f6017d62e6/examples/hello-rust/platform/src/lib.rs#L34\">https://github.com/rtfeldman/roc/blob/19d56fa7d4ec256b7e8fff28f3af50f6017d62e6/examples/hello-rust/platform/src/lib.rs#L34</a></p>",
        "id": 250176927,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629496290
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>#[no_mangle]\npub unsafe fn roc_panic(c_ptr: *mut c_void, tag_id: u32) {\n    match tag_id {\n        0 =&gt; {\n            let slice = CStr::from_ptr(c_ptr as *const c_char);\n            let string = slice.to_str().unwrap();\n            eprintln!(&quot;Roc hit a panic: {}&quot;, string);\n            std::process::exit(1);\n        }\n        _ =&gt; todo!(),\n    }\n}\n</code></pre></div>",
        "id": 250176955,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629496308
    },
    {
        "content": "<p>lmk if that works!</p>",
        "id": 250177068,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629496385
    },
    {
        "content": "<p>Looks like my platform is zig-based:</p>\n<div class=\"codehilite\"><pre><span></span><code>➜  examples git:(jim) ✗ ls parser/platform\nPackage-Config.roc Task.roc           host.o             host.zig           zig-cache\n</code></pre></div>\n<p>Should I be using something different?</p>",
        "id": 250195653,
        "sender_full_name": "James Carlson",
        "timestamp": 1629518941
    },
    {
        "content": "<p>I found that there is rust-based platform in <code>examples/hello-rust</code> I moved the zig-based in <code>parser</code> to another name, moved a copy of the rust-based platform in to parser, and ran <code>cargo run parser/ParserTest.roc</code>.  This resulted in the error message</p>\n<div class=\"codehilite\"><pre><span></span><code>I am looking for this file, but it&#39;s not there:\n\n    /Users/jxxcarlson/dev/roc/roc/examples/parser/platform/Task.roc\n\nIs the file supposed to be there? Maybe there is a typo in the file\nname?%\n</code></pre></div>\n<p>I made a copy of the <code>Task.roc</code> file in the rust platform and moved it to the root of my platform.  More errors alas.  I'm afraid that my home-made solution will not work.  (Oh, <code>lib.rs</code> in the copied code already had the #[no_mangle] you cite above.</p>",
        "id": 250196509,
        "sender_full_name": "James Carlson",
        "timestamp": 1629520349
    },
    {
        "content": "<p>ah! so for a Zig host, <a href=\"https://github.com/rtfeldman/roc/blob/1348ec433b56d0919fa3c25ce2fd8d879d99f681/examples/hello-zig/platform/host.zig#L38\">here's</a> the equivalent code to add to <code>host.zig</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Zig\"><pre><span></span><code><span class=\"kr\">export</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"n\">roc_panic</span><span class=\"p\">(</span><span class=\"n\">c_ptr</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">c_void</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tag_id</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">callconv</span><span class=\"p\">(.</span><span class=\"n\">C</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"p\">.</span><span class=\"n\">getStdErr</span><span class=\"p\">().</span><span class=\"n\">writer</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"n\">msg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">@ptrCast</span><span class=\"p\">([</span><span class=\"o\">*:</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"kr\">const</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c_ptr</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">stderr</span><span class=\"p\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"s\">\"Application crashed with message</span><span class=\"se\">\\n\\n</span><span class=\"s\">    {s}</span><span class=\"se\">\\n\\n</span><span class=\"s\">Shutting down</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.{</span><span class=\"n\">msg</span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"k\">catch</span><span class=\"w\"> </span><span class=\"k\">unreachable</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"p\">.</span><span class=\"n\">process</span><span class=\"p\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 250217873,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629552696
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> , I got a little further this time, getting a different error message:</p>\n<div class=\"codehilite\"><pre><span></span><code>     Running `/Users/jxxcarlson/dev/roc/roc/target/debug/roc parser/ParserTest.roc`\nUndefined symbols for architecture x86_64:\n  &quot;_roc_fx_putLine&quot;, referenced from:\n      l_Effect_effect_closure_putLine_76152341861df334f796e7048579cd151e7d5d5ce546b36a28afd44760b25b in roc_appTryVVG.o\nld: symbol(s) not found for architecture x86_64\n</code></pre></div>\n<p>(I put your zig code at then end of <code>host.zig</code> and the compiler seemed to like that)</p>",
        "id": 250236766,
        "sender_full_name": "James Carlson",
        "timestamp": 1629579601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>  Never mind -- all running just fine now.  Thankyou!</p>",
        "id": 250257505,
        "sender_full_name": "James Carlson",
        "timestamp": 1629612317
    },
    {
        "content": "<p>sweet, glad it's working!</p>",
        "id": 250271123,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1629634273
    },
    {
        "content": "<p>Some Really Weird Stuff:</p>\n<p>I've been pulling my hair out because parser code that previously passed tests no longer does.  I've tried rebuilding the parser code in interface <code>Parser2.roc</code>, adding a few lines of code and testing it as I go.  The next two images show the nature of the problem.  In the first, <code>Parser.map</code> passes its test.  In the second, I add <code>Parser.andThen</code>.  The two functions share no parser code directly or indirectly.  By adding the <code>andThen</code> test, the <code>map</code> test now fails!  This should not happen.  Alas, I have no idea of where to begin.  </p>\n<p><a href=\"/user_uploads/22008/ChzdnDi4XiwgePd08WD2QlDu/Screen-Shot-2021-08-22-at-3.42.07-PM.png\">Screen-Shot-2021-08-22-at-3.42.07-PM.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/ChzdnDi4XiwgePd08WD2QlDu/Screen-Shot-2021-08-22-at-3.42.07-PM.png\" title=\"Screen-Shot-2021-08-22-at-3.42.07-PM.png\"><img src=\"/user_uploads/22008/ChzdnDi4XiwgePd08WD2QlDu/Screen-Shot-2021-08-22-at-3.42.07-PM.png\"></a></div><p><a href=\"/user_uploads/22008/HqqZD5sxLdAsY56SOBaI2-uq/Screen-Shot-2021-08-22-at-3.42.28-PM.png\">Screen-Shot-2021-08-22-at-3.42.28-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/HqqZD5sxLdAsY56SOBaI2-uq/Screen-Shot-2021-08-22-at-3.42.28-PM.png\" title=\"Screen-Shot-2021-08-22-at-3.42.28-PM.png\"><img src=\"/user_uploads/22008/HqqZD5sxLdAsY56SOBaI2-uq/Screen-Shot-2021-08-22-at-3.42.28-PM.png\"></a></div>",
        "id": 250290216,
        "sender_full_name": "James Carlson",
        "timestamp": 1629661731
    },
    {
        "content": "<p>Here is the code for the two functions in question:</p>\n<div class=\"codehilite\"><pre><span></span><code>## MAP\n\nmap : Parser a, (a -&gt; b) -&gt; Parser b\nmap =\n  \\p, f -&gt; \\input -&gt; p input |&gt; List.map (\\pair -&gt; Pair.mapFirst pair f)\n\n\n## AND_THEN, FIRST, SECOND\n\nandThen : Parser a, (a -&gt; Parser b) -&gt; Parser b\nandThen = \\p, q -&gt;\n            \\input -&gt; p input |&gt; List.map (\\(Pair a input2) -&gt; (q a) input2) |&gt; List.join\n</code></pre></div>",
        "id": 250290304,
        "sender_full_name": "James Carlson",
        "timestamp": 1629661831
    },
    {
        "content": "<p>can you get some sort of error message out of the failing parser?</p>",
        "id": 250290312,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629661857
    },
    {
        "content": "<p>And here is the test code:</p>\n<div class=\"codehilite\"><pre><span></span><code>mapT = {name : &quot;Use map to shift output of parser: run \\&quot;abcd\\&quot; (map any (\\\\u -&gt; u + 25)) == \\&quot;z\\&quot;&quot;, test : runU8 &quot;abcd&quot; (map any (\\u -&gt; u + 25)) == &quot;z&quot;  }\n\nandThenT = { name: &quot;andThen&quot;, test: runToString Utility.showU8 &quot;aaxyz&quot; (andThen any satisfyWhatCameBefore) == &quot;a&quot;}\n\nsatisfyWhatCameBefore = \\u2 -&gt; satisfy (\\u3 -&gt; u3 == u2)\n</code></pre></div>",
        "id": 250290338,
        "sender_full_name": "James Carlson",
        "timestamp": 1629661902
    },
    {
        "content": "<p>I'll see what I can do.  But I can't understand why adding one test causes the other to fail.</p>",
        "id": 250290459,
        "sender_full_name": "James Carlson",
        "timestamp": 1629662073
    },
    {
        "content": "<p>no that sounds like a bug</p>",
        "id": 250290464,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629662088
    },
    {
        "content": "<p>but knowing what the code thinks went wrong could be helpful tracking the problem down</p>",
        "id": 250290468,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629662102
    },
    {
        "content": "<p>I'll work on it now.  I can probably get something out.</p>",
        "id": 250290490,
        "sender_full_name": "James Carlson",
        "timestamp": 1629662143
    },
    {
        "content": "<p>alternatively if you can get it into one file I can take a look</p>",
        "id": 250290613,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629662332
    },
    {
        "content": "<p>Interesting.  I had to change</p>\n<div class=\"codehilite\"><pre><span></span><code>runU8 : Str, Parser a-&gt; Str\nrunU8 = \\input, parser -&gt; runToString Utility.showU8 input parser\n</code></pre></div>\n<p>to </p>\n<div class=\"codehilite\"><pre><span></span><code>runU8 : Str, Parser U8 -&gt; Str\n</code></pre></div>\n<p>Now <code>andThen</code> always fails in this test suite, though it succeeds in a one-file version that tests only <code>andThen</code>. We are about to leave for a dinner, so I have to stop now.  I'll work on this a bit more tomorrow, maybe in the evening, and send you something.</p>\n<p>Thankyou Folkert!</p>",
        "id": 250291516,
        "sender_full_name": "James Carlson",
        "timestamp": 1629663649
    },
    {
        "content": "<p>interesting. We have a couple more fixes in the works, so maybe things will also just work when those are merged</p>",
        "id": 250291578,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1629663758
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 250918670,
        "sender_full_name": "Brian Hicks",
        "timestamp": 1630064412
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> , finally have some time to get back to roc (yay!).  Here is my current problem.  As you can see from the image below, the result of running my parser tests  depends on their order.  Since we are running pure functions, this shouldn't happen, no?  I'm baffled.</p>\n<p><a href=\"/user_uploads/22008/oqTe0UztUuqFdTwQhPTc6GYd/Screen-Shot-2021-09-11-at-12.35.02-PM.png\">Screen-Shot-2021-09-11-at-12.35.02-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/oqTe0UztUuqFdTwQhPTc6GYd/Screen-Shot-2021-09-11-at-12.35.02-PM.png\" title=\"Screen-Shot-2021-09-11-at-12.35.02-PM.png\"><img src=\"/user_uploads/22008/oqTe0UztUuqFdTwQhPTc6GYd/Screen-Shot-2021-09-11-at-12.35.02-PM.png\"></a></div>",
        "id": 252920852,
        "sender_full_name": "James Carlson",
        "timestamp": 1631378489
    },
    {
        "content": "<p>Test (6) passes in one test and fails in the other.</p>",
        "id": 252920931,
        "sender_full_name": "James Carlson",
        "timestamp": 1631378543
    },
    {
        "content": "<p>Is it possible to import modules in the repl?</p>",
        "id": 252921213,
        "sender_full_name": "James Carlson",
        "timestamp": 1631378836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430829\">@James Carlson</span> welcome back, Jim! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> </p>\n<p>it's not possible to import modules in the repl yet...I looked into it, and there are a few prerequisites that will take a bit. I thought it might be a weekend project, but seems like more than that. <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 252937599,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1631396733
    },
    {
        "content": "<p>is the code to reproduce the order-dependent tests pushed somewhere we can take a look at it?</p>",
        "id": 252937609,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1631396745
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> , yes, glad to be back!  My contract with <a href=\"http://Brilliant.org\">Brilliant.org</a> ends next Friday, so I will soon have more time for roc and other projects. (But Brilliant has been a really good experience — accomplished a lot, learned a lot, and worked with some really great people.)</p>\n<p>In the <code>jim</code> branch, file <code>ParserTest.roc</code> of <code>examples/parser</code>, you will find some code re the weirdness that I mentioned.  Begin by cd'ing to <code>examples</code>, then run the below (ignoring warnings)</p>\n<div class=\"codehilite\"><pre><span></span><code>cargo run parser/ParserTest.roc\n</code></pre></div>\n<p>You will see three test successes.  Next, look at the end of the file, where you  will see this:</p>\n<div class=\"codehilite\"><pre><span></span><code>Test.runSuites [suite3]         # tests a, b, c,\n# Test.runSuites [suite4]      # tests a, b, c, d\n# Test.runSuites [suite5]      # tests a, b, c, d, e\n# Test.runSuites [suite6]      # tests a, b, c, d, e, f\n   |&gt; Task.putLine\n</code></pre></div>\n<p>Now comment out the test <code>[suite3]</code> and uncomment the test <code>[suite 4]</code>.  You will find that test (b), which formerly succeeded, now fails.  Why? No idea.  All we did was add test (d).  The saga continues.  With <code>[suite5]</code>, (d) fails and the others succeed.  With <code>[suite ]</code>, (c) and (d) fail.</p>\n<p>PS.  I modified the code in <code>examples/parser/Test.roc</code> so as to be able to run \"suites\" of tests (just a named list of tests) and, more usefully, lists of suites.</p>\n<p>Seems like a compiler bug to me, but who knows.  I have an uncanny ability to write code with all sorts of bugs.</p>",
        "id": 253001693,
        "sender_full_name": "James Carlson",
        "timestamp": 1631469366
    },
    {
        "content": "<p>gotcha! Yeah this actually looks like a compiler bug <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> and I were looking into this morning...if so, there's a fix in progress!</p>",
        "id": 253002583,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1631470381
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430829\">@James Carlson</span>  Brilliant is brilliant! <br>\nMay I ask what were you working there? :)</p>",
        "id": 253013138,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1631482109
    },
    {
        "content": "<p>I was working on their Camperdown Parser ( <a href=\"https://gallant-einstein-0694e1.netlify.app/\">https://gallant-einstein-0694e1.netlify.app/</a> ) including open-sourcing a somewhat simplified version of it, developing a pretty-printer for Camperdown documents and various tests for them to make sure that the pretty-printer doesn't change the source text semantics.  The pretty-printer runs the parser on a document, then re-renders it in somewhat transformed form from the AST.  </p>\n<p>A dialect of Camperdown is an in-house markup language they use for their courses.</p>\n<p>It was really interesting work.  I loved it. (All Elm)</p>",
        "id": 253015149,
        "sender_full_name": "James Carlson",
        "timestamp": 1631484361
    },
    {
        "content": "<p>I did part of one of Brilliant's courses on quantum mechanics before signing up.  It was very high quality, judging from what I remember of my physics courses.  Not the usual stuff one finds in ed-tech.</p>",
        "id": 253015247,
        "sender_full_name": "James Carlson",
        "timestamp": 1631484477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"341959\">@Zeljko Nesic</span> what is your connection with Brilliant? Did you do any of their courses?</p>",
        "id": 253015952,
        "sender_full_name": "James Carlson",
        "timestamp": 1631485295
    },
    {
        "content": "<p>I play with it with a 3-yo son from time to time, as a part of \"better screen time\" initiative that am enforcing on my self. They and Duolingo are my go-to places to have nerdy-fun with a kid :)</p>\n<p>I couldn't but to feel that there is something like Camperdown behind all those interactive cources and examples. It would be pain in the neck to maintain them by JS hand.</p>",
        "id": 253089342,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1631539855
    },
    {
        "content": "<p>Good for you and your son ! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 253100659,
        "sender_full_name": "James Carlson",
        "timestamp": 1631543974
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430829\">@James Carlson</span> The \"order matters but it shouldn't\" problem should be fixed on <code>trunk</code> now - see if you can still reproduce it!</p>",
        "id": 253177980,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1631577052
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>  It is fixed!! Fantastic!</p>",
        "id": 253201640,
        "sender_full_name": "James Carlson",
        "timestamp": 1631598734
    },
    {
        "content": "<p>parser code situation MUCH improved (thanks all!).  However, I'm blocked with a misbehaving<code>oneOf</code> combinator.  Please see the file attached below.  There are also directions for producing a truly wild panic!</p>\n<div class=\"codehilite\"><pre><span></span><code># FILE: OneOfTest.roc\n\n# My latest travails with parser code (though the situation is now MUCH better.  Thanks all!)\n# See the remarks just before the tests.\n# This file is self-contained.\n\napp &quot;app&quot;\n     packages { base: &quot;platform&quot; }\n     imports [base.Task]\n     provides [ main ] to base\n\n\n\n## PARSER\n\nParser a : List U8 -&gt; List [Pair a (List U8)]\n\n\n## ANY\n\n# If succcessful, the any parser consumes one character\n\nany: Parser U8\nany = \\inp -&gt;\n   when List.first inp is\n     Ok u -&gt; [Pair u (List.drop inp 1)]\n     _ -&gt; [ ]\n\n\n\n## SATISFY\n\nsatisfy : (U8 -&gt; Bool) -&gt; Parser U8\nsatisfy = \\predicate -&gt;\n    \\input -&gt; when List.first (any input) is\n        Ok (Pair u rest) -&gt;  if predicate u then List.single (Pair u rest) else []\n        _ -&gt; [ ]\n\n\noneOf : List (Parser a) -&gt; Parser a\noneOf = \\parserList -&gt;\n          \\input -&gt; when List.first parserList is\n              Ok p -&gt;\n                output = p input\n                if List.len output == 1 then output else (oneOf (List.drop parserList 1)) input\n              Err _ -&gt; [ ]\n\n\nsatisfyA = satisfy (\\u -&gt; u == 97) # recognize 97\nsatisfyB = satisfy (\\u -&gt; u == 98) # recognize 98\n\n\n# In all the below, the given parser supposedly recognize sequence beginning with 97 or 98\n# The return value of a parser in this case has type &#39;List [Pair U8 (List U8)]&#39;\n# Thus parse results can be empty (failure), of length 1 (succes), or of length\n# greater than 1 (multi-valued, failure).  The parse result is the first element of Pair\n#\n# In theory, all of the below should succeed, but tests 2 and 3 fail.\n# Maybe it is my code ?? Or maybe the compiler.  Dunno.  The code for the\n# oneOf combinator is pretty straightforward.\n\n# For a fascinating panic and error message, replace (for example) &#39;satisfyB&#39; by &#39;any&#39;\n\ntest1 = if List.len ((oneOf [satisfyA, satisfyB]) [97, 98, 99, 100] ) == 1  then &quot;PASS&quot; else &quot;FAIL&quot;\ntest2 = if List.len ((oneOf [satisfyA, satisfyB]) [98, 99, 100, 97] ) == 1  then &quot;PASS&quot; else &quot;FAIL&quot;\ntest3 = if List.len ((oneOf [satisfyB , satisfyA]) [98, 99, 100, 97] ) == 1  then &quot;PASS&quot; else &quot;FAIL&quot;\ntest4 = if List.len ((oneOf [satisfyA, satisfyB]) [99, 100, 101] ) == 0  then &quot;PASS&quot; else &quot;FAIL&quot;\n\n\nmain : Task.Task {} []\nmain =\n  [test1, test2, test3, test4] |&gt; Str.joinWith &quot;, &quot;\n   |&gt; Task.putLine\n</code></pre></div>",
        "id": 253206246,
        "sender_full_name": "James Carlson",
        "timestamp": 1631602673
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/W3EYlLFMxaWcNoqW8vqKbP6g/Screen-Shot-2021-09-14-at-11.28.09-AM.png\">Screen-Shot-2021-09-14-at-11.28.09-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/W3EYlLFMxaWcNoqW8vqKbP6g/Screen-Shot-2021-09-14-at-11.28.09-AM.png\" title=\"Screen-Shot-2021-09-14-at-11.28.09-AM.png\"><img src=\"/user_uploads/22008/W3EYlLFMxaWcNoqW8vqKbP6g/Screen-Shot-2021-09-14-at-11.28.09-AM.png\"></a></div>",
        "id": 253271046,
        "sender_full_name": "James Carlson",
        "timestamp": 1631633333
    },
    {
        "content": "<p>The above image is the panic message generated by  running the file above (<code>OneOfTest.roc</code>) with <code>any</code> in place of <code>satisfyB</code> in <code>test3</code>.  I've tested all of the functions in another file using my test framework. There is one failure (not with <code>any</code>) and there are no panics.</p>",
        "id": 253271329,
        "sender_full_name": "James Carlson",
        "timestamp": 1631633450
    },
    {
        "content": "<p>this is likely the case because some fold or map function is used internally. I'll have a fix tonight</p>",
        "id": 253272193,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1631633821
    },
    {
        "content": "<p>Thanks Folkert!</p>",
        "id": 253282923,
        "sender_full_name": "James Carlson",
        "timestamp": 1631637971
    },
    {
        "content": "<p>it's something different. The code mixes \"normal\" functions with closures, in ways what we just don't handle currently. So this'll be a very interesting test case (thanks!) but now I have to figure out how to solve this properly</p>",
        "id": 253332443,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1631657796
    },
    {
        "content": "<p>Thanks Folkert, you folks are doing an amazing job!</p>",
        "id": 253361881,
        "sender_full_name": "James Carlson",
        "timestamp": 1631681356
    },
    {
        "content": "<p>this <a href=\"https://github.com/rtfeldman/roc/pull/1706\">https://github.com/rtfeldman/roc/pull/1706</a> will make it run with <code>any</code>, but the ordering problem is still there, I'll look at that next</p>",
        "id": 253806803,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1631912456
    },
    {
        "content": "<p>the full thing should now run with that PR</p>",
        "id": 253819619,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1631920378
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> , <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> after pulling and merging the latest changes to <code>trunk</code>, all of the tests to my various parser combinators pass. Hooray! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> — time now to push forward on this project.</p>",
        "id": 253836052,
        "sender_full_name": "James Carlson",
        "timestamp": 1631937390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> , <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span>,  another panic found (part of new combinator).  See attached, self-contained code (problem is with <code>manyAux</code> near very end.)</p>\n<div class=\"codehilite\"><pre><span></span><code># File: ManyTest.roc\n#\n# The saga continues! Try `cargo run` on `ManyTest.roc` from a place in which\n# you have a suitable platform.  You will get the following panic message, where the line\n# beginning with &quot;thread&quot; extends far to the right.\n#\n# ➜  examples git:(jim-parser) ✗ cargo run parser/ManyTest.roc\n#    Finished dev [unoptimized + debuginfo] target(s) in 1.01s\n#     Running `/Users/jxxcarlson/dev/roc/roc/target/debug/roc parser/ManyTest.roc`\n# thread &#39;main&#39; panicked at &#39;internal error: entered unreachable code: symbol/layout `#UserApp.0` ProcLayout { arguments: [Builtin(List(Builtin(Int8))), LambdaSet(LambdaSet { set: [(`#UserApp.0`, [Union(NonRecursive([[Builtin(List(Builtin(Int8)))], [Builtin(List(Builtin(Int8)))]]))]), (`#UserApp.6`, [LambdaSet(LambdaSet { set: [(`#UserApp.3`, [LambdaSet(LambdaSet { set: [(`#UserApp.isLowerCaseAlpha`, [])], representation: Struct([]) })])], representation: Struct([LambdaSet(LambdaSet { set: [(`#UserApp.isLowerCaseAlpha`, [])], representation: Struct([]) })]) }), LambdaSet(LambdaSet { set: [(`#UserApp.10`, [Builtin(List(Builtin(Int8)))])], representation: Struct([Builtin(List(Builtin(Int8)))]) })])], representation: Union(NonRecursive([[Union(NonRecursive([[Builtin(List(Builtin(Int8)))], [Builtin(List(Builtin(Int8)))]]))], [LambdaSet(LambdaSet { set: [(`#UserApp.10`, [Builtin(List(Builtin(Int8)))])], representation: Struct([Builtin(List(Builtin(Int8)))]) }), LambdaSet(LambdaSet { set: [(`#UserApp.3`, [LambdaSet(LambdaSet { set: [(`#UserApp.isLowerCaseAlpha`, [])], representation: Struct([]) })])], representation: Struct([LambdaSet(LambdaSet { set: [(`#UserApp.isLowerCaseAlpha`, [])], representation: Struct([]) })]) })]])) })], result: Builtin(List(Struct([Union(NonRecursive([[Builtin(List(Builtin(Int8)))], [Builtin(List(Builtin(Int8)))]])), Builtin(List(Builtin(Int8)))]))) } combo must be in DeclarationToIndex&#39;, compiler/mono/src/borrow.rs:227:9\n# : run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n#\n# Sorry for the length of this file but there are quite a few prerequisites for the definition of the `manyAux` function.\n# All the functions up the &quot;## MANY&quot; section have passed their tests (which now seem reliable).  Therefore the\n# code causing the panic is almost certainly in function `manyAux`.\n#\n\n\napp &quot;app&quot;\n     packages { base: &quot;platform&quot; }\n     imports [base.Task]\n     provides [ main ] to base\n\n\n\n## PARSER\n\nParser a : List U8 -&gt; List [Pair a (List U8)]\n\n\n## SUCCEED\n\n# succeed: succeed without consuming input\nsucceed : a -&gt; Parser a\nsucceed = \\v -&gt; (\\inp -&gt; [Pair v inp])\n\n\n## ANY\n\n# If succcessful, the any parser consumes one character\n\nany: Parser U8\nany = \\inp -&gt;\n   when List.first inp is\n     Ok u -&gt; [Pair u (List.drop inp 1)]\n     _ -&gt; [ ]\n\n\n\n## SATISFY\n\nsatisfy : (U8 -&gt; Bool) -&gt; Parser U8\nsatisfy = \\predicate -&gt;\n    \\input -&gt; when List.first (any input) is\n        Ok (Pair u rest) -&gt;  if predicate u then List.single (Pair u rest) else []\n        _ -&gt; [ ]\n\n\n## ONE_OF\n\noneOf : List (Parser a) -&gt; Parser a\noneOf = \\parserList -&gt;\n          \\input -&gt; when List.first parserList is\n              Ok p -&gt;\n                output = p input\n                if List.len output == 1 then output else (oneOf (List.drop parserList 1)) input\n              Err _ -&gt; [ ]\n\n\n## AND_THEN\n\nandThen : Parser a, (a -&gt; Parser b) -&gt; Parser b\nandThen = \\p, q -&gt;\n            \\input -&gt; p input |&gt; List.map (\\(Pair a input2) -&gt; (q a) input2) |&gt; List.join\n\n\n## MANY\n\n\nStep state a : [ Loop state, Done a ]\n\n\nmanyAux : Parser a, List a -&gt; Parser (Step (List a) (List a))\nmanyAux = \\p, list -&gt;\n    \\input -&gt; (if input == []\n              then\n                succeed (Done (List.reverse list))\n              else\n                p1 = andThen p ( \\a -&gt; succeed (Loop (List.prepend list a)))\n                p2 = succeed (Done (List.reverse list))\n                (oneOf [ p1, p2 ])) input\n\n\n## TEST\n\nisLowerCaseAlpha : U8 -&gt; Bool\nisLowerCaseAlpha = \\u -&gt; u &gt;= 97 &amp;&amp; u &lt;= 122\nlowerCase = satisfy isLowerCaseAlpha\n\ndummyTest = 1 + 1 == 2\nmanyAuxTest =  (manyAux lowerCase [ ]) [97,98,99] == [Pair (Loop [97]) [98,99]]\n\nrunTest = \\t -&gt; if t then &quot;PASS&quot; else &quot;FAIL&quot;\n\nmain : Task.Task {} []\nmain =\n  runTest manyAuxTest\n   |&gt; Task.putLine\n</code></pre></div>",
        "id": 253839246,
        "sender_full_name": "James Carlson",
        "timestamp": 1631940938
    },
    {
        "content": "<p>Ahm, I'm getting these errors on going to the project's directory and when trying to run <code>nix-shell</code>. I tried to look into GLIBC but didn't find a way to fix it yet.</p>\n<p><a href=\"/user_uploads/22008/074YyCkolVOAUk7z5jg6R4Cc/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/074YyCkolVOAUk7z5jg6R4Cc/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/074YyCkolVOAUk7z5jg6R4Cc/image.png\"></a></div>",
        "id": 253864420,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1631967410
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"441430\">@Luiz de Oliveira</span> , can you tell me what OS you are using?</p>",
        "id": 253864970,
        "sender_full_name": "Anton",
        "timestamp": 1631967887
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/231634-beginners/topic/error.20messages/near/253864970\">said</a>:</p>\n<blockquote>\n<p>Hi <span class=\"user-mention silent\" data-user-id=\"441430\">Luiz de Oliveira</span> , can you tell me what OS you are using?</p>\n</blockquote>\n<p>Oh of course, I'm in popOS 20.04 (so pretty much ubuntu 20.04).</p>",
        "id": 253865189,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1631968125
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> thanks, can you also give me your nix version (<code>nix --version</code>)?</p>",
        "id": 253865488,
        "sender_full_name": "Anton",
        "timestamp": 1631968449
    },
    {
        "content": "<p>nix version: 2.3.15</p>",
        "id": 253866384,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1631969441
    },
    {
        "content": "<p>I will give that a try myself and will let you know once I find a fix!</p>",
        "id": 253868135,
        "sender_full_name": "Anton",
        "timestamp": 1631971165
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"441430\">@Luiz de Oliveira</span>  I tried many different revisions of nixos-unstable but could not get any to work. I recommend that you install without nix as explained in <a href=\"https://github.com/rtfeldman/roc/blob/trunk/BUILDING_FROM_SOURCE.md\">BUILDING_FROM_SOURCE</a>.</p>",
        "id": 253874162,
        "sender_full_name": "Anton",
        "timestamp": 1631977359
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"400753\">@Ju Liu</span> any ideas? <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 253875071,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1631978384
    },
    {
        "content": "<p>Oh I have it installed, but it seems I can't run the editor without nix? But I can run some examples, but not all. I have something wrong regarding zig <a href=\"/user_uploads/22008/dFfZ60ieFArMNAsyLLqGexb1/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/dFfZ60ieFArMNAsyLLqGexb1/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/dFfZ60ieFArMNAsyLLqGexb1/image.png\"></a></div>",
        "id": 253878198,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1631981738
    },
    {
        "content": "<p>You should be able to run the editor without nix using <code>cargo run edit</code> from the root of the repo. For examples you should also start from the root of the repo, so then it is <code>cargo run examples/hello-zig/Hello.roc</code>.</p>",
        "id": 253878492,
        "sender_full_name": "Anton",
        "timestamp": 1631982035
    },
    {
        "content": "<p>I'll make note to improve the <code>cannot find str.zig</code> error message.</p>",
        "id": 253878619,
        "sender_full_name": "Anton",
        "timestamp": 1631982197
    },
    {
        "content": "<p>I get a quick black window that crashes and vanishes and this error message:</p>\n<p><a href=\"/user_uploads/22008/hbwM0R8W_eO8QN4yappsjiNe/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/hbwM0R8W_eO8QN4yappsjiNe/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/hbwM0R8W_eO8QN4yappsjiNe/image.png\"></a></div><p>Somehow I'm breaking a lot of stuff idk.</p>",
        "id": 253878815,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1631982391
    },
    {
        "content": "<p>I thought this was due to nix, but if it should run without it then it's something else.  I can't really understand this error message =(</p>",
        "id": 253878848,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1631982453
    },
    {
        "content": "<p>Sorry about this, we'll make sure to try to improve the \"building from source\" experience in the future.<br>\nI've never seen this error message for the editor before.. btw in its current state the editor still has very limited functionality, so for now you are better off using your regular favorite editor.</p>",
        "id": 253879619,
        "sender_full_name": "Anton",
        "timestamp": 1631983245
    },
    {
        "content": "<p>wow, yeah that error is coming from the lower-level graphics library we're using</p>",
        "id": 253880718,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1631984519
    },
    {
        "content": "<p><a href=\"https://hg.mozilla.org/releases/mozilla-release/rev/73891d5902058892b221f10ea1ba7f6bbc8b2c4f#l106.32\">https://hg.mozilla.org/releases/mozilla-release/rev/73891d5902058892b221f10ea1ba7f6bbc8b2c4f#l106.32</a></p>",
        "id": 253880799,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1631984597
    },
    {
        "content": "<p>This is the backtrace in case it's useful:</p>\n<p><a href=\"/user_uploads/22008/5KDsqyCDelMQ5FC9QJoKcJGX/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/5KDsqyCDelMQ5FC9QJoKcJGX/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/5KDsqyCDelMQ5FC9QJoKcJGX/image.png\"></a></div><p>Looks like the last line of code ran before getting into the lib is this call: <a href=\"/user_uploads/22008/ACufKNGF17tF-wSqqrDHsoEU/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/ACufKNGF17tF-wSqqrDHsoEU/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/ACufKNGF17tF-wSqqrDHsoEU/image.png\"></a></div>",
        "id": 253888104,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1631992777
    },
    {
        "content": "<p>I changed this line from <code>let instance = wgpu::Instance::new(wgpu::BackendBit::all());</code> to <code>let instance = wgpu::Instance::new(wgpu::BackendBit::VULKAN);</code> and it runs!<br>\n<a href=\"/user_uploads/22008/o1w5CyFD5dmgOWcFWbrMk-c-/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/o1w5CyFD5dmgOWcFWbrMk-c-/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/o1w5CyFD5dmgOWcFWbrMk-c-/image.png\"></a></div><p><a href=\"/user_uploads/22008/afuBOYxmhy2N7O3wc4sJ0ri-/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/afuBOYxmhy2N7O3wc4sJ0ri-/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/afuBOYxmhy2N7O3wc4sJ0ri-/image.png\"></a></div><p>I have no clue what that means hahahaha, just found someone with the same problem here <code>https://github.com/gfx-rs/wgpu/issues/1492</code>. I wonder if I'm forcing Vulkan where it should work for other graphics libs too.</p>",
        "id": 253888488,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1631993214
    },
    {
        "content": "<p>yeah Vulkan is the one on Linux, but macOS wants to use Metal - but maybe we can give it hints about preferences, or like if <code>all</code> fails fall back on trying <code>Vulkan</code>? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 253888834,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1631993633
    },
    {
        "content": "<p>but congrats on getting it working, and this is a good clue towards finding a fix we could merge without breaking others - thanks so much for investigating it <span class=\"user-mention\" data-user-id=\"441430\">@Luiz de Oliveira</span>! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 253888888,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1631993670
    },
    {
        "content": "<p>Say we want to fall back to Vulkan (or maybe have a list of libs to try if <code>all</code> fails) we could use something like the <code>?</code> operator inside a closure, log the error and then try Vulkan (or the next item in a list)? Also, it seems like they have worked on it already <a href=\"https://github.com/gfx-rs/wgpu/pull/1656\">https://github.com/gfx-rs/wgpu/pull/1656</a> but I don't know if it is released (I'm guessing it isn't) or when it will be.</p>",
        "id": 253889445,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1631994352
    },
    {
        "content": "<p>Well, I'll learn more rust hahaha idk how to do it yet.</p>",
        "id": 253890009,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1631994946
    },
    {
        "content": "<p>I think the fix PR is in wgpu 10, we're currently using 9. I added upgrading to my TODO list. Thanks for the investigation <span class=\"user-mention\" data-user-id=\"441430\">@Luiz de Oliveira</span> !</p>",
        "id": 253928651,
        "sender_full_name": "Anton",
        "timestamp": 1632040105
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"441430\">@Luiz de Oliveira</span> can you try running the editor on the wgpu-10 branch to check if the upgrade fixes your issue?</p>",
        "id": 254189140,
        "sender_full_name": "Anton",
        "timestamp": 1632222586
    },
    {
        "content": "<p>I have also improved the zig str error message and added a warning to the nix section of our BUILDING_FROM_SOURCE.md</p>",
        "id": 254190924,
        "sender_full_name": "Anton",
        "timestamp": 1632223480
    },
    {
        "content": "<p>Hmmm just got the error below ... this code has been running fine for the last week or so and has had no changes for that time period.</p>\n<div class=\"codehilite\"><pre><span></span><code>    [1]    39948 segmentation fault  cargo run parser/ParserTest.roc\n</code></pre></div>",
        "id": 254260434,
        "sender_full_name": "James Carlson",
        "timestamp": 1632251075
    },
    {
        "content": "<p>is it consistent?</p>",
        "id": 254261036,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1632251371
    },
    {
        "content": "<p>Not consistent in the sense that today I merged with the latest commit of <code>trunk</code> but got a different error message (panic instead of segmentation fault):</p>\n<div class=\"codehilite\"><pre><span></span><code>   Finished dev [unoptimized + debuginfo] target(s) in 26.24s\n     Running `/Users/jxxcarlson/dev/roc/roc/target/debug/roc parser/ParserTest.roc`\nthread &#39;main&#39; panicked at &#39;internal error: entered unreachable code: symbol/layout `fx.Effect.map` ProcLayout { arguments: [LambdaSet(LambdaSet { set: [(`fx.Effect.effect_closure_putLine`, [Builtin(Str)])], representation: Struct([Builtin(Str)]) }), LambdaSet(LambdaSet { set: [(`base.Task.6`, [])], representation: Struct([]) })], result: LambdaSet(LambdaSet { set: [(`fx.Effect.effect_map_inner`, [LambdaSet(LambdaSet { set: [(`fx.Effect.effect_closure_putLine`, [Builtin(Str)])], representation: Struct([Builtin(Str)]) }), LambdaSet(LambdaSet { set: [(`base.Task.6`, [])], representation: Struct([]) })])], representation: Struct([LambdaSet(LambdaSet { set: [(`fx.Effect.effect_closure_putLine`, [Builtin(Str)])], representation: Struct([Builtin(Str)]) }), LambdaSet(LambdaSet { set: [(`base.Task.6`, [])], representation: Struct([]) })]) }) } combo must be in DeclarationToIndex&#39;, compiler/mono/src/borrow.rs:227:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 254356931,
        "sender_full_name": "James Carlson",
        "timestamp": 1632313066
    },
    {
        "content": "<p>it doesn't explain <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> but one thing that'll need to change is not using <code>RocCallResult</code> anymore</p>",
        "id": 254357137,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1632313158
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"430829\">@James Carlson</span> is the branch that reproduces this pushed somewhere?</p>",
        "id": 254357162,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1632313171
    },
    {
        "content": "<p>Yes, it is <code>jim-parser</code></p>",
        "id": 254357205,
        "sender_full_name": "James Carlson",
        "timestamp": 1632313195
    },
    {
        "content": "<p>Just pushed the branch with the latest merge of trunk</p>",
        "id": 254357314,
        "sender_full_name": "James Carlson",
        "timestamp": 1632313225
    },
    {
        "content": "<p>I am doing <code>cargo run ...</code> from <code>./examples</code></p>",
        "id": 254357474,
        "sender_full_name": "James Carlson",
        "timestamp": 1632313312
    },
    {
        "content": "<p>I just updated the platform on that branch. for me the <code>ParserTest</code> file run and all tests pass</p>",
        "id": 254425353,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1632339297
    },
    {
        "content": "<p>oh btw it's best to run examples from the top level directory, so <code>cargo run examples/parser/ParserTest.roc</code></p>",
        "id": 254425442,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1632339332
    },
    {
        "content": "<p>Wonderful + Thanks!  I pulled <code>jim-parser</code> and <code>cargo run examples/parser/ParserTest.roc</code> ran with all tests passing.  Progress.</p>",
        "id": 254473494,
        "sender_full_name": "James Carlson",
        "timestamp": 1632366443
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/231634-beginners/topic/error.20messages/near/254189140\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"441430\">Luiz de Oliveira</span> can you try running the editor on the wgpu-10 branch to check if the upgrade fixes your issue?</p>\n</blockquote>\n<p>Yup! It works fine <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 254703305,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1632490042
    },
    {
        "content": "<p>But I still can't run some examples due to the \"str.zig\" error. This is the error message with RUST_BACKTRACE=1 <a href=\"/user_uploads/22008/F_QAKrlKfgDxW1XjqfwPmrRK/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/F_QAKrlKfgDxW1XjqfwPmrRK/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/F_QAKrlKfgDxW1XjqfwPmrRK/image.png\"></a></div>",
        "id": 254704937,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1632490701
    },
    {
        "content": "<p>I think it works if you do it from the top-level</p>",
        "id": 254705014,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1632490733
    },
    {
        "content": "<p>the path to <code>zig.str</code> is currently relative to the root of the repository</p>",
        "id": 254705085,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1632490763
    },
    {
        "content": "<p>You are correct. It works.</p>",
        "id": 254705099,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1632490767
    },
    {
        "content": "<p>nice!</p>",
        "id": 254705145,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1632490789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"441430\">@Luiz de Oliveira</span> the latest trunk has a better error message but does not use wgpu-10 yet.</p>",
        "id": 254708642,
        "sender_full_name": "Anton",
        "timestamp": 1632492078
    },
    {
        "content": "<p>curious if anybody's seen this one:</p>\n<p><code>error: failed to run custom build command for 'roc_builtins v0.1.0 (/Users/giles/code/roc/compiler/builtins)'</code></p>",
        "id": 256104631,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633370776
    },
    {
        "content": "<p>hmm, what commit is that on?</p>",
        "id": 256109273,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1633372433
    },
    {
        "content": "<p>and what OS?</p>",
        "id": 256109289,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1633372439
    },
    {
        "content": "<p>Does that just mean zig is missing? Or one of the llvm utils, like llvm-as?</p>",
        "id": 256120930,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1633376982
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> fa4875da8 on macOS. I actually got it on both 10.14.6 (using Intel) and 11.6 (M1). <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> I've got zig installed, but I'll check re the llvm utils.</p>",
        "id": 256154396,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633392816
    },
    {
        "content": "<p>facepalm.gif</p>\n<p>forgot to add the llvm path to PATH</p>",
        "id": 256155304,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633393352
    },
    {
        "content": "<p>glad it worked out! Can you open an issue about that error message? We should improve it so it's easier to troubleshoot in the future!</p>",
        "id": 256157422,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1633394642
    },
    {
        "content": "<p>done: <a href=\"https://github.com/rtfeldman/roc/issues/1766\">https://github.com/rtfeldman/roc/issues/1766</a></p>",
        "id": 256311844,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633464927
    },
    {
        "content": "<p>btw I installed it on Ubuntu 20 just now. smoother experience, but maybe because I'd had more practice at that point. I'm getting a bunch of \"unsupported architecture\" errors on my M1 MBP but I imagine that's NBD. on my Intel machine I'm seeing errors like this for the <code>cli_run</code> tests:</p>\n<div class=\"codehilite\"><pre><span></span><code>---- cli_run::nqueens stdout ----\nthread &#39;cli_run::nqueens&#39; panicked at &#39;ld: warning: No version-min specified on command line\nld: warning: -macosx_version_min not specified, assuming 10.11\n&#39;, cli/tests/cli_run.rs:56:13\n</code></pre></div>",
        "id": 256312783,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633465284
    },
    {
        "content": "<p>I'm probably going to have a ton of these because my non-M1 machine is a 2012 Mac Pro from eBay with a (very non-standard) modern CPU and GPU. so maybe unsupported architectures on two out of three systems</p>",
        "id": 256313815,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633465683
    },
    {
        "content": "<p>That specifically looks to just be a warning, does the test actually run?</p>",
        "id": 256314146,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1633465827
    },
    {
        "content": "<p>nope, 21 out of 21 failed in <code>cli_run</code></p>",
        "id": 256314284,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633465898
    },
    {
        "content": "<p>sorry, that's wrong. 2 passed, 19 failed. <code>cli_run::hello_web</code> and <code>cli_run::quicksort_app</code> were the ones that passed.</p>",
        "id": 256314452,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633465965
    },
    {
        "content": "<p>I got similar <code>ld: warning</code> strings in a ton of <code>repl_eval</code> tests which passed, but without the \"thread panicked\" part</p>",
        "id": 256314587,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633466034
    },
    {
        "content": "<p>May not be a real failure since I believe the cli run tests will fail if they see anything on std err. Can you try explicitly running the test:<br>\n<code>cargo run examples/benchmarks/NQueens.roc</code>. You will have to give a number to standard in.</p>",
        "id": 256314772,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1633466104
    },
    {
        "content": "<p>I guess you could more explicitly do: <code>echo \"4\" | cargo run examples/benchmarks/NQueens.roc</code></p>",
        "id": 256314845,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1633466142
    },
    {
        "content": "<p>that seems to work. just responded with the number 2 and a bit of timing info.</p>\n<div class=\"codehilite\"><pre><span></span><code>❯ echo 4 | cargo run examples/benchmarks/NQueens.roc\n    Finished dev [unoptimized + debuginfo] target(s) in 0.42s\n     Running `target/debug/roc examples/benchmarks/NQueens.roc`\nld: warning: No version-min specified on command line\nld: warning: -macosx_version_min not specified, assuming 10.11\n2\nruntime: 0.093ms\n</code></pre></div>",
        "id": 256315286,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633466342
    },
    {
        "content": "<p>Cool, so it is working, just printing an extra warning that the test is flagging as a failure.</p>",
        "id": 256315657,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1633466500
    },
    {
        "content": "<p>I guess that is an arg that we should maybe be specifying on macos.</p>",
        "id": 256316325,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1633466796
    },
    {
        "content": "<p>yup, I found the \"bail if stderr\" line in the CLI tests, took it out, they pass. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 256316332,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633466800
    },
    {
        "content": "<p>I'm new to Rust but specifying an arg like that sounds like a fun, tiny change to dig into.</p>\n<p>I got a different fail in <code>test_gen</code> btw:</p>\n<div class=\"codehilite\"><pre><span></span><code>test_gen-d11c5b1776e1be63(6961,0x700010b71000) malloc: *** error for object 0x7fe11e7d3dc0: pointer being freed was not allocated\ntest_gen-d11c5b1776e1be63(6961,0x700010b71000) malloc: *** set a breakpoint in malloc_error_break to debug\nerror: test failed, to rerun pass &#39;-p test_gen --lib&#39;\n</code></pre></div>",
        "id": 256316835,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633467027
    },
    {
        "content": "<p>oh fun, that might be genuine. we don't check <code>test_gen</code> for memory safety specifically, and on CI/linux it does not segfault, but there still may be memory safety issues</p>",
        "id": 256317269,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1633467230
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"445288\">Giles Bowkett</span> <a href=\"#narrow/stream/231634-beginners/topic/error.20messages/near/256316835\">said</a>:</p>\n<blockquote>\n<p>I'm new to Rust but specifying an arg like that sounds like a fun, tiny change to dig into.</p>\n</blockquote>\n<p>Yeah, should be a super minor change to <code>link.rs</code> Though I am not sure what version we should set it to.</p>",
        "id": 256317371,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1633467261
    },
    {
        "content": "<p>for now I just did <code>#[cfg(not(target_os = \"macos\"))]</code> around the <code>stderr.is_empty()</code></p>",
        "id": 256317780,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633467447
    },
    {
        "content": "<p>I'm not sure how to figure out which test's throwing the <code>malloc</code> error</p>",
        "id": 256317843,
        "sender_full_name": "Giles Bowkett",
        "timestamp": 1633467479
    },
    {
        "content": "<p>can you run <code>cargo test -p test_gen</code></p>",
        "id": 256319631,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1633468282
    },
    {
        "content": "<p>that will crash, but should report at the very bottom the name of the actual executable it ran plus the arguments you gave it</p>",
        "id": 256319759,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1633468331
    },
    {
        "content": "<p>(there may be no arguments actually in this case)</p>",
        "id": 256319805,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1633468357
    },
    {
        "content": "<p>then, with llvm you should have <code>lldb</code> on your system now</p>",
        "id": 256319842,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1633468379
    },
    {
        "content": "<p>so then you'd run <code>lldb /path/to/the/executable -- arguments if any</code>. this will open something like a repl</p>",
        "id": 256319920,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1633468418
    },
    {
        "content": "<p>there, type <code>run</code>, this will start running the tests. after a while this will then crash</p>",
        "id": 256319955,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1633468440
    },
    {
        "content": "<p>then, type <code>bt</code> (for \"backtrace\")</p>",
        "id": 256320036,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1633468459
    },
    {
        "content": "<p>and that would give us the name of the test case that fails</p>",
        "id": 256320071,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1633468475
    },
    {
        "content": "<p>(yes this is rather complicated and I wish it were easier than that)</p>",
        "id": 256320106,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1633468499
    },
    {
        "content": "<p>Another option should be: <code>cargo test -p test_gen  -- --test-threads 1</code>. That will make is run one test at a time. Then the last printed test name will be the test that was running when it failed.</p>",
        "id": 256321637,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1633469115
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"*\">@all</span> as of current <code>trunk</code>, you can now do <code>roc check Whatever.roc</code> (or <code>cargo run check Whatever.roc</code>) to run <em>just</em> parsing, naming, and type checks.</p>\n<p>This should dodge most (if not all) of the panics that currently happen after type checking when there are type mismatches, so I recommend using it instead of directly running <code>Whatever.roc</code> for normal development!</p>\n<p><code>check</code> also exits with 0 if there were no errors and 1 if there were errors, so you can do <code>&amp;&amp;</code> at the command line to have it run once there are no more errors</p>",
        "id": 256969853,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1633885975
    },
    {
        "content": "<p>thanks to <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> for making that one happen! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 256970010,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1633886113
    },
    {
        "content": "<p>I'm getting this message when trying to evaluate anything on the repl or running code from the editor with ctrl-R. Weird thing is \"cannot find -lc\" I do have libc6-dev installed (build-essentials installed). I'm trying to run things on <code>update-arch</code> branch because I'm having the <code>-arch</code> problem on trunk.</p>\n<p><a href=\"/user_uploads/22008/l6wEFRs1IftdshhowwJQMaFF/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/l6wEFRs1IftdshhowwJQMaFF/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/l6wEFRs1IftdshhowwJQMaFF/image.png\"></a></div>",
        "id": 258849536,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1635034179
    },
    {
        "content": "<p>Now it's worse. Send help.</p>\n<p><a href=\"/user_uploads/22008/MSyOyBN3wP5T-TotVKAUj2Na/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/MSyOyBN3wP5T-TotVKAUj2Na/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/MSyOyBN3wP5T-TotVKAUj2Na/image.png\"></a></div><p>Apparently I broke llvm installation somehow but now I fixed it and I'm back to the first image. I'll leave it here because I'm totally clueless...</p>",
        "id": 258850465,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1635036001
    },
    {
        "content": "<p>there may be an issue with your include path. What distro are you on?</p>",
        "id": 258852549,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1635039271
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"357305\">Lucas Rosa</span> <a href=\"#narrow/stream/231634-beginners/topic/error.20messages/near/258852549\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"448759\">Luis Gutierrez</span> there may be an issue with your include path. What distro are you on?</p>\n</blockquote>\n<p>I think you replied to the wrong Lui(s/z)? I'm on PopOS 20.04</p>",
        "id": 258854450,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1635042660
    },
    {
        "content": "<p>omg lol you’re right</p>",
        "id": 258856153,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1635045732
    },
    {
        "content": "<p>I’m sorry</p>",
        "id": 258856154,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1635045736
    },
    {
        "content": "<p>So on Linux I’ve had issues around symlinks in usr/lib64 and usr/lib</p>\n<p>Sometimes I would even have to delete them and manually add them back</p>",
        "id": 258856163,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1635045791
    },
    {
        "content": "<p>I was on fedora though</p>",
        "id": 258856169,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1635045801
    },
    {
        "content": "<p>but from what I see in the first screenshot, the linker doesn’t know where those things are. Which means they actually aren’t on your computer or the include path is messed up somehow</p>",
        "id": 258856224,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1635045864
    },
    {
        "content": "<p>Hahaha np I'll look into that then. Thanks o/</p>",
        "id": 258856745,
        "sender_full_name": "Luiz de Oliveira",
        "timestamp": 1635046758
    },
    {
        "content": "<p>I ran <code>cargo test</code> on a M1 and all the cli tests fail <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>because this gets printed to stderr:</p>\n<div class=\"codehilite\"><pre><span></span><code>&#39;-use-aa&#39; is not a recognized feature for this target (ignoring feature)\n&#39;+zcz-fp&#39; is not a recognized feature for this target (ignoring feature)\n&#39;-use-aa&#39; is not a recognized feature for this target (ignoring feature)\n&#39;+zcz-fp&#39; is not a recognized feature for this target (ignoring feature)\n</code></pre></div>\n<p>The warning originates from inkwell / llvm at <a href=\"https://github.com/rtfeldman/roc/blob/8cf62464c344794da74c0f57d5a7ed223f8b5ff1/compiler/build/src/link.rs#L836-L838\">https://github.com/rtfeldman/roc/blob/8cf62464c344794da74c0f57d5a7ed223f8b5ff1/compiler/build/src/link.rs#L836-L838</a>. I've tried messing with the targets / triplets / features without any luck.</p>",
        "id": 258884779,
        "sender_full_name": "Shritesh Bhattarai",
        "timestamp": 1635090932
    },
    {
        "content": "<p>interesting! Can you run things manually? e.g. if you do <code>cargo run examples/hello-world/Hello.roc</code> does it work?</p>",
        "id": 258885028,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635091244
    },
    {
        "content": "<p>(whoops wrong topic, still getting the hang of Zulip). Everything works as far as I've tested. It just prints those warnings every time.</p>",
        "id": 258885068,
        "sender_full_name": "Shritesh Bhattarai",
        "timestamp": 1635091314
    },
    {
        "content": "<p>oh you posted in this topic originally - I just moved the other messages about the false interpeter test failure into their own topic, since that one seems like it'll take some time to resolve <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 258885134,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635091395
    },
    {
        "content": "<p>hi, i'm new here, i'm trying to contribute to issue <a href=\"https://github.com/roc-lang/roc/issues/6812\">#6812</a> (make nicer error message when todo! is hit). i keep getting this error instead of the one listed on the issue:<br>\nthread 'main' panicked at crates/reporting/src/error/parse.rs:3937:14:<br>\nnot yet implemented: unhandled <code>exposes</code> parsing error ListStart(@7)<br>\nnote: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace<br>\ndoes anybody know what's wrong?? for reference this is the code in my file that im running:</p>\n<p>module Main</p>\n<p>main =<br>\n    let<br>\n        a = 5000<br>\n        b = 30000<br>\n    in<br>\n        a - b</p>",
        "id": 474204230,
        "sender_full_name": "Chloe Bai",
        "timestamp": 1727850759
    },
    {
        "content": "<p>Hi Chloe,<br>\nI think you've stumbled on a parser bug. That code seems to break the parser.</p>\n<p>Ideally you'll need some code that reproduces the todo! case from that issue.<br>\nI'm not sure I can help you there unfortunately, maybe someone else will have some ideas.</p>\n<p>But to get you started, something like this will get the parsing working:</p>\n<div class=\"codehilite\"><pre><span></span><code>module [main]\n\nmain =\n    a = 5000\n    b = 30000\n    a - b\n</code></pre></div>\n<p>Note that in Roc there is no <code>let/in</code> syntax, you can basically just get rid of the <code>let/in</code> and it works without it.</p>\n<p>Sorry I can't be more helpful than that!</p>\n<p>(also, if you want to run the code you'll need a platform. See <a href=\"https://www.roc-lang.org/examples/HelloWorld/README.html\">https://www.roc-lang.org/examples/HelloWorld/README.html</a> if you need a reference)</p>",
        "id": 474211695,
        "sender_full_name": "Nathan Kramer",
        "timestamp": 1727852600
    },
    {
        "content": "<p>For that issue, you need to use the dev backend so try running your app with <code>--dev</code>, also the linked issue was identified on a apple silicon mac. <span class=\"user-mention\" data-user-id=\"763136\">@Chloe Bai</span> do you have an aaarch64 mac?</p>",
        "id": 474214082,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727853277
    },
    {
        "content": "<p>It may be unimplemented on all of the dev backends, so the mac thing may not be relevant</p>",
        "id": 474214206,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727853320
    },
    {
        "content": "<p>I would suggest using <code>cargo run -- --dev test-app.roc</code> so you know you are using the debug build of the compiler, and also targeting the dev backend for roc.</p>",
        "id": 474214394,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727853367
    },
    {
        "content": "<p>Where <code>test-app.roc</code> is your example to reproduce the erro</p>",
        "id": 474214471,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727853387
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"763136\">@Chloe Bai</span>  I had trouble hitting a todo with <code>cargo run -- --dev test-app.roc</code>, but this code triggers one with the repl:</p>\n<div class=\"codehilite\"><pre><span></span><code>elemsApproxEq = \\values, index1, index2 -&gt;\n    val1 = List.get? values index1\n    val2 = List.get? values index2\n    Ok (Num.isApproxEq val1 val2 {})\n</code></pre></div>\n<p>Full process:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cargo build --release --bin roc\n$ ./target/release/roc repl\n\n  The rockin&#39; roc repl\n────────────────────────\n\nEnter an expression, or :help, or :q to quit.\n\n» elemsApproxEq = \\values, index1, index2 -&gt;\n…     val1 = List.get? values index1\n…     val2 = List.get? values index2\n…     Ok (Num.isApproxEq val1 val2 {})\nthread &#39;main&#39; panicked at crates/compiler/gen_dev/src/generic64/mod.rs:1333:18:\nnot yet implemented: NumAbs: layout, Builtin(Decimal)\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 474255304,
        "sender_full_name": "Anton",
        "timestamp": 1727864953
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> i only have a silicon mac</p>",
        "id": 474385076,
        "sender_full_name": "Chloe Bai",
        "timestamp": 1727898726
    },
    {
        "content": "<p>i've been trying to use both of your advice, but it's not working. i think it might be something with set up on my computer or permissions, but could i potentially set up a discord call for some help sometime within the next 24 hrs please?</p>",
        "id": 474385371,
        "sender_full_name": "Chloe Bai",
        "timestamp": 1727898832
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"763136\">@Chloe Bai</span> would you be free at <time datetime=\"2024-10-02T23:30:00Z\">2024-10-03T09:30:00+10:00</time> ?</p>",
        "id": 474412281,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727907909
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span>  oh shoot im sorry i didnt see this!! i had meetings during that time sorry. i will be free from 12pm-5pm Thu Oct 3rd (EST)!</p>",
        "id": 474466162,
        "sender_full_name": "Chloe Bai",
        "timestamp": 1727928331
    },
    {
        "content": "<p>or within the next couple of hours i am also free!!</p>",
        "id": 474466384,
        "sender_full_name": "Chloe Bai",
        "timestamp": 1727928405
    },
    {
        "content": "<p>Sent you a DM</p>",
        "id": 474469228,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727929549
    }
]