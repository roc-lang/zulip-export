[
    {
        "content": "<p>I have this compiler error. Does anyone know what's wrong?</p>\n<div class=\"codehilite\"><pre><span></span><code>TYPE MISMATCH\n\nThis 1st argument to `readUtf8` has an unexpected type:\n\n22â”‚      File.readUtf8! (Path.fromStr &quot;yarn.lock&quot;)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n\nThis `Path.fromStr` call produces:\n\n    InternalPath.InternalPath\n\nBut `readUtf8` needs its 1st argument to be:\n\n    Str\n</code></pre></div>",
        "id": 455880616,
        "sender_full_name": "Vladimir Zotov",
        "timestamp": 1722590540
    },
    {
        "content": "<p>It's because the <code>File.readUtf8</code> function takes a path as a <code>Str</code>, to use a <code>Path</code> as the path, you can use the <code>Path.readUtf8</code> function</p>",
        "id": 455882152,
        "sender_full_name": "Hannes",
        "timestamp": 1722590910
    },
    {
        "content": "<p>The <a href=\"https://www.roc-lang.org/packages/basic-cli/File#readUtf8\">docs for the File module</a> have a link on each function to the other version of it that takes a <code>Path</code>and vice versa</p>",
        "id": 455882668,
        "sender_full_name": "Hannes",
        "timestamp": 1722591010
    },
    {
        "content": "<p>I get the problem, but why do docs also give this example if it can never compile?</p>\n<p><a href=\"/user_uploads/22008/imAr4yi3cgEFCwBY13_wo8wR/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/imAr4yi3cgEFCwBY13_wo8wR/image.png\" title=\"image.png\"><img data-original-dimensions=\"846x259\" src=\"/user_uploads/thumbnail/22008/imAr4yi3cgEFCwBY13_wo8wR/image.png/840x560.webp\"></a></div>",
        "id": 455886336,
        "sender_full_name": "Vladimir Zotov",
        "timestamp": 1722591676
    },
    {
        "content": "<p>Unlike Rust, we don't (yet) test our doc code examples. That would be a good thing to do in the future!</p>",
        "id": 455894082,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722594286
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/238\">This PR</a> fixes the outdated example</p>",
        "id": 455902111,
        "sender_full_name": "Anton",
        "timestamp": 1722595918
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461444\">Sam Mohr</span> <a href=\"#narrow/stream/231634-beginners/topic/Reading.20a.20file.20as.20string/near/455894082\">said</a>:</p>\n<blockquote>\n<p>Unlike Rust, we don't (yet) test our doc code examples. That would be a good thing to do in the future!</p>\n</blockquote>\n<p>How involved would this be? Could you just find all code blocks in the docs and run their contents through <code>roc check</code> or would it be more complicated than that?</p>",
        "id": 456011815,
        "sender_full_name": "batyoullfly",
        "timestamp": 1722624525
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"625587\">Vladimir Zotov</span> has marked this topic as resolved.</p>",
        "id": 456112156,
        "sender_full_name": "Notification Bot",
        "timestamp": 1722666474
    },
    {
        "content": "<blockquote>\n<p>How involved would this be? Could you just find all code blocks in the docs and run their contents through <code>roc check</code> or would it be more complicated than that?</p>\n</blockquote>\n<p>Examples may be missing imports and an app header but yeah should be pretty straightforward</p>",
        "id": 456129706,
        "sender_full_name": "Anton",
        "timestamp": 1722678096
    }
]