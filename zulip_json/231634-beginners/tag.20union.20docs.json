[
    {
        "content": "<p>hey folks -</p>\n<p>after playing around for a while with the cli-platform and trying to understand the core libs through the current docs, I was curious about the plans for tag unions in documentation.</p>\n<p>I understand they're created without pior declaration - therefore they don't belong to any particular module unless it is an opaque type or maybe a type alias to a tag union set? But I also understand it is super valuable to explain them sometimes in the context of a module.</p>\n<p>e.g. I got super confused on the Num module docs because we see types like Int *, I32, etc. being used though we can't find them in the docs themselves. Maybe Num is especially tricky?</p>\n<p>any thoughts on this?</p>",
        "id": 301123221,
        "sender_full_name": "Georges Boris",
        "timestamp": 1664315276
    },
    {
        "content": "<p>I thought a lot of the numbers are defined in <code>Num.roc</code>, no? I know it was fairly complex, but I though I could find them in there</p>",
        "id": 301124386,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1664315800
    },
    {
        "content": "<p>Yeah, they are defined in <code>Num.roc</code>.</p>",
        "id": 301132725,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664320044
    },
    {
        "content": "<p>Maybe not exposed in the docs correctly?</p>",
        "id": 301132739,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664320052
    },
    {
        "content": "<p>yeah - I think the docs are not exposing any types at least in the Num module. only functions.</p>",
        "id": 301139962,
        "sender_full_name": "Georges Boris",
        "timestamp": 1664325028
    },
    {
        "content": "<p>my curiosity is exactly that - from my current understanding, unless I define a type like an opaque type, then they are considered the same regardless of the module, right? So how could one exposed/document then properly? Or is this aiming at pushing users to only document opaque/aliased types?</p>",
        "id": 301140210,
        "sender_full_name": "Georges Boris",
        "timestamp": 1664325219
    },
    {
        "content": "<p>Sure it is the same as in other modules, but it is defined. I think the fact it is defined means it should appear in documentation. Even if I define the same thing in two different modules, I would expect it to appear in the docs for both. I think it is just that docs are still very much works in progress.</p>",
        "id": 301146320,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1664330136
    }
]