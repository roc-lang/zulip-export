[
    {
        "content": "<p>is there a document on package management and modules in general? I want to clarify a couple of things:</p>\n<ol>\n<li>is it possible to import modules by url only in the app header?</li>\n<li>if not - it gives better UX for migrations (use multiple versions of packages simultaneously and migrate step by step), but it becomes messy to support, right? it's up to developer ofc</li>\n<li>how do sub-dependencies and transitive dependencies work?</li>\n<li><code>app</code>,<code>module</code>,<code>package</code>,<code>platform</code>,<code>hosted</code> - so many types of modules are enlisted in the docs. is this separation inevitable? is it possible to optimize it somehow?</li>\n<li>would it be possible to have packages patching mechanism? like, I encountered a bug in external package (even inside of a deep dependency) and want to modify it locally in the context of my app with minimal blood to just verify an assumption?</li>\n</ol>",
        "id": 525654470,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1750838259
    },
    {
        "content": "<p>(1) -- you can only import packages (a platform is a special kind of package and there must be exactly one) in the app header using URL. Modules are imported using <code>import Foo.Bar exposing [thing]</code> where <code>Bar.roc</code> is located at the directory <code>/Foo/Bar.roc</code></p>\n<p>(2) you can have multiple versions of the same package (except platforms) and alias them to help migration.</p>\n<p>(3) I'm not sure... as in the package imports another package. That is ok (though not implemented yet in either rust or zig compiler)</p>\n<p>(4) I think it works nicely to separate these things as they have different requirements/use cases. Note <code>hosted</code> wont be required in future. </p>\n<p>(5) I'm not sure</p>",
        "id": 525658757,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750839679
    },
    {
        "content": "<p>(5) I think you can modify a roc file in your cache and that will work, like this file for example:</p>\n<div class=\"codehilite\"><pre><span></span><code>/home/username/.cache/roc/packages/github.com/lukewilliamboswell/roc-json/releases/download/0.13.0/RqendgZw5e1RsQa3kFhgtnMP8efWoqGRsAvubx4-zus/StringFormat.roc\n</code></pre></div>",
        "id": 525659125,
        "sender_full_name": "Anton",
        "timestamp": 1750839837
    },
    {
        "content": "<ol start=\"5\">\n<li>cache<br>\nthat was my first thought, but I think any modification of files in cache can lead to very obscure consequences. even if the cache is local to the app (which is not I guess), it might be changed unpredictably by the compiler (if it decides to fetch them again for some reason)</li>\n</ol>\n<p>I thought of a package overloading system where roc can automatically copy the package contents to the app folder and resolve package from there</p>",
        "id": 525660371,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1750840242
    },
    {
        "content": "<blockquote>\n<p>(if it decides to fetch them again for some reason)</p>\n</blockquote>\n<p>I'm not 100% sure but I don't think it will.</p>",
        "id": 525661863,
        "sender_full_name": "Anton",
        "timestamp": 1750840703
    },
    {
        "content": "<blockquote>\n<p>I thought of a package overloading system where roc can automatically copy the package contents to the app folder and resolve package from there</p>\n</blockquote>\n<p>How would this be triggered?</p>",
        "id": 525661901,
        "sender_full_name": "Anton",
        "timestamp": 1750840714
    },
    {
        "content": "<p>I remember in python you could just go to source for e.g. a package in the IDE and modify it right there, that worked well</p>",
        "id": 525661991,
        "sender_full_name": "Anton",
        "timestamp": 1750840745
    },
    {
        "content": "<blockquote>\n<p>How would this be triggered?</p>\n</blockquote>\n<p>there's smth similar here: <a href=\"https://pnpm.io/cli/patch\">https://pnpm.io/cli/patch</a><br>\nthough it's not very ergonomic in my opinion</p>\n<p>it may be <code>roc patch &lt;full url to the package&gt;</code> which fetches the package to <code>.patches/&lt;package&gt;</code> and then compiler resolves imports from there.<br>\nafter the modifications, you can either add them to index, or (e.g.) run <code>roc patch shrink</code> that creates a <code>.patches/&lt;package&gt;.diff</code> you can also add to the index. </p>\n<p>it's a real world problem of a bug somewhere deep in dependencies. sometimes you need to just make it work not waiting for a new release (and a release of depended package)</p>",
        "id": 525663485,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1750841235
    },
    {
        "content": "<p>basically, vendoring</p>",
        "id": 525663665,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1750841286
    },
    {
        "content": "<blockquote>\n<p>it's a real world problem of a bug somewhere deep in dependencies. sometimes you need to just make it work not waiting for a new release (and a release of depended package)</p>\n</blockquote>\n<p>Yeah, agreed!</p>",
        "id": 525663857,
        "sender_full_name": "Anton",
        "timestamp": 1750841357
    },
    {
        "content": "<blockquote>\n<p>it may be <code>roc patch &lt;full url to the package&gt;</code> which fetches the package to <code>.patches/&lt;package&gt;</code> and then compiler resolves imports from there.</p>\n</blockquote>\n<p>That seems reasonable, I personally would not put it in a hidden folder but that's a detail. Can you make a post in #ideas ?</p>",
        "id": 525664028,
        "sender_full_name": "Anton",
        "timestamp": 1750841421
    },
    {
        "content": "<p>yeah I actually have thought about some sort of <code>roc vendor</code> command</p>",
        "id": 525691461,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1750851082
    },
    {
        "content": "<p><a class=\"message-link\" href=\"/#narrow/channel/304641-ideas/topic/roc.20patch/near/525666479\">#ideas &gt; roc patch @ ðŸ’¬</a></p>",
        "id": 525691709,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1750851181
    }
]