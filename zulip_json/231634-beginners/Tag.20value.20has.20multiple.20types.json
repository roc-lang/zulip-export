[
    {
        "content": "<p>Recently I had the thought that since a tag can be both a value (e.g: <code>Red : [Red, Green, Blue]</code>) and a function (<code>Ok : a -&gt; [Ok a, Err, *]</code>), wouldn't a declaration like <code>x = Tag</code> be ambiguous? And what would the type system type <code>x</code> as if <code>x</code> was then used as both a value and a function? Testing it in the REPL yielded the following result:</p>\n<div class=\"codehilite\"><pre><span></span><code>Enter an expression to evaluate, or a definition (like x = 1) to use later.\n» x = Some\n\nSome : [Some]\n» List.map [1, 2, 3] x\n\n[Some 1, Some 2, Some 3] : List [Some (Num *)]\n» x\n\nSome : [Some]\n</code></pre></div>\n<p>To my surprise, <code>x</code> now seemingly has two different types depending on the context! I'm very curious what magic the compiler does to make this _just work_, and what the actual type annotation for <code>x</code> should be if I were to try and give it one?</p>",
        "id": 408327948,
        "sender_full_name": "Sven van Caem",
        "timestamp": 1702721957
    },
    {
        "content": "<p>basically the compiler defaults types every payload-less tag to be \"either a function or a tag union, but we don't know which yet\" and then it infers it to be one or the other based on usage</p>",
        "id": 408336056,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702726915
    },
    {
        "content": "<p>so if you do <code>x = Some</code> it stays in that \"could be either, we don't know which yet\" type</p>",
        "id": 408336110,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702726936
    },
    {
        "content": "<p>but that type is (by design) not exposed in userspace, because the only reason we do this is as a syntactic convenience, not because it's something to build APIs around</p>",
        "id": 408336139,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702726970
    },
    {
        "content": "<p>so if you ask it what the type is (e.g. in the REPL), it defaults to saying it's a single tag and not a function</p>",
        "id": 408336180,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702727015
    },
    {
        "content": "<p>and if you put an annotation on it, that will also resolve it to one or the other</p>",
        "id": 408336187,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702727023
    },
    {
        "content": "<p>Gotcha! So if I were to use <code>x</code> as both a function and a single tag in one file, would that be a type error?</p>",
        "id": 408338845,
        "sender_full_name": "Sven van Caem",
        "timestamp": 1702728801
    },
    {
        "content": "<p>I assume so, although I haven't tried it.<span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 408339211,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702729044
    }
]