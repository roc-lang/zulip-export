[
    {
        "content": "<p>I have an interface defined something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>interface LinkedList\n    exposes [\n        LinkedList,\n        single,\n        push,\n        pop,\n        toList,\n        concat,\n        walk,\n        empty,\n    ]\n    imports []\n\nLinkedList a := LL a\n\nLL a : [Nil, Cons { first : a, rest : LL a}]\n\nempty : LinkedList *\nempty = @LinkedList Nil\n\n# and some more stuff...\n</code></pre></div>\n<p>When I use <code>empty</code> in another module, it crashes <code>roc build</code>. If I redefine <code>empty</code> as a function (and call it that way), it works:</p>\n<div class=\"codehilite\"><pre><span></span><code>empty : {} -&gt; LinkedList *\nempty = \\_ -&gt; @LinkedList Nil\n</code></pre></div>\n<p>Is it supposed to be possible to expose a value, or only functions?</p>",
        "id": 346627523,
        "sender_full_name": "Jim Balhoff",
        "timestamp": 1680540873
    },
    {
        "content": "<p>I see I can expose other kinds of valuesâ€”maybe this is a problem with the <code>LinkedList *</code> type? In Scala I would have made this <code>LinkedList[Nothing]</code> which is a subtype of every type. I guess <code>*</code> doesn't work that way?</p>",
        "id": 346630701,
        "sender_full_name": "Jim Balhoff",
        "timestamp": 1680541561
    },
    {
        "content": "<p>Oh and I see my function version is not working anyway when I try to actually add an item to the empty list.</p>",
        "id": 346631701,
        "sender_full_name": "Jim Balhoff",
        "timestamp": 1680541807
    },
    {
        "content": "<p>I don't recall the details, but i know we had to do the same thing with dictionaries.</p>",
        "id": 346639627,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1680543839
    },
    {
        "content": "<p>Due to exposing a <code>Dict k v</code>, <code>empty</code> is required to be a function.</p>",
        "id": 346639769,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1680543862
    },
    {
        "content": "<p>It is related to constants and type parameters, but i don't understand the full details</p>",
        "id": 346639873,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1680543893
    },
    {
        "content": "<p>Given the function version works with built-in types and interfaces, it should work with your linked list example. Would need to see more code to make a guess at the issue when adding a value.</p>",
        "id": 346640356,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1680544026
    },
    {
        "content": "<p>Thanks - I will try to look at the Dict version and see how the types are written</p>",
        "id": 346644887,
        "sender_full_name": "Jim Balhoff",
        "timestamp": 1680545259
    },
    {
        "content": "<p>In case you want the full background of why Dict.empty (and your LinkedList.empty) have to be functions: <a href=\"#narrow/stream/304641-ideas/topic/Let-generalization.20-.20let's.20not.3F/near/318649802\">https://roc.zulipchat.com/#narrow/stream/304641-ideas/topic/Let-generalization.20-.20let's.20not.3F/near/318649802</a></p>",
        "id": 346809287,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1680606049
    }
]