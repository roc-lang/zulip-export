[
    {
        "content": "<p>Hey folks, I put together a quick skeleton for advent of code here <a href=\"https://github.com/drewolson/aoc-roc\">https://github.com/drewolson/aoc-roc</a>, a few questions</p>",
        "id": 477828743,
        "sender_full_name": "drew",
        "timestamp": 1729362878
    },
    {
        "content": "<ol>\n<li>i didn't expect to need this line <a href=\"https://github.com/drewolson/aoc-roc/blob/635f62f26928ea4b2c1c32f83bb633ef030e032a/main.roc#L72\">https://github.com/drewolson/aoc-roc/blob/635f62f26928ea4b2c1c32f83bb633ef030e032a/main.roc#L72</a>. my understanding is that i should be able to handle my custom errors and let everything else flow to the top of the program</li>\n</ol>",
        "id": 477828788,
        "sender_full_name": "drew",
        "timestamp": 1729362941
    },
    {
        "content": "<ol start=\"2\">\n<li>when i open <a href=\"https://github.com/drewolson/aoc-roc/blob/main/Aoc/Year2023/Day09.roc\">https://github.com/drewolson/aoc-roc/blob/main/Aoc/Year2023/Day09.roc</a> in my editor (nvim), the LSP crashes with the following error:</li>\n</ol>",
        "id": 477828850,
        "sender_full_name": "drew",
        "timestamp": 1729362984
    },
    {
        "content": "<p><code>[ERROR][2024-10-19 13:35:51] .../lean/stderr.lua:74 \"rpc\" \"/Users/drew/.local/bin/roc_language_server\"  \"stderr\"  \"An internal compiler expectation was broken.\\nThis is definitely a compiler bug.\\nPlease file an issue here: &lt;       https://github.com/roc-lang/roc/issues/new/choose&gt;\\nOutstanding references to the derived module\\nLocation: crates/compiler/load_internal/src/file.rs:3299:29\\n\"</code></p>",
        "id": 477828862,
        "sender_full_name": "drew",
        "timestamp": 1729363006
    },
    {
        "content": "<p>let me know if i should actually file a bug for this</p>",
        "id": 477828871,
        "sender_full_name": "drew",
        "timestamp": 1729363014
    },
    {
        "content": "<p>i get the same error when i open <a href=\"https://github.com/drewolson/aoc-roc/blob/main/Aoc/Args.roc\">https://github.com/drewolson/aoc-roc/blob/main/Aoc/Args.roc</a>, which just consists of type synonyms</p>",
        "id": 477828948,
        "sender_full_name": "drew",
        "timestamp": 1729363092
    },
    {
        "content": "<p>and final question 3. is there a library for arbitrary sized ints in roc?</p>",
        "id": 477828976,
        "sender_full_name": "drew",
        "timestamp": 1729363132
    },
    {
        "content": "<p>One more observation -- i find it interesting that record builders are basically syntax sugar for applicatives using <code>&lt;-</code>, but that roc plans to deprecate backpassing, which is sugar for monads (among other things) using <code>&lt;-</code></p>",
        "id": 477829061,
        "sender_full_name": "drew",
        "timestamp": 1729363206
    },
    {
        "content": "<p>this is the farthest i've gotten in writing a reasonably sized skeleton for aoc without hitting major compiler bugs, so that's awesome!</p>",
        "id": 477829074,
        "sender_full_name": "drew",
        "timestamp": 1729363223
    },
    {
        "content": "<p>For 1</p>\n<p>On line 65, you call <code>Stdout.line! e</code>. That puts <code>StdoutErr</code> as one of the possible error outputs. When mapping the errors, you have to map all possible errors. That includes the error produced there.</p>",
        "id": 477831083,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1729365213
    },
    {
        "content": "<p>Weirdly, though, a catch all doesn't work</p>",
        "id": 477837537,
        "sender_full_name": "drew",
        "timestamp": 1729371342
    },
    {
        "content": "<p>meaning if i instead have <code>e -&gt; e</code> i get a compiler error</p>",
        "id": 477837545,
        "sender_full_name": "drew",
        "timestamp": 1729371353
    },
    {
        "content": "<p>actually, i guess i get a compiler bug <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 477837616,
        "sender_full_name": "drew",
        "timestamp": 1729371389
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ roc run\nthread &#39;main&#39; panicked at crates/compiler/mono/src/borrow.rs:396:34:\ninternal error: entered unreachable code:\n        No borrow signature for LambdaName { name: `16.IdentId(42)`, niche: Niche(Captures([InLayout(25), InLayout(44)])) } layout.\n\n        Tip 1: This can happen when you call a function with less arguments than it expects.\n        Like `Arg.list!` instead of `Arg.list! {}`.\n        Tip 2: `roc check yourfile.roc` can sometimes give you a helpful error.\n\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 477837622,
        "sender_full_name": "drew",
        "timestamp": 1729371396
    },
    {
        "content": "<p><code>roc check main.roc</code> seems to think that i'm not narrowing the type at all <a href=\"https://gist.github.com/drewolson/c126c3a1981bcb15318dce6f95060d57\">https://gist.github.com/drewolson/c126c3a1981bcb15318dce6f95060d57</a></p>",
        "id": 477837736,
        "sender_full_name": "drew",
        "timestamp": 1729371529
    },
    {
        "content": "<p>with the <code>e -&gt; e</code> arm rather than <code>StdoutErr e -&gt; StdoutErr e</code></p>",
        "id": 477837750,
        "sender_full_name": "drew",
        "timestamp": 1729371553
    },
    {
        "content": "<p>oh, and i reproduced the LSP error like this</p>",
        "id": 477837891,
        "sender_full_name": "drew",
        "timestamp": 1729371659
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ roc check Aoc/Args.roc\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nOutstanding references to the derived module\nLocation: crates/compiler/load_internal/src/file.rs:3299:29\n</code></pre></div>",
        "id": 477837897,
        "sender_full_name": "drew",
        "timestamp": 1729371662
    },
    {
        "content": "<p>Yeah, <code>e -&gt; e</code> does not narrow the type in roc.</p>",
        "id": 477839280,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1729373111
    },
    {
        "content": "<p>That would be a form of gradual typing, which roc does not have</p>",
        "id": 477839296,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1729373153
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">err</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">    </span><span class=\"kt\">BadDayPart</span><span class=\"w\"> </span><span class=\"nv\">day</span><span class=\"w\"> </span><span class=\"nv\">part</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Exit</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"s\">\"Invalid day and part: $(Inspect.toStr day), $(Inspect.toStr part)\"</span>\n<span class=\"w\">    </span><span class=\"kt\">BadInput</span><span class=\"w\"> </span><span class=\"nv\">path</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Exit</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"s\">\"Invalid input file: $(path)\"</span>\n<span class=\"w\">    </span><span class=\"kt\">BadYear</span><span class=\"w\"> </span><span class=\"nv\">year</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Exit</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"s\">\"Invalid year: $(Inspect.toStr year)\"</span>\n<span class=\"w\">    </span><span class=\"nv\">e</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">e</span>\n</code></pre></div>\n<p>Type of <code>err</code> is <code>[BadDayPart U8 U8, BadInput Str, BadYear U16, StdoutErr [...]]*</code></p>\n<p>Type of the first three branches is <code>[Exit U8 Str]*</code><br>\nType of the final brach is the type of <code>e</code>. The type of <code>e</code> is the type of <code>err</code>. So the type of the final branch is <code>[BadDayPart U8 U8, BadInput Str, BadYear U16, StdoutErr [...]]*</code></p>\n<p>unifying the branches, we get:<br>\n<code>[BadDayPart U8 U8, BadInput Str, BadYear U16, Exit U8 Str, StdoutErr [...]]*</code></p>",
        "id": 477839636,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1729373432
    },
    {
        "content": "<blockquote>\n<p>let me know if i should actually file a bug for this</p>\n</blockquote>\n<p>Yes please for 2.</p>",
        "id": 477985761,
        "sender_full_name": "Anton",
        "timestamp": 1729497508
    },
    {
        "content": "<blockquote>\n<ol start=\"3\">\n<li>is there a library for arbitrary sized ints in roc?</li>\n</ol>\n</blockquote>\n<p>Not that I'm aware of, does I128 not fit your needs?</p>",
        "id": 477986135,
        "sender_full_name": "Anton",
        "timestamp": 1729497613
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/231634-beginners/topic/advent.20of.20code.20sample/near/477986135\">said</a>:</p>\n<blockquote>\n<blockquote>\n<ol start=\"3\">\n<li>is there a library for arbitrary sized ints in roc?</li>\n</ol>\n</blockquote>\n<p>Not that I'm aware of, does I128 not fit your needs?</p>\n</blockquote>\n<p>I128 may work, iâ€™m just anticipating problems in advent of code designed to push towards very large ints</p>",
        "id": 478033577,
        "sender_full_name": "drew",
        "timestamp": 1729511432
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/channel/231634-beginners/topic/advent.20of.20code.20sample/near/477985761\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>let me know if i should actually file a bug for this</p>\n</blockquote>\n<p>Yes please for 2.</p>\n</blockquote>\n<p>For posterity, this is done <a href=\"https://github.com/roc-lang/roc/issues/7175\">https://github.com/roc-lang/roc/issues/7175</a>. I see you've already labeled it <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 478087862,
        "sender_full_name": "drew",
        "timestamp": 1729523979
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"463085\">drew</span> has marked this topic as resolved.</p>",
        "id": 478129145,
        "sender_full_name": "Notification Bot",
        "timestamp": 1729537098
    }
]