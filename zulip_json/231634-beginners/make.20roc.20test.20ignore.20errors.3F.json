[
    {
        "content": "<p>is there a command that runs roc test, ignoring some errors, like roc run does?</p>",
        "id": 430242542,
        "sender_full_name": "Pei Yang Ching",
        "timestamp": 1711711889
    },
    {
        "content": "<p>I don't think so. Though I know there was discussion about his before. I think we made a plan to add a flag, but would need to dig things up in <a class=\"stream\" data-stream-id=\"304641\" href=\"/#narrow/stream/304641-ideas\">#ideas</a>, not sure if an issue got filed for it...</p>",
        "id": 430303072,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1711738446
    },
    {
        "content": "<p>I'd like to add this feature myself (or at least try to) can you give me any pointers on where to start?</p>",
        "id": 430632889,
        "sender_full_name": "Pei Yang Ching",
        "timestamp": 1711992198
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"662797\">@Pei Yang Ching</span>,<br>\nThanks for helping out!</p>\n<blockquote>\n<p>I'd like to add this feature myself (or at least try to) can you give me any pointers on where to start?</p>\n</blockquote>\n<p>The flag itself (e.g. <code>--ignore-errors</code>) should be added in crates/cli/src/lib.rs, I also recommend checking out how ignoring errors is handled by <code>CMD_RUN</code> in the same file. The <a href=\"http://cursor.sh\">cursor.sh</a> editor can also assist you in finding stuff.</p>",
        "id": 430636277,
        "sender_full_name": "Anton",
        "timestamp": 1711993586
    },
    {
        "content": "<p>thanks for the pointers! I created a draft PR here: <a href=\"https://github.com/roc-lang/roc/pull/6623\">https://github.com/roc-lang/roc/pull/6623</a></p>\n<p>but I couldn't build roc for some reason, neither <code>cargo build</code> nor <code>nix build</code> works, I'm using nix on MacOS (x86_64), someone knows something, <br>\nlogs: <a href=\"https://pastebin.com/KR3t3ES0\">https://pastebin.com/KR3t3ES0</a></p>\n<p>It seems like it couldn't link  against c++ stdlib and llvm libs for some reason?</p>",
        "id": 430882631,
        "sender_full_name": "Pei Yang Ching",
        "timestamp": 1712095591
    },
    {
        "content": "<p>I usually use <code>nix develop</code> followed by <code>cargo build --release --bin roc</code>, can you try that?</p>",
        "id": 430935167,
        "sender_full_name": "Anton",
        "timestamp": 1712129196
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> ! After a bit of digging around, this patch seems to have fixed the issue:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/crates/cli/build.rs b/crates/cli/build.rs</span>\n<span class=\"gh\">index 5d171b71c..1adcd79a4 100644</span>\n<span class=\"gd\">--- a/crates/cli/build.rs</span>\n<span class=\"gi\">+++ b/crates/cli/build.rs</span>\n<span class=\"gu\">@@ -1,6 +1,6 @@</span>\n<span class=\"w\"> </span>fn main() {\n<span class=\"w\"> </span>    // workaround for issue https://github.com/NixOS/nixpkgs/issues/166205 . This println can be removed when this issue is fixed. Upgrading to LLVM 14 could also fix this iss\nue.\n<span class=\"w\"> </span>    // also see https://github.com/NixOS/nixpkgs/pull/181485\n<span class=\"gd\">-    #[cfg(all(target_os = \"macos\", target_arch = \"aarch64\"))]</span>\n<span class=\"gd\">-    println!(\"cargo:rustc-link-lib=c++abi\")</span>\n<span class=\"gi\">+    #[cfg(all(target_os = \"macos\"))]</span>\n<span class=\"gi\">+    println!(\"cargo:rustc-link-arg=-lc++abi\")</span>\n<span class=\"w\"> </span>}\n</code></pre></div>\n<p>in short, it seems this build flag, which is currently used by MacOS ARM, is also needed for x86_64 MacOS. I'd make a PR, but would like to first run this through someone familiar with the MacOS+nix side, if there's anyone like that please do let me know, thanks again :)</p>",
        "id": 431407497,
        "sender_full_name": "Pei Yang Ching",
        "timestamp": 1712267082
    },
    {
        "content": "<p>Looks like this has <a href=\"https://github.com/NixOS/nixpkgs/pull/292043\">recently been fixed</a>. I'll try updating to the latest nix in the coming days to see if we can get rid of this workaround. I'll let you know when the update is merged :)</p>",
        "id": 431475566,
        "sender_full_name": "Anton",
        "timestamp": 1712306283
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"662797\">@Pei Yang Ching</span>, <a href=\"https://github.com/roc-lang/roc/pull/6631\">PR#6631</a> was merged, I was able to remove the workaround in <a href=\"http://build.rs\">build.rs</a></p>",
        "id": 432873666,
        "sender_full_name": "Anton",
        "timestamp": 1712917036
    }
]