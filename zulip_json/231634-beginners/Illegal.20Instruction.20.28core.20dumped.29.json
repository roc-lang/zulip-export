[
    {
        "content": "<p>Looks like <code>Num.toStr 5</code> crashes with <code>Illegal instruction (core dumped)</code> for me.  This happens on the <code>roc repl</code>. It might be related to the custom build @Anton hooked me up with to support my CPU: (<a href=\"#narrow/stream/231634-beginners/topic/Getting.20started.20with.20nightlies\">https://roc.zulipchat.com/#narrow/stream/231634-beginners/topic/Getting.20started.20with.20nightlies</a>)</p>",
        "id": 263370258,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638399829
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 263400236,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638428937
    },
    {
        "content": "<p><code>Num.toStr</code> is a very recent addition, using <a href=\"https://www.dropbox.com/s/nwmqpbxnaq1eovk/roc?dl=0\">this roc binary</a> as a drop in replacement in the decompressed nightly of roc_nightly-linux_x86_64-20211202-4e91ce.tar.gz should work.<br>\nI'll set things up so you won't have to rely on me providing custom binaries for the following nightly releases.</p>\n<div class=\"message_inline_ref\"><a href=\"https://www.dropbox.com/s/nwmqpbxnaq1eovk/roc?dl=0\" title=\"roc\"><img src=\"https://uploads.zulipusercontent.net/5988eb9fd8511387eeea052d50aeaf0db268ece4/68747470733a2f2f7777772e64726f70626f782e636f6d2f7374617469632f696d616765732f737065637472756d2d69636f6e732f67656e6572617465642f636f6e74656e742f636f6e74656e742d756e6b6e6f776e2d6c617267652e706e67\"></a><div><div class=\"message_inline_image_title\">roc</div><desc class=\"message_inline_image_desc\"></desc></div></div>",
        "id": 263414926,
        "sender_full_name": "Anton",
        "timestamp": 1638439420
    },
    {
        "content": "<p>I've set up PR #2125 to make all future nightly releases compatible with your CPU <span class=\"user-mention\" data-user-id=\"460629\">@Jason Hobbs</span> .</p>",
        "id": 263416445,
        "sender_full_name": "Anton",
        "timestamp": 1638440348
    },
    {
        "content": "<p>Thanks @Anton! Once that gets merged in, I'll download the latest and resume the Advent. As an aside, the roc attachment you provided has the same error. Does it matter where the <code>roc</code> binary lives?</p>",
        "id": 263443359,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638454815
    },
    {
        "content": "<p>Yes, the roc binary needs to be in the exact folder layout that is created when the tar.gz is decompressed.</p>",
        "id": 263446773,
        "sender_full_name": "Anton",
        "timestamp": 1638456208
    },
    {
        "content": "<p>I just checked my laptop and I have the exact same CPU :) although it's fine if you want to wait until tomorrow, the following steps really should work:</p>\n<ul>\n<li>Download this exact release archive <code>roc_nightly-linux_x86_64-20211202-4e91ce.tar.gz</code></li>\n<li>Execute:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>tar -xf  roc_nightly-linux_x86_64-20211202-4e91ce.tar.gz\nrm roc\nwget https://www.dropbox.com/s/nwmqpbxnaq1eovk/roc?dl=1\nmv roc\\?dl\\=1 roc\nchmod +x roc\n./roc repl\nNum.toStr 5\n` ``\n</code></pre></div>",
        "id": 263450391,
        "sender_full_name": "Anton",
        "timestamp": 1638457590
    },
    {
        "content": "<p>Odd that I'm having that problem and you're not...</p>\n<div class=\"codehilite\"><pre><span></span><code>~/projects/exploration/advent-of-code-2021/roc 1 (31.2ms)\n$ md5sum roc\n12899684ced940478eda53abc4e2ffb0  roc\n\n~/projects/exploration/advent-of-code-2021/roc 0 (106ms)\n$ ls\ncompiler       LICENSE       roc_nightly-linux_x86_64-20211202-4e91ce.tar.gz\nexamples       roc           roc_std\nLEGAL_DETAILS  roc.20211202\n\n~/projects/exploration/advent-of-code-2021/roc 0 (2.9ms)\n$ ./roc repl\n\n  The rockinâ€™ roc repl\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n\nEnter an expression, or :help, or :exit/:q.\n\nÂ» Num.toStr 5\nIllegal instruction (core dumped)\n</code></pre></div>",
        "id": 263474710,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638467116
    },
    {
        "content": "<p>oh wait...</p>",
        "id": 263474759,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638467137
    },
    {
        "content": "<p>Thought the PATH might have still had another <code>roc</code> in it, but nope... I actually called it directly above: <code>./roc</code>.  Same issue... strange.</p>",
        "id": 263475036,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638467266
    },
    {
        "content": "<p>Oh, this is a zig builtin issue...not a roc binary issue</p>",
        "id": 263475534,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638467503
    },
    {
        "content": "<p>So doesn't matter how we compile roc if the zig builtin is still calling illegal instructions. At least, that is my guess.</p>",
        "id": 263475636,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638467531
    },
    {
        "content": "<p>The zig hello world works (actually all 3 rust, zig, c).</p>",
        "id": 263475782,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638467605
    },
    {
        "content": "<p>Oh, does the repl rely on zig? And it's got the Num.toStr issue?</p>",
        "id": 263475852,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638467638
    },
    {
        "content": "<p>I'll test Num.toStr with the rust platform</p>",
        "id": 263475929,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638467656
    },
    {
        "content": "<p>A lot of the roc builtins, like <code>Num.toStr</code> depend on zig.</p>",
        "id": 263475938,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638467659
    },
    {
        "content": "<p>So my guess is that <code>Num.toStr</code> is compiled in a way such that it is calling an invalid instruction.</p>",
        "id": 263475999,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638467690
    },
    {
        "content": "<p>oh, okay! That might explain why the rust platform still has the issue too</p>",
        "id": 263476087,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638467732
    },
    {
        "content": "<p>I am not sure how the builtins are compiled for the nightly build, but I would have guess that it is done locally, so this shouldn't happen....so I may still be a different issue</p>",
        "id": 263476761,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638468002
    },
    {
        "content": "<p>I probably skipped a step then, because I didn't compile anything</p>",
        "id": 263477046,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638468122
    },
    {
        "content": "<p>It would happen automatically when running roc commands.</p>",
        "id": 263477422,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638468297
    },
    {
        "content": "<p>Quick question to verify my theory. If have an example that calls <code>Num.toStr</code> and then run <code>roc build &lt;example&gt;</code> does it fail, or does it only fail when running?</p>",
        "id": 263486990,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638472469
    },
    {
        "content": "<p>This crashes if that's what you meant: </p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;hello-rust&quot;\n    packages { base: &quot;platform&quot; }\n    imports []\n    provides [ main ] to base\n\ngreeting =\n    hi = &quot;Hello&quot;\n    name = Num.toStr 5\n\n    &quot;\\(hi), \\(name)!\\n&quot;\n\nmain = greeting\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>~/projects/exploration/advent-of-code-2021/roc 0 (568ms)\n$ ./roc examples/hello-rust/Hello.roc\nðŸ”¨ Rebuilding host... Done!\nIllegal instruction (core dumped)\n</code></pre></div>",
        "id": 263503573,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638480880
    },
    {
        "content": "<p>That is the command to build and run. What do you get when you explicitly just build <code>./roc build examples/hello-rust/Hello.roc</code>?</p>",
        "id": 263507925,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638483530
    },
    {
        "content": "<p>Works like a charm... guess the error is in the runtime.</p>\n<div class=\"codehilite\"><pre><span></span><code>~/projects/exploration/advent-of-code-2021/roc 132 (1.7ms)\n$ ./roc build examples/hello-rust/Hello.roc\nðŸ”¨ Rebuilding host... Done!\nðŸŽ‰ Built examples/hello-rust/hello-rust in 559 ms\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>~/projects/exploration/advent-of-code-2021/roc 0 (569ms)\n$ ./examples/hello-rust/hello-rust\nIllegal instruction (core dumped)\n</code></pre></div>",
        "id": 263516743,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638488861
    },
    {
        "content": "<p>Yeah, so either a zig built-in issue or i guess it could be an llvm issue, but that would be quite surprising. I believe we target the host cpu when compiling.</p>",
        "id": 263517414,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638489463
    },
    {
        "content": "<p>Just skimmed the code. The zig builtins are compiled to target the host cpu. So that is where the issue is coming from. We probably need to build a generic x86-64 version.</p>",
        "id": 263534223,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638505046
    },
    {
        "content": "<p>I'll look into this, I think it is pretty similar to what I did to make valgrind work on my laptop.</p>",
        "id": 263572860,
        "sender_full_name": "Anton",
        "timestamp": 1638534884
    },
    {
        "content": "<p>I've setup PR #2132 for this. I still don't understand why it did not fail on my laptop though.</p>",
        "id": 263623982,
        "sender_full_name": "Anton",
        "timestamp": 1638558497
    },
    {
        "content": "<p>Did you try to run Num.toStr on your laptop. I think that built-in specifically has the issue</p>",
        "id": 263624553,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638558784
    },
    {
        "content": "<p>Yes I did, it works without problems.</p>",
        "id": 263694213,
        "sender_full_name": "Anton",
        "timestamp": 1638608627
    },
    {
        "content": "<p>Can you try <code>Num.toStr 5</code> in the roc repl with today's nightly (20211204-e872d0) <span class=\"user-mention\" data-user-id=\"460629\">@Jason Hobbs</span>?</p>",
        "id": 263695275,
        "sender_full_name": "Anton",
        "timestamp": 1638610084
    },
    {
        "content": "<p>Same problem:</p>\n<div class=\"codehilite\"><pre><span></span><code>~/projects/exploration/roc/1203-04 0 (1.4ms)\n$ mv ~/Downloads/roc_nightly-linux_x86_64-20211204-e872d0.tar.gz .\n\n~/projects/exploration/roc/1203-04 0 (3.7ms)\n$ tar xf roc_nightly-linux_x86_64-20211204-e872d0.tar.gz\n\n~/projects/exploration/roc/1203-04 0 (2.539s)\n$ ls\ncompiler       LICENSE                                          roc_std\nexamples       roc\nLEGAL_DETAILS  roc_nightly-linux_x86_64-20211204-e872d0.tar.gz\n\n~/projects/exploration/roc/1203-04 0 (2.3ms)\n$ ./roc examples/hello-rust/Hello.roc\nðŸ”¨ Rebuilding host... Done!\nHello, World!\n\n~/projects/exploration/roc/1203-04 132 (743ms)\n$ ./roc repl\n\n  The rockinâ€™ roc repl\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n\nEnter an expression, or :help, or :exit/:q.\n\nÂ» Num.toStr 5\nIllegal instruction (core dumped)\n</code></pre></div>",
        "id": 263716481,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638634602
    },
    {
        "content": "<p>For what it's worth, it does understand the fn signature: </p>\n<div class=\"codehilite\"><pre><span></span><code>Â» Num.toStr\n\n&lt;function&gt; : Num * -&gt; Str\n\nÂ» Num.toStr 5\nIllegal instruction (core dumped)\n</code></pre></div>",
        "id": 263716629,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638634745
    },
    {
        "content": "<p>can you upload the output of <code>cat /proc/cpuinfo | grep flags</code> (Note, it will repeat the same info multiple times, you can just upload the first instance)<br>\nAlso, can you upload your generated <code>examples/hello-rust/hello-rust</code> executable?</p>",
        "id": 263718421,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638636735
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"460629\">@Jason Hobbs</span> One other thing that would also be quite useful. Probably more useful than the above:<br>\n1) run <code>lldb examples/hello-rust/hello-rust</code><br>\n2) type <code>r</code> and press enter<br>\n3) paste the output here<br>\n4) type <code>q</code> and press enter to quit <code>lldb</code></p>\n<p>If you don't have <code>lldb</code>, I can look into the equivalent instructions for <code>gdb</code> which you would likely have.</p>",
        "id": 263720037,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638638253
    },
    {
        "content": "<p>I modified the hello-rust to include the <code>Num.toStr 5</code> and got this:</p>\n<div class=\"codehilite\"><pre><span></span><code>~/projects/exploration/roc/1203-04 132 (4.424s)\n$ lldb examples/hello-rust/hello-rust\n(lldb) target create &quot;examples/hello-rust/hello-rust&quot;\nCurrent executable set to &#39;/home/jason/projects/exploration/roc/1203-04/examples/hello-rust/hello-rust&#39; (x86_64).\n(lldb) r\nProcess 22940 launched: &#39;/home/jason/projects/exploration/roc/1203-04/examples/hello-rust/hello-rust&#39; (x86_64)\nProcess 22940 stopped\n* thread #1, name = &#39;hello-rust&#39;, stop reason = signal SIGILL: illegal instruction operand\n    frame #0: 0x000055555558d807 hello-rust`roc_builtins.str.from_int.i64 + 71\nhello-rust`roc_builtins.str.from_int.i64:\n-&gt;  0x55555558d807 &lt;+71&gt;: vmovdqa 0x8891(%rip), %xmm0\n    0x55555558d80f &lt;+79&gt;: vmovdqu %xmm0, 0xe0(%rsp)\n    0x55555558d818 &lt;+88&gt;: movq   %rax, 0xd0(%rsp)\n    0x55555558d820 &lt;+96&gt;: leaq   0xf0(%rsp), %rdi\n(lldb) q\n</code></pre></div>",
        "id": 263724504,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638643076
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ cat /proc/cpuinfo | grep flags\nflags       : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni ssse3 pcid sse4_1 sse4_2 hypervisor lahf_lm invpcid_single ibrs_enhanced fsgsbase invpcid md_clear flush_l1d arch_capabilities\n</code></pre></div>",
        "id": 263724561,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638643126
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/lS9zCFkdq1sL-dd8CBeZqaV_/hello-rust\">hello-rust</a>  This is the version with <code>name = Num.toStr 5</code></p>",
        "id": 263724628,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638643204
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"460629\">@Jason Hobbs</span>! I'll see what the disassembly of the executable looks like on my laptop.</p>",
        "id": 263724642,
        "sender_full_name": "Anton",
        "timestamp": 1638643231
    },
    {
        "content": "<p>built with the 1204 nightly <code>roc</code></p>",
        "id": 263724647,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638643235
    },
    {
        "content": "<p>Can you post the source of your modified hello-rust as well?</p>",
        "id": 263724664,
        "sender_full_name": "Anton",
        "timestamp": 1638643278
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>app &quot;hello-rust&quot;\n    packages { base: &quot;platform&quot; }\n    imports []\n    provides [ main ] to base\n\ngreeting =\n    hi = &quot;Hello&quot;\n    name = Num.toStr 5\n\n    &quot;\\(hi), \\(name)!\\n&quot;\n\nmain = greeting\n</code></pre></div>",
        "id": 263724670,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638643288
    },
    {
        "content": "<p>Interesting observation: I have way more flags on my (exact same) CPU, I wonder if this is some restriction coming from the virtual machine.</p>",
        "id": 263724978,
        "sender_full_name": "Anton",
        "timestamp": 1638643642
    },
    {
        "content": "<p>So that matches the assembly I get. It looks like he doesn't even have <code>avx</code></p>",
        "id": 263725062,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638643689
    },
    {
        "content": "<p>uhu, I do have avx. I'll post my flags in a minute</p>",
        "id": 263725073,
        "sender_full_name": "Anton",
        "timestamp": 1638643723
    },
    {
        "content": "<p>No avx probably means you can't even use <code>x86-64-v2</code></p>",
        "id": 263725080,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638643742
    },
    {
        "content": "<p>Maybe related to: <a href=\"https://communities.vmware.com/t5/VMware-Workstation-Pro/AVX-instructions-do-not-work-in-a-virtual-machine-on-a-Windows/td-p/2745412\">https://communities.vmware.com/t5/VMware-Workstation-Pro/AVX-instructions-do-not-work-in-a-virtual-machine-on-a-Windows/td-p/2745412</a></p>",
        "id": 263725155,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638643822
    },
    {
        "content": "<p>Not sure if <span class=\"user-mention\" data-user-id=\"460629\">@Jason Hobbs</span>  is using vmware or some other form of virtualization?</p>",
        "id": 263725163,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638643845
    },
    {
        "content": "<p>My flags:</p>\n<div class=\"codehilite\"><pre><span></span><code>flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l2 invpcid_single cdp_l2 ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves split_lock_detect dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp hwp_pkg_req avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq rdpid movdiri movdir64b fsrm avx512_vp2intersect md_clear flush_l1d arch_capabilities\n</code></pre></div>",
        "id": 263725196,
        "sender_full_name": "Anton",
        "timestamp": 1638643921
    },
    {
        "content": "<p>I found it in a past message, Jason is using VirtualBox</p>",
        "id": 263725289,
        "sender_full_name": "Anton",
        "timestamp": 1638643984
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"460629\">@Jason Hobbs</span>  <a href=\"https://docs.microsoft.com/en-us/troubleshoot/windows-client/application-management/virtualization-apps-not-work-with-hyper-v\">Disabling Hyper-V</a> inside windows (if it is enabled) could solve the issue. You'll probably need to restart virtualbox after.</p>",
        "id": 263725620,
        "sender_full_name": "Anton",
        "timestamp": 1638644335
    },
    {
        "content": "<p>Yes, I have it running in Virtualbox. On the Hyper-V link there, I do see a hypervisor has been detected (using msinfo32.exe). However, I'm running on Windows Home, so Hyper-V isn't an option for me.</p>",
        "id": 263726491,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638645280
    },
    {
        "content": "<p>I've looked into this some more and workarounds for windows hyper-v require disabling a bunch of security features, which I would not recommend <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> So I will adjust the nightly target for maximal compatibility.</p>",
        "id": 263761483,
        "sender_full_name": "Anton",
        "timestamp": 1638700468
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 263768508,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638710986
    },
    {
        "content": "<p>Can you give the 20211206 nightly a try <span class=\"user-mention\" data-user-id=\"460629\">@Jason Hobbs</span>?</p>",
        "id": 263831555,
        "sender_full_name": "Anton",
        "timestamp": 1638786855
    },
    {
        "content": "<p><span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span>  Still a no go</p>\n<div class=\"codehilite\"><pre><span></span><code>~/projects/exploration/roc/1206 0 (3.2ms)\n$ tar xf roc_nightly-linux_x86_64-20211206-034b8f.tar.gz\n\n~/projects/exploration/roc/1206 0 (2.571s)\n$ ls\ncompiler       LICENSE                                          roc_std\nexamples       roc\nLEGAL_DETAILS  roc_nightly-linux_x86_64-20211206-034b8f.tar.gz\n\n~/projects/exploration/roc/1206 0 (2.6ms)\n$ ./roc repl\n\n  The rockinâ€™ roc repl\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n\nEnter an expression, or :help, or :exit/:q.\n\nÂ» Num.toStr 5\nIllegal instruction (core dumped)\n</code></pre></div>\n<p>I can put together a minimal VirtualBox image for you that might replicate the problem if you'd like. Would that help?</p>",
        "id": 263858495,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638801519
    },
    {
        "content": "<p>Strange... yes the virtualbox image sounds like a good idea <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 263858969,
        "sender_full_name": "Anton",
        "timestamp": 1638801721
    },
    {
        "content": "<p>I found it's pretty interesting that <code>Num.floor 2.5</code> works but <code>Num.round 2.5</code> crashes with <code>Illegal instruction (core dumped)</code></p>",
        "id": 263863915,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638803649
    },
    {
        "content": "<p>It seems reasonable that round could use an instruction that is not needed for floor.</p>",
        "id": 263865066,
        "sender_full_name": "Anton",
        "timestamp": 1638804076
    },
    {
        "content": "<p>Very true... I have the image ready btw.. just figuring out where I can put it (3GB).</p>",
        "id": 263871043,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638806325
    },
    {
        "content": "<p><a href=\"http://45.79.131.94/static/xubuntu-roc-repl.ova\">http://45.79.131.94/static/xubuntu-roc-repl.ova</a> is the image to import into Virtualbox. The <code>roc</code> is in Downloads. <code>sudo</code> for root access.  user and pass are both <code>jason</code>. I made sure the  3 hello-world examples all run and the <code>roc repl</code> still crashes as above.</p>",
        "id": 263921404,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638823180
    },
    {
        "content": "<p>Thanks for setting this up! I should be able to take a look either today or tomorrow.</p>",
        "id": 263971062,
        "sender_full_name": "Anton",
        "timestamp": 1638866100
    },
    {
        "content": "<p>Using the virtualbox image I was unable to reproduce the error on my Ubuntu laptop, I also had more cpu flags so it makes sense.<br>\nI'll try to reproduce the error on my windows desktop.</p>",
        "id": 264133748,
        "sender_full_name": "Anton",
        "timestamp": 1638957616
    },
    {
        "content": "<p>I'm also unable to reproduce this on windows (inside VirtualBox).<br>\n<span class=\"user-mention\" data-user-id=\"460629\">@Jason Hobbs</span> can you share the values in the \"system information\" window on windows?<br>\nCan you also confirm virtualization is enabled in your BIOS?</p>",
        "id": 264142705,
        "sender_full_name": "Anton",
        "timestamp": 1638963175
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/bygxtiouuqLSB8j71_QnABLZ/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/bygxtiouuqLSB8j71_QnABLZ/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/bygxtiouuqLSB8j71_QnABLZ/image.png\"></a></div>",
        "id": 264164255,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638974600
    },
    {
        "content": "<p>Gotta reboot to check the BIOS.  And btw, you're amazing for putting in so much time on this!</p>",
        "id": 264164460,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638974694
    },
    {
        "content": "<p>Both <code>Intel (VMX) Virtualization Technology</code> and <code>VT-d</code> are enabled in the BIOS</p>",
        "id": 264165530,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638975152
    },
    {
        "content": "<p>Not sure if this is helpful, but I tracked down creating the crash file caused by core dumped... </p>\n<div class=\"codehilite\"><pre><span></span><code>~/projects/exploration/roc/1206/crash/unpack 0 (14.5ms)\n$ gdb `cat ExecutablePath` CoreDump\nGNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2\nCopyright (C) 2020 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType &quot;show copying&quot; and &quot;show warranty&quot; for details.\nThis GDB was configured as &quot;x86_64-linux-gnu&quot;.\nType &quot;show configuration&quot; for configuration details.\nFor bug reporting instructions, please see:\n&lt;http://www.gnu.org/software/gdb/bugs/&gt;.\nFind the GDB manual and other documentation resources online at:\n    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.\n\nFor help, type &quot;help&quot;.\nType &quot;apropos word&quot; to search for commands related to &quot;word&quot;...\nReading symbols from /home/jason/projects/exploration/roc/1206/roc...\n[New LWP 41324]\n\nwarning: Could not load shared library symbols for /tmp/.tmpSsVt9n/app.so.1.0.\nDo you need &quot;set solib-search-path&quot; or &quot;set sysroot&quot;?\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.\nCore was generated by `./roc repl&#39;.\nProgram terminated with signal SIGILL, Illegal instruction.\n#0  0x00007f5f6d48a0e7 in ?? ()\n(gdb) bt\n#0  0x00007f5f6d48a0e7 in ?? ()\n#1  0x00000316924198d0 in ?? ()\n#2  0x00007ffe30476b90 in ?? ()\n#3  0x0000562541a0c2e8 in ?? ()\n#4  0x0000000000000000 in ?? ()\n</code></pre></div>\n<p>I used the commands on this answer for the snippet above: <a href=\"https://askubuntu.com/a/947532\">https://askubuntu.com/a/947532</a></p>\n<p><a href=\"/user_uploads/22008/XUoEMkTuvGA_LaCMKP7ftqC3/_home_jason_projects_exploration_roc_1206_roc.1000.crash\">_home_jason_projects_exploration_roc_1206_roc.1000.crash</a></p>",
        "id": 264170619,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638977082
    },
    {
        "content": "<blockquote>\n<p>And btw, you're amazing for putting in so much time on this!</p>\n</blockquote>\n<p>Happy to help :)</p>\n<p>For system information I am looking for something <a href=\"https://www.startpage.com/av/proxy-image?piurl=https%3A%2F%2Fwww.howto-connect.com%2Fwp-content%2Fuploads%2FSystem-Information.png&amp;sp=1638978742Tcd63f468ef7586a226bf619761915a908cbe4f8511456dfc486d790e7eef58a2\">like this</a></p>",
        "id": 264175786,
        "sender_full_name": "Anton",
        "timestamp": 1638978933
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/f9jcNK7Wc2z2YP_w8CVzjA4e/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/f9jcNK7Wc2z2YP_w8CVzjA4e/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/f9jcNK7Wc2z2YP_w8CVzjA4e/image.png\"></a></div>",
        "id": 264186692,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638983234
    },
    {
        "content": "<p>Yes, that's the one. I'll compare with my settings.</p>",
        "id": 264186940,
        "sender_full_name": "Anton",
        "timestamp": 1638983334
    },
    {
        "content": "<p>I have \"Secure Boot State\" set to off (for linux drivers), I think this also disables Kernel DMA protection and virtualization-based security.<br>\nvirtualization-based security might cause the limited flags inside VirtualBox.</p>\n<ul>\n<li>If you are comfortable with these security mechanisms being disabled you can turn off secure boot through the bios.</li>\n<li>If not, I'd recommend using Ubuntu through the Windows Subsystem for Linux (WSL).</li>\n</ul>",
        "id": 264202619,
        "sender_full_name": "Anton",
        "timestamp": 1638989720
    },
    {
        "content": "<p>That's interesting... I'll play with that setting on the host machine later tonight.</p>",
        "id": 264206385,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638991270
    },
    {
        "content": "<p>I didn't see anything like Secure Boot in the BIOS to disable, so I'll just look into setting up a Linux install that has direct hardware access. It'll be a few days though, as I'm travelling for a conference. I'll shoot an update as soon as I have one</p>",
        "id": 264308397,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1639059963
    }
]