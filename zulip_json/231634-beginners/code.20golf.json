[
    {
        "content": "<p>Can anyone think of a shorter way to transform <code>\"ping\"</code> to <code>\"pong\"</code>?</p>\n<div class=\"codehilite\"><pre><span></span><code>» &quot;ping&quot; |&gt; Str.toUtf8 |&gt; List.mapWithIndex (\\i, c -&gt; if i == 1 then (List.get (Str.toUtf8 &quot;o&quot;) 0 |&gt; Result.withDefault 0) else c) |&gt; Str.fromUtf8 |&gt; Result.withDefault &quot;&quot;\n\n&quot;pong&quot; : Str\n\n» &quot;ping&quot; |&gt; Str.toUtf8 |&gt; List.set 1 (List.get (Str.toUtf8 &quot;o&quot;) 0 |&gt; Result.withDefault 0) |&gt; Str.fromUtf8 |&gt; Result.withDefault &quot;&quot;\n\n&quot;pong&quot; : Str\n\n»\n</code></pre></div>",
        "id": 269000707,
        "sender_full_name": "jan kili",
        "timestamp": 1642918832
    },
    {
        "content": "<p>or a cleaner/faster/cooler way :)</p>",
        "id": 269000747,
        "sender_full_name": "jan kili",
        "timestamp": 1642918895
    },
    {
        "content": "<p>Whoops, I was so distracted by the original \"arbitrary string\" context (unexplained) that this question arose from... that I neglected the obvious-in-hindsight solution:</p>\n<div class=\"codehilite\"><pre><span></span><code>» &quot;ping&quot; |&gt; Str.split &quot;i&quot; |&gt; Str.joinWith &quot;o&quot;\n\n&quot;pong&quot; : Str\n\n»\n</code></pre></div>",
        "id": 269002569,
        "sender_full_name": "jan kili",
        "timestamp": 1642922090
    },
    {
        "content": "<p>we should also really have <code>Str.replaceAll : Str, Str, Str -&gt; Str</code> (and also <code>Str.replaceFirst</code> and <code>Str.replaceLast</code>) so you can do <code>\"ping\" |&gt; Str.replaceAll \"i\" \"o\"</code></p>",
        "id": 269017345,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1642944064
    }
]