[
    {
        "content": "<p>Is there a minimal example project which exports a Wasm function from Roc to be used by JavaScript on a web page? I'm completely new to Roc; I have been reading the tutorial so far.</p>\n<p>I found &lt;<a href=\"https://github.com/lukewilliamboswell/roc-wasm4\">https://github.com/lukewilliamboswell/roc-wasm4</a>&gt; but I'm a bit lost with it. I would benefit from a simpler demo project which has a minimal number of files, something similar to &lt;<a href=\"https://www.roc-lang.org/examples/GoPlatform/README\">https://www.roc-lang.org/examples/GoPlatform/README</a>&gt;.</p>\n<p>I will also need to figure out how to transfer ArrayBuffers from and to JavaScript eventually.</p>",
        "id": 532487011,
        "sender_full_name": "ion",
        "timestamp": 1754167905
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> do you have a demo wasm project?</p>",
        "id": 532487759,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1754168584
    },
    {
        "content": "<p>TBH it's not easy to do with the current Roc compiler implementation in rust. There's some really hairy parts. My zig template is probably the simplest and closest to what you're looking for, <a href=\"https://github.com/lukewilliamboswell/roc-platform-template-zig\">https://github.com/lukewilliamboswell/roc-platform-template-zig</a>. It's not designed for the browser though.</p>\n<p>The new Zig compiler will be much nicer for this...  and we're very very close now to building platforms again. I'm planning to build a minimal WASM browser platform as the first or second thing out the gate. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> </p>\n<p>So if you can wait some weeks/months then that will be a much nicer experience.</p>",
        "id": 532487797,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1754168624
    },
    {
        "content": "<p>I've got a WASI thing, but my pure WASM platforms are super hacky.</p>",
        "id": 532487853,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1754168665
    },
    {
        "content": "<p>Oh, I should mention it's actually doable if you're ok to let Zig do the final linking etc. If you use the roc cli to build the app into an object first, and then use zig to do the linking, it's really easy to do today. But I don't have anything simpler than roc-wasm4 sorry.</p>",
        "id": 532487943,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1754168747
    },
    {
        "content": "<p>Alright, I'm in no hurry. I might prototype the algorithm in slow TypeScript and port it into Roc at a later time. Porting an existing implementation might also end up being an easier way to learn the language. Thanks for the info!</p>",
        "id": 532488631,
        "sender_full_name": "ion",
        "timestamp": 1754169396
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"943661\">@ion</span> Ion, </p>\n<p>Working through the same WASM examples from Luke and I also struggle a bit </p>\n<p><a href=\"https://github.com/lukewilliamboswell/roc-wasm4\">https://github.com/lukewilliamboswell/roc-wasm4</a> </p>\n<p>But I did see the following and it is great document </p>\n<p><a href=\"https://dusty.phillips.codes/2024/08/11/build-a-wasm-compiler-in-roc-part-1-introduction/\">https://dusty.phillips.codes/2024/08/11/build-a-wasm-compiler-in-roc-part-1-introduction/</a> </p>\n<p>Best regards </p>\n<p>Gottfried</p>",
        "id": 532510691,
        "sender_full_name": "Gottfried Zojer",
        "timestamp": 1754190528
    }
]