[
    {
        "content": "<p>I noticed that <code>Path</code> doesn't implement <code>Eq</code>, but the <code>isEq</code> function is commented out.  This kind of thing would be helpful for testing, but it looks like this choice has been made on purpose. I'm just curious of the reasoning here, as I couldn't find out why</p>",
        "id": 441808661,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1717190501
    },
    {
        "content": "<p>I'm not aware of any reason. Maybe it's just because they need to be canonicalised somehow so we can compare e.g. from OsStr or from a user provided Str. I don't see why we couldn't just auto derive it.</p>\n<p>This is probably a <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> question I think.</p>",
        "id": 441823292,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1717196657
    },
    {
        "content": "<p>Yeah, would be great to enable eq, but iirc, you have to be careful. generic conanicalization of paths is tricky to get right. It might even require os calls to be correct (due to symlinks and the like). As such, it may not be possible in pure roc.</p>",
        "id": 441829633,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1717200072
    },
    {
        "content": "<p>Yeah, I found the commit/PR where that got added. It looks like it was never in the codebase uncommented. It uses <code>Str.isEqUtf8</code> which ins't currently in the builtins, so that'd be my guess as to why its commented out</p>",
        "id": 441849356,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1717212543
    },
    {
        "content": "<p>Is a path a string or a list U8?</p>",
        "id": 441850153,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1717212997
    },
    {
        "content": "<p>It looks like both. One variant is <code>Str</code>, while the other two are bytes.</p>\n<p>Also, for connivence, heres a link to the related code</p>\n<p><a href=\"https://github.com/roc-lang/basic-webserver/commit/9e91ea20297b65bca0f0d1b760cac4cb591c5818#diff-410d2c23ece098b0549b91ce436debc8c082198dd95dd8fa5fa2dc3ceab3e561R125-R141\">https://github.com/roc-lang/basic-webserver/commit/9e91ea20297b65bca0f0d1b760cac4cb591c5818#diff-410d2c23ece098b0549b91ce436debc8c082198dd95dd8fa5fa2dc3ceab3e561R125-R141</a></p>",
        "id": 441942221,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1717265619
    },
    {
        "content": "<p>Personally, I would suggest that for now you simply add a naiveEq method or something similar. Then make it just do <code>Str.toUtf8</code> for the strings. Then use <code>==</code> on the underlying bytes.</p>",
        "id": 441945692,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1717267295
    },
    {
        "content": "<p>It can obviously be expanded in various ways, but I think it is a good starter.</p>",
        "id": 441945738,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1717267318
    }
]