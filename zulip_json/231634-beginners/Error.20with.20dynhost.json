[
    {
        "content": "<p>I'm on Linux trying to build/run some of the examples but they keep throwing an error for unable to find \"dynhost\":</p>\n<div class=\"codehilite\"><pre><span></span><code>~/External/basic-cli$ roc build.roc\nðŸ”¨ Rebuilding platform...\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nfailed to open file &quot;platform/dynhost&quot;: No such file or directory (os error 2)\nLocation: crates/linker/src/lib.rs:552:29\n</code></pre></div>",
        "id": 472098636,
        "sender_full_name": "Jared Cone",
        "timestamp": 1727049820
    },
    {
        "content": "<p>Which version of Roc are you using?</p>",
        "id": 472100012,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727050327
    },
    {
        "content": "<p>latest nightly, <code>roc nightly pre-release, built from commit 3215a8f on Mi 18 Sep 2024 09:01:58 UTC</code></p>",
        "id": 472100456,
        "sender_full_name": "Jared Cone",
        "timestamp": 1727050654
    },
    {
        "content": "<p>Okay, I've reproduced</p>",
        "id": 472100919,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727050823
    },
    {
        "content": "<p>I think I understand the issue. Grabbing some links</p>",
        "id": 472101437,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727050942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> I'm actually not quite sure what's happening here. Could you give some context?</p>",
        "id": 472102136,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727051105
    },
    {
        "content": "<p>Okay, I got it. We forgot to update the import in the build script to use a prebuilt version of the CLI: <a href=\"https://github.com/roc-lang/basic-cli/blob/0ac2f5ccb16c4ba503074511bc247f18440b565f/build.roc#L2\">https://github.com/roc-lang/basic-cli/blob/0ac2f5ccb16c4ba503074511bc247f18440b565f/build.roc#L2</a></p>",
        "id": 472102702,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727051240
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"481285\">@Jared Cone</span> please replace the line I linked above with the latest release of basic-cli: <a href=\"https://github.com/roc-lang/basic-cli/releases/tag/0.15.0\">https://github.com/roc-lang/basic-cli/releases/tag/0.15.0</a></p>",
        "id": 472102838,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727051292
    },
    {
        "content": "<p>And then the instructions in the readme should work!</p>",
        "id": 472102857,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727051301
    },
    {
        "content": "<p>I'll make a PR to fix this</p>",
        "id": 472102866,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727051306
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/249\">https://github.com/roc-lang/basic-cli/pull/249</a></p>",
        "id": 472103381,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727051561
    },
    {
        "content": "<p>Would appreciate an approval from any onlooking maintainer!</p>",
        "id": 472103436,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727051590
    },
    {
        "content": "<p>yep fixed, thanks!</p>",
        "id": 472103648,
        "sender_full_name": "Jared Cone",
        "timestamp": 1727051696
    },
    {
        "content": "<p>do all the examples need to be updated to use the downloaded platform too?</p>",
        "id": 472104077,
        "sender_full_name": "Jared Cone",
        "timestamp": 1727051888
    },
    {
        "content": "<p>Within <code>basic-cli</code>, I don't believe so.</p>",
        "id": 472105626,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727053128
    },
    {
        "content": "<p>We try to strike a balance for now between \"relative path platforms are lower maintenance\" and \"downloaded platforms are robust\"</p>",
        "id": 472105784,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727053219
    },
    {
        "content": "<p>So in the future once package management is more deeply investigated, maybe that'll happen</p>",
        "id": 472105825,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727053247
    },
    {
        "content": "<p>But for now, it's staying as-is</p>",
        "id": 472105828,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1727053254
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"481285\">Jared Cone</span> <a href=\"#narrow/stream/231634-beginners/topic/Error.20with.20dynhost/near/472104077\">said</a>:</p>\n<blockquote>\n<p>do all the examples need to be updated to use the downloaded platform too?</p>\n</blockquote>\n<p>I've been thinking maybe we should rename these to tests or something. They're kind of serving two purposes at the moment. Maybe it's better to direct people to the examples repo instead, and add a label over there like basic-cli to it's easy to see which examples are using the platform. </p>\n<p>We've got a new release process we will hopefully switch over to soon, and the idea is that roc main branch can move forwards independently of the platforms. But users of roc won't be affected as all the supported platforms will be kept in sync by using a recommended or latest release. So the URL version of examples will work, but we haven't really discussed the examples folder in the platforms<br>\n I think they should keep referring to the local path because we need them for CI and testing locally.</p>",
        "id": 472112285,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727057995
    },
    {
        "content": "<p>I'm trying to get a C host up and running using <a href=\"https://github.com/lukewilliamboswell/roc-platform-template-c\">https://github.com/lukewilliamboswell/roc-platform-template-c</a> as a starting point. I've got <code>roc build.roc</code> working and it seems to be generating a <code>platform/linux-x64.a</code> file. However when I run <code>roc app.roc</code> it throws the same error as above:</p>\n<div class=\"codehilite\"><pre><span></span><code>roc app.roc\nðŸ”¨ Rebuilding platform...\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nfailed to open file &quot;platform/dynhost&quot;: No such file or directory (os error 2)\nLocation: crates/linker/src/lib.rs:552:29\n</code></pre></div>",
        "id": 472131485,
        "sender_full_name": "Jared Cone",
        "timestamp": 1727069949
    },
    {
        "content": "<p>Try to run your application with \"--linker legacy\".</p>\n<p>I think the <code>roc-platform-template-c</code> only creates the files for the legacy linker. But on linux, the surgical linker is used as default. To fix this, would need also to create the dynhost file and the other files needed for the surgical linker.</p>",
        "id": 472135824,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1727071679
    },
    {
        "content": "<p>This are the steps to do this:</p>\n<ol>\n<li>First create a simple example app, that uses your platform.</li>\n<li>You create a <code>libapp.so</code> by calling <code>roc build main.roc --lib --output libapp.so</code> on this example.</li>\n<li>Then, you create <code>dynhost</code> by compiling your host (c-code)  linked to the <code>libapp.so</code></li>\n<li>You move the <code>dynhost</code> inside your platform, next to the <code>main.roc</code>-file inside the platform.</li>\n<li>As a last step, you call <code>roc preprocess-host PATH/TO/dynhost PATH/TO/PLATFORM/main.roc PATH/TO/libapp.so</code>, which creates to more files inside the platform.</li>\n</ol>",
        "id": 472137058,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1727072187
    },
    {
        "content": "<p>We dont have a std lib implementation ir a working glue spec for C yet, so things can get a bit challenging for more complicated platforms. Definitely something I am sure will exist in time, it's just needs some elbow grease to get there.. and the focus has been on rust mostly at this stage as things are still in flux on the platform development side of things.</p>",
        "id": 472138820,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727072779
    },
    {
        "content": "<p>Regarding building the prebuilt binaries for the legacy and surgical linkers, I made <a href=\"https://github.com/roc-lang/basic-cli/blob/main/basic-cli-build-steps.png\">this diagram for basic-cli</a>. It was on the README but we must have removed it at some point. That illustrates the process.</p>\n<div class=\"message_inline_image\"><a href=\"https://github.com/roc-lang/basic-cli/blob/main/basic-cli-build-steps.png\" title=\"this diagram for basic-cli\"><img src=\"https://uploads.zulipusercontent.net/046409e258551c0a14ac7af9015189e6df9080c5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f726f632d6c616e672f62617369632d636c692f6d61696e2f62617369632d636c692d6275696c642d73746570732e706e67\"></a></div>",
        "id": 472144048,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727074700
    },
    {
        "content": "<p>Oh, I guess we removed it because we had to change the layout of crates slightly to fix a segfault.</p>",
        "id": 472144293,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727074790
    },
    {
        "content": "<p>Yeah, it's linked in the crates README. The reasoning was that most people viewing the main README do not need details on the build process.</p>",
        "id": 472144562,
        "sender_full_name": "Anton",
        "timestamp": 1727074861
    },
    {
        "content": "<p>And in build.roc too</p>",
        "id": 472144623,
        "sender_full_name": "Anton",
        "timestamp": 1727074886
    },
    {
        "content": "<p>Oh nice, I hadn't noticed the crates README</p>",
        "id": 472144682,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1727074906
    },
    {
        "content": "<p>Ah thanks, I guess I'd better stick with rust for that std lib :)</p>",
        "id": 472262785,
        "sender_full_name": "Jared Cone",
        "timestamp": 1727105054
    }
]