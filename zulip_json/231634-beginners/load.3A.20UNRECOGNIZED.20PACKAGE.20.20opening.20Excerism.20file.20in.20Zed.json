[
    {
        "content": "<p>I'm getting an error (from Roc language server I guess) in Zed when opening the file RestApi.roc on <a href=\"https://exercism.org/tracks/roc/exercises/rest-api\">https://exercism.org/tracks/roc/exercises/rest-api</a></p>\n<p>The error shows as a red squiggly line under the first character m in the module keyword at the top of the file:</p>\n<div class=\"codehilite\"><pre><span></span><code>load: UNRECOGNIZED PACKAGE\n\nThis module is trying to import from `json`:\n\n3│  import json.Json\n           ^^^^^^^^^\n\nA lowercase name indicates a package shorthand, but I don&#39;t\nknow which packages are available.\n\nWhen checking a module directly, I look for a `main.roc` app\nor package to resolve shorthands from.\n\nYou can create it, or specify an existing one with the\n`--main` flag.\n</code></pre></div>\n<p>Any ideas how to work around this?</p>",
        "id": 475367369,
        "sender_full_name": "Niklas Konstenius",
        "timestamp": 1728326916
    },
    {
        "content": "<p>Do the tests work properly if you run them? I’m not sure if there is a way to get around this error from the LSP right now, but it suspect that everything else should still work normally.</p>",
        "id": 475375204,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1728328870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"734214\">@Aurélien Geron</span> Maybe we should rename all of the test files to main.roc so this issue doesn’t arise when solving exercises locally. Wdyt?</p>",
        "id": 475375329,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1728328912
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"611722\">Isaac Van Doren</span> <a href=\"#narrow/stream/231634-beginners/topic/load.3A.20UNRECOGNIZED.20PACKAGE.20.20opening.20Excerism.20file.20in.20Zed/near/475375204\">said</a>:</p>\n<blockquote>\n<p>Do the tests work properly if you run them? I’m not sure if there is a way to get around this error from the LSP right now, but it suspect that everything else should still work normally.</p>\n</blockquote>\n<p>Yes the tests works fine when running with <code>exercism test</code>.  The problem is that the error in Zed prevents me from getting useful info from the LSP like inferred types and compiler errors.</p>",
        "id": 475386988,
        "sender_full_name": "Niklas Konstenius",
        "timestamp": 1728332190
    },
    {
        "content": "<p>As a workaround you could rename the test file to main.roc and it should work. You may need to restart the lsp and you’ll need to run the tests using roc test instead.</p>",
        "id": 475436014,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1728350660
    },
    {
        "content": "<p>Mmh, the problem with renaming the test files is that all existing users will get a warning telling them that all the exercises they have done are outdated and they need to update them. They might even get one notification per exercise. So if we do this we need to synchronize with the Exercism team to ensure that this doesn't happen. It might be simpler to fix the LSP issue, IMHO.</p>",
        "id": 475440698,
        "sender_full_name": "Aurélien Geron",
        "timestamp": 1728353374
    },
    {
        "content": "<p>Yeah that would not be good. I’m not sure about the best way to fix the LSP issue since it can’t be passed the —main flag. </p>\n<p><span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span> do you have any ideas/background with this? I think I remember you working on the —main flag.</p>",
        "id": 475454447,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1728357524
    },
    {
        "content": "<p>Yeah, unfortunately, we don’t have a way to specify a different main file when using the language server. We used to hang in this case, so that was an improvement, but we probably still need a way to do that.</p>",
        "id": 475505504,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1728375398
    },
    {
        "content": "<p>I don’t have the bandwidth to do it now, but it should be pretty straightforward to add an Ls setting for this. I don’t know if that’d be the best design, though.</p>",
        "id": 475505780,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1728375506
    },
    {
        "content": "<p>In the meantime, you could have a dummy <code>main.roc</code> file with all the dependencies needed.</p>",
        "id": 475505924,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1728375566
    },
    {
        "content": "<p>Yeah it seems like adding a setting would work but would be a little bit annoying to use</p>",
        "id": 475545557,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1728389064
    },
    {
        "content": "<p>Thanks for the feedback. Tried the workaround by copying the test-file as main.roc but unfortunately was hit by the language server panicking instead:</p>\n<div class=\"codehilite\"><pre><span></span><code>Roc language server initialized.\nstderr: thread &#39;tokio-runtime-worker&#39; panicked at crates/language_server/src/analysis.rs:301:71:\nstderr: called `Option::unwrap()` on a `None` value\nstderr: note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>This was on my Linux machine, I'll try the workaround on my MacBook tonight and see if it works there.</p>",
        "id": 475795329,
        "sender_full_name": "Niklas Konstenius",
        "timestamp": 1728463252
    },
    {
        "content": "<p>I just tried the rest-api files and everything is working for me on Ubuntu 22.04.  Can you share your RestApi.roc file?</p>",
        "id": 475826643,
        "sender_full_name": "Anton",
        "timestamp": 1728471331
    },
    {
        "content": "<p>Sure, just did a fresh download of the files with:</p>\n<div class=\"codehilite\"><pre><span></span><code>exercism download --track roc --exercise=rest-api --force\ncp rest-api-test.roc main.roc\n</code></pre></div>\n<p>The contents of RestApi.roc is:</p>\n<div class=\"codehilite\"><pre><span></span><code>module [get, post]\n\nimport json.Json\n\nUser : {\n    name : Str,\n    owes : Dict Str F64,\n    owedBy : Dict Str F64,\n    balance : F64,\n}\n\nDatabase : { users : List User }\n\nget : Database, { url : Str, payload ? Str } -&gt; Result Str _\nget = \\database, { url, payload ? &quot;&quot; } -&gt;\n    crash &quot;Please implement the &#39;get&#39; function&quot;\n\npost : Database, { url : Str, payload ? Str } -&gt; Result Str _\npost = \\database, { url, payload ? &quot;&quot; } -&gt;\n    crash &quot;Please implement the &#39;post&#39; function&quot;\n</code></pre></div>\n<p>The  roc compiler and lsp on my path is from roc_nightly-linux_x86_64-2024-10-07-6cb2501</p>\n<div class=\"codehilite\"><pre><span></span><code>md5sum `which roc`\n7d299380f5270497917f388af74292d3  /home/xxxx/bin/roc\n\nmd5sum `which roc_language_server`\n32a158fc8ee775c874f535a41ed3e21e  /home/xxxx/bin/roc_language_server\n</code></pre></div>\n<p>I'm using Ubuntu 22.0.4:</p>\n<div class=\"codehilite\"><pre><span></span><code>cat /etc/lsb-release\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=22.04\nDISTRIB_CODENAME=jammy\nDISTRIB_DESCRIPTION=&quot;Ubuntu 22.04.5 LTS&quot;\n</code></pre></div>\n<p>When I open <code>RestApi.roc</code>in Zed  (0.155.2) I get the following in LSP Logs:</p>\n<div class=\"codehilite\"><pre><span></span><code>Roc language server initialized.\nstderr: thread &#39;tokio-runtime-worker&#39; panicked at crates/language_server/src/analysis.rs:301:71:\nstderr: called `Option::unwrap()` on a `None` value\nstderr: note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nstderr: thread &#39;tokio-runtime-worker&#39; panicked at crates/language_server/src/analysis.rs:301:71:\nstderr: called `Option::unwrap()` on a `None` value\n</code></pre></div>",
        "id": 475879705,
        "sender_full_name": "Niklas Konstenius",
        "timestamp": 1728484188
    },
    {
        "content": "<p>If I then remove <code>main.roc</code> (the copy of rest-api-test.roc) and restart Zed and open <code>RestApi.roc</code> no errors are shown in the LSP Logs:</p>\n<div class=\"codehilite\"><pre><span></span><code>Roc language server initialized.\n</code></pre></div>\n<p>But the original error is shown on <code>module</code> keyword again:</p>\n<div class=\"codehilite\"><pre><span></span><code>load: UNRECOGNIZED PACKAGE\n\nThis module is trying to import from `json`:\n\n3│  import json.Json\n           ^^^^^^^^^\n\nA lowercase name indicates a package shorthand, but I don&#39;t\nknow which packages are available.\n\nWhen checking a module directly, I look for a `main.roc` app\nor package to resolve shorthands from.\n\nYou can create it, or specify an existing one with the\n`--main` flag.\n</code></pre></div>",
        "id": 475884607,
        "sender_full_name": "Niklas Konstenius",
        "timestamp": 1728485167
    },
    {
        "content": "<p>Thanks for all the data <span class=\"user-mention\" data-user-id=\"544552\">@Niklas Konstenius</span>, I was able to reproduce it now and will create an issue on the roc repo.<br>\n<code>roc check</code> and <code>roc dev</code> do look to be working fine, so you should be able to continue the exercise, unfortunately without help from the language server.</p>",
        "id": 475904043,
        "sender_full_name": "Anton",
        "timestamp": 1728488976
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/7153\">https://github.com/roc-lang/roc/issues/7153</a></p>",
        "id": 475914338,
        "sender_full_name": "Anton",
        "timestamp": 1728491935
    },
    {
        "content": "<p>Thanks for the help <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span>. I'll be watching the progress in the GH-issue.</p>",
        "id": 475915765,
        "sender_full_name": "Niklas Konstenius",
        "timestamp": 1728492513
    }
]