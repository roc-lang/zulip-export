[
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Very minor AoC day 4 part 1 spoiler</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>cardPoints : Card -&gt; Nat\ncardPoints = \\card -&gt;\n    List.walk card.myNums 0 \\points, myNum -&gt;\n        when (points, List.contains card.winNums myNum) is\n            (0, Bool.true) -&gt; 1\n            (_, Bool.true) -&gt; points * 2\n            (_, _) -&gt; points\n</code></pre></div>\n</div></div>\n<p>The roc compiler gives me a syntax error , and tells me that \"This pattern is malformed\", and points at the two <code>Bool.true</code> things. <br>\nWhat am I doing wrong?</p>",
        "id": 405809113,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701691256
    },
    {
        "content": "<p>Maybe related, but I originally tried making the third pattern <code>(_, Bool.false)</code>, but if I do that, Roc tells me that I'm missing the pattern <code>(_, _)</code>. That seems weird? Surely the only possible values of <code>Bool</code> is <code>Bool.true</code> and <code>Bool.false</code>?</p>",
        "id": 405809527,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701691369
    },
    {
        "content": "<p>Maybe I'm just not allowed to pattern match on bools in general? Is that a design decision? I <em>guess</em> I could nest some <code>if</code> expressions instead?</p>",
        "id": 405809666,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701691420
    },
    {
        "content": "<p>Anyway, help and advice is much appreciated here. I really feel like there's something about Bools that I'm not understanding fully.</p>",
        "id": 405809807,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701691462
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"669074\">Asbjørn Olling</span> <a href=\"#narrow/stream/231634-beginners/topic/Why.20is.20this.20pattern.20malformed.3F/near/405809527\">said</a>:</p>\n<blockquote>\n<p>Maybe related, but I originally tried making the third pattern <code>(_, Bool.false)</code>, but if I do that, Roc tells me that I'm missing the pattern <code>(_, _)</code>. That seems weird? Surely the only possible values of <code>Bool</code> is <code>Bool.true</code> and <code>Bool.false</code>?</p>\n</blockquote>\n<p>I think this is a <a href=\"https://github.com/roc-lang/roc/issues/5530\">known issue</a>.</p>",
        "id": 405815439,
        "sender_full_name": "Anton",
        "timestamp": 1701693654
    },
    {
        "content": "<p>Coolcool. Good to know. That at least explains why I could have <code>(_, Bool.false)</code> in my third pattern.<br>\nI'm still confused by why the first two patterns give a syntax error, though?</p>",
        "id": 405815927,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701693856
    },
    {
        "content": "<p>I'll take a look</p>",
        "id": 405816044,
        "sender_full_name": "Anton",
        "timestamp": 1701693910
    },
    {
        "content": "<blockquote>\n<p>Maybe I'm just not allowed to pattern match on bools in general?</p>\n</blockquote>\n<p>I indeed think this is the case. I'll check if we've discussed this before...</p>",
        "id": 405816590,
        "sender_full_name": "Anton",
        "timestamp": 1701694099
    },
    {
        "content": "<p>We've had several lengthy discussions about it, we're <a href=\"#narrow/stream/304641-ideas/topic/opaque.20bools/near/405817675\">considering a solution now</a>.</p>",
        "id": 405818248,
        "sender_full_name": "Anton",
        "timestamp": 1701694679
    },
    {
        "content": "<p>I would recommend going with an <code>if</code> for now</p>",
        "id": 405818555,
        "sender_full_name": "Anton",
        "timestamp": 1701694759
    },
    {
        "content": "<p>I aleady did ;)<br>\nWorked around it with an if, and that seems to work fine.</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>cardPoints : Card -&gt; Nat\ncardPoints = \\card -&gt;\n    List.walk card.myNums 0 \\points, myNum -&gt;\n        isWin = List.contains card.winNums myNum\n        if isWin &amp;&amp; points == 0 then\n            1\n        else if isWin then\n            points * 2\n        else\n            points\n</code></pre></div>",
        "id": 405818799,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701694823
    },
    {
        "content": "<p>and now I understand that I wasn't misunderstanding pattern match syntax - it's just bools that are a bit funky for now.</p>",
        "id": 405819171,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701694936
    },
    {
        "content": "<p>it still feels a bit weird to me that bools aren't just tags like everything else (even Result is). It seems like if I just mapped <code>Bool.true</code> and <code>Bool.false</code> to tags <code>True</code> and <code>False</code>, all the pattern matching stuff would work.</p>",
        "id": 405819389,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701695002
    },
    {
        "content": "<p>I assume there's a good reason for it, that I just don't undestand yet - given that the tags approach would be the most obvious (right?)<br>\nSomething performance related maybe?</p>",
        "id": 405819561,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701695049
    },
    {
        "content": "<p>Oh I found the good stuff.<br>\n<a href=\"https://docs.google.com/document/d/1a51n7eIEbPjCWnGaL-pWbZBsRfi55GVQwIdPQTUu49Q/edit#heading=h.kikaz4s9uvzo\">https://docs.google.com/document/d/1a51n7eIEbPjCWnGaL-pWbZBsRfi55GVQwIdPQTUu49Q/edit#heading=h.kikaz4s9uvzo</a></p>\n<p>I'll go get smart now</p>",
        "id": 405820102,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701695194
    },
    {
        "content": "<p>Thanks for the help, <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> !</p>",
        "id": 405820139,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701695203
    }
]