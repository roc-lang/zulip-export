[
    {
        "content": "<p>I’m looking at Roc every now and then while working on some projects and would like to know how the possibilities are of translating types from one language to the other. Looks to me like going from Roc to Elm would be hard because of the tagged unions but taking Elm types should be easy to transpile into Roc?</p>",
        "id": 279451262,
        "sender_full_name": "Oliver Schöning",
        "timestamp": 1650393578
    },
    {
        "content": "<p>actually I think numbers would be the bigger problem - closed tag unions in Roc should be straightforward to translate to/from Elm custom types, and if you had any open tag unions, you could presumably close them before translating them to Elm</p>",
        "id": 279461263,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1650398504
    },
    {
        "content": "<p>but Roc has a bunch of different number types, whereas Elm has <code>Int</code> and <code>Float</code></p>",
        "id": 279461403,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1650398559
    },
    {
        "content": "<p>also Elm's <code>Int</code> is technically an <code>F64</code> at runtime because it compiles to JavaScript and that's how JS works, so it's possible to get an <code>Int</code> from Elm that's <code>Infinity</code> or <code>NaN</code></p>",
        "id": 279461527,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1650398640
    },
    {
        "content": "<p>Ah, thanks <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span></p>",
        "id": 279469877,
        "sender_full_name": "Oliver Schöning",
        "timestamp": 1650403128
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"431466\">@Oliver Schöning</span> have been keeping an equivalencies doc here: <a href=\"https://fptransforms.netlify.app/transformations.html\">https://fptransforms.netlify.app/transformations.html</a> might find it helpful. Unsure if Roc is further changed since last updates by Richard tho...</p>",
        "id": 286478605,
        "sender_full_name": "Mario",
        "timestamp": 1655466807
    },
    {
        "content": "<p>tuples in Roc are now WIP <a href=\"https://github.com/rtfeldman/roc/issues/2935\">https://github.com/rtfeldman/roc/issues/2935</a></p>",
        "id": 286480660,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655467976
    },
    {
        "content": "<p>the formatting also changed a bit, e.g.</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">Location</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nv\">line</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">I32</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nv\">column</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">I32</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>...is now formatted as:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">Location</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nv\">line</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">I32</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nv\">column</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">I32</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 286481074,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655468186
    },
    {
        "content": "<p>there's also new syntax for Opaque Types and Abilities, but I guess there isn't a section on the equivalents of those in Elm or Haskell in there <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 286481178,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655468245
    },
    {
        "content": "<p><code>newtype</code> in haskell for opaque</p>",
        "id": 286481280,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1655468298
    },
    {
        "content": "<p>though newtype is subtle</p>",
        "id": 286481305,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1655468315
    },
    {
        "content": "<p>comparing type classes with abilities is trickier</p>",
        "id": 286481321,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1655468324
    },
    {
        "content": "<p>Ooh! Thanks for linking to the guide. That is super helpful!</p>",
        "id": 286481587,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655468506
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/231634-beginners/topic/Elm.20Roc.20type.20comparability.3F/near/286481321\">said</a>:</p>\n<blockquote>\n<p>comparing type classes with abilities is trickier</p>\n</blockquote>\n<p>Is there a resource with more information on how abilities work somewhere?</p>",
        "id": 286488186,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655472092
    },
    {
        "content": "<p>Richard has a proposal document for abilities here: <a href=\"https://docs.google.com/document/d/1kUh53p1Du3fWP_jZp-sdqwb5C9DuS43YJwXHg1NzETY/edit\">https://docs.google.com/document/d/1kUh53p1Du3fWP_jZp-sdqwb5C9DuS43YJwXHg1NzETY/edit</a></p>\n<p>The current implementation is mostly the same. It's the most recent feature so a lot of things are still TBD.</p>",
        "id": 286489385,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1655472640
    },
    {
        "content": "<p>If anyone wishes to update anything that's out of date, PRs welcome! <a href=\"https://github.com/supermario/fptransforms\">https://github.com/supermario/fptransforms</a></p>",
        "id": 286514009,
        "sender_full_name": "Mario",
        "timestamp": 1655483914
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> I'd be fine with adding a section on opaque types / abilities with \"-- No equivalent\" entries in the Elm/Haskell columns :D</p>",
        "id": 286514140,
        "sender_full_name": "Mario",
        "timestamp": 1655483989
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> want to do the honors? The whole Abilities implementation is all thanks to you!</p>",
        "id": 286518042,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655486021
    },
    {
        "content": "<p>absolutely. Mario, i’ll send you a patch in the next couple days.</p>",
        "id": 286525961,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1655490203
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> (...tuples are coming?) <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 286849935,
        "sender_full_name": "jan kili",
        "timestamp": 1655769991
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/hxFTLTbXId623XJmJNIVgXaE/Screen-Shot-2022-06-20-at-8.21.33-PM.png\">tuples</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/hxFTLTbXId623XJmJNIVgXaE/Screen-Shot-2022-06-20-at-8.21.33-PM.png\" title=\"tuples\"><img src=\"/user_uploads/22008/hxFTLTbXId623XJmJNIVgXaE/Screen-Shot-2022-06-20-at-8.21.33-PM.png\"></a></div>",
        "id": 286850717,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655770902
    },
    {
        "content": "<p><a href=\"https://github.com/rtfeldman/roc/issues/2935\">https://github.com/rtfeldman/roc/issues/2935</a></p>",
        "id": 286850772,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655770927
    },
    {
        "content": "<p><span aria-label=\"surprise\" class=\"emoji emoji-1f62e\" role=\"img\" title=\"surprise\">:surprise:</span> That's... not where I expected the tuple debate to go <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 286864435,
        "sender_full_name": "jan kili",
        "timestamp": 1655785967
    },
    {
        "content": "<p>IDK SIMD; LGTM</p>",
        "id": 286864452,
        "sender_full_name": "jan kili",
        "timestamp": 1655785996
    },
    {
        "content": "<p>I hope I did not disturb anything important <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 286913042,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655818188
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281383\">Richard Feldman</span> <a href=\"#narrow/stream/231634-beginners/topic/Elm.20Roc.20type.20comparability.3F/near/286480660\">said</a>:</p>\n<blockquote>\n<p>tuples in Roc are now WIP <a href=\"https://github.com/rtfeldman/roc/issues/2935\">https://github.com/rtfeldman/roc/issues/2935</a></p>\n</blockquote>\n<p>Question: Is there a difference in runtime behavior (time/memory usage, etc.) between, say, <code>Pair a b</code> and <code>(a, b)</code> AKA <code>{ 0: a, 1: b}</code> ?</p>",
        "id": 287014853,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655882866
    },
    {
        "content": "<p>nope, those are all identical at runtime!</p>",
        "id": 287042111,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655898928
    }
]