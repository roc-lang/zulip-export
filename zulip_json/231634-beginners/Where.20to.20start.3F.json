[
    {
        "content": "<p>Now my personal life and work is more stable, I would like to learn roc/rust to help someday. Should I study one or two months of Rust before reading the compiler source? Any recomended Rust resources?</p>",
        "id": 231228401,
        "sender_full_name": "Gabriela",
        "timestamp": 1616346669
    },
    {
        "content": "<p>Hi Gabriel :) ,<br>\nIt depends how much time you have available but I'd recommend studying and using Rust for two months.<br>\nThe [rust book] is what I started with back in the day, [rust by example] is also a good resource. I thinks it's a good idea to alternate reading with some practice, <a href=\"https://exercism.io/tracks/rust\">exercism</a> is really great for that.</p>",
        "id": 231230791,
        "sender_full_name": "Anton",
        "timestamp": 1616349315
    },
    {
        "content": "<p>I would second Rust book, as it is where I got all Rust concepts from.</p>",
        "id": 231232510,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1616351092
    },
    {
        "content": "<p>you can also learn enough Rust to get the compiler running, play with some tests, and then let the types guide you as you try to solve issues. The Rust compiler is a good coach and you can reference specific chapters in the book as new things come up. Just depends on what approach you like better. I prefer to work on stuff and just consume docs as I go. It means sometimes you may be operating with missing knowledge but the reward of closing PRs is a good motivating factor.</p>\n<p>maybe think of a small project (1-3 days). use that to force you to search around the book and rust docs. perhaps a command line app that reads data from githubs API and displays it in the terminal</p>",
        "id": 231233883,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1616352662
    },
    {
        "content": "<p>I'm also a fan of things like exercism, codewars, hackerrank, etc.</p>",
        "id": 231233967,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1616352746
    },
    {
        "content": "<p>If you have never even touched, looked at, or ran any Rust. The first few chapters of the book helps you bootstrap a small project. Once you can use cargo, I'd run off to a small project</p>",
        "id": 231234105,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1616352900
    },
    {
        "content": "<p>Hi Ju! Because you posted in \"Where to start?\" I assume that's the question you're trying to get an answer to? :)<br>\nAre you interested in learning rust?</p>",
        "id": 231953939,
        "sender_full_name": "Anton",
        "timestamp": 1616760877
    },
    {
        "content": "<p>Hi Anton! I'm not sure how that message ended up here, I was meaning to post it to introductions :) Never used Zulip before, so it might be that!</p>",
        "id": 231954705,
        "sender_full_name": "Ju Liu",
        "timestamp": 1616761307
    },
    {
        "content": "<p>No problem :)</p>",
        "id": 231954767,
        "sender_full_name": "Anton",
        "timestamp": 1616761325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"400753\">@Ju Liu</span>  <span class=\"user-mention\" data-user-id=\"400181\">@Peter Fields</span> <span class=\"user-mention\" data-user-id=\"363500\">@Gabber</span> </p>\n<p>Hi all, Our most common \"first PR\" project is implementing a builtin during a pairing session. This time I think <code>Num.isOdd</code> and <code>Num.isEven</code> would be good candidates. </p>\n<p>Doesn't really require any rust knowledge (we can just follow the compiler error messages). Lmk if you want to do this this (or next) weekend.</p>",
        "id": 232038996,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1616796832
    },
    {
        "content": "<p>I'm also happy to walk someone through adding a builtin. Just ping me whenever</p>",
        "id": 232040207,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1616797554
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/231634-beginners/topic/Where.20to.20start.3F/near/232038996\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"400753\">Ju Liu</span>  <span class=\"user-mention silent\" data-user-id=\"400181\">Peter Fields</span> <span class=\"user-mention silent\" data-user-id=\"363500\">Gabber</span> </p>\n<p>Hi all, Our most common \"first PR\" project is implementing a builtin during a pairing session. This time I think <code>Num.isOdd</code> and <code>Num.isEven</code> would be good candidates. </p>\n<p>Doesn't really require any rust knowledge (we can just follow the compiler error messages). Lmk if you want to do this this (or next) weekend.</p>\n</blockquote>\n<p>Hey <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> that would be great! I have to run some errands today, but I'll be around tomorrow. Let me know!</p>",
        "id": 232083647,
        "sender_full_name": "Ju Liu",
        "timestamp": 1616844396
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/231634-beginners/topic/Where.20to.20start.3F/near/232038996\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"400753\">Ju Liu</span>  <span class=\"user-mention silent\" data-user-id=\"400181\">Peter Fields</span> <span class=\"user-mention silent\" data-user-id=\"363500\">Gabber</span> </p>\n<p>Hi all, Our most common \"first PR\" project is implementing a builtin during a pairing session. This time I think <code>Num.isOdd</code> and <code>Num.isEven</code> would be good candidates. </p>\n<p>Doesn't really require any rust knowledge (we can just follow the compiler error messages). Lmk if you want to do this this (or next) weekend.</p>\n</blockquote>\n<p>I am available today and tomorrow. Let me know what times could work for you?</p>",
        "id": 232088011,
        "sender_full_name": "Peter Fields",
        "timestamp": 1616849314
    },
    {
        "content": "<p>So if I want to ask a question, should I open a new topic?</p>\n<p>The actual question is: Are functions operating on open records monomorphized or do they do dynamic field lookups of some kind?</p>",
        "id": 249412460,
        "sender_full_name": "Julian Antonielli",
        "timestamp": 1628887735
    },
    {
        "content": "<p>monomorphized!</p>",
        "id": 249412916,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628888001
    },
    {
        "content": "<p>at runtime, records always end up being plain old structs</p>",
        "id": 249412926,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628888008
    },
    {
        "content": "<p>(also, new topic per question is great!)</p>",
        "id": 249412935,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1628888018
    },
    {
        "content": "<p>Great, thanks!</p>",
        "id": 249413335,
        "sender_full_name": "Julian Antonielli",
        "timestamp": 1628888256
    }
]