[
    {
        "content": "<p>hey folks - is it be possible to have roc available on a nixos system atm? not building it locally but just including it as a nixpkg derivation or something like that? I use nixos + home-manager fwiw and I wanted to try and build roc stuff without necessarily having roc repo cloned and built locally.</p>\n<p>if what I'm asking doesn't make sense I apologize, tho I use nixos I'm not that much of an expert yet <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 359369394,
        "sender_full_name": "Georges Boris",
        "timestamp": 1684409497
    },
    {
        "content": "<p>I mean talking about editor experience: huge step up would be if Roc had could be added to <code>devenv</code> shell with just <code>pkgs.roc-lang</code> . </p>\n<p>What it would take to do it?</p>",
        "id": 359502796,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1684446039
    },
    {
        "content": "<p>With Flakes enabled, running Roc is a one-liner:</p>\n<div class=\"codehilite\"><pre><span></span><code>[rkb@nixos:~]$ nix run github:roc-lang/roc -- repl\n\n  The rockin’ roc repl\n────────────────────────\n\nEnter an expression, or :help, or :q to quit.\n\n»\n</code></pre></div>",
        "id": 359524556,
        "sender_full_name": "RKB",
        "timestamp": 1684458391
    },
    {
        "content": "<blockquote>\n<p>I mean talking about editor experience: huge step up would be if Roc had could be added to <code>devenv</code> shell with just <code>pkgs.roc-lang</code> . </p>\n<p>What it would take to do it?</p>\n</blockquote>\n<p>A release on nix is a high priority task that I hope to get to soon</p>",
        "id": 359581927,
        "sender_full_name": "Anton",
        "timestamp": 1684485812
    },
    {
        "content": "<p>just for reference, I ended up following the steps <a href=\"https://github.com/roc-lang/roc/releases\">here</a> and having roc set up on nixos was a breeze <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span>️</p>",
        "id": 359612412,
        "sender_full_name": "Georges Boris",
        "timestamp": 1684492462
    },
    {
        "content": "<p>I wrote a basic Nix derivation to install the <code>roc</code> binaries from tarball. Does this look ok? It works on my end so far. The tar is unpinned because nightly.</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code>  <span class=\"ss\">roc =</span> pkgs<span class=\"o\">.</span>stdenv<span class=\"o\">.</span>mkDerivation <span class=\"p\">{</span>\n    <span class=\"ss\">name =</span> <span class=\"s2\">\"roc\"</span><span class=\"p\">;</span>\n    <span class=\"ss\">src =</span> fetchTarball <span class=\"p\">{</span>\n      <span class=\"ss\">url =</span>\n        <span class=\"s2\">\"https://github.com/roc-lang/roc/releases/download/nightly/\"</span> <span class=\"o\">+</span>\n        <span class=\"s2\">\"roc_nightly-macos_apple_silicon-latest.tar.gz\"</span><span class=\"p\">;</span>\n    <span class=\"p\">};</span>\n    <span class=\"ss\">installPhase =</span> <span class=\"s1\">''</span>\n<span class=\"s1\">      mkdir -p $out/bin</span>\n<span class=\"s1\">      cp -r . $out/bin</span>\n<span class=\"s1\">    ''</span><span class=\"p\">;</span>\n  <span class=\"p\">};</span>\n</code></pre></div>",
        "id": 397148148,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697561370
    },
    {
        "content": "<p>Also is there any interest in getting roc onto nixpkgs? Or too early in development to warrant this?</p>",
        "id": 397148338,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697561438
    },
    {
        "content": "<p>definitely interested, that would be awesome! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 397150646,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1697562379
    },
    {
        "content": "<p>I can put together a PR for nixpkgs and see if they'll accept. Presumably will need to generalize the above for all OS variants. I looked into the default.nix on roc's main GH repo but couldn't build it on my M1 Mac</p>",
        "id": 397151074,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697562599
    },
    {
        "content": "<p>I'm not sure if the nightly binaries work on nixos at the moment btw</p>",
        "id": 397151224,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1697562659
    },
    {
        "content": "<p>that may have gotten fixed, but I don't remember</p>",
        "id": 397151289,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1697562686
    },
    {
        "content": "<p>I think there was a libc issue because we build them against glibc right now?</p>",
        "id": 397151323,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1697562707
    },
    {
        "content": "<p>Runtime issue or installation?</p>",
        "id": 397151416,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697562735
    },
    {
        "content": "<p>we want to build them with musl and statically link them, but to do that we need a llvm build that uses musl, which is nontrivial</p>",
        "id": 397151430,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1697562740
    },
    {
        "content": "<p>there's no installation, it's just a <code>roc</code> binary</p>",
        "id": 397151458,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1697562753
    },
    {
        "content": "<p>I think the nixpkgs CI/CD tests on a variety of OSes including its own. Curious to see what happens if we just supply the pre built tarballs per OS</p>",
        "id": 397151519,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697562784
    },
    {
        "content": "<p>I think you would at a minimum need nix to update all of the dynamic dependencies. They will be pointing to files in the location expected in ubuntu, not nix</p>",
        "id": 397151760,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1697562896
    },
    {
        "content": "<p>fwiw building from source using our nix flakes should work</p>",
        "id": 397151775,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1697562904
    },
    {
        "content": "<p>that's what I use for macOS dev</p>",
        "id": 397151794,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1697562910
    },
    {
        "content": "<p>Maybe my build failed because I wasn't using the flake. I just tried the shell.nix and <code>nix-build default.nix</code>. Probably not repeatable..</p>",
        "id": 397152019,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697562998
    },
    {
        "content": "<p>Is the move to use <code>nix develop</code> _then_ build the default.nix?</p>",
        "id": 397152116,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697563047
    },
    {
        "content": "<p>I plan to look into a release on nixpkgs this week using the (fixed) default.nix file</p>",
        "id": 397152153,
        "sender_full_name": "Anton",
        "timestamp": 1697563062
    },
    {
        "content": "<blockquote>\n<p>Is the move to use <code>nix develop</code> _then_ build the default.nix?</p>\n</blockquote>\n<p><code>nix develop</code> then <code>cargo build --release --bin roc</code> should be the most reliable</p>",
        "id": 397152353,
        "sender_full_name": "Anton",
        "timestamp": 1697563133
    },
    {
        "content": "<p>Got it, yeah that works</p>",
        "id": 397153343,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697563548
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> maybe a Nix overlay could be considered instead of nixpkgs itself?</p>",
        "id": 397153551,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697563628
    },
    {
        "content": "<p>Oh, that's interesting. I had not thought of that yet, rust-overlay handles rust nightlies so I could see that work for us too. Excellent suggestion! I'll look into that</p>",
        "id": 397153789,
        "sender_full_name": "Anton",
        "timestamp": 1697563709
    },
    {
        "content": "<p>Yeah exactly I'm using that for Rust, and my friends over at Unison are using it for their lang too</p>",
        "id": 397153995,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697563799
    },
    {
        "content": "<p>Happy to get involved in this effort, will idle here</p>",
        "id": 397154106,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697563833
    },
    {
        "content": "<p>Oh yeah sure, go ahead :)<br>\nI recommend testing stuff with a personal repo and once it's ready we can put it in roc-lang/roc or roc-lang/roc-nix-overlay.<br>\nFeel free to contact me for further questions or help with errors.</p>",
        "id": 397155090,
        "sender_full_name": "Anton",
        "timestamp": 1697564239
    },
    {
        "content": "<p>Btw I couldn't get the build to work from nix flakes</p>",
        "id": 397155808,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697564533
    },
    {
        "content": "<p>This is on Mac M2 arch using the flake.nix and cargo</p>\n<div class=\"codehilite\"><pre><span></span><code>error: failed to run custom build command for `roc_bitcode_bc v0.0.1 (/Users/I568890/Github/roc/crates/compiler/builtins/bitcode/bc)`\n\nCaused by:\n  process didn&#39;t exit successfully: `/Users/I568890/Github/roc/target/release/build/roc_bitcode_bc-9e9ce06b21ac5bc0/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n  Compiling host ir to: /Users/I568890/Github/roc/crates/compiler/builtins/bitcode/bc/../builtins-host.ll\n  Compiling 64-bit bitcode to: /Users/I568890/Github/roc/crates/compiler/builtins/bitcode/bc/../builtins-host.bc\n\n  --- stderr\n  An internal compiler expectation was broken.\n  This is definitely a compiler bug.\n  Please file an issue here: https://github.com/roc-lang/roc/issues/new/choose\n  thread &#39;main&#39; panicked at &#39;zig build ir -Drelease=true failed with:\n\n    thread 8398749 panic: Darwin is handled separately via std.zig.system.darwin module\n  Unable to dump stack trace: debug info stripped\n\n  &#39;, crates/compiler/builtins/bitcode/bc/build.rs:126:21\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 397155883,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697564567
    },
    {
        "content": "<p>Oh yes, that's due to <a href=\"https://github.com/roc-lang/roc/issues/5590\">#5590</a>. We've been putting a lot of work in the upgrade that fixes this but we have a few more difficult bugs to solve there.</p>",
        "id": 397156126,
        "sender_full_name": "Anton",
        "timestamp": 1697564663
    },
    {
        "content": "<p>Got it, as mentioned in the docs too</p>",
        "id": 397156412,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697564764
    },
    {
        "content": "<p>I'm afraid that will make working on the overlay difficult unless you want to set up a VM or have another supported device/OS available</p>",
        "id": 397156609,
        "sender_full_name": "Anton",
        "timestamp": 1697564844
    },
    {
        "content": "<p>Our <a href=\"https://github.com/roc-lang/roc/pull/5851\">upgrade</a> could also be done soon though...</p>",
        "id": 397156804,
        "sender_full_name": "Anton",
        "timestamp": 1697564916
    },
    {
        "content": "<p>Or, perhaps you could work on the overlay while using the zig-11-llvm-16 branch. All tests passed on an m1 macos12 CI server so that just might work for you :)</p>",
        "id": 397157330,
        "sender_full_name": "Anton",
        "timestamp": 1697565153
    },
    {
        "content": "<p>Sure let me try that branch. But good point.. would need to build from source to work on an overlay</p>",
        "id": 397157826,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697565362
    },
    {
        "content": "<p>Yup that branch works just fine</p>",
        "id": 397158186,
        "sender_full_name": "Narek Asadorian",
        "timestamp": 1697565506
    },
    {
        "content": "<p>Awesome :)</p>",
        "id": 397158320,
        "sender_full_name": "Anton",
        "timestamp": 1697565560
    }
]