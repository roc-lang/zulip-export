[
    {
        "content": "<p>I wanted to use Roc to make a script to automate a series of find and replaces in a file. I wrote a simple script using cli-platform which I think should work, however it crashes. Is there something obvious I am missing? <a href=\"https://github.com/roc-lang/roc/issues/4607\">Issue #4607</a></p>",
        "id": 312292329,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1669437207
    },
    {
        "content": "<p>oh, just that file error handling isn't actually implemented yet <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 312293721,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669438804
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/blob/9ce2f4e1ff62106cd9ad4780c0b46731abfe189d/examples/cli/cli-platform/src/lib.rs#L377\">https://github.com/roc-lang/roc/blob/9ce2f4e1ff62106cd9ad4780c0b46731abfe189d/examples/cli/cli-platform/src/lib.rs#L377</a></p>",
        "id": 312293763,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669438851
    },
    {
        "content": "<p>if you're interested in wiring that up, I can talk you through how to do it!</p>",
        "id": 312293775,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669438861
    },
    {
        "content": "<p>Ahk, I should be able to fix that. I'll let you know if I get stuck.</p>",
        "id": 312294847,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1669440074
    },
    {
        "content": "<p>sounds great! <span aria-label=\"100\" class=\"emoji emoji-1f4af\" role=\"img\" title=\"100\">:100:</span></p>",
        "id": 312295309,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669440638
    },
    {
        "content": "<p>Making slow progress here. The <em>rust&lt;-&gt;roc</em> glue was easy to write, but I'm at a bit of a loss the best way to test the functionality properly. </p>\n<p>I wrote the helper below which seems to work well, but how would you recommend we test it? I've been wrestling with a few different compiler errors trying to write a test program, and then I tried a <code>writeErrToStr : WriteErr -&gt; Str</code> helper in <code>examples/cli/cli-platform/File.roc</code> which is really slowing me down.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">toRocWriteError</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"w\"> </span>: <span class=\"nc\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">Error</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">RocResult</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">WriteErr</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"p\">(){</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">ErrorKind</span>::<span class=\"n\">NotFound</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">file_glue</span>::<span class=\"n\">WriteErr</span>::<span class=\"n\">NotFound</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">ErrorKind</span>::<span class=\"n\">AlreadyExists</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">file_glue</span>::<span class=\"n\">WriteErr</span>::<span class=\"n\">AlreadyExists</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">ErrorKind</span>::<span class=\"n\">Interrupted</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">file_glue</span>::<span class=\"n\">WriteErr</span>::<span class=\"n\">Interrupted</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">ErrorKind</span>::<span class=\"n\">OutOfMemory</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">file_glue</span>::<span class=\"n\">WriteErr</span>::<span class=\"n\">OutOfMemory</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">ErrorKind</span>::<span class=\"n\">PermissionDenied</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">file_glue</span>::<span class=\"n\">WriteErr</span>::<span class=\"n\">PermissionDenied</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">ErrorKind</span>::<span class=\"n\">TimedOut</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">file_glue</span>::<span class=\"n\">WriteErr</span>::<span class=\"n\">TimedOut</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">// TODO TooManySymlinks not used here, do we need to change Roc platform API??</span>\n<span class=\"w\">        </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">ErrorKind</span>::<span class=\"n\">WriteZero</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">file_glue</span>::<span class=\"n\">WriteErr</span>::<span class=\"n\">WriteZero</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">file_glue</span>::<span class=\"n\">WriteErr</span>::<span class=\"n\">Unsupported</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">// TODO investigate support the following IO errors which are nightly-only experimental API</span>\n<span class=\"w\">        </span><span class=\"c1\">// std::io::ErrorKind::FileTooLarge &lt;- unstable language feature</span>\n<span class=\"w\">        </span><span class=\"c1\">// std::io::ErrorKind::ExecutableFileBusy &lt;- unstable language feature</span>\n<span class=\"w\">        </span><span class=\"c1\">// std::io::ErrorKind::FilesystemQuotaExceeded &lt;- unstable language feature</span>\n<span class=\"w\">        </span><span class=\"c1\">// std::io::ErrorKind::InvalidFilename &lt;- unstable language feature</span>\n<span class=\"w\">        </span><span class=\"c1\">// std::io::ErrorKind::ResourceBusy &lt;- unstable language feature</span>\n<span class=\"w\">        </span><span class=\"c1\">// std::io::ErrorKind::ReadOnlyFilesystem &lt;- unstable language feature</span>\n<span class=\"w\">        </span><span class=\"c1\">// std::io::ErrorKind::TooManyLinks &lt;- unstable language feature</span>\n<span class=\"w\">        </span><span class=\"c1\">// std::io::ErrorKind::StaleNetworkFileHandle &lt;- unstable language feature</span>\n<span class=\"w\">        </span><span class=\"c1\">// std::io::ErrorKind::StorageFull &lt;- unstable language feature</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 312412139,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1669510985
    },
    {
        "content": "<p>I would honestly just try testing it with two of the errors - e.g. NotFound and PermissionDenied</p>",
        "id": 312413444,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669512044
    },
    {
        "content": "<p>those are pretty easy to reproduce, I'd assume - for NotFound just try to read a file that's not there, and for PermissionDenied, you can probably try something like writing to <code>/</code></p>",
        "id": 312413470,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669512077
    },
    {
        "content": "<p>and the test can just be a Roc app which tries to do those things, and then prints \"It worked!\" if it gets the expected errors - and then a Rust test can launch the Roc app and verify that its stdout is \"It worked!\"</p>",
        "id": 312413533,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669512124
    },
    {
        "content": "<p>I think as long as you have 2 different errors covered, that's enough for the test</p>",
        "id": 312413544,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669512138
    },
    {
        "content": "<p>at that point we know that:</p>\n<ul>\n<li>it's capable of producing Roc errors in at least one expected circumstance</li>\n<li>it's not just always producing the same error, because we've seen it produce a different error at least once (and also the expected error)</li>\n</ul>",
        "id": 312413564,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669512178
    },
    {
        "content": "<p>so from there, further tests would essentially be confirming that we've correctly translated the Rust <code>ErrorKind</code> into the Roc glue type, which doesn't seem so error-prone that tests for every single one of them is essential</p>",
        "id": 312413606,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669512222
    },
    {
        "content": "<p>I think we should instead assume that Rust has correctly implemented <code>ErrorKind</code>, and that glue is translating the names properly, and therefore all we really need to do is to visually check that the names line up as expected</p>",
        "id": 312413675,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669512270
    },
    {
        "content": "<p>tests of everything would be ideal, but I don't think they'd be worth the amount of time it would take to recreate all those different types of errors <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 312413683,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669512295
    },
    {
        "content": "<p>Cool, I've managed to do that <a href=\"https://gist.github.com/lukewilliamboswell/2186c63b5ef40b15b6867132b124bee5\">here is the test app</a>. It works as you suggested, which is pretty neat. </p>\n<p>Should I leave it in the cli-platform folder for now?</p>\n<div class=\"codehilite\"><pre><span></span><code>192-168-1-108:cli luke$ roc run file-test.roc\n🔨 Rebuilding platform...\nPass: expected NotFound\nPass: expected PermissionDenied\nTests complete\n</code></pre></div>",
        "id": 312414175,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1669512740
    },
    {
        "content": "<p>oh let's put it in <a href=\"https://github.com/roc-lang/basic-cli\">https://github.com/roc-lang/basic-cli</a> - I already have a WIP PR to move everything into there! <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 312416236,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669515034
    },
    {
        "content": "<p>we don't have CI set up there yet though</p>",
        "id": 312416241,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669515040
    },
    {
        "content": "<p>but all in good time!</p>",
        "id": 312416244,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669515049
    },
    {
        "content": "<p>First PR <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <a href=\"https://github.com/roc-lang/basic-cli/pull/4\">#4</a></p>",
        "id": 312417840,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1669516654
    },
    {
        "content": "<p>very nice! Now we \"just\" need to get some automation around releases <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 312419880,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669519023
    },
    {
        "content": "<p>because currently making the URL requires going around and building binaries by hand on 4 different operating systems</p>",
        "id": 312419888,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669519044
    },
    {
        "content": "<p>(that can be automated via GitHub Actions, but hasn't been yet)</p>",
        "id": 312419894,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669519066
    },
    {
        "content": "<p>FYSA I went and updated all my <a href=\"https://github.com/lukewilliamboswell/roc-things/tree/main/aoc-2021\">AoC 2021</a> and the project Euler code for the new API and to use the \"release\" URL for cli-platform. </p>\n<p>It was a really pleasant experience! <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span> Everything just worked, and it was super easy to work with the Tasks. I don't know if it is because I have grokked Tasks as an API now, but the simple apps feel much easier to write and understand.</p>",
        "id": 312420190,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1669519382
    },
    {
        "content": "<p>awesome, glad to hear it! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 312428705,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669528639
    }
]