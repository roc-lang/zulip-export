[
    {
        "content": "<p>After todays meetup I thought I would test out Roc on Windows again. </p>\n<h2>Building from source</h2>\n<p>I have used this machine previously to build Roc from source, so I may have already installed some dependencies like LLVM. However I had no issues today. I updated Visual Studio Build Tools 2019 with C++ to the latest version and then built roc using;</p>\n<p><code>cargo build --release --locked</code> </p>\n<h2>Cargo test</h2>\n<p>Running <code>cargo test --release --locked</code> builds and runs with 4 passed; 123 failed; 2 ignored.</p>\n<p>Here is the <a href=\"/user_uploads/22008/3xRy3S6zjo7JdMSyvKw059L4/cargo-test-output.log\">cargo-test-output.log</a> if that is of any interest <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> </p>\n<h2>Basic-cli</h2>\n<p>To build <code>basic-cli</code> I had to install a specific version of the rust nightly toolchain with</p>\n<p><code>rustup toolchain install nightly-2022-12-09-x86_64-pc-windows-msvc</code></p>\n<p>The examples build, however, I immediately hit a strange bug. For some reason <code>Stdout.line</code> does not print. However, when I add a <code>dbg!</code> statement in the platform it works (and also prints the dbg). I suspect there is something that is causing rust to not generate the code or it is being optimised away somehow. I'll do some further investigation.</p>",
        "id": 377779011,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690104226
    },
    {
        "content": "<p>Cool, I have no idea what I am doing, but I managed to open the <code>.exe</code> and attach a debugger which looks like this <a href=\"/user_uploads/22008/9qkx2uI4m6LgXVXcJ3dXHIoc/Screenshot-2023-07-23-193238.png\">Screenshot-2023-07-23-193238.png</a>.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/9qkx2uI4m6LgXVXcJ3dXHIoc/Screenshot-2023-07-23-193238.png\" title=\"Screenshot-2023-07-23-193238.png\"><img src=\"/user_uploads/22008/9qkx2uI4m6LgXVXcJ3dXHIoc/Screenshot-2023-07-23-193238.png\"></a></div>",
        "id": 377781314,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690104845
    },
    {
        "content": "<p>Building with <code>roc build --optimize</code> seems to also be a workaround.</p>",
        "id": 377784732,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690105720
    },
    {
        "content": "<h3>Args example</h3>\n<p>Looks like the roc parser might be getting confused (there are not multi-line strings in the .roc example file).</p>\n<div class=\"codehilite\"><pre><span></span><code>roc build --optimize .\\examples\\args.roc\nâ”€â”€ INSUFFICIENT INDENT IN MULTI-LINE STRING â”€â”€â”€â”€â”€â”€â”€â”€ .\\examples\\../src\\Arg.roc â”€\n\nThis multiline string is not sufficiently indented:\n\n582â”‚              &quot;&quot;&quot;\n583â”‚\n      ^\n\nLines in a multi-line string must be indented at least as much as the\nbeginning &quot;&quot;&quot;. This extra indentation is automatically removed from\nthe string during compilation.\n</code></pre></div>\n<h3>Command example</h3>\n<p>Not working. Builds ok (with --optimize) but then hangs when run. Debugging gives <code>0xC0000005: Access violation</code></p>\n<h3>Countdown example</h3>\n<div class=\"codehilite\"><pre><span></span><code>roc build --optimize .\\examples\\countdown.roc\nðŸ”¨ Rebuilding platform...\nwarning: ignoring debug info with an invalid version (0) in app\n0 errors and 0 warnings found in 799 ms while successfully building:\n\n    .\\examples\\countdown.exe\nPS C:\\Users\\bosyl\\Documents\\GitHub\\basic-cli&gt; .\\examples\\countdown.exe\n\nLet&#39;s count down from 3 together - all you have to do is press &lt;ENTER&gt;.\n\n\nthread &#39;main&#39; has overflowed its stack\n</code></pre></div>\n<p>Debugging also gives <code>0xC0000005: Access violation</code></p>",
        "id": 377788449,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690106646
    },
    {
        "content": "<blockquote>\n<p>The examples build, however, I immediately hit a strange bug. For some reason Stdout.line does not print. However, when I add a dbg! statement in the platform it works (and also prints the dbg).</p>\n</blockquote>\n<p>Maybe stdout on Windows performs some buffering of output that is different than on Unix?<br>\nDoes <code>Stderr.line</code> have the same problem or not?</p>",
        "id": 377791946,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1690107524
    },
    {
        "content": "<p>I'll have a look</p>",
        "id": 377792135,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690107574
    },
    {
        "content": "<blockquote>\n<p>Looks like the roc parser might be getting confused (there are not multi-line strings in the .roc example file).</p>\n</blockquote>\n<p>The path <code>.\\examples\\../src\\Arg.roc</code> looks very suspicious. Like Unix-style paths with forward slashes and Windows-style paths with backwards slashes get intermingled. Maybe that is what is confusing the parser?</p>",
        "id": 377792721,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1690107713
    },
    {
        "content": "<p>Ok, so confirmed <code>Stderr.line</code> has the same issue. I'm 90% confident there is an issue in the Roc compiler here causing this. </p>\n<p>For the Args example, I think it might be a roc parser issue. When git checkouts file on Windows it defaults to clrf <code>\\r\\n</code> line endings, but the parser assumes it is <code>\\n</code>. We could maybe fix this with a gitattribute but I'm not sure what else that would affect, e.g. rust tooling etc.</p>",
        "id": 377793298,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690107852
    },
    {
        "content": "<p>Here is a <a href=\"https://gist.github.com/lukewilliamboswell/8e58ee2651a98c6f72b3f3cbb4c73f78\">gist</a> which shows the output from <code>roc format</code> on that file.</p>",
        "id": 377793585,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690107929
    },
    {
        "content": "<p>And for good measure I thought I'd check the REPL out too</p>\n<div class=\"codehilite\"><pre><span></span><code>PS C:\\Users\\bosyl\\Documents\\GitHub\\roc-things&gt; roc repl\n\n  The rockinâ€™ roc repl\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n\nEnter an expression, or :help, or :q to quit.\n\nÂ»        1+1\nwarning: ignoring debug info with an invalid version (0) in\nthread &#39;main&#39; panicked at &#39;extern function roc_mmap is not defined by the builtins&#39;, crates\\compiler\\gen_llvm\\src\\llvm\\externs.rs:176:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 377795911,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690108572
    }
]