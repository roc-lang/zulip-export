[
    {
        "content": "<p>Installed the nightly on MacOs. (I'm a first time downloader).<br>\nroc version and roc repl run fine. Then ran:<br>\nroc run helloWorld.roc<br>\n<span aria-label=\"hammer\" class=\"emoji emoji-1f528\" role=\"img\" title=\"hammer\">:hammer:</span> Rebuilding platform...<br>\nthread '&lt;unnamed&gt;' panicked at 'I could not find the cargo command.<br>\nVisit <a href=\"https://rustup.rs/\">https://rustup.rs/</a> to install cargo.', crates/utils/src/lib.rs:179:9<br>\nnote: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace<br>\nthread 'main' panicked at 'Failed to (re)build platform.: Any { .. }', crates/cli/src/build.rs:344:46</p>\n<p>Are the installation instructions missing a step? Referring to <a href=\"https://github.com/roc-lang/roc/blob/main/getting_started/macos_apple_silicon.md\">https://github.com/roc-lang/roc/blob/main/getting_started/macos_apple_silicon.md</a></p>",
        "id": 317812532,
        "sender_full_name": "Michael",
        "timestamp": 1671961455
    },
    {
        "content": "<p>Those instructions do include rustup, which should install cargo. Did that step give you any errors?</p>",
        "id": 317819632,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1671965813
    },
    {
        "content": "<p>oh we need to change hello world to use a URL for its package</p>",
        "id": 317820210,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1671966179
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span> I purposely stopped after step 6, as the instructions state that this should be sufficient. I'm still confused: should the installation instructions be changed to include cargo as a mandatory step? Or will a change to helloWorld fix the problem?</p>\n<p>also tried main.roc from <a href=\"https://www.roc-lang.org/tutorial#building-an-application\">https://www.roc-lang.org/tutorial#building-an-application</a></p>\n<p>roc run main.roc<br>\nthread 'main' panicked at 'not yet implemented: unhandled parse error PackageEntry(IndentPackage(@30), @27)', crates/reporting/src/error/parse.rs:4015:14<br>\nnote: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace</p>",
        "id": 317825008,
        "sender_full_name": "Michael",
        "timestamp": 1671969052
    },
    {
        "content": "<p>It sounds like the hello world example requires you to actually compile the Rust code. But we have a way to download it pre-compiled from a URL. Then you wouldn't need cargo and it would be consistent with the tutorial. That's what Richard is referring to.<br>\nSo yes a change to the example seems to be what's needed. Given that a lot of people are on holidays it might take a few days for someone to get time for it.</p>",
        "id": 317838080,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1671975784
    },
    {
        "content": "<blockquote>\n<p>also tried main.roc from <a href=\"https://www.roc-lang.org/tutorial#building-an-application\">https://www.roc-lang.org/tutorial#building-an-application</a></p>\n<p>roc run main.roc<br>\nthread 'main' panicked at 'not yet implemented: unhandled parse error PackageEntry(IndentPackage(@30), @27)', crates/reporting/src/error/parse.rs:4015:14<br>\nnote: run with RUST_BACKTRACE=1 environment variable to display a backtrace</p>\n</blockquote>\n<p>Is this on macos x86_64?</p>",
        "id": 317933600,
        "sender_full_name": "Anton",
        "timestamp": 1672050173
    },
    {
        "content": "<p>This is on an M1 (ARM) running Ventura</p>",
        "id": 318111706,
        "sender_full_name": "Michael",
        "timestamp": 1672153353
    },
    {
        "content": "<p>I've noticed some weird issue when I copy the example from building-an-application on macOS (safari) extra newlines are introduced. Can you confirm your code looks exactly like this <span class=\"user-mention\" data-user-id=\"557863\">@Michael</span>?</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;hello&quot;\n    packages { pf: &quot;https://github.com/roc-lang/basic-cli/releases/download/0.1.3/5SXwdW7rH8QAOnD71IkHcFxCmBEPtFSLAIkclPEgjHQ.tar.br&quot; }\n    imports [pf.Stdout]\n    provides [main] to pf\n\nmain =\n    Stdout.line &quot;I&#39;m a Roc application!&quot;\n</code></pre></div>\n<p>And run with <code>roc dev main.roc</code></p>\n<p>I tried this on an m1 mac with macos 12.</p>",
        "id": 318125640,
        "sender_full_name": "Anton",
        "timestamp": 1672158802
    },
    {
        "content": "<p>Well caught <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> ! This was indeed the problem. The code above produces the expected result. For reference, this is the code that did not run:</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;hello&quot;\n    packages { pf:\n&quot;https://github.com/roc-lang/basic-cli/releases/download/0.1.3/5SXwdW7rH8QAOnD71IkHcFxCmBEPtFSLAIkclPEgjHQ.tar.br&quot;\n}\n    imports [pf.Stdout]\n    provides [main] to pf\n\nmain =\n    Stdout.line &quot;I&#39;m a Roc application!&quot;\n</code></pre></div>",
        "id": 318311110,
        "sender_full_name": "Michael",
        "timestamp": 1672254536
    },
    {
        "content": "<p>Maybe we should make the parser a bit more robust to these newlines! Seems like we should be able to tolerate them.</p>",
        "id": 318323896,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1672260948
    },
    {
        "content": "<p>Huh I'm actually kinda surprised that didn't just work. I thought I fixed that a while ago <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 318341020,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1672271864
    },
    {
        "content": "<p>So copy/pasting code from the tutorial does not give the expected result. This got me curious and I looked up the source of this snippet in tutorial.md:</p>\n<div class=\"codehilite\"><pre><span></span><code>&lt;pre&gt;&lt;samp&gt;&lt;span class=&quot;kw&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;str&quot;&gt;&quot;hello&quot;&lt;/span&gt;\n    &lt;span class=&quot;kw&quot;&gt;packages&lt;/span&gt; &lt;span class=&quot;brace&quot;&gt;{&lt;/span&gt; pf: &lt;span class=&quot;str&quot;&gt;&quot;https://github.com/roc-lang/basic-cli/releases/download/0.1.3/5SXwdW7rH8QAOnD71IkHcFxCmBEPtFSLAIkclPEgjHQ.tar.br&quot;&lt;/span&gt; &lt;span class=&quot;brace&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;kw&quot;&gt;imports&lt;/span&gt; &lt;span class=&quot;brace&quot;&gt;[&lt;/span&gt;pf.Stdout&lt;span class=&quot;brace&quot;&gt;]&lt;/span&gt;\n    &lt;span class=&quot;kw&quot;&gt;provides&lt;/span&gt; &lt;span class=&quot;brace&quot;&gt;[&lt;/span&gt;main&lt;span class=&quot;brace&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;to&lt;/span&gt; pf\n\nmain &lt;span class=&quot;kw&quot;&gt;=&lt;/span&gt;\n    Stdout.line &lt;span class=&quot;str&quot;&gt;&quot;I&#39;m a Roc application!&quot;&lt;/span&gt;\n&lt;/samp&gt;&lt;/pre&gt;\n</code></pre></div>\n<p>This does not look nice at all to me, having all this HTML markup in the documentation source. May I make the suggestion to convert to Asciidoc for documentation? I'd be willing to contribute here. Asciidoc sources render nicely in github, and it's much more powerful than Markdown. An additional benefit: this would also enable the path to Antora in due course.</p>",
        "id": 318365172,
        "sender_full_name": "Michael",
        "timestamp": 1672295706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"453336\">Joshua Warner</span> <a href=\"#narrow/stream/231634-beginners/topic/Installation.20instructions.20missing.20cargo.3F/near/318341020\">said</a>:</p>\n<blockquote>\n<p>Huh I'm actually kinda surprised that didn't just work. I thought I fixed that a while ago <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>\n</blockquote>\n<p>I believe it is actually fixed <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span>, but I think Michael is not on the most recent nightly.</p>",
        "id": 318412970,
        "sender_full_name": "Anton",
        "timestamp": 1672318440
    },
    {
        "content": "<blockquote>\n<p>This does not look nice at all to me</p>\n</blockquote>\n<p>I agree :)<br>\nI looked into this a bit before and we can use regular markdown code blocks where the syntax highlighting is done cleanly behind the scenes as described <a href=\"https://github.com/raphlinus/pulldown-cmark/issues/167#issuecomment-448491422\">here</a>. We currently use <code>pulldown_cmark</code> in examples/static-site-gen/platform.</p>\n<p>Setting up regular markdown code blocks seems like the fastest and easiest solution.<br>\nLots of people are familiar with github flavored markdown. I also don't believe we need the more powerful features of Asciidoc. Less features often result in more simplicity. Feel free to oppose my arguments though :)</p>",
        "id": 318414634,
        "sender_full_name": "Anton",
        "timestamp": 1672319121
    },
    {
        "content": "<p>I was using roc_nightly-macos_apple_silicon-2022-12-24-25aeab9.tar.gz . Just now I downloaded roc_nightly-macos_apple_silicon-2022-12-29-db86b87.tar.gz and the issue still exists, i.e.:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;not yet implemented: unhandled parse error PackageEntry(IndentPackage(@30), @27)&#39;, crates/reporting/src/error/parse.rs:4015:14\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 318420582,
        "sender_full_name": "Michael",
        "timestamp": 1672321290
    },
    {
        "content": "<p>My pr that should have fixed this landed a couple months ago I think</p>",
        "id": 318446142,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1672330205
    },
    {
        "content": "<p>Re the syntax highlighting, that was the best I was able to manage converting to markdown. It's definitely a short term solution and a bit handraulic. I think ideally if we can get the roc parser to support syntax highlighting then we can add that into the static-site platform to render all of the Roc code blocks nicely. <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 318544016,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1672391084
    },
    {
        "content": "<p>The indentation pickiness should be improved here: <a href=\"https://github.com/roc-lang/roc/pull/4844\">https://github.com/roc-lang/roc/pull/4844</a></p>",
        "id": 318891907,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1672597296
    }
]