[
    {
        "content": "<p>What's the best place to report error messages that might be improved? Is there a list somewhere?</p>\n<p>I ran into a small bit of confusion when attempting to use <code>...</code> in a list pattern match (three dots instead of two):</p>\n<div class=\"codehilite\"><pre><span></span><code>» when [1,2,3] is\n… [a,b,...] -&gt; &quot;hi!&quot;\n\n── UNFINISHED LIST PATTERN ─────────────────────────────────────────────────────\n\nI am partway through parsing a list pattern, but I got stuck here:\n\n5│      [a,b,...] -&gt; &quot;hi!&quot;\n             ^\n\nI was expecting to see a closing square brace before this, so try\nadding a ] and see if that helps?\n</code></pre></div>\n<p>Maybe not super important/urgent, but it seems like the kind of mistake folks new to the language might make, and where the compiler could be more \"I see what you're trying to do, here's the correct syntax in Roc\".</p>",
        "id": 425770666,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1710074829
    },
    {
        "content": "<p>Similar but related error when trying to use a pattern like <code>..rest</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>» when [1,2,3] is\n… [a,b,..rest] -&gt; &quot;hi!&quot;\n\n── UNFINISHED LIST PATTERN ─────────────────────────────────────────────────────\n\nI am partway through parsing a list pattern, but I got stuck here:\n\n5│      [a,b,..rest] -&gt; &quot;hi!&quot;\n               ^\n\nI was expecting to see a closing square brace before this, so try\nadding a ] and see if that helps?\n</code></pre></div>",
        "id": 425770776,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1710074932
    },
    {
        "content": "<p>GitHub issues. Though if it is a complex improvement, might be worth chatting about on zulip</p>",
        "id": 425799723,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1710099795
    },
    {
        "content": "<p>Those definitely would be great to track and improve</p>",
        "id": 425799752,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1710099827
    },
    {
        "content": "<p>Tangent: there's a whole group of errors like this that require a good bit of work to improve the error message for if you \"treat\" each case independently. I think it would be useful to develop a tool (mostly for beginners) that compares the Roc code the user is currently writing to a database of up-to-date, high quality Roc code. It could show you several snippets of Roc that are most similar to what you are currently writing, thereby helping you prevent the whole group of beginner syntax errors.</p>",
        "id": 425986577,
        "sender_full_name": "Anton",
        "timestamp": 1710182395
    },
    {
        "content": "<p>It could also alert you if for example <code>...</code> or <code>&lt;|</code> does not occur anywhere in the dataset.</p>",
        "id": 425987302,
        "sender_full_name": "Anton",
        "timestamp": 1710182668
    },
    {
        "content": "<p>Thanks, I created an issue <a href=\"https://github.com/roc-lang/roc/issues/6577\">here</a>.</p>\n<blockquote>\n<p>Tangent: there's a whole group of errors like this that require a good bit of work to improve the error message for if you \"treat\" each case independently. I think it would be useful to develop a tool (mostly for beginners) that compares the Roc code the user is currently writing to a database of up-to-date, high quality Roc code.</p>\n</blockquote>\n<p>This sounds like it could be super useful! I do think there's a bit of a tension between this being an extra tool someone would need to install/run, and it's intended audience being beginners. Typically I imagine folks might build up their tool belt as they get more experience.</p>",
        "id": 425992521,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1710184569
    },
    {
        "content": "<p>True, if we ever set up an extensive Roc learning experience with exercises we could introduce the tool somewhere in the middle to prevent overwhelming people at the start.</p>",
        "id": 426086102,
        "sender_full_name": "Anton",
        "timestamp": 1710236304
    },
    {
        "content": "<p>I can see the value of the tool that <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> suggests, but I think that better/slimmer error messages should be the priority. In particular, I <em>think</em> what I'm seeing (as a novice) is cascading error messages: if there's a way to say, \"we spotted four other problems but we think they're all related to the one we showed you first\", that would be very helpful for newcomers.</p>",
        "id": 426145400,
        "sender_full_name": "Greg Wilson",
        "timestamp": 1710255614
    },
    {
        "content": "<p>yeah I definitely think we should start by improving individual error messages!</p>",
        "id": 426150946,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710256947
    },
    {
        "content": "<p>in this particular case, what we could do is:</p>\n<ul>\n<li>have the parser consume 2+ dots in a row as one group</li>\n<li>if there are more than 2 dots, report the error as <code>TOO MANY DOTS</code> and just explain that the syntax is 2 dots in a row</li>\n</ul>",
        "id": 426151097,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710256992
    },
    {
        "content": "<blockquote>\n<p>I think that better/slimmer error messages should be the priority.</p>\n</blockquote>\n<p>I'd love that too, but the way I see it we can't make a few changes to our compiler frontend to achieve that.<br>\nIt seems like there are hundreds of error-types, where each type requires between 1 to 30 hours of work to significantly improve the error message for. This approach would try to address every deviation from correct Roc code individually, whereas the proposed tool could help you prevent any deviation.</p>\n<blockquote>\n<p>\"we spotted four other problems but we think they're all related to the one we showed you first\"</p>\n</blockquote>\n<p>I absolutely understand that desire, it does seems like this relating of problems is one of those those things that is easy for experienced programmers but hard to put into an algorithm.</p>",
        "id": 426151155,
        "sender_full_name": "Anton",
        "timestamp": 1710257011
    },
    {
        "content": "<p>in general, the most common way to make parse errors nicer is for the parser to consume things that are syntactically invalid and write down what it saw (and then keep going), because then it can give special-cased messages depending on what the problem was</p>",
        "id": 426151259,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710257037
    },
    {
        "content": "<p>This is probably 100x more difficult to put in practice then it is to come up with, but the think the error for my <code>...</code> mistake made me think of is the nice error messages you get in Elm (and I think I've already seen them in Roc too) when you have a typo in a variable name or record field name. The kind where the error message says: \"you types X, did you maybe intend to write Y?\". Would be nice if that somehow worked for keywords and special syntax as well.</p>",
        "id": 426172836,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1710262727
    },
    {
        "content": "<p>Totally,  \"you typed X, did you maybe intend to write Y?\" is a statistical question, which is why I think it's worth it to experiment with a statistical tool.</p>",
        "id": 426182613,
        "sender_full_name": "Anton",
        "timestamp": 1710265925
    }
]