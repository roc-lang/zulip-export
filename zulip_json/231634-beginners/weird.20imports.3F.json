[
    {
        "content": "<p>If I write <code>imports [pf.Stdout, pf.Utc, pf.Task, ...]</code> it is fine. But if I write: <code> imports [pf.{ Stdout, Utc, Task }, ...</code> it gives me error message: <code>I am expecting a comma or end of list, like imports [Shape, Vector]</code>. What am I missing here?</p>",
        "id": 407340014,
        "sender_full_name": "Steven Chen",
        "timestamp": 1702338856
    },
    {
        "content": "<p>I guess for Modules, we never implemented the <code>{ ... }</code> style import</p>",
        "id": 407356619,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702347190
    },
    {
        "content": "<p>It is only currently a feature for values from within a Module.</p>",
        "id": 407356649,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702347212
    },
    {
        "content": "<p>So just a missing compiler feature that needs an issue filed and for someone to implement it.</p>",
        "id": 407356678,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702347236
    },
    {
        "content": "<p>Note <span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span>  is currently rewriting this part of the compiler for Module Params. I think that will change the way this works.</p>",
        "id": 407396735,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702362127
    },
    {
        "content": "<p>Yeah, that’s a good point. AFAIK <code>{ … }</code> isn’t a thing in the new import syntax. We will be using the <code>exposing</code> keyword for bringing module names into scope, and module folders won’t be allowed.</p>",
        "id": 407448961,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1702378653
    }
]