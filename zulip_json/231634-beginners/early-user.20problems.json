[
    {
        "content": "<p>This topic is not about compiler development, but to discuss problems writing Roc programs in this early stage.</p>",
        "id": 214981693,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1603984875
    },
    {
        "content": "<p>One of the bugs I encountered and seemingly was able to fix concerns List.walkRight. Should I simply create a branch and a pull request? Are there any naming conventions?</p>",
        "id": 214981945,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1603984969
    },
    {
        "content": "<p>Yeah I think a PR would be great. We made <code>walkRight</code> fairly recently. What was the problem?</p>",
        "id": 214983780,
        "sender_full_name": "Chad Stearns",
        "timestamp": 1603985619
    },
    {
        "content": "<p>I dont think we have any PR naming conventions right now</p>",
        "id": 214983907,
        "sender_full_name": "Chad Stearns",
        "timestamp": 1603985656
    },
    {
        "content": "<p>It doesn't work if the \"accumulator\" is not an Int, but for example a string or a record. PR created.</p>",
        "id": 214994906,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1603990057
    },
    {
        "content": "<p>Maybe my biggest obstacle is not being able to split code into multiple files:</p>",
        "id": 215020694,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1604001957
    },
    {
        "content": "<p>This doesn't work:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">interface</span> <span class=\"kt\">Dep</span> <span class=\"nv\">exposes</span> <span class=\"p\">[</span> <span class=\"nv\">value</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[]</span>\n\n<span class=\"nv\">value</span> <span class=\"nf\">:</span> <span class=\"kt\">Str</span>\n<span class=\"nv\">value</span> <span class=\"nf\">=</span> <span class=\"s\">\"Dep.value\"</span>\n</code></pre></div>\n\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span> <span class=\"kt\">Main</span> <span class=\"nv\">provides</span> <span class=\"p\">[</span> <span class=\"nv\">main</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[</span> <span class=\"kt\">Dep</span> <span class=\"p\">]</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">:</span> <span class=\"kt\">Str</span>\n<span class=\"kr\">main </span><span class=\"nf\">=</span> <span class=\"kt\">Dep</span><span class=\"nf\">.</span><span class=\"nv\">value</span>\n</code></pre></div>",
        "id": 215020720,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1604001964
    },
    {
        "content": "<p>This works:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">interface</span> <span class=\"kt\">Dep</span> <span class=\"nv\">exposes</span> <span class=\"p\">[</span> <span class=\"nv\">value</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[]</span>\n\n<span class=\"nv\">value</span> <span class=\"nf\">:</span> <span class=\"p\">{}</span> <span class=\"nf\">-&gt;</span> <span class=\"kt\">Str</span>\n<span class=\"nv\">value</span> <span class=\"nf\">=</span> <span class=\"nf\">\\</span><span class=\"nv\">_</span> <span class=\"nf\">-&gt;</span> <span class=\"s\">\"Dep.value\"</span>\n</code></pre></div>\n\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span> <span class=\"kt\">Main</span> <span class=\"nv\">provides</span> <span class=\"p\">[</span> <span class=\"nv\">main</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[</span> <span class=\"kt\">Dep</span> <span class=\"p\">]</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">:</span> <span class=\"kt\">Str</span>\n<span class=\"kr\">main </span><span class=\"nf\">=</span> <span class=\"kt\">Dep</span><span class=\"nf\">.</span><span class=\"nv\">value</span> <span class=\"p\">{}</span>\n</code></pre></div>",
        "id": 215020852,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1604002037
    },
    {
        "content": "<p>This doesn't work:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">interface</span> <span class=\"kt\">Dep1</span> <span class=\"nv\">exposes</span> <span class=\"p\">[</span> <span class=\"nv\">value1</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[]</span>\n\n<span class=\"nv\">value1</span> <span class=\"nf\">:</span> <span class=\"p\">{}</span> <span class=\"nf\">-&gt;</span> <span class=\"kt\">Str</span>\n<span class=\"nv\">value1</span> <span class=\"nf\">=</span> <span class=\"nf\">\\</span><span class=\"nv\">_</span> <span class=\"nf\">-&gt;</span> <span class=\"s\">\"Dep1.value1\"</span>\n</code></pre></div>\n\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">interface</span> <span class=\"kt\">Dep2</span> <span class=\"nv\">exposes</span> <span class=\"p\">[</span> <span class=\"nv\">value2</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[]</span>\n\n<span class=\"nv\">value2</span> <span class=\"nf\">:</span> <span class=\"p\">{}</span> <span class=\"nf\">-&gt;</span> <span class=\"kt\">Str</span>\n<span class=\"nv\">value2</span> <span class=\"nf\">=</span> <span class=\"nf\">\\</span><span class=\"nv\">_</span> <span class=\"nf\">-&gt;</span> <span class=\"s\">\"Dep2.value2\"</span>\n</code></pre></div>\n\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span> <span class=\"kt\">Main</span> <span class=\"nv\">provides</span> <span class=\"p\">[</span> <span class=\"nv\">main</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[</span> <span class=\"kt\">Dep1</span><span class=\"p\">,</span> <span class=\"kt\">Dep2</span> <span class=\"p\">]</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">:</span> <span class=\"kt\">Str</span>\n<span class=\"kr\">main </span><span class=\"nf\">=</span> <span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">concat</span> <span class=\"p\">(</span><span class=\"kt\">Dep1</span><span class=\"nf\">.</span><span class=\"nv\">value1</span> <span class=\"p\">{})</span> <span class=\"p\">(</span><span class=\"kt\">Dep2</span><span class=\"nf\">.</span><span class=\"nv\">value2</span> <span class=\"p\">{})</span>\n</code></pre></div>",
        "id": 215021215,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1604002235
    },
    {
        "content": "<p>This doesn't work either:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">interface</span> <span class=\"kt\">Dep1</span> <span class=\"nv\">exposes</span> <span class=\"p\">[</span> <span class=\"nv\">value1</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[</span> <span class=\"kt\">Dep2</span> <span class=\"p\">]</span>\n\n<span class=\"nv\">value1</span> <span class=\"nf\">:</span> <span class=\"p\">{}</span> <span class=\"nf\">-&gt;</span> <span class=\"kt\">Str</span>\n<span class=\"nv\">value1</span> <span class=\"nf\">=</span> <span class=\"nf\">\\</span><span class=\"nv\">_</span> <span class=\"nf\">-&gt;</span> <span class=\"kt\">Dep2</span><span class=\"nf\">.</span><span class=\"nv\">value2</span> <span class=\"p\">{}</span>\n</code></pre></div>\n\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">interface</span> <span class=\"kt\">Dep2</span> <span class=\"nv\">exposes</span> <span class=\"p\">[</span> <span class=\"nv\">value2</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[]</span>\n\n<span class=\"nv\">value2</span> <span class=\"nf\">:</span> <span class=\"p\">{}</span> <span class=\"nf\">-&gt;</span> <span class=\"kt\">Str</span>\n<span class=\"nv\">value2</span> <span class=\"nf\">=</span> <span class=\"nf\">\\</span><span class=\"nv\">_</span> <span class=\"nf\">-&gt;</span> <span class=\"s\">\"Dep2.value2\"</span>\n</code></pre></div>\n\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span> <span class=\"kt\">Main</span> <span class=\"nv\">provides</span> <span class=\"p\">[</span> <span class=\"nv\">main</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[</span> <span class=\"kt\">Dep1</span> <span class=\"p\">]</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">:</span> <span class=\"kt\">Str</span>\n<span class=\"kr\">main </span><span class=\"nf\">=</span> <span class=\"kt\">Dep1</span><span class=\"nf\">.</span><span class=\"nv\">value1</span> <span class=\"p\">{}</span>\n</code></pre></div>",
        "id": 215021434,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1604002384
    },
    {
        "content": "<p>They all panic with different errors. It seems that currently I can only import functions from exactly one other file. BTW: I'm on MacOs.</p>",
        "id": 215021673,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1604002555
    },
    {
        "content": "<p>they all hit hard asserts though? Usually module loading problems result in a deadlock</p>",
        "id": 215023731,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1604003577
    },
    {
        "content": "<p>got this fixed in the PR. thanks for reporting/partially fixing!</p>",
        "id": 215393464,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1604359960
    },
    {
        "content": "<p>Here's a stripped down version of another problem. It compiles but on running it reports a \"pointer being freed was not allocated\" error (on MacOs):</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span> <span class=\"kt\">Main</span> <span class=\"nv\">provides</span> <span class=\"p\">[</span> <span class=\"nv\">main</span> <span class=\"p\">]</span> <span class=\"nv\">imports</span> <span class=\"p\">[]</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">:</span> <span class=\"kt\">Str</span>\n<span class=\"kr\">main </span><span class=\"nf\">=</span>\n    <span class=\"nv\">addText</span> <span class=\"nf\">=</span> <span class=\"nf\">\\</span><span class=\"nv\">addedText</span><span class=\"p\">,</span> <span class=\"nv\">oldText</span> <span class=\"nf\">-&gt;</span> <span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">concat</span> <span class=\"nv\">oldText</span> <span class=\"nv\">addedText</span>\n    <span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">walkRight</span> <span class=\"p\">[</span> <span class=\"s\">\"\"</span><span class=\"p\">,</span> <span class=\"s\">\"Very very long str\"</span> <span class=\"p\">]</span> <span class=\"nv\">addText</span> <span class=\"s\">\"\"</span>\n</code></pre></div>\n<p>It works if I use a short string, and works with the long string, too, if I switch the arguments of <code>Str.concat</code>. I tried to debug it in lldb, but haven't been able to find the culprit.</p>",
        "id": 216501693,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1605202628
    },
    {
        "content": "<p>Today is the first day of the Advent of Code programming contest. I'd like to \"participate\" using Roc as my programming language. As always, the first problem is really simple: given a list of 200 integers, find a pair where the sum is 2020 and output their product. Unfortunately, I haven't been able yet to implement this with the current trunk of the compiler. No matter which way I chose, the compiler is always yelling at me.</p>",
        "id": 218406340,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606820409
    },
    {
        "content": "<p>I'd be grateful if someone more knowledgeable in Roc / the compiler could give this a try. Link to the contest page: <a href=\"https://adventofcode.com\">https://adventofcode.com</a></p>",
        "id": 218406462,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606820496
    },
    {
        "content": "<p>Could you a share a minimal compiling example that is similar to the problem that you are trying to solve?</p>",
        "id": 218407291,
        "sender_full_name": "Anton",
        "timestamp": 1606821006
    },
    {
        "content": "<p>Thanks for the quick reply. Lunch break is over, so it'll be a couple of hours. Would you like a complete directory like in the examples folder or just a Roc file?</p>",
        "id": 218408991,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606822117
    },
    {
        "content": "<p>You're welcome :). The full directory would probably be the easiest.</p>",
        "id": 218409164,
        "sender_full_name": "Anton",
        "timestamp": 1606822218
    },
    {
        "content": "<p>from a quick experiment, it's easy to trigger <code>internal error: entered unreachable code: Invalid function basic value enum or layout for List.map</code>. I'll see if I can fix that</p>",
        "id": 218419465,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1606828346
    },
    {
        "content": "<p>Here's a repository I quickly setup: <a href=\"https://github.com/pithub/aoc2020\">https://github.com/pithub/aoc2020</a>. It assumes the Roc repository is in a parallel directory called \"lang\". So I have the directories \"roc/lang\" and \"roc/aoc2020\". I chose <code>List (List Int)</code> for the output format, because I had malloc/free problems with Strings, and wanted to output multiple values per test case.</p>",
        "id": 218440208,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606837966
    },
    {
        "content": "<p>Ah, I forgot to add the desired solution for the sample input:<br>\n\"In this list, the two entries that sum to 2020 are 1721 and 299. Multiplying them together produces 1721 * 299 = 514579, so the correct answer is 514579.\"</p>",
        "id": 218440292,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606838004
    },
    {
        "content": "<p>btw thank you so much <span class=\"user-mention\" data-user-id=\"358152\">@Pit Capitain</span> for being the first person to use Roc for Advent of Code...I'm really excited to see the bugs this will surface, and the resulting improvements to the compiler! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 218440970,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1606838249
    },
    {
        "content": "<p>You're very welcome <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> Unfortunately I haven't been able to fix some more problems - yet.</p>",
        "id": 218441920,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606838564
    },
    {
        "content": "<p>no worries! Finding out what they are is a major help on its own <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 218442273,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1606838703
    },
    {
        "content": "<p>yea so I made some steps, and I can find the correct answer, but not print it correctly, because there is a bug in <code>Str.concat</code></p>",
        "id": 218445752,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1606839956
    },
    {
        "content": "<p>Cool, Folkert. Any branch you can share? What do you need <code>Str.concat</code>for? At least for the first challenge, we'd only need an <code>Int</code>. (I also had problems using strings, so I switched to <code>List (List Int)</code> for the output.)</p>",
        "id": 218465862,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606849079
    },
    {
        "content": "<p>well you need to get the result out . You could pass the result through the FFI boundary, but I wanted to print it to stdout immediately</p>",
        "id": 218466858,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1606849520
    },
    {
        "content": "<p>Ah OK. I just use <code>RocCallResult&lt;RocList&lt;RocList&lt;i64&gt;&gt;&gt;</code> to return the results.</p>",
        "id": 218472659,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606852485
    },
    {
        "content": "<p>In the meantime, I found a working solution <span aria-label=\"rock on\" class=\"emoji emoji-1f918\" role=\"img\" title=\"rock on\">:rock_on:</span> And it's your sample code, Folkert, that made it possible <span aria-label=\"muscle\" class=\"emoji emoji-1f4aa\" role=\"img\" title=\"muscle\">:muscle:</span> <br>\nNow a little bit of cleaning up and then the next day's puzzle may come!</p>",
        "id": 218472766,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606852545
    },
    {
        "content": "<p>nice!</p>",
        "id": 218473383,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1606852861
    },
    {
        "content": "<p>cool! I'd love to see it, if you're comfortable sharing! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 218473950,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1606853140
    },
    {
        "content": "<p>I made some improvements here <a href=\"https://github.com/rtfeldman/roc/pull/756\">https://github.com/rtfeldman/roc/pull/756</a></p>",
        "id": 218477097,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1606854627
    },
    {
        "content": "<p>besides all the noise of the zig formatter, it makes the compiler work again on my machine by only conditionally following the arch path, can print <code>Result</code> in the repl, and allows <code>List.map</code> to call closures</p>",
        "id": 218477174,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1606854663
    },
    {
        "content": "<p>other builtins cannot yet call closures in all circumstances though</p>",
        "id": 218477209,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1606854680
    },
    {
        "content": "<p>Day 2 could also be solved with the current Roc, and I indeed used <a href=\"http://List.map\">List.map</a> with a closure, so thank you very much Folkert for this <span aria-label=\"handshake\" class=\"emoji emoji-1f91d\" role=\"img\" title=\"handshake\">:handshake:</span></p>",
        "id": 218586657,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606928547
    },
    {
        "content": "<p>The repository currently is here: <a href=\"https://github.com/pithub/aoc2020\">https://github.com/pithub/aoc2020</a>. If there's interest, where and how should I write about my trials and errors? I could add some notes and create branches in this repository with the different variations I tried, but maybe there's a better way?</p>",
        "id": 218588384,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606929164
    },
    {
        "content": "<p>nice very cool</p>",
        "id": 218591419,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1606930474
    },
    {
        "content": "<p>If you have variations that you thought should work but don't, putting them on a branch would be reasonable. Otherwise, comments or just a text log would probably be useful.</p>",
        "id": 218606518,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1606937233
    },
    {
        "content": "<p>hahaha I <em>love</em> that you actually used our quicksort implementation for a real solution! <span aria-label=\"joy cat\" class=\"emoji emoji-1f639\" role=\"img\" title=\"joy cat\">:joy_cat:</span></p>",
        "id": 218614786,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1606940971
    },
    {
        "content": "<p>brilliant!</p>",
        "id": 218614799,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1606940980
    },
    {
        "content": "<p>I added <a href=\"https://github.com/pithub/aoc2020/blob/master/Day02.md\">a document</a> describing what I tried today, what failed and what succeeded.</p>",
        "id": 218627992,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1606947338
    },
    {
        "content": "<p>wow, super helpful!</p>",
        "id": 218629348,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1606948104
    },
    {
        "content": "<p>ok the original <code>countMember</code> implementation should now work on <code>trunk</code>!</p>",
        "id": 218651570,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1606968152
    },
    {
        "content": "<p>it was complaining about <code>keepIf</code> needing another argument in <code>|&gt; List.keepIf isGivenElement</code> because under those particular circumstances it was parsing <code>isGivenElement</code> as an <code>is</code> keyword (from <code>when</code> / <code>is</code>) instead of an argument</p>",
        "id": 218651695,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1606968323
    },
    {
        "content": "<p>fixed now!</p>",
        "id": 218651715,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1606968344
    },
    {
        "content": "<p>I think I’m jealous of all this AOC roc code being written :p lol</p>",
        "id": 218697871,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1607005032
    },
    {
        "content": "<p>Just wanted to say thank you for all the work currently going on, some of which will be immediately helpful for the next puzzles. Yesterday I had a very long work day because of a production problem, so I hadn't enough time yet to write about the Day 3 experience. All puzzles could be solved yet <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 218793437,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607056360
    },
    {
        "content": "<p>Concerning the long build times for long input data: if I have time, I'll try to change the platform code to read the puzzle input from a file and pass the <code>List (List Int)</code> data as a parameter to the Roc main function. This way I could avoid the long literals.</p>",
        "id": 218793542,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607056523
    },
    {
        "content": "<blockquote>\n<p>I think I’m jealous of all this AOC roc code being written :p lol</p>\n</blockquote>\n<p>You can join the contest any time you like <span aria-label=\"smirk\" class=\"emoji emoji-1f60f\" role=\"img\" title=\"smirk\">:smirk:</span> Pull requests are always welcome, too...</p>",
        "id": 218793814,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607056868
    },
    {
        "content": "<p>awesome</p>",
        "id": 218876100,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1607108016
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"358152\">@Pit Capitain</span> I'll soon push a fix for the stack overflow for large literals. Just to check, were you building the compiler with <code>--release</code> mode? it really speeds up the compilation process on my machine (~7 seconds to &lt; 1)</p>",
        "id": 218961658,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1607215682
    },
    {
        "content": "<p><span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span> this is now merged into <code>trunk</code>!</p>",
        "id": 218966925,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1607226081
    },
    {
        "content": "<p>Thank you both. I always compiled without <code>--release</code>. Not knowing Rust very well, I assumed that using it would perform more optimisations and there fore would be even slower <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 218968606,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607229422
    },
    {
        "content": "<p>Yesterday I added a file reader effect to my platform, so currently I'm not dependent on large literals anymore. But as soon as parsing the input wouldn't work or the test data gets bigger, I would need it. I'll definitely give it a go!</p>",
        "id": 218968684,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607229601
    },
    {
        "content": "<blockquote>\n<p>Yesterday I added a file reader effect to my platform, so currently I'm not dependent on large literals anymore.</p>\n</blockquote>\n<p>wow, I think that makes you the first person to ever solve a problem in Roc by adding a new effect to the platform! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 218984770,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1607257826
    },
    {
        "content": "<p>glad to hear that solution worked!</p>",
        "id": 218984784,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1607257877
    },
    {
        "content": "<p>Yeah, it worked almost flawlessly. There were some problems, but for my usecase all went well.</p>",
        "id": 218989666,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607265778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> I went back to debug mode, because in release mode effects didn't work for me. The effect example had the same problem. I think the compiler reported that it couldn't find the <code>Effect.roc</code>file. Seems not too hard to fix, but I preferred to refactor my code from the last days in order to be better prepared for the next puzzles...</p>",
        "id": 218989936,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607266177
    },
    {
        "content": "<p>if you have no imports in your app module (builtin modules don't count for this) you can comment out this section and <code>--release</code> should work</p>\n<div class=\"codehilite\"><pre><span></span><code>    // all the dependencies can be loaded\n    for dep in dependencies {\n        // TODO figure out how to &quot;load&quot; (because it doesn&#39;t exist on the file system) the Effect module\n        if !format!(&quot;{:?}&quot;, dep).contains(&quot;Effect&quot;) {\n            output.insert((*dep, LoadHeader));\n        }\n    }\n</code></pre></div>",
        "id": 218998964,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1607280906
    },
    {
        "content": "<p>in <code>load/src/file.rs</code> line ~143</p>",
        "id": 218998967,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1607280920
    },
    {
        "content": "<p><a href=\"https://github.com/rtfeldman/roc/pull/752\">https://github.com/rtfeldman/roc/pull/752</a><br>\nthis might help with that once it's done?</p>",
        "id": 218999034,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1607281000
    },
    {
        "content": "<p>yup!</p>",
        "id": 218999042,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1607281015
    },
    {
        "content": "<p>I'm gonna show it some more love today. I have to admit it's been challenging but I make some progress every time I touch it</p>",
        "id": 218999052,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1607281044
    },
    {
        "content": "<p>Thank you Folkert, I will try this eventually. Thank you too, Lucas, but please don't change your priorities jut because of my trials. So far it has been a nice experience overall. Let's see how far I'll get if the puzzles get harder to solve...</p>",
        "id": 219001486,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607283289
    },
    {
        "content": "<p>Just a short update from AoC 2020: I could solve all puzzles so far with Roc programs (a few times externally preprocessing the puzzle input text) <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 219694742,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607756719
    },
    {
        "content": "<p>Unfortunately, I'm still stuck at commit 149d10ea. The effect examples don't work on my MacBook for newer commits. Here's a short summary of the examples in trunk (\"r\" means building with <code>--release</code>, \"o\" with <code>--optimize</code>:</p>",
        "id": 219694794,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607756801
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>example           ro   r-   -o   --\n----------------  ---  ---  ---  ---\nbalance           fnf  fnf  fnf  fnf\nclosure           ok   ok   ok   ok\neffect            tmm  hlt  tmm  hlt\nhello-world       ok   ok   ok   ok\nquicksort         ok   ok   ok   ok\nshared-quicksort  ok   ok   ok   ok\ntask              gaa  ftr  gaa  ftr\n\nfnf\n  FileProblem { filename: &quot;/Users/pit/Documents/work/roc/trunk/examples/balance/Effect.roc&quot;, error: NotFound, msg: &quot;in `load_filename`&quot; }\n  compiler/load/src/file.rs:1261:46\n\nftr\n  Failed to run app after building it: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }\n  cli/src/lib.rs:124:35\n\ngaa\n  TODO generate aa, ab, ac, ...\n  compiler/types/src/types.rs:1457:9\n\nhlt\n  app builds but doesn&#39;t terminate\n\ntmm\n  Roc failed with message: Hit an erroneous type when creating a layout for `11.IdentId(3)`\n  src/lib.rs:108:17\n</code></pre></div>",
        "id": 219694854,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1607756887
    },
    {
        "content": "<p>I think you should try things without <code>--optimize</code>; the uniqueness analysis is not entirely reliable</p>",
        "id": 219706229,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1607775764
    },
    {
        "content": "<p>especially with effects, which are defined as a recursive tag union, type errors are almost guaranteed</p>",
        "id": 219706249,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1607775790
    },
    {
        "content": "<p>the <code>FileProblem</code> is something I've seen too, but it seems infrequent and hard to reproduce (I'm assuming the problem is a race condition in <code>file.rs</code>)</p>",
        "id": 219706260,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1607775837
    },
    {
        "content": "<p>to elaborate on that, we had some regressions in the uniqueness analysis that we decided not to look into because there's a solid chance we'll end up overhauling that whole system in the near-ish future anyway <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 219707136,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1607776972
    },
    {
        "content": "<p>I got stuck on my AoC adventure. I'll write more about this soon. Currently I'm trying to update the compiler. Unfortunately, something seems to be wrong on my Mac running Catalina. For the task example the linker says: <code>Undefined symbols for architecture x86_64:  \"start\", referenced from: implicit entry/start for main executable. ld: symbol(s) not found for architecture x86_64</code></p>",
        "id": 220479238,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1608398870
    },
    {
        "content": "<p>If i add the parameters \"-e _main\", it says: <code>ld: targeted OS version does not support use of thread local variables in _std.debug.panicExtra for architecture x86_64</code></p>",
        "id": 220479243,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1608398880
    },
    {
        "content": "<p>Any hint what I could do to make the examples run again?</p>",
        "id": 220479289,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1608398915
    },
    {
        "content": "<p>what language is your host written in?</p>",
        "id": 220479711,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1608399646
    },
    {
        "content": "<p>looks like it might be zig?</p>",
        "id": 220479714,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1608399655
    },
    {
        "content": "<p>It is the task example. I also think it could be something with zig. My version is 0.7.0+391d81a38. Btw: thank you Folkert for the fast reply.</p>",
        "id": 220480713,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1608401506
    },
    {
        "content": "<p>yea its platform is written in zig, so you may have better luck with the <code>effect</code> examples as a foundation</p>",
        "id": 220480777,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1608401611
    },
    {
        "content": "<p>and I think we could update to the latest zig release</p>",
        "id": 220480783,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1608401630
    },
    {
        "content": "<p>OK, I'll try that.</p>",
        "id": 220480832,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1608401657
    },
    {
        "content": "<p>so that would be 0.7.1 I think</p>",
        "id": 220480833,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1608401661
    },
    {
        "content": "<p>Yeah, I've been meaning to upgrade to the latest zig version since 0.7 came out</p>",
        "id": 220481969,
        "sender_full_name": "Jared Ramirez",
        "timestamp": 1608403600
    },
    {
        "content": "<p>Has anyone ever encountered this error when trying to run <code>cargo clippy</code> or  <code>cargo test</code> locally? I am on ubuntu 20.04.2 LTS</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;Could not execute clang: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }&#39;, roc_std/build.rs:36:10\n</code></pre></div>\n<p>I have <code>clang++-10</code> installed is there another version that I should have?</p>",
        "id": 230126852,
        "sender_full_name": "erichenry",
        "timestamp": 1615601226
    },
    {
        "content": "<p>sorry if this isn't the right channel for this &gt;.&lt;</p>",
        "id": 230126861,
        "sender_full_name": "erichenry",
        "timestamp": 1615601245
    },
    {
        "content": "<p>we use <code>clang</code> there, by default the alias is <code>clang-10</code> I think</p>",
        "id": 230130566,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1615605220
    },
    {
        "content": "<p>so a symlink should do the trick</p>",
        "id": 230130571,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1615605228
    },
    {
        "content": "<p>general fyi for everyone, you can always check the Earthfile for the complete \"installation from source procedure\" for debian based operating systems that is always up to date. You may still need additional dependencies to run the editor. I'll add an issue for that.</p>",
        "id": 230149936,
        "sender_full_name": "Anton",
        "timestamp": 1615626591
    },
    {
        "content": "<p>Thanks guys!</p>",
        "id": 230156251,
        "sender_full_name": "erichenry",
        "timestamp": 1615634507
    },
    {
        "content": "<p>Linking did the trick! also the Earth file was super helpful! ended up fixing a couple of things thanks to it <span aria-label=\"muscle\" class=\"emoji emoji-1f4aa\" role=\"img\" title=\"muscle\">:muscle:</span></p>",
        "id": 230161451,
        "sender_full_name": "erichenry",
        "timestamp": 1615640502
    },
    {
        "content": "<p>Nice. I'm on MacOS. I've downloaded a pre-built LLVM and then added this little function to my <code>.zshrc</code>. I use this function as a prefix before every cargo command when running roc.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>rocx<span class=\"o\">()</span> <span class=\"o\">{</span>\n  <span class=\"nv\">LLVM_SYS_100_PREFIX</span><span class=\"o\">=</span>~/Downloads/llvm <span class=\"nv\">PATH</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$PATH</span><span class=\"s2\">:</span><span class=\"nv\">$PWD</span><span class=\"s2\">/nix/bin:~/Downloads/llvm:~/Downloads/llvm/bin\"</span> <span class=\"nv\">$@</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 230183455,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1615663516
    },
    {
        "content": "<p>ex: <code>rocx cargo run repl</code></p>",
        "id": 230183482,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1615663557
    },
    {
        "content": "<p>Although, I think I want to start using Linux for roc dev stuff. I'm on the fence between building a machine, buying a decent laptop, or dual booting on my MacBook. If anyone has any recommendations I'm open :D</p>",
        "id": 230183554,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1615663628
    },
    {
        "content": "<p>in the past (last time I tried was...I think 5 years ago?) I've had problems with battery life when dual booting a MacBook to Linux - also the keyboard layout is kinda weird, because Linux wants all the keyboard shortcuts to be Ctrl- based, whereas Mac wants them all to be Cmd-based, and the MacBook keyboard doesn't have the Ctrl key in a particularly comfortable place imo</p>",
        "id": 230185995,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1615666228
    },
    {
        "content": "<p>I have a Linux desktop and a Razer Blade 14\" laptop, both dual booting Windows and Linux, and have been overall happy with both!</p>",
        "id": 230186031,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1615666262
    },
    {
        "content": "<p>Nice I'll look into that model thanks. By the time I graduated college I was running NixOS on Mac via dual boot. XMonad and no DE smh lol. Working on a contract using emacs and elixir, those where the days. Functional down to the OS lol</p>",
        "id": 230186897,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1615667332
    },
    {
        "content": "<p>I really like my DIY desktop. The case, power supply, RAM and SSD are all things that can last several upgrade cycles and save you money this way. The form factor allows for much more powerful cooling than a laptop and thus a more powerful CPU and/or graphics card.</p>",
        "id": 230224485,
        "sender_full_name": "Anton",
        "timestamp": 1615711849
    },
    {
        "content": "<p>Whenever I run a program, I get a little message 'ld: framework not found Security'</p>",
        "id": 235988878,
        "sender_full_name": "Chad Stearns",
        "timestamp": 1619286175
    },
    {
        "content": "<p>But the program runs fine anyway.</p>",
        "id": 235988904,
        "sender_full_name": "Chad Stearns",
        "timestamp": 1619286183
    },
    {
        "content": "<p>Should I make an issue?</p>",
        "id": 235988907,
        "sender_full_name": "Chad Stearns",
        "timestamp": 1619286186
    },
    {
        "content": "<p>It's mostly just so that the CLI example runs properly due to a dependency in the Rust platform that the CLI example uses <span class=\"user-mention\" data-user-id=\"281385\">@Chad Stearns</span></p>",
        "id": 235990370,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1619287237
    },
    {
        "content": "<p>long term we wouldn't be doing that anyways. On my mac <code>ld</code> also can't find the security framework so I just comment out those args</p>",
        "id": 235990441,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1619287307
    }
]