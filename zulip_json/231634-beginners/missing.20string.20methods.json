[
    {
        "content": "<p>I see Str doesnt have len or reverse or get functions<br>\nis it planned?</p>",
        "id": 326921865,
        "sender_full_name": "dank",
        "timestamp": 1675978869
    },
    {
        "content": "<p>I can't say for certain, but I'd guess that these are platform independent and would be provided by the platform. E.g. the length of a string sent to your terminal has varying lengths depending whether you're talking about the byte length, character length, or display length (width)</p>",
        "id": 326923137,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1675979393
    },
    {
        "content": "<p>You could do <code>\"foo\" |&gt; Str.graphemes |&gt; List.len</code>. But I do agree that just having something like <code>Str.len</code> and <code>Str.byte_len</code> would be nice.</p>",
        "id": 326930484,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1675982620
    },
    {
        "content": "<p>Oh wait, there is <code>Str.countGraphemes</code> <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 326930610,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1675982671
    },
    {
        "content": "<p>I think these functions are in weird unicode related limbo. I think they likely won't be added and instead have alternatives that care either about bytes or about graphemes.</p>",
        "id": 326931289,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1675982993
    },
    {
        "content": "<p>That said, I don't really understand unicode and the complexities here. I just know that a lot of those functions have sharp edges so we are likely to give alternatives and no default so that people are more likely to read the docs and pick the function that does the right thing.</p>",
        "id": 326931420,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1675983037
    },
    {
        "content": "<p>So no <code>Str.len</code> instead there are <code>Str.countGraphemes</code> and <code>Str.countUtf8Bytes</code></p>",
        "id": 326931521,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1675983089
    },
    {
        "content": "<p>similar with the other functions: should reverse be on bytes or graphemes. One answer can give wrong results, the other is exceptionally slow.</p>",
        "id": 326932172,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1675983342
    },
    {
        "content": "<p>For get, I think the plan is to have people convert to lists to bytes and get the byte from the list. With seamless slices (which will be added one day) this should be doable without copying the string. Though that wouldn't work with graphemes, so I'm not sure how that affects the plan.</p>",
        "id": 326932364,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1675983430
    },
    {
        "content": "<p>I thought there was a plan to have a Unicode package, and not a builtin to provide some of this functionality?</p>",
        "id": 326933332,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675983915
    },
    {
        "content": "<p>Found Richards comment <a href=\"#narrow/stream/231634-beginners/topic/Str.2EfromScalar/near/320826042\">on zulip</a></p>",
        "id": 326933526,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675984007
    },
    {
        "content": "<p>I might be misunderstanding as that discussion was around scalars.</p>",
        "id": 326933578,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675984041
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/missing.20string.20methods/near/326932172\">said</a>:</p>\n<blockquote>\n<p>similar with the other functions: should reverse be on bytes or graphemes. One answer can give wrong results, the other is exceptionally slow.</p>\n</blockquote>\n<p>when can reverse give wrong answers</p>",
        "id": 326933614,
        "sender_full_name": "dank",
        "timestamp": 1675984071
    },
    {
        "content": "<p>I think there a <a href=\"https://invisible-characters.com/\">invisible characters</a> with unicode that make it more complicated than reversing bytes.</p>",
        "id": 326933895,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675984204
    },
    {
        "content": "<p>Actually I think it might be due to <a href=\"https://unicodebook.readthedocs.io/unicode_encodings.html\">surrogates</a>. I'm not 100% here.</p>",
        "id": 326934935,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1675984755
    },
    {
        "content": "<p>I believe that technically speaking, you're never supposed to see \"unpaired surrogate pairs\" at the level of unicode codepoints. That's a detail specifically designed for UTF-16 encoding. Decoding the UTF-16  is supposed to eliminate them - but in practice bugs are a thing.</p>",
        "id": 326936945,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1675985903
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/231634-beginners/topic/missing.20string.20methods/near/326933332\">said</a>:</p>\n<blockquote>\n<p>I thought there was a plan to have a Unicode package, and not a builtin to provide some of this functionality?</p>\n</blockquote>\n<p>Yeah, a major goal is to enable a lot of this to be done in userland. So a Unicode package in userland is very likely.</p>",
        "id": 326937176,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1675986052
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"583319\">dank</span> <a href=\"#narrow/stream/231634-beginners/topic/missing.20string.20methods/near/326933614\">said</a>:</p>\n<blockquote>\n<p>when can reverse give wrong answers</p>\n</blockquote>\n<p><a href=\"https://mortoray.com/the-string-type-is-broken/\">https://mortoray.com/the-string-type-is-broken/</a></p>",
        "id": 326937388,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1675986181
    },
    {
        "content": "<p>I definitely think we should not have a <code>reverse</code> function</p>",
        "id": 326946517,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1675991208
    },
    {
        "content": "<p>Whatever will kids do if they can't make their computer do funny things by reversing a string and piping it to the <code>say</code> command?</p>",
        "id": 326946670,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1675991289
    },
    {
        "content": "<p>yeah the thing is it's super error prone and I can't think of any use cases I've ever seen for it other than tutorials</p>",
        "id": 326946697,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1675991316
    }
]