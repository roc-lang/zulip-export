[
    {
        "content": "<p>I'm currently trying to figure out how to work with <code>Env.exePath</code>. However when I try to log it it shows as <code>memfd:roc_file_descriptor (deleted)</code>. Is this a bug?</p>\n<p>My code:</p>\n<div class=\"codehilite\"><pre><span></span><code>    cwd = Env.exePath!\n    cwdStr = Path.display cwd\n    dbg cwdStr\n</code></pre></div>",
        "id": 482886731,
        "sender_full_name": "Scally",
        "timestamp": 1731869417
    },
    {
        "content": "<p>Oh  interesting, if I run <code>roc foo.roc</code> it creates a <code>foo</code> application in the same folder but <code>Env.exePath</code> is broken.<br>\nIf I then run that created <code>foo</code> application though it works as expected. Is there any way to get <code>Env.exePath</code> working when running as <code>roc foo.roc</code>?</p>",
        "id": 482887117,
        "sender_full_name": "Scally",
        "timestamp": 1731869750
    },
    {
        "content": "<p><code>roc foo.roc</code> runs the app from in memory. It really shouldn't actually create the <code>foo</code> application in the local folder at all.</p>",
        "id": 482888144,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731870574
    },
    {
        "content": "<p>It is meant to work with roc as a scripting language</p>",
        "id": 482888203,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731870603
    },
    {
        "content": "<p>That said, roc should be overwriting that path such that the executable path is <code>foo.roc</code> or whatever path is given to roc</p>",
        "id": 482888229,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731870633
    },
    {
        "content": "<p>I feel like someone recently was working on fixing that. Not sure the state though</p>",
        "id": 482888243,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731870653
    },
    {
        "content": "<p>Running it as a scripting only executable was kind of what I was expecting so I was surprised the application was created but I thought it just did a compile + run operation in the background.</p>\n<p>Overwriting the path in script-mode run seems reasonable and would work for my use-case. Good that there is awareness of that. Do you know if there is a Github issue for it or something like that?</p>",
        "id": 482888620,
        "sender_full_name": "Scally",
        "timestamp": 1731870964
    },
    {
        "content": "<p>Is this the PR you're thinking of <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> <a href=\"https://github.com/roc-lang/roc/pull/7172\">https://github.com/roc-lang/roc/pull/7172</a></p>",
        "id": 482892358,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1731874192
    },
    {
        "content": "<p>If that's the one that is only for <code>args[0]</code>. I just checked an that is indeed the file I'd expect, although sadly not a full path. <br>\nIt seems that fix has no impact on <code>Env.exePath</code>though.</p>",
        "id": 482893882,
        "sender_full_name": "Scally",
        "timestamp": 1731875434
    },
    {
        "content": "<p>Here is the impl in the platform <a href=\"https://github.com/roc-lang/basic-cli/blob/918c1dcd2a863ea336e9fa0e70fa548f7107b6f0/crates/roc_host/src/lib.rs#L432\">https://github.com/roc-lang/basic-cli/blob/918c1dcd2a863ea336e9fa0e70fa548f7107b6f0/crates/roc_host/src/lib.rs#L432</a></p>",
        "id": 482894146,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1731875651
    },
    {
        "content": "<blockquote>\n<p>Is this the PR you're thinking of <span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"https://github.com/roc-lang/roc/pull/7172\">https://github.com/roc-lang/roc/pull/7172</a></p>\n</blockquote>\n<p>Yes. Thanks for finding it</p>",
        "id": 482894636,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731876046
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"772522\">Scally</span> <a href=\"#narrow/channel/231634-beginners/topic/basic-cli.20debugging.20Env.2EexePath/near/482893882\">said</a>:</p>\n<blockquote>\n<p>If that's the one that is only for <code>args[0]</code>. I just checked an that is indeed the file I'd expect, although sadly not a full path.<br>\nIt seems that fix has no impact on <code>Env.exePath</code>though.</p>\n</blockquote>\n<p>You should be able to join <code>args[0]</code> onto the current working directory to get a full path. I do this in a different platform and it works. <code>args[0]</code> is just the file you pass to <code>roc run</code>, so if the person running the script passed a relative path, then <code>args[0]</code> is a relative path.</p>\n<p>It looks like the rust implementation of <code>current_exe</code> for unix is here:<br>\n<a href=\"https://github.com/rust-lang/rust/blob/a8e75c53d0036b5d012cbc0ee5de17f8991fe60c/library/std/src/sys/pal/unix/os.rs#L253\">https://github.com/rust-lang/rust/blob/a8e75c53d0036b5d012cbc0ee5de17f8991fe60c/library/std/src/sys/pal/unix/os.rs#L253</a></p>\n<p>They look in the args list as well, but then do extra work, first searching from the <code>CWD</code> and then the <code>PATH</code>. Not sure why that would fail <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span>.</p>\n<p>Did you change the current working directory prior to that code running?</p>",
        "id": 482896639,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1731877819
    },
    {
        "content": "<p>Oh, nevermind, I was looking at the wrong OS. This is linux (don't know if that's the OS you're on), and it looks at <code>/proc/self/exe</code> for <code>current_exe</code>:<br>\n<a href=\"https://github.com/rust-lang/rust/blob/a8e75c53d0036b5d012cbc0ee5de17f8991fe60c/library/std/src/sys/pal/unix/os.rs#L406\">https://github.com/rust-lang/rust/blob/a8e75c53d0036b5d012cbc0ee5de17f8991fe60c/library/std/src/sys/pal/unix/os.rs#L406</a></p>\n<p>I don't know if we can fake <code>/proc/self/exe</code> in the Roc script runner to point to the Roc script rather than the compiler binary, my guess would be no. Maybe the platform shouldn't rely on Rust <code>current_exe</code> and instead use <code>argv0</code>, potentially implementing something like the <code>cwd/PATH</code> search code I linked above that Rust falls back on for OS-es that don't support <code>/proc/self/exe</code>.</p>",
        "id": 482896906,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1731878067
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"477725\">Jasper Woudenberg</span> <a href=\"#narrow/channel/231634-beginners/topic/basic-cli.20debugging.20Env.2EexePath/near/482896639\">said</a>:</p>\n<blockquote>\n<p>You should be able to join <code>args[0]</code> onto the current working directory to get a full path. I do this in a different platform and it works. <code>args[0]</code> is just the file you pass to <code>roc run</code>, so if the person running the script passed a relative path, then <code>args[0]</code> is a relative path.</p>\n</blockquote>\n<p>That was my plan now but would be nice if I could just use exePath.</p>\n<p>What do you mean by changing the current working director prior to that code running?<br>\nI'm running roc from a parent directory (i.e. <code>roc src/script.roc</code>) but inside the script are no changes in working directory.</p>",
        "id": 482896926,
        "sender_full_name": "Scally",
        "timestamp": 1731878088
    },
    {
        "content": "<p>Yes, I am indeed on linux</p>",
        "id": 482896957,
        "sender_full_name": "Scally",
        "timestamp": 1731878106
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"477725\">Jasper Woudenberg</span> <a href=\"#narrow/channel/231634-beginners/topic/basic-cli.20debugging.20Env.2EexePath/near/482896906\">said</a>:</p>\n<blockquote>\n<p>I don't know if we can fake <code>/proc/self/exe</code> in the Roc script runner to point to the Roc script rather than the compiler binary, my guess would be no. Maybe the platform shouldn't rely on Rust <code>current_exe</code> and instead use <code>argv0</code>, potentially implementing something like the <code>cwd/PATH</code> search code I linked above that Rust falls back on for OS-es that don't support <code>/proc/self/exe</code>.</p>\n</blockquote>\n<p>That seems like a good solution if the <code>/proc/self/exe</code> route indeed fails when running as a script.</p>",
        "id": 482897037,
        "sender_full_name": "Scally",
        "timestamp": 1731878172
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span> Yep, I think it'd be a good issue to create on the <code>basic-cli</code> repo. Happy to do it if you don't want to!</p>",
        "id": 482897159,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1731878283
    },
    {
        "content": "<p>Can do</p>",
        "id": 482897180,
        "sender_full_name": "Scally",
        "timestamp": 1731878309
    },
    {
        "content": "<p>Issue link for reference <a href=\"https://github.com/roc-lang/basic-cli/issues/265\">https://github.com/roc-lang/basic-cli/issues/265</a></p>",
        "id": 482898510,
        "sender_full_name": "Scally",
        "timestamp": 1731879427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"477725\">@Jasper Woudenberg</span> do you intend to look at Issue in basic-cli?</p>",
        "id": 482908485,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1731888997
    },
    {
        "content": "<p>Yeah, though in a couple of days as I've got a busy couple of days ahead!</p>",
        "id": 482940979,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1731912043
    },
    {
        "content": "<p>Alg, just clarifying. No rush or anything</p>",
        "id": 482946036,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1731914370
    }
]