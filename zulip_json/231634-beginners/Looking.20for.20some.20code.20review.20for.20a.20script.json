[
    {
        "content": "<p>I wrote my own <code>fortune</code> script in Python a while ago, and I just rewrote it in Roc to get a comparison. I'm interested to get some feedback on if what I've written is \"idiomatic Roc\", plus there's a bug where the command always produces an exit code of 1, so if someone has a suggestion for what I'm doing wrong that'd be good too. The repo is <a href=\"https://github.com/Hasnep/roc-fortune\">here</a>. Thanks in advance :)</p>",
        "id": 415956505,
        "sender_full_name": "Hannes",
        "timestamp": 1705469474
    },
    {
        "content": "<blockquote>\n<p>List.keepIf (\\f -&gt; f |&gt; Str.isEmpty |&gt; Bool.not)</p>\n</blockquote>\n<p><code>List.dropIf Str.isEmpty</code></p>",
        "id": 415957309,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705470107
    },
    {
        "content": "<p>Nit, skip the variable here, just leave is as one pipe:</p>\n<div class=\"codehilite\"><pre><span></span><code>        fortunes = fortunesStr |&gt; ...\n        getRandomFortune fortunes\n</code></pre></div>\n<p>Just:</p>\n<div class=\"codehilite\"><pre><span></span><code>    fortuesStr\n    |&gt; ...\n    |&gt; getRandomFortune\n</code></pre></div>",
        "id": 415957429,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705470181
    },
    {
        "content": "<p><code>Stderr.line</code> and <code>Stdout.line</code> will never error:</p>\n<div class=\"codehilite\"><pre><span></span><code>Stderr.line &quot;Couldn&#39;t get config folder :(&quot; |&gt; Task.mapErr (\\_ -&gt; 1)\n</code></pre></div>\n<p>You probably want to print the message then set the error value no matter what. So that would be an await followed by <code>Task.err 1</code></p>",
        "id": 415957939,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705470520
    },
    {
        "content": "<blockquote>\n<p>pathAppend : Path.Path, Str -&gt; Path.Path<br>\npathAppend = \\p, s -&gt; p |&gt; Path.display |&gt; Str.concat \"/\" |&gt; Str.concat s |&gt; Path.fromStr</p>\n</blockquote>\n<p>.... I guess we missed that api in Path. Definitely should add that to basic cli.</p>",
        "id": 415958059,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705470607
    },
    {
        "content": "<p>Personally I am not a big fan of the long line piping:</p>\n<div class=\"codehilite\"><pre><span></span><code>fortunes |&gt; List.get randomIndex |&gt; Result.withDefault &quot;&quot; |&gt; Task.ok\n</code></pre></div>\n<p>I think it reads nicer as:</p>\n<div class=\"codehilite\"><pre><span></span><code>fortunes\n|&gt; List.get randomIndex\n|&gt; Result.withDefault &quot;&quot;\n|&gt; Task.ok\n</code></pre></div>",
        "id": 415958286,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705470786
    },
    {
        "content": "<p>Why remove your most random values with division?</p>\n<div class=\"codehilite\"><pre><span></span><code>    |&gt; Utc.toMillisSinceEpoch\n    |&gt; Num.divTrunc 1_000_000_000\n</code></pre></div>\n<p>Also, why not <code>Nanos</code>?</p>",
        "id": 415958481,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705470933
    },
    {
        "content": "<p>Personally I find that this reads quite dense:</p>\n<div class=\"codehilite\"><pre><span></span><code>    getXdgConfigHome = Env.var &quot;XDG_CONFIG_HOME&quot; |&gt; Task.map Path.fromStr\n    getHome = Env.var &quot;HOME&quot; |&gt; Task.map Path.fromStr\n    getXdgConfigHome\n    |&gt; Task.onErr (\\_ -&gt; getHome |&gt; Task.map (\\h -&gt; h |&gt; pathAppend &quot;.config&quot;))\n    |&gt; Task.mapErr (\\_ -&gt; CouldntGetConfigFolder)\n</code></pre></div>\n<p>Especially this line:</p>\n<div class=\"codehilite\"><pre><span></span><code>|&gt; Task.onErr (\\_ -&gt; getHome |&gt; Task.map (\\h -&gt; h |&gt; pathAppend &quot;.config&quot;))\n</code></pre></div>\n<p>No immediate fix thought, but not a fan of it.</p>",
        "id": 415958578,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705470983
    },
    {
        "content": "<p>Ok. That is my list of essentially all nit picks</p>",
        "id": 415958620,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705471020
    },
    {
        "content": "<p>As for returned exit code, it looks like basic cli currently ignores the exit code. We used to have <code>Process.exit</code>, at least I think we did, but that also seems to be gone.</p>",
        "id": 415958972,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705471239
    },
    {
        "content": "<p>So the exit code being wrong is a basic cli bug</p>",
        "id": 415958995,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705471259
    },
    {
        "content": "<p>Thanks Brendan, that's really helpful! Lots to improve :)</p>\n<p>The reason I divided by 1 billion is because the value returned by <code>toMillisSinceEpoch</code> always ended with many zeros, not sure why <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span>  I'll look into it when I do the other refactors you've suggested</p>\n<p>Glad to know the exit code isn't a problem with my code :)</p>",
        "id": 415959764,
        "sender_full_name": "Hannes",
        "timestamp": 1705471760
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/158\">https://github.com/roc-lang/basic-cli/pull/158</a></p>",
        "id": 415960338,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705472169
    },
    {
        "content": "<blockquote>\n<p>The reason I divided by 1 billion is because the value returned by toMillisSinceEpoch always ended with many zeros, not sure why <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> I'll look into it when I do the other refactors you've suggested</p>\n</blockquote>\n<p>Another bug in basic cli</p>\n<div class=\"codehilite\"><pre><span></span><code>toMillisSinceEpoch : Utc -&gt; U128\ntoMillisSinceEpoch = \\@Utc nanos -&gt;\n    nanos * nanosPerMilli\n</code></pre></div>\n<p>That should be division</p>",
        "id": 415960758,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705472479
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/basic-cli/pull/159\">https://github.com/roc-lang/basic-cli/pull/159</a></p>",
        "id": 415960917,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705472613
    },
    {
        "content": "<p>Nice work fixing those.</p>",
        "id": 415994453,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1705486726
    }
]