[
    {
        "content": "<p>I'm working through AoC and I want to split off my parsing code from my main.roc file, so that I can separate my puzzle logic from my input logic. I tried making different combinations of package and interface modules, but regardless I keep getting compile errors (mostly around my \"imports\" lines, for whatever reason).</p>\n<p>-&gt; <strong>what's a minimal example of a Roc app module that pulls code from other local modules?</strong></p>\n<h1>my latest attempt at a minimal e.g.:</h1>\n<p>file structure:</p>\n<div class=\"codehilite\"><pre><span></span><code>├── deps\n│   ├── ParsedText.roc\n│   └── main.roc\n├── input.txt\n└── main.roc\n</code></pre></div>\n<p><code>main.roc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">app</span><span class=\"w\"> </span><span class=\"s\">\"day2\"</span>\n<span class=\"w\">    </span><span class=\"nx\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nv\">pf</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.7.0/bkGby8jb0tmZYsy2hg1E_B2QrCgcSTxdUlHtETwm5m4.tar.br\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nv\">deps</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"deps/main.roc\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"nx\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"nx\">pf</span><span class=\"p\">.</span><span class=\"nx\">Stdout</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nx\">deps</span><span class=\"p\">.</span><span class=\"nx\">ParsedText</span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"nx\">text</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"nx\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"nx\">to</span><span class=\"w\"> </span><span class=\"nx\">pf</span>\n\n<span class=\"nv\">main</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">    </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"> </span><span class=\"nx\">text</span>\n</code></pre></div>\n<p><code>deps/main.roc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">package</span><span class=\"w\"> </span><span class=\"s\">\"deps\"</span>\n<span class=\"w\">    </span><span class=\"nx\">exposes</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">ParsedText</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"nx\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\"># I also want this code to depend on an external package, w/o having to pollute my app code's dependencies</span>\n<span class=\"w\">        </span><span class=\"nv\">parse</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/lukewilliamboswell/roc-parser/releases/download/0.3.0/-e3ebWWmlFPfe9fYrr2z1urfslzygbtQQsl69iH1qzQ.tar.br\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p><code>ParsedText.roc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">interface</span><span class=\"w\"> </span><span class=\"nx\">ParsedText</span>\n<span class=\"w\">    </span><span class=\"nx\">exposes</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">text</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"nx\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"nx\">parse</span><span class=\"p\">.</span><span class=\"nx\">parseStr</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nx\">parse</span><span class=\"p\">.</span><span class=\"nx\">string</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n\n<span class=\"nv\">text</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">parseStr</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">string</span><span class=\"w\"> </span><span class=\"s\">\"text\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"s\">\"text\"</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nx\">Ok</span><span class=\"w\"> </span><span class=\"s\">\"text\"</span>\n</code></pre></div>\n<p>compile error for <code>roc build</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>── WEIRD IMPORTS ───────────────────────────────────────── deps/ParsedText.roc ─\n\nI am partway through parsing a imports list, but I got stuck here:\n\n2│      exposes [text]\n3│      imports [\n4│          parse.parseStr,\n            ^\n\nI am expecting a comma or end of list, like\n\n    imports [Shape, Vector]%\n</code></pre></div>\n<p>... do I not have a comma? I'm not sure what to do here.</p>",
        "id": 405686295,
        "sender_full_name": "Becker A.",
        "timestamp": 1701627250
    },
    {
        "content": "<p>Do you want to make a package or just separate into another module? If you move the ParsedText.roc to the same folder as your main.roc you can just directly import it, i.e. remoce the deps. prefix.</p>",
        "id": 405686619,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701627556
    },
    {
        "content": "<p>It looks like you wamt to use a package to keep the parser dep separate. I'm not sure about how to do that, I tried a bit with my aoc-template and ended up just vendoring the Parser package code.</p>",
        "id": 405686788,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701627689
    },
    {
        "content": "<p><a href=\"https://github.com/lukewilliamboswell/aoc/blob/main/src/S2023/D02.roc\">https://github.com/lukewilliamboswell/aoc/blob/main/src/S2023/D02.roc</a></p>",
        "id": 405686854,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701627731
    },
    {
        "content": "<p>If you look at my day 2 you can see how I have achieved that, but it feels like a workaround.</p>",
        "id": 405686896,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701627791
    },
    {
        "content": "<p>Yeah a \"package\" module is supposed to be something loaded from far away, like the package manager that doesn't exist yet!<br>\nWithin your own app you only need <code>interface</code> modules.</p>",
        "id": 405690023,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1701630334
    },
    {
        "content": "<p>so remove the \"package\" bit and just use interfaces, got it!</p>\n<p>yeah I don't mind too much if my top-level app module has to list roc-parser as a dependency, I can live with that. as long as I can access it from my interface that's fine for now.</p>\n<p>lemme give it a go and see what happens... <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 405692218,
        "sender_full_name": "Becker A.",
        "timestamp": 1701632598
    },
    {
        "content": "<p>Yeah that works. If your app imports the package. The interface modules can import it to woth the same prefix I think</p>",
        "id": 405692726,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701633071
    },
    {
        "content": "<p>yeah I'm still getting errors T-T</p>\n<p>code is in this GH-Gist (I forgot about gists, this is way cleaner <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>)<br>\n<a href=\"https://gist.github.com/CrepeGoat/222803ee7bc1ff665fe679d8e96c9018\">https://gist.github.com/CrepeGoat/222803ee7bc1ff665fe679d8e96c9018</a></p>\n<p>error:</p>\n<div class=\"codehilite\"><pre><span></span><code>── WEIRD IMPORTS ────────────────────────────────────────────── ParsedText.roc ─\n\nI am partway through parsing a imports list, but I got stuck here:\n\n2│      exposes [text]\n3│      imports [\n4│          parse.parseStr,\n            ^\n\nI am expecting a comma or end of list, like\n\n    imports [Shape, Vector]%\n</code></pre></div>",
        "id": 405693037,
        "sender_full_name": "Becker A.",
        "timestamp": 1701633363
    },
    {
        "content": "<p>Do we have different parsing for imports in interfaces? That would be surprising.</p>",
        "id": 405693865,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701633972
    },
    {
        "content": "<p>I think you still need the module name so <code>parse.Core</code></p>",
        "id": 405694200,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701634301
    },
    {
        "content": "<p>Or <code>parse.Core.{ parseStr, ...etc}</code></p>",
        "id": 405694272,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701634346
    },
    {
        "content": "<p>Also unrelated but you wont be able to print text directly to Stdout as it's a Bool. Maybe just use dbg and roc dev, and print an empty string or something.</p>",
        "id": 405694381,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701634446
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/231634-beginners/topic/minimal.20example.20for.20separating.20app.20code.20into.20different.20files/near/405694381\">said</a>:</p>\n<blockquote>\n<p>Also unrelated but you wont be able to print text directly to Stdout as it's a Bool. Maybe just use dbg and roc dev, and print an empty string or something.</p>\n</blockquote>\n<p>yeah I'm seeing that now too, thanks!</p>",
        "id": 405694412,
        "sender_full_name": "Becker A.",
        "timestamp": 1701634499
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/231634-beginners/topic/minimal.20example.20for.20separating.20app.20code.20into.20different.20files/near/405694200\">said</a>:</p>\n<blockquote>\n<p>I think you still need the module name so <code>parse.Core</code></p>\n</blockquote>\n<p>that made the file parse-able! thanks</p>\n<p>though the error message I got for that was really unhelpful. tbh I still don't know why specifying a wrong path for a dependency (i.e., a semantic issue) prevented the entire file from being parsed or formatted (i.e., behaved like a syntax issue). is this worth filing a bug over?</p>",
        "id": 405694535,
        "sender_full_name": "Becker A.",
        "timestamp": 1701634627
    },
    {
        "content": "<p>That sounds like progress <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 405694546,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701634641
    },
    {
        "content": "<p>I think it would be helpful to document it. We can add context Re module params development which will replace a lot of the underlying implementation, and almost certainly resolve this issue.</p>",
        "id": 405694671,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701634789
    },
    {
        "content": "<p>Also good to link to when someone else runs into this issue. I did yesterday, but just pressed on instead of stopping to question if I should.</p>",
        "id": 405694734,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701634835
    },
    {
        "content": "<p>haha yeah AoC this year is a lot more bug-filing and typo-fixing than I remember in past years <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> I'll write something up and post the link here. thanks again!</p>",
        "id": 405694860,
        "sender_full_name": "Becker A.",
        "timestamp": 1701634956
    },
    {
        "content": "<p>OOOHH weird! so if I take my old broken example and <em>capitalize</em> my imports, it then parses and gives me a semantic error.</p>\n<p>e.g. can't parse and errors with ~\"bad import syntax. add a comma?\":</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">interface</span><span class=\"w\"> </span><span class=\"nx\">ParsedText</span>\n<span class=\"w\">    </span><span class=\"nx\">exposes</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">text</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"nx\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"nx\">parse</span><span class=\"p\">.</span><span class=\"nx\">parseStr</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nx\">parse</span><span class=\"p\">.</span><span class=\"nx\">string</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n</code></pre></div>\n<p>can parse but errors with ~\"can't find that module\":</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">interface</span><span class=\"w\"> </span><span class=\"nx\">ParsedText</span>\n<span class=\"w\">    </span><span class=\"nx\">exposes</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">text</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"nx\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"nx\">parse</span><span class=\"p\">.</span><span class=\"nx\">ParseStr</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nx\">parse</span><span class=\"p\">.</span><span class=\"nb\">String</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n</code></pre></div>",
        "id": 405695393,
        "sender_full_name": "Becker A.",
        "timestamp": 1701635519
    },
    {
        "content": "<p>That makes sense and is probably super useful for a repro in an issue.</p>\n<p>It expects <code>package.Module</code>. So the first is lowecase and the second capitilized.</p>",
        "id": 405695473,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701635584
    },
    {
        "content": "<p>issue posted here: <a href=\"https://github.com/roc-lang/roc/issues/6172\">https://github.com/roc-lang/roc/issues/6172</a></p>\n<p>thanks all!</p>",
        "id": 405697185,
        "sender_full_name": "Becker A.",
        "timestamp": 1701637155
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"631275\">Becker A.</span> has marked this topic as resolved.</p>",
        "id": 405697202,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701637172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> <span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span> related question, should it be possible to import a package into another package? is this currently implemented?</p>",
        "id": 405903377,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701720378
    },
    {
        "content": "<p>I’m afk but I think you can just use the <code>packages</code> keyword in the <code>package</code> header like you do for apps. I don’t remember if I have done this before, though.</p>",
        "id": 405920898,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1701728370
    },
    {
        "content": "<p>Looks like I have according to this issue’s description: <a href=\"https://github.com/roc-lang/roc/issues/5477\">https://github.com/roc-lang/roc/issues/5477</a></p>",
        "id": 405921134,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1701728505
    },
    {
        "content": "<p>You will probably run into that but you can workaround it by importing the transitively used modules in the app</p>",
        "id": 405921250,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1701728545
    },
    {
        "content": "<p>This is one of the main issues I want to fix as part of module params</p>",
        "id": 405921290,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1701728572
    },
    {
        "content": "<p>yeah tl;dr it should be possible but there's a bug currently <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 405982750,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701757026
    },
    {
        "content": "<p>Sounds good. This will mean we can use roc-lang/unicode things in roc-parser. <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 406124170,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701802113
    },
    {
        "content": "<p>See also <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/How.20to.20import.20interface.20from.20another.20directory.3F\">#beginners &gt; How to import interface from another directory?</a></p>",
        "id": 408570077,
        "sender_full_name": "mkrieger1",
        "timestamp": 1702892114
    }
]