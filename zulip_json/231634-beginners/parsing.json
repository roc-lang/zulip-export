[
    {
        "content": "<p>What's the best place to start reading about parsing in roc? I've read the <code>Decode</code> docs and it seems effectively everything could be accomplished via <code>custom</code>, but has anyone written a parser combinator or applicative style library on top of this yet?</p>",
        "id": 362470356,
        "sender_full_name": "drew",
        "timestamp": 1685542403
    },
    {
        "content": "<p>(this is user-space parsing, to be clear. not in the compiler :) )</p>",
        "id": 362470442,
        "sender_full_name": "drew",
        "timestamp": 1685542422
    },
    {
        "content": "<p>We've got some parsers <a href=\"https://github.com/roc-lang/roc/tree/main/examples/parser/package\">here</a> and <a href=\"https://github.com/roc-lang/examples/tree/main/examples/Parser\">here</a>. But we don't have a released package (with url) yet.</p>",
        "id": 362474279,
        "sender_full_name": "Anton",
        "timestamp": 1685543188
    },
    {
        "content": "<p><a href=\"https://github.com/bhansconnect/monkey-roc/blob/main/src/Parser.roc\">This one</a> may be useful as well</p>",
        "id": 362474591,
        "sender_full_name": "Anton",
        "timestamp": 1685543260
    },
    {
        "content": "<p>thanks!</p>",
        "id": 362474922,
        "sender_full_name": "drew",
        "timestamp": 1685543327
    },
    {
        "content": "<p>these look like the types i was expecting :)</p>",
        "id": 362475156,
        "sender_full_name": "drew",
        "timestamp": 1685543377
    },
    {
        "content": "<p>is there a way to use unreleased packages? i suppose I need the compiler source locally?</p>",
        "id": 362475474,
        "sender_full_name": "drew",
        "timestamp": 1685543437
    },
    {
        "content": "<p>You can use a nightly release and a package in a local folder, like <a href=\"https://github.com/roc-lang/examples/blob/496aa171fc92a86749a0dd43db9bfdb209e607a2/examples/Parser/main.roc#L4\">this</a></p>",
        "id": 362476181,
        "sender_full_name": "Anton",
        "timestamp": 1685543563
    },
    {
        "content": "<p>I started porting the parser library from Elm as well. But it is not battle tested and was a few months since I looked at it. Here it is:</p>\n<p><a href=\"https://github.com/Subtlesplendor/roc-parser\">https://github.com/Subtlesplendor/roc-parser</a></p>",
        "id": 362504083,
        "sender_full_name": "Johan LÃ¶vgren",
        "timestamp": 1685549279
    },
    {
        "content": "<p>this looks great. does roc allow importing packages directly from github?</p>",
        "id": 362507069,
        "sender_full_name": "drew",
        "timestamp": 1685549933
    },
    {
        "content": "<p>No, not from a regular repository, you can of course do a release on github but I believe it has to be a tar.gz or <a href=\"http://tar.br\">tar.br</a> with a BLAKE3 hash</p>",
        "id": 362508299,
        "sender_full_name": "Anton",
        "timestamp": 1685550224
    },
    {
        "content": "<p>yeah, you can make one of those tarballs by using <code>roc build --bundle</code></p>",
        "id": 362536104,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1685556769
    },
    {
        "content": "<p>you can see an example of installing a package from a URL in <a href=\"https://www.roc-lang.org/tutorial#building-an-application\">the tutorial</a> - note that the long hash at the end of that URL is mandatory!</p>",
        "id": 362536312,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1685556823
    },
    {
        "content": "<p><code>roc build --bundle</code> will automatically name the file for you so you don't have to do it, but basically it's a BLAKE3 hash of the contents of what you're downloading</p>",
        "id": 362536360,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1685556838
    },
    {
        "content": "<p>it's a security measure; means if the URL ever gets taken over by a malicious actor (e.g. if the domain expires), they can't change the contents of the URL to deliver malicious code because it will fail the hash validation when <code>roc</code> downloads it</p>",
        "id": 362536587,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1685556886
    },
    {
        "content": "<p>and of course if they change the contents <em>and</em> change the URL, then nobody's existing Roc code is pointing at that URL anyway <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 362536695,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1685556910
    }
]