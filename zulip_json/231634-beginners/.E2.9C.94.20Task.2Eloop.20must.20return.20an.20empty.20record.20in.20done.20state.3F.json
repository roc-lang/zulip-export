[
    {
        "content": "<p>Hi all, was recently migrating a codebase to support the latest roc and basic-cli versions, and I was using a Task.loop call in my code.</p>\n<p>I got a strange error message from my Task.loop usage:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Something</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">body</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">suffixed</span><span class=\"w\"> </span><span class=\"n\">statement</span><span class=\"p\">:</span>\n<span class=\"mi\">20</span><span class=\"err\">â”‚</span><span class=\"w\">      </span><span class=\"n\">Task</span><span class=\"p\">.</span><span class=\"k\">loop</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">client</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">previousMessages</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">initializeMessages</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">loop</span>\n<span class=\"w\">         </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n\n<span class=\"n\">This</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">produces</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">Task</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">client</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Client</span><span class=\"p\">.</span><span class=\"n\">Client</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">previousMessages</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"w\"> </span><span class=\"n\">Chat</span><span class=\"p\">.</span><span class=\"n\">Message</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"err\">â€¦</span><span class=\"p\">]</span>\n\n<span class=\"n\">But</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">suffixed</span><span class=\"w\"> </span><span class=\"n\">statement</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">empty</span><span class=\"w\"> </span><span class=\"n\">record</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">Task</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"err\">â€¦</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>By changing my loop function to return an empty record when <code>Done</code>, I was able to resolve the issue. However, I see that the <code>Task.loop</code> <a href=\"https://www.roc-lang.org/builtins/Task#loop\">function signature</a> has not changed in the documentation. Is this a bug, or am I misunderstanding some changes to how <code>Task.loop</code> works now?</p>",
        "id": 470664441,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726504107
    },
    {
        "content": "<p>Update: apparently, this error message is caused because I was not capturing the return value from <code>Task.loop</code>. This seems like a problem, as one might want to write a loop function which sometimes you care about capturing its return value, and sometimes you don't. There should be an option to call <code>Task.loop!</code> without assigning its value, even if the function passed to <code>Task.loop</code> does include a non-empty record in its tagged <code>Done {}a</code> return.</p>",
        "id": 470670225,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726505104
    },
    {
        "content": "<p>Yeah, lone <code>!</code> statements are only allowed with fully ignorable values. That is <code>{}</code>.</p>",
        "id": 470698324,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726510040
    },
    {
        "content": "<p>If the Done value wraps <code>{}</code>, it should work as a lone statement with <code>!</code></p>",
        "id": 470698763,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726510126
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"518883\">@Ian McLerran</span> can I see the source?</p>",
        "id": 470703318,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726511170
    },
    {
        "content": "<p>Yeah, no problem. I'll grab it.</p>",
        "id": 470731015,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726516805
    },
    {
        "content": "<p>Full source <a href=\"https://github.com/imclerran/roc-openrouter/blob/5be6d0a315aa5d5e2cb6b1fa974fc67e0bc6e213/examples/chat.roc#L22C5-L22C69\">here</a>, and a snippet of the source here:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">main</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">    </span><span class=\"nv\">apiKey</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">getApiKey</span><span class=\"o\">!</span>\n<span class=\"w\">    </span><span class=\"nv\">model</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">getModelChoice</span><span class=\"o\">!</span>\n<span class=\"w\">    </span><span class=\"nv\">providerOrder</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Dict</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"w\"> </span><span class=\"nx\">preferredProviders</span><span class=\"w\"> </span><span class=\"nx\">model</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Result</span><span class=\"p\">.</span><span class=\"nx\">withDefault</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"nv\">client</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Chat</span><span class=\"p\">.</span><span class=\"nx\">initClient</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nx\">apiKey</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">model</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">providerOrder</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"s\">\"Using model: $(model |&gt; Ansi.color { fg: Standard Magenta })\\n\"</span>\n<span class=\"w\">    </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"s\">\"Enter your questions below, or type 'Goodbye' to exit\"</span>\n<span class=\"w\">    </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">loop</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nx\">client</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">previousMessages</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">initializeMessages</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"c1\"># &lt;--- error here ---</span>\n<span class=\"w\">    </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">colorizeRole</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">Assistant</span><span class=\"w\"> </span><span class=\"s\">\"\\nAssistant:  I have been a good chatbot. Goodbye! ðŸ˜Š\"</span><span class=\"p\">))</span>\n\n<span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nx\">client</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">previousMessages</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">write</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"s\">\"You: \"</span>\n<span class=\"w\">    </span><span class=\"nv\">query</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Stdin</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"o\">!</span>\n<span class=\"w\">    </span><span class=\"nv\">messages</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Chat</span><span class=\"p\">.</span><span class=\"nx\">appendUserMessage</span><span class=\"w\"> </span><span class=\"nx\">previousMessages</span><span class=\"w\"> </span><span class=\"nx\">query</span>\n<span class=\"w\">    </span><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"nx\">query</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">strToLower</span><span class=\"w\"> </span><span class=\"o\">is</span>\n<span class=\"w\">        </span><span class=\"s\">\"goodbye\"</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">Done</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nx\">previousMessages</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"c1\"># &lt;--- Done {}</span>\n<span class=\"w\">        </span><span class=\"s\">\"goodbye.\"</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">Done</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nx\">previousMessages</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"c1\"># &lt;--- Done {}</span>\n<span class=\"w\">        </span><span class=\"s\">\"goodbye!\"</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">Done</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nx\">previousMessages</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"c1\"># &lt;--- Done {}</span>\n<span class=\"w\">        </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">handlePrompt</span><span class=\"w\"> </span><span class=\"nx\">client</span><span class=\"w\"> </span><span class=\"nx\">messages</span>\n</code></pre></div>",
        "id": 470739634,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726519059
    },
    {
        "content": "<p>And what is <code>handlePrompt</code>?</p>",
        "id": 470749210,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726521967
    },
    {
        "content": "<p>But yeah, from this at first look, if those returned <code>Done {}</code>, I would expect that <code>Task.loop!</code> to function</p>",
        "id": 470749497,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726522070
    },
    {
        "content": "<p>Cause that should lead to <code>Task.loop</code> returning <code>Task {} err</code></p>",
        "id": 470749585,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726522091
    },
    {
        "content": "<p>Might be worth adding a type <code>loop</code> to makes sure it is returning a <code>Done {}</code>.</p>",
        "id": 470749660,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726522116
    },
    {
        "content": "<p>Obviously if you return <code>Done { previousMessages }</code>, it will require <code>_ = Task.loop!</code>, but with changing to <code>Done {}</code>, it looks all good assuming <code>handlePrompt</code> is all good as well.</p>",
        "id": 470749809,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726522164
    },
    {
        "content": "<p>There is a small chance we implemented something wrong in the standard library that is messing up types here, but I doubt it.</p>",
        "id": 470749902,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726522199
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"518883\">Ian McLerran</span> has marked this topic as resolved.</p>",
        "id": 470751157,
        "sender_full_name": "Notification Bot",
        "timestamp": 1726522600
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/Task.2Eloop.20must.20return.20an.20empty.20record.20in.20done.20state.3F/near/470749497\">said</a>:</p>\n<blockquote>\n<p>But yeah, from this at first look, if those returned <code>Done {}</code>, I would expect that <code>Task.loop!</code> to function</p>\n</blockquote>\n<p>Oh yeah, sorry, replacing <code>Done { previousMessages }</code> with <code>Done {}</code> does work. I should have remembered I could just assign the result to a <code>_</code> to resolve that error, and keep my function definition unchanged.</p>",
        "id": 470751498,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726522725
    }
]