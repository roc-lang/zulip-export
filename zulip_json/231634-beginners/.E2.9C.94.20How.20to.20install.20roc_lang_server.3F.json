[
    {
        "content": "<p>You can use the lang server in a flake like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n    inputs = {\n        nixpkgs.url = &quot;github:nixos/nixpkgs/nixos-unstable&quot;;\n        flake-utils.url = &quot;github:numtide/flake-utils&quot;;\n        roc.url = &quot;github:roc-lang/roc&quot;;\n    };\n\n    outputs = {nixpkgs, roc, flake-utils, ...}:\n        flake-utils.lib.eachDefaultSystem (system:\n            let\n                pkgs = import nixpkgs { inherit system; };\n                rocPkgs = roc.packages.${system};\n            in\n            {\n                devShells = {\n                    default = pkgs.mkShell {\n                        buildInputs = with pkgs;\n                        [\n                            rocPkgs.cli\n                            rocPkgs.lang-server\n                        ];\n                    };\n                };\n            }\n        );\n}\n</code></pre></div>",
        "id": 418644943,
        "sender_full_name": "Anton",
        "timestamp": 1706537515
    },
    {
        "content": "<p>If you do <code>nix develop</code> followed by <code>whcih roc_ls</code>, you'll get the path of the lang_server, which you'll need to provide in the settings for the <a href=\"https://marketplace.visualstudio.com/items?itemName=IvanDemchenko.roc-lang-unofficial\">vscode roc plugin</a>.</p>",
        "id": 418645171,
        "sender_full_name": "Anton",
        "timestamp": 1706537599
    },
    {
        "content": "<p>That did the trick, thank you!!</p>",
        "id": 418648702,
        "sender_full_name": "Andrew Bucknall",
        "timestamp": 1706538638
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"664212\">Andrew Bucknall</span> has marked this topic as resolved.</p>",
        "id": 418648722,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706538645
    }
]