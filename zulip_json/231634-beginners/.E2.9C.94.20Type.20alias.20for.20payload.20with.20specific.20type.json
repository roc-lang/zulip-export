[
    {
        "content": "<p>I'm working through Advent and I made a type alias called <code>MoveCommand</code> that consists of a <code>Direction</code> tag union and a <code>Nat</code> for the distance. Here are the definitions:</p>\n<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"kt\">MoveCommand</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Direction</span><span class=\"w\"> </span><span class=\"kt\">Nat</span><span class=\"w\"></span>\n<span class=\"kt\">Direction</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">Up</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Down</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Forward</span><span class=\"p\">]</span><span class=\"w\"></span>\n</code></pre></div>\n<p>But it seems that <code>Nat</code> in this case is being interpreted as a type argument to <code>Direction</code> in this case and I get this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>── TOO MANY TYPE ARGUMENTS ───────────────────────────────────────── day02.roc ─\n\nThe Direction alias expects 0 type arguments, but it got 1 instead:\n\n29│  MoveCommand : Direction Nat\n     ^^^^^^^^^^^\n\nAre there missing parentheses?\n\n────────────────────────────────────────────────────────────────────────────────\n</code></pre></div>\n<p>Is there a way for me to create a <code>MoveCommand</code> type that can only consist of a <code>Direction</code> and a <code>Nat</code> without using a type argument, so that <code>Nat</code> is the only option?</p>",
        "id": 304842616,
        "sender_full_name": "Austin Clements",
        "timestamp": 1666127950
    },
    {
        "content": "<p>You could something like </p>\n<div class=\"codehilite\" data-code-language=\"Elixir\"><pre><span></span><code><span class=\"nc\">Direction</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">Up</span><span class=\"w\"> </span><span class=\"nc\">Nat</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nc\">Down</span><span class=\"w\"> </span><span class=\"nc\">Nat</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nc\">Forward</span><span class=\"w\"> </span><span class=\"nc\">Nat</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">up</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Nat</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Direction</span><span class=\"w\"></span>\n<span class=\"n\">up</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"n\">distance</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Up</span><span class=\"w\"> </span><span class=\"n\">distance</span><span class=\"w\"></span>\n\n<span class=\"n\">expect</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">whichDirection</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">up</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">expectedResult</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nc\">Up</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">whichDirection</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">expectedResult</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I used <code>List [Fd U64, Up U64, Dn U64]</code> but didn't alias it as its own type at the time as I hadn't figured out how to do that.</p>",
        "id": 304843923,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666128585
    },
    {
        "content": "<p>I find <code>roc repl</code> to be really helpful when trying new type definitions like this. <br>\n<a href=\"/user_uploads/22008/H2HCcnrbU2sqr8AagQmw_5U8/Screen-Shot-2022-10-19-at-08.30.44.png\">Screen-Shot-2022-10-19-at-08.30.44.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/H2HCcnrbU2sqr8AagQmw_5U8/Screen-Shot-2022-10-19-at-08.30.44.png\" title=\"Screen-Shot-2022-10-19-at-08.30.44.png\"><img src=\"/user_uploads/22008/H2HCcnrbU2sqr8AagQmw_5U8/Screen-Shot-2022-10-19-at-08.30.44.png\"></a></div>",
        "id": 304844231,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666128699
    },
    {
        "content": "<blockquote>\n<p>I made a type alias called <code>MoveCommand</code> that consists of a <code>Direction</code> tag union and a <code>Nat</code> for the distance</p>\n</blockquote>\n<p>so the way this is written, it's actually specifying something else:</p>\n<div class=\"codehilite\"><pre><span></span><code>MoveCommand : Direction Nat\n</code></pre></div>\n<p>this is syntactically equivalent to <code>MoveCommand : List Nat</code> - it's basically saying \"MoveCommand is a type alias for a Direction of Nats, because Direction is a type that has a type parameter (just like <code>List</code> does), and I'm specifying Nat for that type parameter here\"</p>",
        "id": 304844959,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1666129044
    },
    {
        "content": "<p>so if you want it to store both, you could make it a record, e.g. </p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">MoveCommand</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nv\">direction</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Direction</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nv\">distance</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Nat</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 304845185,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1666129143
    },
    {
        "content": "<p>Gotcha that makes sense, thanks to you both <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 304846336,
        "sender_full_name": "Austin Clements",
        "timestamp": 1666129651
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"466982\">Austin Clements</span> has marked this topic as resolved.</p>",
        "id": 304867315,
        "sender_full_name": "Notification Bot",
        "timestamp": 1666143373
    }
]