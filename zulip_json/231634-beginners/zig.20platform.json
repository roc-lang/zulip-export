[
    {
        "content": "<p>I'm trying to make my first dummy platform in zig but the example in <code>platform-switching/zig-platform</code> doesn't compile for me.<br>\nMy <code>zig version</code> is <code>0.10.0-dev-3685</code>.<br>\nMaybe I'm too far in the future, but what do I need to build a platform? Is it written somewhere?</p>",
        "id": 297891169,
        "sender_full_name": "Hashi364",
        "timestamp": 1662682806
    },
    {
        "content": "<p>I think we are still zig 0.9.0</p>",
        "id": 297891219,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1662682863
    },
    {
        "content": "<p>We're on 0.9.1<br>\nUpgrading to 0.10 is a big job and work is ongoing.</p>",
        "id": 297912799,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1662704987
    },
    {
        "content": "<p>Trying to work out if this is a bug, or something wrong with my config. I'm on M2 MacOS 12. When I run the example zig platform in Nix shell I get the following.  </p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc run rocLovesZig.roc\nðŸ”¨ Rebuilding platform...\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: https://github.com/roc-lang/roc/issues/new/choose\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;cannot find `str.zig`. Check the source code in find_zig_str_path() to show all the paths I tried.&#39;, crates/compiler/build/src/link.rs:217:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nthread &#39;main&#39; panicked at &#39;Failed to (re)build platform.: Any { .. }&#39;, crates/cli/src/build.rs:332:46\n</code></pre></div>",
        "id": 322031134,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1674042029
    },
    {
        "content": "<p>did you build from source here? or download the binary?</p>",
        "id": 322032627,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674042494
    },
    {
        "content": "<p>I've built from source</p>",
        "id": 322032960,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1674042613
    },
    {
        "content": "<p>I suspect you need to run <code>roc</code> from the top-level directory of the repo</p>",
        "id": 322033465,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1674042765
    },
    {
        "content": "<p>That does it. Thank you.</p>",
        "id": 322033815,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1674042888
    },
    {
        "content": "<p>Can you file an issue for this? I thought we fixed roc so that directory of execution shouldn't matter as long as roc and the lib dir are together.</p>",
        "id": 322087169,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1674057244
    },
    {
        "content": "<p>I revisit Roc every few months and start writing a platform + host in an empty folder. I generally alternate between Zig and C when doing this.</p>\n<p>My ultimate hope is that the compiler will check for missing symbols in the host / platform, let me use my own build setup for the native code, and just figure out what I'm missing to be a complete platform and give me nice errors.</p>\n<p>I have seen this \"An internal compiler expectation was broken.\" many times in this process, and I hope Roc will take \"platform from scratch\" as a serious usecase and work towards making this a nicer experience.</p>\n<p>Imagine grabbing a roc binary, and trying to run it in an empty folder, it failing and looking for a platform, you create the platform roc files, then it fails with a further error, and you just keep using the errors to guide you towards a complete platform hello world.</p>",
        "id": 323481816,
        "sender_full_name": "Thomas",
        "timestamp": 1674652369
    },
    {
        "content": "<p>Interesting. Hopefully some of the <code>roc glue</code> changes will be landed soon. Then it will be possible to setup <code>roc glue</code> for zig. That should really help with making platforms in zig.</p>",
        "id": 323578745,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1674678596
    },
    {
        "content": "<blockquote>\n<p>Imagine grabbing a roc binary, and trying to run it in an empty folder, it failing and looking for a platform, you create the platform roc files, then it fails with a further error, and you just keep using the errors to guide you towards a complete platform hello world.</p>\n</blockquote>\n<p>I am not sure if this workflow will ever be a target use case. Not to say we shouldn't have good guides for it. Just that an end user downloading Roc would likely be pushed towards application development and not platform development.</p>",
        "id": 323578933,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1674678656
    },
    {
        "content": "<p>For most users, a platform will just be a url that roc can grab some precompiled executables from.</p>",
        "id": 323579088,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1674678718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/zig.20platform/near/323578933\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Imagine grabbing a roc binary, and trying to run it in an empty folder, it failing and looking for a platform, you create the platform roc files, then it fails with a further error, and you just keep using the errors to guide you towards a complete platform hello world.</p>\n</blockquote>\n<p>I am not sure if this workflow will ever be a target use case. Not to say we shouldn't have good guides for it. Just that an end user downloading Roc would likely be pushed towards application development and not platform development.</p>\n</blockquote>\n<p>Good guides is also fine, but I think it's important to consider the possible benefits of making platform development attractive too. Ultimately, the more people are trying out both sides of Roc, the more powerful and varied both platforms and libraries can be.</p>",
        "id": 323731212,
        "sender_full_name": "Thomas",
        "timestamp": 1674742852
    },
    {
        "content": "<p>Hey, what's the state of platform dev in Zig currently ?</p>",
        "id": 409927762,
        "sender_full_name": "Slazaa",
        "timestamp": 1703524738
    },
    {
        "content": "<p>There are several Zig platform examples in the repo. Glue code generation is not done yet but work is underway.</p>",
        "id": 409929119,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1703526240
    },
    {
        "content": "<p>Could you tell me more about glue ? I'm a bit confused on its purpose</p>",
        "id": 409929178,
        "sender_full_name": "Slazaa",
        "timestamp": 1703526290
    },
    {
        "content": "<p>Also given what you said, those that mean that I could write my own Zig platform right now ?</p>",
        "id": 409929321,
        "sender_full_name": "Slazaa",
        "timestamp": 1703526491
    },
    {
        "content": "<p>The Zig host program needs to pass Roc values into the Roc app and receive them back. If the Roc code contains user defined types then we need Zig descriptions for those types. And Zig functions to construct and access that data. That's glue code.</p>",
        "id": 409929328,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1703526534
    },
    {
        "content": "<p>Yes you can but you need to manually write the glue code and it is not a very smooth process. In practice you will probably have to spend time fighting with calling conventions.</p>",
        "id": 409929402,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1703526657
    },
    {
        "content": "<p>Platform development is not yet as smooth as app development and is not documented yet because there are a few projects going on to redefine how it works.</p>",
        "id": 409929481,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1703526771
    },
    {
        "content": "<p>So I should wait a bit more before getting myself into it ?</p>",
        "id": 409929504,
        "sender_full_name": "Slazaa",
        "timestamp": 1703526821
    },
    {
        "content": "<p>Depends a lot on your attitude towards having an experience like that, I don't know you or your preferences.</p>",
        "id": 409929558,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1703526874
    },
    {
        "content": "<p>If you are interested in digging into a lot of unknowns then maybe it's fun for you</p>",
        "id": 409929583,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1703526915
    },
    {
        "content": "<p>If you want documents and to just get an app built then I'd say wait a while longer</p>",
        "id": 409929596,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1703526949
    },
    {
        "content": "<p>Yeah I'd like to try actually !</p>",
        "id": 409929601,
        "sender_full_name": "Slazaa",
        "timestamp": 1703526958
    },
    {
        "content": "<p>Ok cool! There is another stream about platform development so I'd suggest asking more questions there when you need to. In the meantime start by looking at the examples in the repo!</p>",
        "id": 409929679,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1703527046
    },
    {
        "content": "<p>Thank you, I found this person that has lots of Zig paltforms too <a href=\"https://github.com/lukewilliamboswell\">https://github.com/lukewilliamboswell</a></p>",
        "id": 409929742,
        "sender_full_name": "Slazaa",
        "timestamp": 1703527092
    },
    {
        "content": "<p>Yeah Luke is active here on Zulip and there are a couple of other people too.</p>",
        "id": 409929770,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1703527157
    },
    {
        "content": "<p>Yeah, we are always here and willing to help. Writing a zig platform today just requires some extra help to get the wiring to roc correct.</p>",
        "id": 409930460,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1703527694
    },
    {
        "content": "<p>Smooth platform development is key to Rocs success, that's already clear at this point. Getting this part <em>right</em> will be decisive ..</p>",
        "id": 409934925,
        "sender_full_name": "Shaiden Spreitzer",
        "timestamp": 1703532556
    },
    {
        "content": "<p>For sure. Rust has the best story currently, but things are still early. Once some major platform changes land, I think a lot more effort will go into docs and glue that make platform development a lot clearer and smooth.</p>",
        "id": 409939090,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1703537252
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"672970\">@Slazaa</span> what kind of platform are you thinking about? Is it something to tinker and experiment with, or maybe you have a specific use case in mind? I may be able to share a link to a similar project <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 409939252,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1703537515
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> Yeah well I'd like to make a game dev platform, I saw that you made something with mach, that's super cool</p>",
        "id": 409939335,
        "sender_full_name": "Slazaa",
        "timestamp": 1703537592
    },
    {
        "content": "<p>Yeah I really enjoyed that experiment. Unfortunately it's not something easy to share at the moment with most people because you need to be comfortable using zig nightlies and updating zig dependencies regularly. Also there were a few workarounds to get it working with just simple List U8 between Roc and Zig. without zig glue it's harder to write those types manually and I still barely know Zig</p>",
        "id": 409939707,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1703538015
    },
    {
        "content": "<p>After that experiment I had the idea of maybe exposing the WebGPU API to roc via Tasks maybe to configure shader pipelines etc from Roc. Just thought that might be a cool project with the potential for Roc to be able to make high performance cross-platform graphics.</p>",
        "id": 409940112,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1703538252
    },
    {
        "content": "<p>I wonder how complex would be to implement a roc to spir-v compiler</p>",
        "id": 412211938,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1704917380
    },
    {
        "content": "<p>If I understand correctly, spir-v is a compilation target and not really a platform.</p>",
        "id": 412214065,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704918401
    },
    {
        "content": "<p>So it would more be the case that we could utilize llvm to compile for spir-v (though I think it may be a special snow flake that is not the easiest to just compile for)</p>",
        "id": 412214093,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704918416
    },
    {
        "content": "<p>At that point, a platform in some other language that compiles to spir-v (or just loads and interacts with a spir-v binary) could be written</p>",
        "id": 412214143,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704918434
    },
    {
        "content": "<p>but I have very limited knowledge in this area</p>",
        "id": 412214161,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704918444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/zig.20platform/near/412214065\">said</a>:</p>\n<blockquote>\n<p>If I understand correctly, spir-v is a compilation target and not really a platform.</p>\n</blockquote>\n<p>You get it right. That would be awesome to have a spir-v compilation for a possible webgpu platform. It means gpgpu in roc or, in other words, roc for shaders. Just like <a href=\"https://github.com/EmbarkStudios/rust-gpu\">https://github.com/EmbarkStudios/rust-gpu</a></p>",
        "id": 412217043,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1704919699
    },
    {
        "content": "<p>Itâ€™s more about the <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> idea above than about the thread in general</p>",
        "id": 412217181,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1704919777
    },
    {
        "content": "<p>my gut feeling is that roc is really dynamic in terms of allocations and that won't go well (just thinking about how futhark was design because it targets this specific use case).</p>",
        "id": 412218196,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704920256
    },
    {
        "content": "<p>I am really confident that zig and mach combined with roc will be awesome in the medium to long term. Since my last mach experiment we've made  a lot of progress with roc-gui and roc-wasm, so now we have all the parts to build a much nicer graphics platform. There are a few other things on my list I'd like to do before I revisit this idea, but it's definitely something I'm looking forward to trying out again. One really cool thing I like about zig platforms is how easy it is to build a roc package url with all the artifacts for multiple architectures using zig cross compilation.</p>",
        "id": 412222381,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1704922143
    },
    {
        "content": "<p>Is Rust the only platform language right now with glue support?</p>",
        "id": 417575269,
        "sender_full_name": "Jared Cone",
        "timestamp": 1706071770
    },
    {
        "content": "<p>Yes, though it's still a WIP.</p>",
        "id": 417575309,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1706071803
    },
    {
        "content": "<p>There is a zig spec but it currently doesn't really do anything yet</p>",
        "id": 417575349,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1706071824
    },
    {
        "content": "<p><code>crates/glue/src/ZigGlue.roc</code></p>",
        "id": 417575358,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1706071839
    },
    {
        "content": "<p>It just generates the <code>list.zig</code>, but should be easy to extend to the rest of the standard library</p>",
        "id": 417575431,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1706071885
    }
]