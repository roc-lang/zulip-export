[
    {
        "content": "<p>I've created an issue to track something that I have found confusing. <a href=\"https://github.com/roc-lang/roc/issues/4242\">Issue #4242</a>. I get different error messages sometimes between roc dev and roc test. I'm not sure if my workflow is right, but I find I am running roc dev and roc test after each time I change my code.</p>",
        "id": 302948476,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1665185422
    },
    {
        "content": "<p>Also found another related issue that crashed the formatter. Filed another issue <a href=\"https://github.com/roc-lang/roc/issues/4243\">#4343</a>.</p>",
        "id": 302949766,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1665186492
    },
    {
        "content": "<p>Please let me know if I'm raising issues that are helpful. Any feedback to improve my issues would be appreciated.</p>",
        "id": 302949830,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1665186573
    },
    {
        "content": "<p>Your feedback and issues are very appreciated! I see nothing wrong with them :)</p>",
        "id": 302967839,
        "sender_full_name": "jan kili",
        "timestamp": 1665206299
    },
    {
        "content": "<p>yeah, thank you! The more the better <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 302971756,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665210404
    },
    {
        "content": "<p>I was about to bring this up. Thanks <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> <span aria-label=\"raised hands\" class=\"emoji emoji-1f64c\" role=\"img\" title=\"raised hands\">:raised_hands:</span>  I was encountering the same confusing result. BTW, are we keeping track of unhelpful error messages? Something like what <a href=\"https://github.com/elm/error-message-catalog\">Elm</a> does?</p>",
        "id": 303133483,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665321885
    },
    {
        "content": "<p>Several times already I've mistakenly used <code>=</code> instead of <code>==</code> in the <code>expect</code> function.</p>\n<p><strong>In <code>roc test</code></strong>:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: LoadingProblem(FormattedReport(&quot;\\u{1b}[36m── ARGUMENTS BEFORE EQUALS ───────────────────────────────────────── mainA.roc ─\\u{1b}[0m\\n\\nI am partway through parsing a definition, but I got stuck here:\\n\\n \\u{1b}[36m1\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37mapp \\&quot;day-03A-2021\\&quot;\\u{1b}[0m\\n \\u{1b}[36m2\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37m    packages { pf: \\&quot;../../../../open-source-forks/roc/examples/cli/cli-platform/main.roc\\&quot; }\\u{1b}[0m\\n \\u{1b}[36m3\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37m    imports [Main.{ Bit, ReportLine, Report }, pf.Program.{ Program }]\\u{1b}[0m\\n \\u{1b}[36m4\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37m    provides [main] to pf\\u{1b}[0m\\n \\u{1b}[36m5\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m\\n \\u{1b}[36m6\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37mmain : Program\\u{1b}[0m\\n \\u{1b}[36m7\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37mmain = Main.run getAnswer\\u{1b}[0m\\n \\u{1b}[36m8\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m\\n \\u{1b}[36m9\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37mgetAnswer : Report -&gt; Nat\\u{1b}[0m\\n\\u{1b}[36m10\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37mgetAnswer = \\\\report -&gt;\\u{1b}[0m\\n\\u{1b}[36m11\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37m    reportLineAcc = List.walk report [] walkReport\\u{1b}[0m\\n\\u{1b}[36m12\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37m    {gamma, epsilon} = getRates reportLineAcc\\u{1b}[0m\\n\\u{1b}[36m13\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37m    (toDecimal gamma) * (toDecimal epsilon)\\u{1b}[0m\\n\\u{1b}[36m14\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m\\n\\u{1b}[36m15\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37mReportLineAcc : List (Dict Bit Nat)\\u{1b}[0m\\n\\u{1b}[36m16\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m\\n\\u{1b}[36m17\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37mwalkReport : ReportLineAcc, ReportLine -&gt; ReportLineAcc\\u{1b}[0m\\n\\u{1b}[36m18\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m\\n\\u{1b}[36m19\\u{1b}[0m\\u{1b}[36m│\\u{1b}[0m  \\u{1b}[37mexpect walkReport [] [One, Zero, One, One, Zero] = [Dict.single One 1, Dict.single Zero 1, Dict.single One 1, Dict.single One 1, Dict.single Zero 1]\\u{1b}[0m\\n                       \\u{1b}[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\u{1b}[0m\\n\\nLooks like you are trying to define a function. In roc, functions are\\nalways written as a lambda, like \\u{1b}[33mincrement = \\\\n -&gt; n + 1\\u{1b}[0m.&quot;))&#39;, crates/cli/src/lib.rs:392:14\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p><strong>In <code>roc dev</code></strong>:</p>\n<div class=\"codehilite\"><pre><span></span><code>── ARGUMENTS BEFORE EQUALS ───────────────────────────────────────── mainA.roc ─\n\nI am partway through parsing a definition, but I got stuck here:\n\n 1│  app &quot;day-03A-2021&quot;\n 2│      packages { pf: &quot;../../../../open-source-forks/roc/examples/cli/cli-platform/main.roc&quot; }\n 3│      imports [Main.{ Bit, ReportLine, Report }, pf.Program.{ Program }]\n 4│      provides [main] to pf\n 5│\n 6│  main : Program\n 7│  main = Main.run getAnswer\n 8│\n 9│  getAnswer : Report -&gt; Nat\n10│  getAnswer = \\report -&gt;\n11│      reportLineAcc = List.walk report [] walkReport\n12│      {gamma, epsilon} = getRates reportLineAcc\n13│      (toDecimal gamma) * (toDecimal epsilon)\n14│\n15│  ReportLineAcc : List (Dict Bit Nat)\n16│\n17│  walkReport : ReportLineAcc, ReportLine -&gt; ReportLineAcc\n18│\n19│  expect walkReport [] [One, Zero, One, One, Zero] = [Dict.single One 1, Dict.single Zero 1, Dict.single One 1, Dict.single One 1, Dict.single Zero 1]\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nLooks like you are trying to define a function. In roc, functions are\nalways written as a lambda, like increment = \\n -&gt; n + 1.%\n</code></pre></div>",
        "id": 303141747,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665327160
    },
    {
        "content": "<p>we don't have a centralized place for confusing error messages at the moment, but definitely please open an issue on the repo any time you find one confusing!</p>",
        "id": 303144838,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665329199
    },
    {
        "content": "<p>I just saw that y'all have the <code>error-messages</code> label in the GitHub Issues. That's a sufficient way of grouping these messages we want to improve.  I created <a href=\"https://github.com/roc-lang/roc/issues/4274\">an issue</a>, but someone will need to add the label to it.</p>",
        "id": 303153486,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665334813
    },
    {
        "content": "<p>done, thank you!</p>",
        "id": 303154729,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665335661
    }
]