[
    {
        "content": "<p>I just updated from the July 8th to the July 9th nightly - and after updating, roc-start no longer compiles, where it did prior to updating.</p>\n<p>Here is the error message I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"o\">/</span><span class=\"n\">mono</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">borrow</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">396</span><span class=\"p\">:</span><span class=\"mi\">33</span><span class=\"p\">:</span>\n<span class=\"nc\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">borrow</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">LambdaName</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"mf\">74.</span><span class=\"n\">IdentId</span><span class=\"p\">(</span><span class=\"mi\">44</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">niche</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Niche</span><span class=\"p\">(</span><span class=\"n\">Captures</span><span class=\"p\">([</span><span class=\"n\">InLayout</span><span class=\"p\">(</span><span class=\"mi\">105</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">InLayout</span><span class=\"p\">(</span><span class=\"mi\">242</span><span class=\"p\">)]))</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">layout</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n</code></pre></div>",
        "id": 450299092,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1720563273
    },
    {
        "content": "<p>Looks like my issue may be the same as <a href=\"#narrow/stream/231634-beginners/topic/Internal.20error.3A.20entered.20unreachable.20code.3A.20no.20borrow.20signat.2E.2E/near/450271163\">this</a></p>",
        "id": 450299867,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1720563464
    },
    {
        "content": "<p>Could it be from this PR? <a href=\"https://github.com/roc-lang/roc/pull/6849\">https://github.com/roc-lang/roc/pull/6849</a></p>",
        "id": 450299977,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720563493
    },
    {
        "content": "<p><del>Maybe we need to update the roc_std library in basic-cli?</del> I don't think so</p>",
        "id": 450300294,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720563586
    },
    {
        "content": "<p>Hmm.. could be.. I was on yesterdays nightly without issue, and that PR is from 2 days ago, but I see that PR does introduce changes in <code>borrow.rs</code>, so seems like could be related...</p>",
        "id": 450300617,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1720563707
    },
    {
        "content": "<p>Hah! nevermind... I did make a code change before the update - <code>replace all</code> resulted in function which had the same name as the value its return was assigned to.</p>",
        "id": 450302345,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1720564490
    },
    {
        "content": "<p><em>PEBCAK!</em> <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 450302386,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1720564518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"518883\">Ian McLerran</span> has marked this topic as resolved.</p>",
        "id": 450303765,
        "sender_full_name": "Notification Bot",
        "timestamp": 1720565312
    },
    {
        "content": "<p>We have been seeing <code>no borrow signature for LambdaName </code>pop up a lot, we should investigate this, I suspect we may have gotten better error messages in the past given the same Roc code.</p>",
        "id": 450404478,
        "sender_full_name": "Anton",
        "timestamp": 1720606238
    },
    {
        "content": "<p>This is almost certainly from folkerts PR. That said, I think most of the time I have hit it, the code was actually broken anyway (even if I go back before folkerts PR). Generally happens when we have l lambdaset issues. I think they are just caught in a different place now.</p>",
        "id": 450487832,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720625467
    },
    {
        "content": "<p>I don't get better errors instead of the <code>no borrow signature error</code>. Just get lambdaset crashes that are opaque/non-actionable.</p>\n<p>Note: small sample size. Might be some cases where that borrow inference blocks useful errors. I just haven't run into it.</p>",
        "id": 450488643,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720625615
    }
]