[
    {
        "content": "<p>Hi,<br>\nI would like to know the current expectations I can have with <code>expect</code>, or if I'm using it in a wrong way. My current observations are:</p>\n<ol>\n<li>It doesn't work inside functions</li>\n<li>It works outside functions but prints a different message if the variable is declared inside or outside of the <code>expect</code> scope.<br>\n<a href=\"/user_uploads/22008/-_WR431tGHo-eOczYP1Iv36_/Screenshot-2022-11-09-at-12.40.12.png\">Screenshot-2022-11-09-at-12.40.12.png</a><div class=\"message_inline_image\"><a href=\"/user_uploads/22008/-_WR431tGHo-eOczYP1Iv36_/Screenshot-2022-11-09-at-12.40.12.png\" title=\"Screenshot-2022-11-09-at-12.40.12.png\"><img src=\"/user_uploads/22008/-_WR431tGHo-eOczYP1Iv36_/Screenshot-2022-11-09-at-12.40.12.png\"></a></div></li>\n</ol>",
        "id": 308769130,
        "sender_full_name": "Ghislain",
        "timestamp": 1667994195
    },
    {
        "content": "<p>it should work inside functions too when you use <code>roc dev file.roc</code> with a recent build of the compiler</p>",
        "id": 308769982,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667994598
    },
    {
        "content": "<p>assuming the <code>expect</code> is reached from <code>main</code></p>",
        "id": 308770078,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667994614
    },
    {
        "content": "<p>I just uploaded the latest nightlies (except for macos x86_64) so those should be good</p>",
        "id": 308770905,
        "sender_full_name": "Anton",
        "timestamp": 1667994941
    },
    {
        "content": "<p>I built today from the source, to be sure I tested with your nightlies <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> but I get the same output</p>",
        "id": 308772163,
        "sender_full_name": "Ghislain",
        "timestamp": 1667995385
    },
    {
        "content": "<p>well yeah so regarding what is shown: your observations are roughly correct. We look at what values are captured by the expect. other top-level values are constants, so they are not considered to be captured. So maybe we should tweak that slightly</p>",
        "id": 308772857,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667995662
    },
    {
        "content": "<p>inline expects do work right? This is with latest main</p>\n<div class=\"codehilite\"><pre><span></span><code>main =\n    expect 1 == 2\n    &quot;Roc &lt;3 Zig!\\n&quot;\n</code></pre></div>\n<p>gives </p>\n<div class=\"codehilite\"><pre><span></span><code>&gt; cargo run -- dev examples/platform-switching/rocLovesZig.roc\n    Finished dev [unoptimized + debuginfo] target(s) in 0.25s\n     Running `target/debug/roc dev examples/platform-switching/rocLovesZig.roc`\nüî® Rebuilding platform...\nRoc &lt;3 Zig!\nruntime: 0.057ms\n‚îÄ‚îÄ EXPECT FAILED ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ examples/platform-switching/rocLovesZig.roc ‚îÄ\n\nThis expectation failed:\n\n7‚îÇ      expect 1 == 2\n               ^^^^^^‚èé\n</code></pre></div>",
        "id": 308773243,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667995814
    },
    {
        "content": "<p>Ok, there is something weird on my Mac, I did exactly the same and I don't get the <code>EXPECT FAILED</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ cat examples/platform-switching/rocLovesZig.roc\napp <span class=\"s2\">\"rocLovesZig\"</span>\n    packages <span class=\"o\">{</span> pf: <span class=\"s2\">\"zig-platform/main.roc\"</span> <span class=\"o\">}</span>\n    imports <span class=\"o\">[]</span>\n    provides <span class=\"o\">[</span>main<span class=\"o\">]</span> to pf\n\n<span class=\"nv\">main</span> <span class=\"o\">=</span>\n    expect <span class=\"nv\">1</span> <span class=\"o\">==</span> <span class=\"m\">2</span>\n    <span class=\"s2\">\"Roc &lt;3 Zig!\\n\"</span>\n$ cargo run -- dev examples/platform-switching/rocLovesZig.roc\n    Finished dev <span class=\"o\">[</span>unoptimized + debuginfo<span class=\"o\">]</span> target<span class=\"o\">(</span>s<span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"m\">0</span>.17s\n     Running <span class=\"sb\">`</span>target/debug/roc dev examples/platform-switching/rocLovesZig.roc<span class=\"sb\">`</span>\nüî® Rebuilding platform...\nRoc &lt;<span class=\"m\">3</span> Zig!\nruntime: <span class=\"m\">0</span>.075ms\n$\n</code></pre></div>",
        "id": 308774161,
        "sender_full_name": "Ghislain",
        "timestamp": 1667996197
    },
    {
        "content": "<p>interesting! we'll have to debug that then. On linux it does work, so there must be some subtle difference again that makes it fail on mac</p>",
        "id": 308776543,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667997111
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> it did work on mac at some point right?</p>",
        "id": 308776628,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667997131
    },
    {
        "content": "<p>maybe it's a good idea to <code>strace</code> (does that work on mac?) the process to see what syscalls actually happen</p>",
        "id": 308776745,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1667997183
    },
    {
        "content": "<p>fwiw I never got inline expects to work on the M1 I use</p>",
        "id": 308791503,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1668002067
    },
    {
        "content": "<p>I see no execution at all as of e589dc88a3dfc2d5bc14aac1c7d319d716bece0a</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;rocLovesC&quot;\n    packages { pf: &quot;c-platform/main.roc&quot; }\n    imports []\n    provides [main] to pf\n\nmain =\n    expect 1 == 2\n    &quot;Roc &lt;3 C!\\n&quot;\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>‚ùØ target/debug/roc dev examples/platform-switching/rocLovesC.roc\nüî® Rebuilding platform...\n</code></pre></div>",
        "id": 308791674,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1668002118
    },
    {
        "content": "<p>what syscalls do you need to trace? <code>strace</code> isn't a thing on Mac, the two other options (dtruss and Instruments) have only ever hung and sigsegv'd for me over roc binaries</p>",
        "id": 308792265,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1668002288
    },
    {
        "content": "<p>ah, ok</p>",
        "id": 308792517,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1668002386
    },
    {
        "content": "<p>well, I'm assuming that the expect does fail, but the parent process just gets an empty buffer and hence prints nothing</p>",
        "id": 308792635,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1668002411
    },
    {
        "content": "<p>we can check what bytes expect is seeing before doing the printing. I can take a look later if you'd like</p>",
        "id": 308805746,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1668006060
    },
    {
        "content": "<p>I'll look at it with Richard too later today if you don't get to it before then</p>",
        "id": 308806679,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1668006329
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> we didn't get to this, so if you can do some troubleshooting that would be great</p>",
        "id": 308883107,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1668031622
    },
    {
        "content": "<p>understood</p>",
        "id": 308884916,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1668032309
    }
]