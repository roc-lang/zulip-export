[
    {
        "content": "<p>I might be blind and overlooked this section on FAQ but I wonder what advantages tags have not to be typed in advance on big codebases over ELM's always have to type so you'll always find where all possible values are there</p>",
        "id": 412983535,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1705333100
    },
    {
        "content": "<p>A big one is in error accumulation</p>",
        "id": 412988393,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705334561
    },
    {
        "content": "<p>If you run many different tasks that all return different error types, you call let them all merge into giant error union</p>",
        "id": 412988525,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705334606
    },
    {
        "content": "<p>You never have to explicitly write out that type and when you add a new task with a new failure mode there are random types to change.</p>",
        "id": 412988681,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705334658
    },
    {
        "content": "<p>Of course you will still get an exhaustiveness checking error if you match on the tags error type but ignore a variant.</p>",
        "id": 412988774,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705334695
    },
    {
        "content": "<p>Another big piece is that Roc never requires any type information to compile. A user can build a Roc app without ever writing down any type.</p>",
        "id": 412990232,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705335176
    },
    {
        "content": "<p>Oh, also, type alias in roc are even weaker in meaning than in something like elm.</p>\n<p>Writing:</p>\n<div class=\"codehilite\"><pre><span></span><code>MyType: [ Tall, Short ]\n\nx : MyType\nx = Short\n</code></pre></div>\n<p>has the exact same meaning as:</p>\n<div class=\"codehilite\"><pre><span></span><code>x : [ Tall, Short ]\nx = Short\n</code></pre></div>",
        "id": 412991242,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705335512
    },
    {
        "content": "<p>This may also be a good read in general if you haven't seen it: <a href=\"https://github.com/roc-lang/roc/blob/main/roc-for-elm-programmers.md\">https://github.com/roc-lang/roc/blob/main/roc-for-elm-programmers.md</a></p>",
        "id": 412991376,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705335565
    },
    {
        "content": "<p>Not sure if any of this exactly answers your question, but hopefully it at least gives some context.</p>",
        "id": 412991426,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705335584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/why.20tags.20doesn't.20need.20to.20be.20typed.3F/near/412991426\">said</a>:</p>\n<blockquote>\n<p>Not sure if any of this exactly answers your question, but hopefully it at least gives some context.</p>\n</blockquote>\n<p>it answers and somehow expands a little bit more. I see it's not fun and roses but provides a very powerful error handling system.</p>",
        "id": 413009218,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1705341886
    },
    {
        "content": "<p>do you believe this is a common question to be added on the FAQ section? for me it was the first thing I was \"what?\"</p>",
        "id": 413009409,
        "sender_full_name": "Vinicius Ataide",
        "timestamp": 1705341971
    },
    {
        "content": "<p>I'm not sure. I don't think I have seen it too often.</p>",
        "id": 413019117,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705347340
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"679486\">Vinicius Ataide</span> has marked this topic as resolved.</p>",
        "id": 413227028,
        "sender_full_name": "Notification Bot",
        "timestamp": 1705434142
    }
]