[
    {
        "content": "<p>(forked from <a href=\"#narrow/stream/231634-beginners/topic/Task.2Ferror.20handling.20.26.20platform.20use/near/314385634\">https://roc.zulipchat.com/#narrow/stream/231634-beginners/topic/Task.2Ferror.20handling.20.26.20platform.20use/near/314385634</a>)</p>\n<p>I have observed compiler errors like:</p>\n<div class=\"codehilite\"><pre><span></span><code>This Task.await call produces:\n\n    Task (List Str) [FileReadErr Path.Path InternalFile.ReadErr,\n    FileReadUtf8Err Path.Path [BadUtf8 Utf8ByteProblem Nat]]\n\nBut the type annotation on readLines says it should be:\n\n    Task (List Str) *\n</code></pre></div>\n<p><code>FileReadErr</code> exposes mention of an <code>InternalFile.ReadErr</code>. Is this intentional? Is this something we can reference and inspect in the calling application? Use of <code>Internal</code> in exposed error messages and APIs, at least for me, decreases confidence in the maturity of the system (though I realize it's a work-in-progress).</p>\n<p>Does <code>FileReadUtf8Err</code> need to bundle <code>BadUtf8</code>, and in turn, does <code>BadUtf8</code> need to bundle <code>Utf8ByteProblem</code>? Could <code>FileReadErr</code> just directly bundle <code>BadUtf8</code> as one of its tag arguments instead of introducing a separate top-level error?</p>",
        "id": 314849078,
        "sender_full_name": "Kevin Gillette",
        "timestamp": 1670577470
    }
]