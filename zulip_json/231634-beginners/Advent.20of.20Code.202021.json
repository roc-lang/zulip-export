[
    {
        "content": "<p>Anyone planning to do Advent of Code 2021 in Roc? <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>\n<p><a href=\"https://adventofcode.com/2021\">https://adventofcode.com/2021</a></p>",
        "id": 262241233,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1637501981
    },
    {
        "content": "<p>How much setup would it need? Is it for example possible to set up an AoC example?</p>\n<p>I think it's a great opportunity to try out Roc, I'm just not sure how much time I'll have for AoC. So if there is expected overhead, I might reconsider Roc.</p>",
        "id": 262241357,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1637502171
    },
    {
        "content": "<p>I think I'll give it a go. I've never done it and might as well do it in roc</p>",
        "id": 262253997,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1637519877
    },
    {
        "content": "<blockquote>\n<p>Is it for example possible to set up an AoC example?</p>\n</blockquote>\n<p>definitely! We could make an <code>examples/advent-of-code</code> which has sort of a starter kit example for doing things like:</p>\n<ul>\n<li>writing to the terminal</li>\n<li>reading from the terminal</li>\n<li>writing to a file</li>\n<li>reading from a file</li>\n</ul>",
        "id": 262254053,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1637519953
    },
    {
        "content": "<p>maybe just cli is enough?</p>",
        "id": 262254119,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1637520058
    },
    {
        "content": "<p>it has writing/reading to terminal but idk about file IO</p>",
        "id": 262254129,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1637520081
    },
    {
        "content": "<p>482952-59f1582e</p>",
        "id": 262254356,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1637520422
    },
    {
        "content": "<p>I made a private leaderboard ^</p>",
        "id": 262254363,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1637520430
    },
    {
        "content": "<p>Generally you don't need terminal, just file io/copying data into an array. They tend to give you a sample problem with a small input to interpret then either a larger input or many inputs in a file.</p>",
        "id": 262256265,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1637523113
    },
    {
        "content": "<p>When I did it in Elm one year, I just copied the input data into a file called <code>input.elm</code> and made it a <code>String</code> or a <code>List Int</code>. I figured my program didn't need to parse _any_ input, just that specific input. <span aria-label=\"smiling devil\" class=\"emoji emoji-1f608\" role=\"img\" title=\"smiling devil\">:smiling_devil:</span></p>",
        "id": 262261224,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1637529539
    },
    {
        "content": "<p>But Elm has the excuse of being a front end language!</p>",
        "id": 262261241,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1637529597
    },
    {
        "content": "<p>lmao</p>",
        "id": 262262148,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1637530858
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/Advent.20of.20Code.202021/near/262256265\">said</a>:</p>\n<blockquote>\n<p>Generally you don't need terminal, just file io/copying data into an array. They tend to give you a sample problem with a small input to interpret then either a larger input or many inputs in a file.</p>\n</blockquote>\n<p>what about outputting an answer?</p>",
        "id": 262262155,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1637530870
    },
    {
        "content": "<p>oh...fair...though could just write to file.</p>",
        "id": 262262294,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1637531070
    },
    {
        "content": "<p>oh true lol</p>",
        "id": 262262473,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1637531355
    },
    {
        "content": "<p>I thought I'd have a look at the previous AoC to see how to set it up. It's pretty easy to go inside <code>example/cli</code> and just do something like <code>cat input.txt | cargo run Day1.roc &gt; output.txt</code>.</p>\n<p>But I immediately needed to parse the input into a list of numbers and that's where I'm already lost. I know it's marked as a high priority built-in in <a href=\"https://github.com/rtfeldman/roc/issues/664\">https://github.com/rtfeldman/roc/issues/664</a>, but unfortunately I currently don't have time to figure out how to implement it.</p>\n<p>So based on this, I think I might do AoC (if at all) in a more familiar language, but I'm definitely interested in doing it again in Roc, as soon as the avant-garde has cleared the way. ;)</p>",
        "id": 262934053,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1638113038
    },
    {
        "content": "<p>Hi Johannes, I solved last year's AoC with a very early version of Roc. You can read a little bit about it here: <a href=\"https://github.com/pithub/aoc2020/blob/master/WrapUp.md\">https://github.com/pithub/aoc2020/blob/master/WrapUp.md</a>. My platform read files as a list of bytes, which were then parsed into a list of numbers, for example.</p>",
        "id": 262934926,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1638114216
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"358152\">@Pit Capitain</span>! Looks really interesting! If I find some time, I might take inspiration from your repo. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 262938024,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1638118844
    },
    {
        "content": "<p>I got most of the tutorial done: <a href=\"https://github.com/rtfeldman/roc/blob/trunk/TUTORIAL.md\">https://github.com/rtfeldman/roc/blob/trunk/TUTORIAL.md</a></p>",
        "id": 262964487,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1638157877
    },
    {
        "content": "<p>I'll keep filling in missing sections over the next week, but hopefully what's there will be helpful so far!</p>",
        "id": 262964504,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1638157898
    },
    {
        "content": "<p>Very nice <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> It's really hard for me to resist, but I have other tasks I need to accomplish first <span aria-label=\"disappointed\" class=\"emoji emoji-1f61e\" role=\"img\" title=\"disappointed\">:disappointed:</span></p>",
        "id": 262971174,
        "sender_full_name": "Pit Capitain",
        "timestamp": 1638167388
    },
    {
        "content": "<p>if anyone just joined for Advent of Code, welcome! <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> </p>\n<p>feel free to introduce yourself in <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/introductions\">#beginners &gt; introductions</a> and ask any Advent of Code related questions right here in this topic!</p>",
        "id": 263011222,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1638194333
    },
    {
        "content": "<p>482952-59f1582e</p>",
        "id": 263020142,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638198453
    },
    {
        "content": "<p>dropping the private leaderboard I made for roc folks again ^</p>",
        "id": 263020177,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638198468
    },
    {
        "content": "<p>Hello! Trying Roc on 2021/01, starting out from examples/cli. Is there some working implemented str-&gt;num function? I tried out Str.toNum and Str.toU8 that I saw mentioned in the compiler/builtins/docs/*.roc but no luck so far</p>",
        "id": 263259231,
        "sender_full_name": "Martin Janiczek",
        "timestamp": 1638348384
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455616\">Martin Janiczek</span> <a href=\"#narrow/stream/231634-beginners/topic/Advent.20of.20Code.202021/near/263259231\">said</a>:</p>\n<blockquote>\n<p>Hello! Trying Roc on 2021/01, starting out from examples/cli. Is there some working implemented str-&gt;num function? I tried out Str.toNum and Str.toU8 that I saw mentioned in the compiler/builtins/docs/*.roc but no luck so far</p>\n</blockquote>\n<p>We mentioned that in <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/tutorial\">#beginners &gt; tutorial</a> and the change is coming: <a href=\"https://github.com/rtfeldman/roc/pull/2108\">https://github.com/rtfeldman/roc/pull/2108</a></p>",
        "id": 263261052,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638349557
    },
    {
        "content": "<p>for day 1, if we save the inputs into a file, we need a way to read from that file.  The tutorial mentions that in <a href=\"https://github.com/rtfeldman/roc/blob/trunk/TUTORIAL.md#tasks\">https://github.com/rtfeldman/roc/blob/trunk/TUTORIAL.md#tasks</a> but does not show the implementation. WIP I guess.<br>\nI could not find any examples reading from a file. And you?</p>",
        "id": 263263238,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638350888
    },
    {
        "content": "<p>I don't know if it's the good channel to get help.<br>\nWith the following code:</p>\n<div class=\"codehilite\"><pre><span></span><code>measurements = [199, 200, 208, 210, 200, 207, 240, 269, 260, 263 ]\nincreases = List.walk measurements { counts: 0, previousElement: 600 } \\state, elem -&gt;\n    when state.previousElement is\n        Num previousElement if previousElement &lt; elem -&gt; { counts: state.counts + 1, previousElement: elem }\n        _ -&gt; { state &amp; previousElement: elem }\nincreases\n</code></pre></div>\n<p>(previousElement: 600 is not here to stay, only to experiment)<br>\nI got the following error:</p>\n<div class=\"codehilite\"><pre><span></span><code>── TYPE MISMATCH ───────────────────────────────────────────────────────────────\n\nThe 2nd branch of this when does not match all the previous branches:\n\n6│          when state.previousElement is\n7│              Num previousElement if previousElement &lt; elem -&gt; { counts: state.counts + 1, previousElement: elem }\n8│              _ -&gt; { state &amp; previousElement: elem }\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe 2nd branch is a record of type:\n\n    { counts : Num a, previousElement : [ Num (Num b) ]c }\n\nBut all the previous branches have type:\n\n    { counts : Num a, previousElement : Num b }\n\nI need all branches of a when to have the same type!\n</code></pre></div>\n<p>I don't really get the error about <code>[ Num (Num b) ]c</code>. Can someone help?</p>",
        "id": 263265584,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638352275
    },
    {
        "content": "<p>I'll take a look in 15 mins <span class=\"user-mention\" data-user-id=\"460663\">@Yann Simon</span></p>",
        "id": 263266859,
        "sender_full_name": "Anton",
        "timestamp": 1638352944
    },
    {
        "content": "<p>I'm not exactly sure what went wrong <span class=\"user-mention\" data-user-id=\"460663\">@Yann Simon</span> but this fixes it :)</p>\n<div class=\"codehilite\"><pre><span></span><code>measurements = [199, 200, 208, 210, 200, 207, 240, 269, 260, 263 ]\nincreases =\n    List.walk measurements { counts: 0, previousElement: 600 } \\state, elem -&gt;\n        if state.previousElement &lt; elem then\n            { counts: state.counts + 1, previousElement: elem }\n        else\n            { state &amp; previousElement: elem }\nincreases\n</code></pre></div>",
        "id": 263269678,
        "sender_full_name": "Anton",
        "timestamp": 1638354549
    },
    {
        "content": "<p>OK, but I'd like to use something else as <code>600</code>  as initial state, like <code>None</code> to start with an empty previous element. And then I need the <code>when</code> right?</p>",
        "id": 263270627,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638355077
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"460663\">Yann Simon</span> <a href=\"#narrow/stream/231634-beginners/topic/Advent.20of.20Code.202021/near/263261052\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"455616\">Martin Janiczek</span> <a href=\"#narrow/stream/231634-beginners/topic/Advent.20of.20Code.202021/near/263259231\">said</a>:</p>\n<blockquote>\n<p>Hello! Trying Roc on 2021/01, starting out from examples/cli. Is there some working implemented str-&gt;num function? I tried out Str.toNum and Str.toU8 that I saw mentioned in the compiler/builtins/docs/*.roc but no luck so far</p>\n</blockquote>\n<p>We mentioned that in <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/tutorial\">#beginners &gt; tutorial</a> and the change is coming: <a href=\"https://github.com/rtfeldman/roc/pull/2108\">https://github.com/rtfeldman/roc/pull/2108</a></p>\n</blockquote>\n<p>I'm sorry for the confusion, my question was the other way round, the linked PR does Num-&gt;Str, I need Str-&gt;Num</p>",
        "id": 263271866,
        "sender_full_name": "Martin Janiczek",
        "timestamp": 1638355604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"460663\">@Yann Simon</span> I see, matching with <code>Some</code>(with if) and <code>None</code> should work. <br>\nMatching with <code>Num previousElement</code> does not work as you intend, I'd recommend reading the section on Numbers <a href=\"https://github.com/rtfeldman/roc/blob/trunk/roc-for-elm-programmers.md#numbers\">here</a>.</p>",
        "id": 263275742,
        "sender_full_name": "Anton",
        "timestamp": 1638357879
    },
    {
        "content": "<p>Hey all, looking for a bit of advice on how to get up and running. I've got a hello world example here: <a href=\"https://github.com/Sourceless/advent-of-code-2021/blob/master/01/part1.roc\">https://github.com/Sourceless/advent-of-code-2021/blob/master/01/part1.roc</a> -- I see that a lib is required to use some of the I/O actions, so I've symlinked to the <code>platform</code> in <code>examples/cli</code> in the Roc repo.</p>\n<p>This example compiles and runs but produces no output:<br>\n``` $ roc part1.roc <br>\n<span aria-label=\"hammer\" class=\"emoji emoji-1f528\" role=\"img\" title=\"hammer\">:hammer:</span> Rebuilding host... Done!</p>\n<p>$ ```</p>\n<p>There is however a blank line.</p>\n<p>I'm running the latest nightly of Roc (the binary sat in my PATH) with cargo nightly on Ubuntu 20.04. Thanks in advance for any help and please forgive the stupid questions!</p>",
        "id": 263301693,
        "sender_full_name": "Laurence Joseph Pakenham-Smith",
        "timestamp": 1638370267
    },
    {
        "content": "<p>You might be running into the same issue I ran into a while ago : <a href=\"#narrow/stream/231634-beginners/topic/tutorial/near/263096067\">https://roc.zulipchat.com/#narrow/stream/231634-beginners/topic/tutorial/near/263096067</a></p>",
        "id": 263302179,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638370490
    },
    {
        "content": "<p>I've found that you just need to await <em>something</em> - so I'm making it await on <code>Task.succeed {}</code></p>",
        "id": 263302311,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638370540
    },
    {
        "content": "<p>using your <code>main</code> definition there gets me this:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, compiler/mono/src/ir.rs:8208:35\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrac\n</code></pre></div>",
        "id": 263302505,
        "sender_full_name": "Laurence Joseph Pakenham-Smith",
        "timestamp": 1638370606
    },
    {
        "content": "<p>Did you import <code>pf.Task.{ await }</code>?</p>",
        "id": 263302872,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638370762
    },
    {
        "content": "<p>i didn't, i'll try that quickly</p>",
        "id": 263302918,
        "sender_full_name": "Laurence Joseph Pakenham-Smith",
        "timestamp": 1638370789
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">app</span> <span class=\"s\">\"hello\"</span>\n    <span class=\"nx\">packages</span> <span class=\"p\">{</span> <span class=\"nv\">base: </span><span class=\"s\">\"../examples/cli/platform\"</span> <span class=\"p\">}</span>\n    <span class=\"nx\">imports</span> <span class=\"p\">[</span> <span class=\"nx\">base</span><span class=\"p\">.</span><span class=\"nx\">Task</span><span class=\"p\">.{</span> <span class=\"nx\">await</span><span class=\"p\">,</span> <span class=\"nx\">succeed</span> <span class=\"p\">},</span> <span class=\"nx\">base</span><span class=\"p\">.</span><span class=\"nx\">Stdout</span> <span class=\"p\">]</span>\n    <span class=\"nx\">provides</span> <span class=\"p\">[</span> <span class=\"nx\">main</span> <span class=\"p\">]</span> <span class=\"nx\">to</span> <span class=\"nx\">base</span>\n\n<span class=\"nv\">main =</span>\n    <span class=\"c1\"># Has to be the first line of every main</span>\n    <span class=\"nx\">_</span> <span class=\"o\">&lt;-</span> <span class=\"nx\">await</span> <span class=\"p\">(</span><span class=\"nx\">succeed</span> <span class=\"p\">{})</span>\n\n    <span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span> <span class=\"s\">\"I'm a roc application!\"</span>\n</code></pre></div>",
        "id": 263302926,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638370794
    },
    {
        "content": "<p>that did it, many thanks <span class=\"user-mention\" data-user-id=\"460648\">@Shrikanth Upadhayaya</span></p>",
        "id": 263303143,
        "sender_full_name": "Laurence Joseph Pakenham-Smith",
        "timestamp": 1638370849
    },
    {
        "content": "<p>I see we have a few people in the AoC roc leaderboard :p</p>",
        "id": 263311954,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638374309
    },
    {
        "content": "<p>here's the id for newcomers: <code>482952-59f1582e</code></p>",
        "id": 263312035,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638374337
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"357305\">@Lucas Rosa</span>  Where do we use that ID?</p>",
        "id": 263314365,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638375157
    },
    {
        "content": "<p>on the AoC site, click <code>[Leaderboard]</code>, then in the paragraph below the menu click <code>[Private Leaderboard]</code>, you should see an input box to add that ID</p>",
        "id": 263314893,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638375346
    },
    {
        "content": "<p>Ah, that paragraph doesn't show up until you Log In.  Thanks... just added myself.</p>",
        "id": 263315377,
        "sender_full_name": "Jason Hobbs",
        "timestamp": 1638375520
    },
    {
        "content": "<p>baller</p>",
        "id": 263316389,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638375930
    },
    {
        "content": "<p>For anyone that has completed the advent of code for today in Roc, it would be great if you can send the link to your repo. That way other users who get stuck can take a look. Since roc has a number of rough edges at the moment, that would probably be very useful to others.</p>",
        "id": 263333180,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638382508
    },
    {
        "content": "<p>Here is a link to a gist. I'll probably end up creating a repo so I can have all the days together, but this is for today. This is my first time really using a functional language for something non-trivial, and I know at least a few things that I could have improved: <a href=\"https://gist.github.com/cbcc781860f5ad69b7c7bfe55087e6c6\">https://gist.github.com/cbcc781860f5ad69b7c7bfe55087e6c6</a></p>\n<p>I didn't do any reading in from a file, just copied the list of numbers since the Str.toNum builtin wasn't ready yet</p>\n<p>I just used the cli platform for the platform</p>",
        "id": 263380526,
        "sender_full_name": "Tim Whiting",
        "timestamp": 1638407016
    },
    {
        "content": "<p>I'm still stuck. I've tried adding more type annotations to help the compiler, but nothing helps ;(</p>\n<div class=\"codehilite\"><pre><span></span><code>Option a : [ Some a, None ]\nAggr : { counts: Nat, previousElement: Option Nat}\n\nwalkStep: Aggr, Nat -&gt; Aggr\nwalkStep = \\state, elem -&gt;\n    when state.previousElement is\n        Some previousElement if previousElement &lt; elem -&gt; { counts: state.counts + 1, previousElement: Some elem }\n        _ -&gt; { state &amp; previousElement: Some elem }\n\ninitialState: Aggr\ninitialState = { counts: 0, previousElement: None }\n\nmeasurements = [199, 200, 208, 210, 200, 207, 240, 269, 260, 263 ]\nincreases = List.walk measurements initialState walkStep\nincreases\n</code></pre></div>\n<p>gives the following error in the REPL:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;internal error: entered unreachable code: Something had a Struct layout, but instead of a Record or TagUnion type, it had: Alias(`#UserApp.Aggr`, AliasVariables { variables_start: 424, all_variables_len: 0, type_variables_len: 0 }, 990)&#39;, cli/src/repl/eval.rs:184:21\n</code></pre></div>\n<p>or this error when compiling the roc file:</p>\n<div class=\"codehilite\"><pre><span></span><code>Mismatch in compiler/unify/src/unify.rs Line 1078 Column 13\nTrying to unify two flat types that are incompatible: { &#39;counts&#39; : Required(1152), &#39;previousElement&#39; : Required(1137), }&lt;1&gt; ~ Apply(`Str.Str`, [])\n\nthread &#39;main&#39; panicked at &#39;internal error: entered unreachable code: symbol/layout `fx.Effect.effect_always_inner` ProcLayout { arguments: [Struct([]), LambdaSet(LambdaSet { set: [(`fx.Effect.effect_always_inner`, [Union(NonRecursive([[Union(NonRecursive([]))], [Builtin(Str)]]))])], representation: Struct([Union(NonRecursive([[Union(NonRecursive([]))], [Builtin(Str)]]))]) })], result: Union(NonRecursive([[Union(NonRecursive([]))], [Union(NonRecursive([]))]])) } combo must be in DeclarationToIndex&#39;, compiler/mono/src/borrow.rs:227:9\n</code></pre></div>",
        "id": 263388289,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638414694
    },
    {
        "content": "<p>Same issue by changing <code>walkStep</code> to:</p>\n<div class=\"codehilite\"><pre><span></span><code>walkStep = \\state, _elem -&gt;\n    state\n</code></pre></div>",
        "id": 263388879,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638415519
    },
    {
        "content": "<p>I created a gist for using the WIP <code>cli-file-io</code> branch for reading input: <a href=\"https://gist.github.com/shrik450/dea48e77ccacc3f6da6bf9538cd61bde\">https://gist.github.com/shrik450/dea48e77ccacc3f6da6bf9538cd61bde</a></p>",
        "id": 263389609,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638416410
    },
    {
        "content": "<p>I ran into a few issues which I patched, so this should be helpful if you're trying to do it but can't get it working</p>",
        "id": 263389624,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638416436
    },
    {
        "content": "<p>ok very strange, I've started a new roc file from scratch, copy/paste everything step by step, and now it's compiling...</p>",
        "id": 263389639,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638416477
    },
    {
        "content": "<p>My solution, without reading inputs from file:</p>\n<ul>\n<li>with type annotations: <a href=\"https://gist.github.com/yanns/3212cd6400b6ccf0f32912e1c96e9b1f\">https://gist.github.com/yanns/3212cd6400b6ccf0f32912e1c96e9b1f</a></li>\n<li>without type annotations: <a href=\"https://gist.github.com/yanns/b8ea295d91ac64d8bd6d41a0d1611ac8\">https://gist.github.com/yanns/b8ea295d91ac64d8bd6d41a0d1611ac8</a></li>\n</ul>",
        "id": 263389992,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638416929
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"460648\">Shrikanth Upadhayaya</span> <a href=\"#narrow/stream/231634-beginners/topic/Advent.20of.20Code.202021/near/263389609\">said</a>:</p>\n<blockquote>\n<p>I created a gist for using the WIP <code>cli-file-io</code> branch for reading input: <a href=\"https://gist.github.com/shrik450/dea48e77ccacc3f6da6bf9538cd61bde\">https://gist.github.com/shrik450/dea48e77ccacc3f6da6bf9538cd61bde</a></p>\n</blockquote>\n<p>Cool! Could you merge trunk inside so that we can still use <code>Num.toStr</code>?</p>",
        "id": 263390259,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638417305
    },
    {
        "content": "<p>It's not my branch, unfortunately</p>",
        "id": 263390412,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638417520
    },
    {
        "content": "<p>if you want to use both, you can vendor the platform code separately into whatever directory you're using</p>",
        "id": 263390422,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638417547
    },
    {
        "content": "<p>The only changes there are in the platform code</p>",
        "id": 263390435,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638417578
    },
    {
        "content": "<p>ok thx</p>",
        "id": 263390659,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638417753
    },
    {
        "content": "<p>I can confirm I can read the file (with the modification as I'm on macos)<br>\nNow I just need <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/Str.2EtoNum\">#beginners &gt; Str.toNum</a>  <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 263391364,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638418707
    },
    {
        "content": "<p>What's the policy on public repos with Roc code? Would it be okay to make Roc code public, or should I make my repo private until the language stabilizes?</p>",
        "id": 263392188,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1638419901
    },
    {
        "content": "<p>I think public repos should be fine. I mean there are already a number of talks on roc. We mostly want to control how plausible it is for Roc to go viral and then for many people to be extremely annoyed because it isn't ready yet. But we are willing to accept new comers who happen upon the language.</p>",
        "id": 263392312,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638420105
    },
    {
        "content": "<p>Just want slow stable growth until it is more ready for the general internet. Public repos on github should be just fine. I wouldn't expect them to randomly go viral.</p>",
        "id": 263392370,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638420174
    },
    {
        "content": "<p>I've pushed my current code to github: <a href=\"https://github.com/yanns/roc-advent-of-code-2021/blob/main/day1/aoc_1.roc\">https://github.com/yanns/roc-advent-of-code-2021/blob/main/day1/aoc_1.roc</a></p>",
        "id": 263410288,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638436671
    },
    {
        "content": "<p>sick</p>",
        "id": 263459548,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638460983
    },
    {
        "content": "<p>for those doing advent of code in Roc: how's it going? Has anyone gotten stuck or blocked on anything?</p>\n<p>It's a great opportunity to find things to fix in the language, so please let us know about anything you trip over! <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 263770666,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1638714081
    },
    {
        "content": "<p>(Day 1 of AoC is my first Roc program, so my feedback is very untrained.)</p>\n<p>I got stuck on this problem for a while:</p>\n<div class=\"codehilite\"><pre><span></span><code>jan@Jans-MacBook-Pro advent-of-code-2021 % ./solutions/day-1a-sonar-sweep/run_1a.sh\n    Finished dev [unoptimized + debuginfo] target(s) in 0.30s\n     Running `target/debug/roc ../solutions/day-1a-sonar-sweep/solution_1a.roc`\nMismatch in compiler/unify/src/unify.rs Line 1078 Column 13\nTrying to unify two flat types that are incompatible: Func([242, 252], 240, 221) ~ Func([104, 105, 117], 119, 120)\n\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, compiler/mono/src/ir.rs:8236:35\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n^C\n\n[nix-shell:~/code/advent-of-code-2021/roc]$ exit\nexit\njan@Jans-MacBook-Pro advent-of-code-2021 %\n</code></pre></div>\n<p>The problematic code was essentially this:</p>\n<div class=\"codehilite\"><pre><span></span><code>#!/usr/bin/env roc\n\napp &quot;hi&quot;\n    packages { base: &quot;../../roc/examples/cli/platform&quot; }\n    imports [ base.Task.{ Task, await }, base.Stdout ]\n    provides [ main ] to base\n\nmain : Task {} *\nmain =\n    {} &lt;- await Stdout.line &quot;hi&quot;\n    Stdout.line &quot;nope&quot;\n</code></pre></div>\n<p>My obvious-in-hindsight mistake was missing parentheses: <code>await (Stdout.line \"hi\")</code> However, this panic is super confusing. Additionally, I feel like I've seen as many obtuse panics (like this one, but there's been others) as pretty-printed error/warning messages - this is offputting to a learner, though I imagine this is par for the course for WIP compilers.</p>",
        "id": 263802986,
        "sender_full_name": "jan kili",
        "timestamp": 1638757859
    },
    {
        "content": "<p>I saw this panic about 10 times in my first 10 minutes of coding (likely from some fundamentally flawed line of code, like missing parentheses or something):</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;called `Option::unwrap()` on a `None` value&#39;, src/lib.rs:116:45\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nfatal runtime error: failed to initiate panic, error 5\n</code></pre></div>",
        "id": 263803045,
        "sender_full_name": "jan kili",
        "timestamp": 1638757969
    },
    {
        "content": "<p>Ideas for improvement (not sure if possible):</p>\n<ol>\n<li>Call out likely formatting mistakes?</li>\n<li>Identify the line of code that's causing the panic?</li>\n</ol>",
        "id": 263803109,
        "sender_full_name": "jan kili",
        "timestamp": 1638758097
    },
    {
        "content": "<p>Excellent feedback, thanks <span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span>! Can someone familiar with this code set up some issues?</p>",
        "id": 263850437,
        "sender_full_name": "Anton",
        "timestamp": 1638797802
    },
    {
        "content": "<p>I have the repo updated and can run <code>cargo run repl</code>. what's the recommended way to get started? :) I tried the gist, but even with the patches it segfaults on <code>thread 'main' panicked at 'not yet implemented: unhandled parse error IndentProvides(0, 14)', reporting/src/error/parse.rs:3148:14</code></p>",
        "id": 263857222,
        "sender_full_name": "Ju Liu",
        "timestamp": 1638800963
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"400753\">@Ju Liu</span>, can you tell me which gist you are using?</p>",
        "id": 263858112,
        "sender_full_name": "Anton",
        "timestamp": 1638801362
    },
    {
        "content": "<p>this one :) <a href=\"https://gist.github.com/shrik450/dea48e77ccacc3f6da6bf9538cd61bde\">https://gist.github.com/shrik450/dea48e77ccacc3f6da6bf9538cd61bde</a></p>",
        "id": 263870326,
        "sender_full_name": "Ju Liu",
        "timestamp": 1638806060
    },
    {
        "content": "<p>\"packages ...\", \"imports...\" and \"provides...\" need to have four spaces before them.</p>",
        "id": 263881172,
        "sender_full_name": "Anton",
        "timestamp": 1638810080
    },
    {
        "content": "<p>thank you! now it just sits there</p>",
        "id": 263889282,
        "sender_full_name": "Ju Liu",
        "timestamp": 1638813360
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ cargo run test.roc\n    Finished dev [unoptimized + debuginfo] target(s) in 0.89s\n     Running `target/debug/roc test.roc`\n</code></pre></div>",
        "id": 263889350,
        "sender_full_name": "Ju Liu",
        "timestamp": 1638813373
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ cat test.roc\napp &quot;solution&quot;\n    packages { base: &quot;../platform&quot; }\n    imports [ base.Task.{ await }, base.Stdout, base.File ]\n    provides [ main ] to base\n\ninputPath = &quot;test.roc&quot;\n\nmain =\n    _ &lt;- await (Stdout.line &quot;Trying to read file...&quot;)\n    task = File.readUtf8 inputPath\n    Task.attempt task \\result -&gt;\n      when result is\n          Ok input -&gt; Stdout.line &quot;Contents:\\n\\(input)&quot;\n          Err _ -&gt; Stdout.line &quot;Failed to read input.&quot;\n</code></pre></div>",
        "id": 263889478,
        "sender_full_name": "Ju Liu",
        "timestamp": 1638813436
    },
    {
        "content": "<p>that branch is still WIP, although it should fail with an explicit error <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> </p>\n<p><a href=\"https://github.com/rtfeldman/roc/pull/2105#issuecomment-984236135\">https://github.com/rtfeldman/roc/pull/2105#issuecomment-984236135</a></p>",
        "id": 263889690,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1638813517
    },
    {
        "content": "<p>it's weird because it seems it's just stuck, maybe I should try straceing it and see what it's up to</p>",
        "id": 263890125,
        "sender_full_name": "Ju Liu",
        "timestamp": 1638813666
    },
    {
        "content": "<p>I also encountered that:</p>\n<ul>\n<li>I changed inputPath to be the full path, which in my case is <code>inputPath = \"/home/anton/gitrepos/extraroc/roc/examples/cli/Test.roc\"</code></li>\n<li>This is my folder layout in examples/cli:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>echo  Echo.roc  Files.roc  platform  README.md  solution  Test.roc\n</code></pre></div>\n<ul>\n<li>I changed the platform location to <code>packages { base: \"./platform\" }</code> instead of  <code>packages { base: \"../platform\" }</code></li>\n</ul>",
        "id": 263890236,
        "sender_full_name": "Anton",
        "timestamp": 1638813712
    },
    {
        "content": "<p>I run with <code>cargo run examples/cli/Test.roc</code> from the root of the repo.</p>",
        "id": 263890388,
        "sender_full_name": "Anton",
        "timestamp": 1638813753
    },
    {
        "content": "<p>Note that I also used <code>Test.roc</code> everywhere instead of <code>test.roc</code></p>",
        "id": 263890479,
        "sender_full_name": "Anton",
        "timestamp": 1638813802
    },
    {
        "content": "<p>Does that work for you <span class=\"user-mention\" data-user-id=\"400753\">@Ju Liu</span> ?</p>",
        "id": 263892836,
        "sender_full_name": "Anton",
        "timestamp": 1638814731
    },
    {
        "content": "<p>uhh, good catch, it runs! :)</p>",
        "id": 263893210,
        "sender_full_name": "Ju Liu",
        "timestamp": 1638814863
    },
    {
        "content": "<p>I had to apply the patches since I'm on OSX</p>",
        "id": 263893242,
        "sender_full_name": "Ju Liu",
        "timestamp": 1638814877
    },
    {
        "content": "<p>this now works for me from the top-level of the repo</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cat Test.roc\napp &quot;solution&quot;\n    packages { base: &quot;./examples/cli/platform&quot; }\n    imports [ base.Task.{ await }, base.Stdout, base.File ]\n    provides [ main ] to base\n\ninputPath = &quot;./Test.roc&quot;\n\nmain =\n    _ &lt;- await (Stdout.line &quot;Trying to read file...&quot;)\n    task = File.readUtf8 inputPath\n    Task.attempt task \\result -&gt;\n      when result is\n          Ok input -&gt; Stdout.line &quot;Contents:\\n\\(input)&quot;\n          Err _ -&gt; Stdout.line &quot;Failed to read input.&quot;\n</code></pre></div>",
        "id": 263893439,
        "sender_full_name": "Ju Liu",
        "timestamp": 1638814949
    },
    {
        "content": "<p>have to run right now, thanks <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> for showing me the light</p>",
        "id": 263893561,
        "sender_full_name": "Ju Liu",
        "timestamp": 1638814992
    },
    {
        "content": "<p>Happy to help :)</p>",
        "id": 263894131,
        "sender_full_name": "Anton",
        "timestamp": 1638815177
    },
    {
        "content": "<p>hello everyone!<br>\nnot sure where to write (first time using zulip) <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> <br>\nI'm getting an error while using records as values for <code>Dict</code>, is this a known issue?</p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc repl\n\n» Dict.single 0 {a: 1, b: 1} |&gt; Dict.get 0\n\nthread &#39;main&#39; panicked at &#39;Error in alias analysis: error in module ModName(&quot;UserApp&quot;), function definition FuncName(&quot;\\x06\\x00\\x00\\x00\\x04\\x00\\x00\\x00eiGJ\\xf5B\\x11=&quot;), definition of value binding ValueId(13): expected type &#39;(((), ()),)&#39;, found type &#39;((),)&#39;&#39;, compiler/gen_llvm/src/llvm/build.rs:4019:19\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 263895620,
        "sender_full_name": "Emiliano Bovetti",
        "timestamp": 1638815676
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"461347\">@Emiliano Bovetti</span>,<br>\nI could not find this in the issues, I'll make a new one. Thanks for reporting it!</p>",
        "id": 263899426,
        "sender_full_name": "Anton",
        "timestamp": 1638817292
    },
    {
        "content": "<p>I wrote a <a href=\"https://gist.github.com/sebfisch/b7d0e60ef9381376f0f3061d82bd6409\">program to solve the tasks of Day 1 with Roc</a>.</p>\n<p>The first task of Day 1 is solved when removing lines 9 and 10 of that program. For that task, the program prints the correct answer for <code>exampleInput</code> as well as <code>largeInput</code>.</p>\n<p>For the second task of Day 1 the program prints the correct result only for <code>exampleInput</code>. When using <code>largeInput</code> the program exits with a segmentation fault.</p>",
        "id": 264222242,
        "sender_full_name": "Sebastian Fischer",
        "timestamp": 1638998561
    },
    {
        "content": "<p>Are you building with <code>--optimize</code></p>",
        "id": 264223193,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638998972
    },
    {
        "content": "<p>Probably getting stack overflow on large inputs otherwise.</p>",
        "id": 264223283,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638999004
    },
    {
        "content": "<p>Originally I was not. I now tried with <code>--optimize</code> but it still segfaults.</p>",
        "id": 264225407,
        "sender_full_name": "Sebastian Fischer",
        "timestamp": 1639000010
    },
    {
        "content": "<p>One more test, can you run <code>ulimit -s unlimited</code> before running the executable?</p>",
        "id": 264226662,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1639000643
    },
    {
        "content": "<p>Will enable unlimited stack space for that terminal session</p>",
        "id": 264226704,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1639000668
    },
    {
        "content": "<p>Also segfaults with unlimited stack space.</p>",
        "id": 264227378,
        "sender_full_name": "Sebastian Fischer",
        "timestamp": 1639000985
    },
    {
        "content": "<p>hmm...probably an actual bug...cool</p>",
        "id": 264227545,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1639001086
    },
    {
        "content": "<p>To be fair requiring unlimited stack space is definitely also a bug, but that is more general to work on things than specific bugs.</p>",
        "id": 264227596,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1639001122
    },
    {
        "content": "<p>Hmm...neither run on my m1 mac. That suggests it is likely some sort of invalid memory bug. arm is a lot more picky around that kind of stuff.</p>",
        "id": 264228043,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1639001343
    },
    {
        "content": "<p>Yeah, looks to be some sort of refcounting issue, maybe a double free</p>",
        "id": 264228588,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1639001640
    },
    {
        "content": "<p>I just spent 2 hours debugging type mismatches in my AoC code, and although I've found some mistakes, I don't feel like my code is close to working. Therefore, I want to take a step back and ask... How should I be developing Roc code? I feel like my workflow must be flawed.</p>",
        "id": 264265170,
        "sender_full_name": "jan kili",
        "timestamp": 1639035040
    },
    {
        "content": "<p>My workflow:</p>\n<ol start=\"0\">\n<li>VS Code + Terminal on a Mac, with CoffeeScript syntax highlighting and a smooth nix-shell compiler experience</li>\n<li>Write a bunch of Roc code</li>\n<li>Try to compile it</li>\n<li>Read some well-formatted error messages</li>\n<li>Fix the type mismatches and recompile it</li>\n<li>Squint at a confusing panic message</li>\n<li>Comment out half of my code, to do a binary search for the problem</li>\n<li>Wish there was a polymorphic Stdout.line for print-based debugging</li>\n<li>Repeat steps 5-7 until the bad line is found, and fix it</li>\n<li>Repeat steps 2-8 until bedtime</li>\n</ol>",
        "id": 264265552,
        "sender_full_name": "jan kili",
        "timestamp": 1639035451
    },
    {
        "content": "<p>Where am I going wrong? I'm asking honestly, not flaming, because the workflow feels wrong.</p>",
        "id": 264265620,
        "sender_full_name": "jan kili",
        "timestamp": 1639035509
    },
    {
        "content": "<p>I finished days 1 &amp; 2 with this workflow, but I'm stuck on debugging my day 9 code.</p>\n<p>Here's my day 1 code: <a href=\"https://github.com/JanCVanB/advent-of-code-2021\">https://github.com/JanCVanB/advent-of-code-2021</a> (will push more days soon)</p>",
        "id": 264265896,
        "sender_full_name": "jan kili",
        "timestamp": 1639035823
    },
    {
        "content": "<p>are you using  <code>roc check Foo.roc</code>? using <code>check</code> over <code>build</code> should improve error messages</p>",
        "id": 264267842,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1639037479
    },
    {
        "content": "<p>most crashes are because of earlier type checking problems leading to edge cases during code gen</p>",
        "id": 264267859,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1639037494
    },
    {
        "content": "<p>and <code>check</code> only runs the type checker</p>",
        "id": 264267894,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1639037523
    },
    {
        "content": "<p>I'll add a tip to use <code>roc check</code> to the README and getting started files.</p>",
        "id": 264274941,
        "sender_full_name": "Anton",
        "timestamp": 1639041962
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/231634-beginners/topic/Advent.20of.20Code.202021/near/264267842\">said</a>:</p>\n<blockquote>\n<p>are you using  <code>roc check Foo.roc</code>? using <code>check</code> over <code>build</code> should improve error messages</p>\n</blockquote>\n<p>No, I didn't know that existed! I'll try that, thanks.</p>",
        "id": 264300818,
        "sender_full_name": "jan kili",
        "timestamp": 1639056703
    },
    {
        "content": "<p>What is the best way to read complex numeric data into an <code>examples/cli/</code>-based Roc module from a file or string? <a href=\"https://github.com/rtfeldman/roc/issues/2188\">https://github.com/rtfeldman/roc/issues/2188</a> is giving me trouble with <a href=\"https://adventofcode.com/2021/day/9\">AoC day 9</a>, which has this input data format (for a 2D matrix of elevation data, where <code>input(x, y) ∈ [0, 9]</code>):<br>\n<a href=\"/user_uploads/22008/_KvU0nbNPj8o7mqti0ytXh8T/Screen-Shot-2021-12-12-at-4.16.06-AM.png\">Screen-Shot-2021-12-12-at-4.16.06-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/_KvU0nbNPj8o7mqti0ytXh8T/Screen-Shot-2021-12-12-at-4.16.06-AM.png\" title=\"Screen-Shot-2021-12-12-at-4.16.06-AM.png\"><img src=\"/user_uploads/22008/_KvU0nbNPj8o7mqti0ytXh8T/Screen-Shot-2021-12-12-at-4.16.06-AM.png\"></a></div>",
        "id": 264617658,
        "sender_full_name": "jan kili",
        "timestamp": 1639307895
    },
    {
        "content": "<p>I really don't want to semi-manually convert that into a hard-coded <code>List</code> like <code>heightMeasurements = [ [ 6, 6, 8, 9, 9, 2, ... ], [ ... ], ... ]</code>, but I don't mind copy/pasting it into a hard-coded <code>Str</code> like <code>heightMeasurements = \"668992...\\n...\"</code>. However, I can't seem to split that Str without a segfault. Any tips appreciated! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 264617758,
        "sender_full_name": "jan kili",
        "timestamp": 1639308091
    },
    {
        "content": "<p>Ooh, I just found <a href=\"https://gist.github.com/shrik450/dea48e77ccacc3f6da6bf9538cd61bde\">https://gist.github.com/shrik450/dea48e77ccacc3f6da6bf9538cd61bde</a> (thank you <span class=\"user-mention\" data-user-id=\"460648\">@Shrikanth Upadhayaya</span>) via <a href=\"https://github.com/yanns/roc-advent-of-code-2021/blob/main/day1/aoc_1.roc\">https://github.com/yanns/roc-advent-of-code-2021/blob/main/day1/aoc_1.roc</a> (thank you <span class=\"user-mention\" data-user-id=\"460663\">@Yann Simon</span>) - this might solve my file I/O needs, though I'll still need <code>Str</code> splitting...</p>",
        "id": 264618235,
        "sender_full_name": "jan kili",
        "timestamp": 1639308816
    },
    {
        "content": "<p>Str.split or something might exist. Str.toI64 just got merged</p>",
        "id": 264638073,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1639335467
    },
    {
        "content": "<p>Hooray for Str.toI64! Yes, Str.split exists, but it doesn't seem to work with an empty-string delimiter :/</p>",
        "id": 264650822,
        "sender_full_name": "jan kili",
        "timestamp": 1639353179
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span> that's probably a quick fix! can you file a bug?</p>",
        "id": 264651391,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639353827
    },
    {
        "content": "<p>Sure! Should I enhance <a href=\"https://github.com/rtfeldman/roc/issues/2188\">https://github.com/rtfeldman/roc/issues/2188</a> or file something new?</p>",
        "id": 264651939,
        "sender_full_name": "jan kili",
        "timestamp": 1639354632
    },
    {
        "content": "<p>oh nm that's good enough</p>",
        "id": 264653815,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639357345
    },
    {
        "content": "<p>although, I just realized that <code>Str.split</code> with an empty string should likely be  a no-op <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 264653838,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639357391
    },
    {
        "content": "<p>it would be easy to say \"we should make it split on a character boundary\" such that <code>\"1234\"</code> would become <code>[ \"1\", \"2\", \"3\", \"4\" ]</code> but that devolves quickly into a pile of Unicode edge cases (e.g. what if there are a bunch of emojis with modifiers, or multi-code-point compound characters) which I don't think should be in scope for a simple function like <code>split</code></p>",
        "id": 264654001,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639357568
    },
    {
        "content": "<p>Oh, lol, so I can just <code>List.map</code> a <code>Str</code>... nice.</p>",
        "id": 264654167,
        "sender_full_name": "jan kili",
        "timestamp": 1639357821
    },
    {
        "content": "<p>however, I think there's an easier solution: <code>Str.split</code> on newlines to get a <code>List Str</code> of lines, and then for each line, do <code>Str.toUtf8</code> to get a <code>List U8</code></p>",
        "id": 264654172,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639357828
    },
    {
        "content": "<p>the <code>List U8</code> won't be quite what you want, because they'll be ASCII bytes rather than the actual numbers you want, so you'll have to subtract 48 from each of them</p>",
        "id": 264654190,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639357869
    },
    {
        "content": "<p>to get the actual number</p>",
        "id": 264654199,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639357876
    },
    {
        "content": "<p>but then you'll have the actual number as a <code>U8</code>!</p>",
        "id": 264654203,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639357883
    },
    {
        "content": "<p>Modifying my example in the above issue, when I change <code>Stdout.line (Str.joinWith (Str.split \"abc\" \"\") \", \")</code> to <code>Stdout.line (Str.joinWith \"abc\" \", \")</code>, I get</p>\n<div class=\"codehilite\"><pre><span></span><code>[nix-shell:~/code/advent-of-code-2021]$ ./roc/target/release/roc example.roc\n🔨 Rebuilding host...\n── TYPE MISMATCH ───────────────────────────────────────────────────────────────\n\nThe 1st argument to joinWith is not what I expect:\n\n12│      Stdout.line (Str.joinWith &quot;abc&quot; &quot;, &quot;)\n                                   ^^^^^\n\nThis argument is a string of type:\n\n    Str\n\nBut joinWith needs the 1st argument to be:\n\n    List Str\n\n────────────────────────────────────────────────────────────────────────────────\n\nDone!\n\nRoc hit a panic: Hit an erroneous type when creating a layout for `3.IdentId(5)`\n\n[nix-shell:~/code/advent-of-code-2021]$\n</code></pre></div>",
        "id": 264654364,
        "sender_full_name": "jan kili",
        "timestamp": 1639358098
    },
    {
        "content": "<p>However, <code>Stdout.line (Num.toStr (List.sum (List.map (Str.toUtf8 \"123\") \\x -&gt; x - 48)))</code> prints <code>6</code>! Thank you!</p>",
        "id": 264654684,
        "sender_full_name": "jan kili",
        "timestamp": 1639358548
    },
    {
        "content": "<p>Whoa... While cleaning that up by replacing <code>\\x -&gt; x - 48</code> with <code>Str.toI64</code>, I just experienced a level up in my Roc comfort <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> #Pipes4Life</p>\n<div class=\"codehilite\"><pre><span></span><code>#!/usr/bin/env roc\n\napp &quot;example&quot;\n    packages { base: &quot;roc/examples/cli/platform&quot; }\n    imports [ base.Stdout, base.Task.{ await, Task } ]\n    provides [ main ] to base\n\nmain : Task {} *\nmain =\n    # This extra Stdout.line call is required. See GH issue #2151.\n    _ &lt;- await (Stdout.line &quot;&quot;)\n    &quot;123&quot;\n        |&gt; Str.toUtf8\n        |&gt; List.map \\u -&gt;\n            when Str.fromUtf8 [u] is\n                Err _ -&gt; &quot;!&quot;\n                Ok s -&gt; s\n        |&gt; List.map \\s -&gt;\n            when Str.toI64 s is\n                Err _ -&gt; -999\n                Ok i -&gt; i\n        |&gt; List.sum\n        |&gt; Num.toStr\n        |&gt; Stdout.line\n</code></pre></div>\n<p>That prints <code>6</code> <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 264655261,
        "sender_full_name": "jan kili",
        "timestamp": 1639359387
    },
    {
        "content": "<p>nice!!! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 264656662,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639361416
    },
    {
        "content": "<p>Very awesome!</p>",
        "id": 264663657,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1639371194
    },
    {
        "content": "<p>Should this work?</p>\n<div class=\"codehilite\"><pre><span></span><code>[1, 2, 3]\n      |&gt; List.map \\x -&gt; x * 2\n</code></pre></div>",
        "id": 264734607,
        "sender_full_name": "jan kili",
        "timestamp": 1639414109
    },
    {
        "content": "<p>I'm getting an <code>internal error: entered unreachable code</code> panic about it, so I can't tell if I'm making a syntax mistake</p>",
        "id": 264734717,
        "sender_full_name": "jan kili",
        "timestamp": 1639414159
    },
    {
        "content": "<p>I think the anonymous function needs brackets.</p>",
        "id": 264735236,
        "sender_full_name": "Anton",
        "timestamp": 1639414365
    },
    {
        "content": "<p>That works! Thank you :D</p>",
        "id": 264735312,
        "sender_full_name": "jan kili",
        "timestamp": 1639414401
    },
    {
        "content": "<p>Because function arguments are also separated by spaces.</p>",
        "id": 264735328,
        "sender_full_name": "Anton",
        "timestamp": 1639414410
    },
    {
        "content": "<p>You're welcome :)</p>",
        "id": 264735335,
        "sender_full_name": "Anton",
        "timestamp": 1639414415
    },
    {
        "content": "<p>So now that that panic is gone, I have a Roc fluency problem: How can I improve this function to support parsing negative integers?</p>\n<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"nf\">parseIntegers</span> <span class=\"kt\">:</span> <span class=\"kt\">List</span> <span class=\"kt\">Str</span> <span class=\"ow\">-&gt;</span> <span class=\"kt\">List</span> <span class=\"kt\">I64</span>\n<span class=\"nf\">parseIntegers</span> <span class=\"ow\">=</span> <span class=\"nf\">\\</span><span class=\"n\">integerStrings</span> <span class=\"ow\">-&gt;</span>\n    <span class=\"n\">integerStrings</span>\n        <span class=\"o\">|&gt;</span> <span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">map</span> <span class=\"p\">(</span><span class=\"nf\">\\</span><span class=\"n\">s</span> <span class=\"ow\">-&gt;</span> <span class=\"kt\">Str</span><span class=\"o\">.</span><span class=\"n\">toI64</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n        <span class=\"o\">|&gt;</span> <span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">map</span> <span class=\"nf\">\\</span><span class=\"n\">x</span> <span class=\"ow\">-&gt;</span>\n            <span class=\"n\">when</span> <span class=\"n\">x</span> <span class=\"n\">is</span>\n                <span class=\"kt\">Ok</span> <span class=\"n\">i</span> <span class=\"ow\">-&gt;</span> <span class=\"n\">i</span>\n                <span class=\"kt\">Err</span> <span class=\"kr\">_</span> <span class=\"ow\">-&gt;</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"o\">|&gt;</span> <span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">keepIf</span> <span class=\"p\">(</span><span class=\"nf\">\\</span><span class=\"n\">i</span> <span class=\"ow\">-&gt;</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 264736689,
        "sender_full_name": "jan kili",
        "timestamp": 1639414942
    },
    {
        "content": "<p>I'm using the <code>-1</code> hack to prevent the output type having <code>Result</code>s in it, but there must be a better way.</p>",
        "id": 264736889,
        "sender_full_name": "jan kili",
        "timestamp": 1639415020
    },
    {
        "content": "<p>Maybe the output type having <code>Result</code>s in it is actually best? Maybe I need to get used to <code>Err</code>s bubbling up from every subroutine...</p>",
        "id": 264737203,
        "sender_full_name": "jan kili",
        "timestamp": 1639415120
    },
    {
        "content": "<p>However, in this case I simply want to throw away strings that aren't valid integers. Surely that should be possible:<br>\n<code>parseIntegers ([ \"no\", \"way\", \"-123\", \"456\", \"789jk\" ]) == [ -123, 456 ]</code></p>",
        "id": 264737394,
        "sender_full_name": "jan kili",
        "timestamp": 1639415183
    },
    {
        "content": "<p>Oh I found something useful, List supports <code>keepOks</code>.</p>",
        "id": 264738670,
        "sender_full_name": "Anton",
        "timestamp": 1639415670
    },
    {
        "content": "<p><del>but it does not appear to be implemented yet.</del></p>",
        "id": 264738767,
        "sender_full_name": "Anton",
        "timestamp": 1639415717
    },
    {
        "content": "<p>I think this should work:</p>\n<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"nf\">parseIntegers</span> <span class=\"kt\">:</span> <span class=\"kt\">List</span> <span class=\"kt\">Str</span> <span class=\"ow\">-&gt;</span> <span class=\"kt\">List</span> <span class=\"kt\">I64</span>\n<span class=\"nf\">parseIntegers</span> <span class=\"ow\">=</span> <span class=\"nf\">\\</span><span class=\"n\">integerStrings</span> <span class=\"ow\">-&gt;</span>\n    <span class=\"n\">integerStrings</span>\n        <span class=\"o\">|&gt;</span> <span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">map</span> <span class=\"p\">(</span><span class=\"nf\">\\</span><span class=\"n\">s</span> <span class=\"ow\">-&gt;</span> <span class=\"kt\">Str</span><span class=\"o\">.</span><span class=\"n\">toI64</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n        <span class=\"o\">|&gt;</span> <span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">keepIf</span> <span class=\"nf\">\\</span><span class=\"n\">x</span> <span class=\"ow\">-&gt;</span>\n            <span class=\"n\">when</span> <span class=\"n\">x</span> <span class=\"n\">is</span>\n                <span class=\"kt\">Ok</span> <span class=\"kr\">_</span> <span class=\"ow\">-&gt;</span> <span class=\"kt\">True</span>\n                <span class=\"kt\">Err</span> <span class=\"kr\">_</span> <span class=\"ow\">-&gt;</span> <span class=\"kt\">False</span>\n</code></pre></div>",
        "id": 264739100,
        "sender_full_name": "Anton",
        "timestamp": 1639415876
    },
    {
        "content": "<p>Better version:</p>\n<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"nf\">parseIntegers</span> <span class=\"kt\">:</span> <span class=\"kt\">List</span> <span class=\"kt\">Str</span> <span class=\"ow\">-&gt;</span> <span class=\"kt\">List</span> <span class=\"kt\">I64</span>\n<span class=\"nf\">parseIntegers</span> <span class=\"ow\">=</span> <span class=\"nf\">\\</span><span class=\"n\">integerStrings</span> <span class=\"ow\">-&gt;</span>\n    <span class=\"n\">integerStrings</span>\n        <span class=\"o\">|&gt;</span> <span class=\"kt\">List</span><span class=\"o\">.</span><span class=\"n\">keepOks</span> <span class=\"p\">(</span><span class=\"nf\">\\</span><span class=\"n\">s</span> <span class=\"ow\">-&gt;</span> <span class=\"kt\">Str</span><span class=\"o\">.</span><span class=\"n\">toI64</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 264740369,
        "sender_full_name": "Anton",
        "timestamp": 1639416365
    },
    {
        "content": "<p>Interesting, I would expect this <code>[1, 2, 3] |&gt; List.map \\x -&gt; x * 2</code> to work. Is it a bug or is it intended?</p>",
        "id": 264740433,
        "sender_full_name": "Matthias Devlamynck",
        "timestamp": 1639416383
    },
    {
        "content": "<p>Uhu <code>[1, 2, 3] |&gt; List.map \\x -&gt; x * 2</code> works in the repl.</p>",
        "id": 264740752,
        "sender_full_name": "Anton",
        "timestamp": 1639416510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> I get</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">[nix-shell:~/code/advent-of-code-2021]$ </span>./roc/target/release/roc check solutions/day-1-sonar-sweep/solution_1a.roc\n\n<span class=\"go\">── TYPE MISMATCH ───────────────────────────────────────────────────────────────</span>\n\n<span class=\"go\">Something is off with the body of the parseIntegers definition:</span>\n\n<span class=\"go\"> 8│   parseIntegers : List Str -&gt; List I64</span>\n<span class=\"go\"> 9│   parseIntegers = \\integerStrings -&gt;</span>\n<span class=\"go\">10│&gt;      integerStrings</span>\n<span class=\"go\">11│&gt;          |&gt; List.map (\\s -&gt; Str.toI64 s)</span>\n<span class=\"go\">12│&gt;          |&gt; List.keepIf \\x -&gt;</span>\n<span class=\"go\">13│&gt;              when x is</span>\n<span class=\"go\">14│&gt;                  Ok _ -&gt; True</span>\n<span class=\"go\">15│&gt;                  Err _ -&gt; False</span>\n\n<span class=\"go\">This keepIf call produces:</span>\n\n<span class=\"go\">    List (Result I64 [ InvalidNumStr ]b)</span>\n\n<span class=\"go\">But the type annotation on parseIntegers says it should be:</span>\n\n<span class=\"go\">    List I64</span>\n\n<span class=\"go\">────────────────────────────────────────────────────────────────────────────────</span>\n\n\n<span class=\"gp\">[nix-shell:~/code/advent-of-code-2021]$</span>\n</code></pre></div>\n<p>:/</p>",
        "id": 264748999,
        "sender_full_name": "jan kili",
        "timestamp": 1639419668
    },
    {
        "content": "<p>Oh right, the results are all Ok but they are not unwrapped. The shorter alternative I posted does work right?</p>",
        "id": 264749357,
        "sender_full_name": "Anton",
        "timestamp": 1639419842
    },
    {
        "content": "<p>sidenote: <code>Result.isOk</code> and <code>Result.isErr</code> are implemented but are not in the builtins/docs. I'll add them now.</p>",
        "id": 264750482,
        "sender_full_name": "Anton",
        "timestamp": 1639420390
    },
    {
        "content": "<p>Oh, whoa, I didn't expect that to work because I thought <code>List.keepOks</code> wasn't implemented yet (also missing from builtins/docs). Your shorter alternative works like a charm!</p>",
        "id": 264750841,
        "sender_full_name": "jan kili",
        "timestamp": 1639420560
    },
    {
        "content": "<p><code>List.keepOks</code> is going to be a huge help for AoC, since inputs are highly controlled</p>",
        "id": 264750935,
        "sender_full_name": "jan kili",
        "timestamp": 1639420598
    },
    {
        "content": "<p>Actually, we can make it even cleaner by making it slightly point-free-er: <code>parseIntegers = \\integerStrings -&gt; integerStrings |&gt; List.keepOks Str.toI64</code></p>",
        "id": 264751209,
        "sender_full_name": "jan kili",
        "timestamp": 1639420733
    },
    {
        "content": "<p>I wonder if there's a way to make it totally point-free by eliminating the need for <code>integerStrings</code>...</p>",
        "id": 264751329,
        "sender_full_name": "jan kili",
        "timestamp": 1639420794
    },
    {
        "content": "<p>point-free requires currying usually</p>",
        "id": 264758527,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1639424198
    },
    {
        "content": "<p>roc doesn't do that. point-free is cute but honestly it can lead to some confusing code especially for people not familiar with ML style languages</p>",
        "id": 264758645,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1639424252
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span> regarding the \"entered unreachable code\" panic you saw - any time you see that error message, it's definitely a compiler bug! It means the compiler went down a code path that we thought was unreachable.</p>\n<p>Would you mind reporting that one as an issue?</p>",
        "id": 264765430,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639427274
    },
    {
        "content": "<p>and given the location it's probably some error in llvm codegen, which is particularly interesting</p>",
        "id": 264766205,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1639427641
    },
    {
        "content": "<p>It's really cool to see this much roc code being used for stuff :D</p>",
        "id": 264769752,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1639429507
    },
    {
        "content": "<p>I'm glad y'all aren't tired of me spamming my beginner questions for my beginner use case :)</p>",
        "id": 264783554,
        "sender_full_name": "jan kili",
        "timestamp": 1639436627
    },
    {
        "content": "<p>oh it's amazing! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 264791569,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639442385
    },
    {
        "content": "<p>the more the better!</p>",
        "id": 264791575,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639442388
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span> not at all, in a way you’ve used more roc than all of us, we’re the beginners</p>",
        "id": 264794957,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1639445043
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> Reported: <a href=\"https://github.com/rtfeldman/roc/issues/2205\">https://github.com/rtfeldman/roc/issues/2205</a></p>",
        "id": 264795358,
        "sender_full_name": "jan kili",
        "timestamp": 1639445410
    },
    {
        "content": "<p>Because of a <a href=\"https://github.com/rtfeldman/roc/issues/2157\">memory issue with large lists</a> I tried to use my own type for linked lists and ran into three separate problems.</p>\n<p>The first problem can be reproduced by replacing the hello-world example with the following program.</p>\n<div class=\"codehilite\"><pre><span></span><code>LinkedList elem : [Empty, Prepend (LinkedList elem) elem]\n\nprepend : LinkedList elem, elem -&gt; LinkedList elem\nprepend = Prepend\n\nsingle : elem -&gt; LinkedList elem\nsingle = \\elem -&gt; prepend Empty elem\n\nmain =\n    nested = single (single 42)\n    &quot;Hello, World!\\n&quot;\n</code></pre></div>\n<p>This program produces the following panic:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;internal error: entered unreachable code: symbol/layout `#UserApp.1` ProcLayout { arguments: [Union(NullableUnwrapped { nullable_id: false, other_fields: [RecursivePointer, Builtin(Int(I64))] }), Builtin(Int(I64))], result: Union(NullableUnwrapped { nullable_id: false, other_fields: [RecursivePointer, Builtin(Int(I64))] }) } combo must be in DeclarationToIndex&#39;, compiler/mono/src/borrow.rs:227:9\n</code></pre></div>\n<p>The program runs as intended when inlining <code>prepend</code> or <code>single</code> or when changing the definition of <code>prepend</code>as shown below.</p>\n<p>The second issue can be reproduced by adding/changing the following definitions:</p>\n<div class=\"codehilite\"><pre><span></span><code>empty : LinkedList *\nempty = Empty\n\nprepend : LinkedList elem, elem -&gt; LinkedList elem\nprepend = \\elems, elem -&gt; Prepend elems elem\n\nwrap : LinkedList elem -&gt; LinkedList (LinkedList elem)\nwrap = \\elems -&gt;\n    when elems is\n        Empty -&gt; empty\n        Prepend tail head -&gt; tail |&gt; wrap |&gt; prepend (single head)\n\nmain =\n    nested = wrap (single 42)\n    &quot;Hello, World!\\n&quot;\n</code></pre></div>\n<p>Now executing the program results in the following error:</p>\n<div class=\"codehilite\"><pre><span></span><code>Application crashed with message\n\n    Hit an unresolved type variable 103 when creating a layout for `#UserApp.empty` (var 102)\n\nShutting down\n</code></pre></div>\n<p>The error goes away when replacing <code>empty</code> with <code>Empty</code> in the definition of <code>wrap</code>.</p>\n<p>The third issue is a stack overflow when compiling (or running <code>roc check</code>) on the following definition:</p>\n<div class=\"codehilite\"><pre><span></span><code>fromList : List elem -&gt; LinkedList elem\nfromList = \\elems -&gt; List.walkBackwards elems Empty Prepend\n</code></pre></div>\n<p>Compilation works fine when replacing <code>Empty</code> with <code>empty</code> in the definition of <code>fromList</code>.</p>\n<p>By using the described work-arounds, I was able to change <a href=\"https://gist.github.com/sebfisch/b7d0e60ef9381376f0f3061d82bd6409\">my program for AoC Day 1</a> to use linked lists instead of built-in lists to solve the problem for the large input!</p>\n<p>Should I create issues for the described problems or are they expected / already known?</p>",
        "id": 264945668,
        "sender_full_name": "Sebastian Fischer",
        "timestamp": 1639525571
    },
    {
        "content": "<p>issues would be most appreciated! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 264959695,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639537611
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281383\">Richard Feldman</span> <a href=\"#narrow/stream/231634-beginners/topic/Advent.20of.20Code.202021/near/264959695\">said</a>:</p>\n<blockquote>\n<p>issues would be most appreciated! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>\n</blockquote>\n<p>Just filed issues <a href=\"https://github.com/rtfeldman/roc/issues/2215\">2215</a>, <a href=\"https://github.com/rtfeldman/roc/issues/2216\">2216</a>, and <a href=\"https://github.com/rtfeldman/roc/issues/2217\">2217</a></p>",
        "id": 264981001,
        "sender_full_name": "Sebastian Fischer",
        "timestamp": 1639559035
    },
    {
        "content": "<p>awesome, thank you so much!</p>",
        "id": 264996407,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639567956
    },
    {
        "content": "<p>Roc is feeling reeeeeeal smooth! <a href=\"https://github.com/JanCVanB/advent-of-code-2021/blob/main/solutions/day-2-dive/solution_2_part_2.roc\">https://github.com/JanCVanB/advent-of-code-2021/blob/main/solutions/day-2-dive/solution_2_part_2.roc</a><br>\n(Spoiler alert for AoC participants, this is a solution for Day 2 Part 2)</p>",
        "id": 265650811,
        "sender_full_name": "jan kili",
        "timestamp": 1640066705
    },
    {
        "content": "<p>Pipe chains are super readable, the <code>Result</code> builtins are intuitive... and though I've hit a lot of compiler bugs, there are always acceptable workarounds.</p>",
        "id": 265650962,
        "sender_full_name": "jan kili",
        "timestamp": 1640066896
    },
    {
        "content": "<p>:) yay</p>",
        "id": 265652437,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1640068784
    },
    {
        "content": "<p>Today's multiverse problem (part 2) seems like it could cause some stack overflows, though I imagine there's some optimization(s) that could help somehow. However, even with a quick recursion-ending condition (maxScore=5, instead of 21), I'm getting a new kind of compiler error: <code>Stored value type does not match pointer operand type! ... Function \"...\" failed LLVM verification in NON-OPTIMIZED build. ... thread 'main' panicked at '😱 LLVM errors when defining function ...</code>. I'll create a GH issue.</p>",
        "id": 265700580,
        "sender_full_name": "jan kili",
        "timestamp": 1640101992
    },
    {
        "content": "<p>Whoa, it's due to <code>True</code> / <code>False</code> literals...</p>",
        "id": 265701699,
        "sender_full_name": "jan kili",
        "timestamp": 1640102480
    },
    {
        "content": "<p>something to watch out for is that <code>True</code> itself has type <code>[ True ]*</code>, not <code>Bool</code></p>",
        "id": 265701823,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1640102534
    },
    {
        "content": "<p>you may need some type annotations sometimes to make it a boolean</p>",
        "id": 265701844,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1640102546
    },
    {
        "content": "<p>Oh, that's interesting!</p>",
        "id": 265702357,
        "sender_full_name": "jan kili",
        "timestamp": 1640102776
    },
    {
        "content": "<p>I posted an issue for it: <a href=\"https://github.com/rtfeldman/roc/issues/2254\">https://github.com/rtfeldman/roc/issues/2254</a></p>",
        "id": 265702368,
        "sender_full_name": "jan kili",
        "timestamp": 1640102785
    },
    {
        "content": "<p>Essentially, something works with <code>{ oldRecord &amp; thing: True, a: b, x: y }</code> but not with <code>{ oldRecord &amp; thing: False, a: b, x: y }</code></p>",
        "id": 265702462,
        "sender_full_name": "jan kili",
        "timestamp": 1640102833
    },
    {
        "content": "<p>right, I think you can fix it quickly with a type annotation to coerce the value to be a bool</p>",
        "id": 265702689,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1640102929
    },
    {
        "content": "<p>Was just about to ask that, thanks</p>",
        "id": 265702704,
        "sender_full_name": "jan kili",
        "timestamp": 1640102938
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> The problem starts with state initialization. This code:</p>\n<div class=\"codehilite\"><pre><span></span><code>InitialSetup : { player1Position: Nat, player2Position: Nat }\nMultiverse : { player1WinCount: Nat, player2WinCount: Nat, universes: List Universe }\nUniverse : { isPlayer1sTurn: Bool, player1Position: Nat, player1Score: Nat, player2Position: Nat, player2Score: Nat }\ninitializeMultiverse : InitialSetup -&gt; Multiverse\ninitializeMultiverse = \\setup -&gt;\n    universe : Universe\n    universe = { isPlayer1sTurn: True, player1Position: setup.player1Position, player1Score: 0, player2Position: setup.player2Position, player2Score: 0 }\n    { player1WinCount: 0, player2WinCount: 0, universes: [universe] }\n</code></pre></div>\n<p>gets this <code>roc check</code> error:</p>\n<div class=\"codehilite\"><pre><span></span><code>The body is a record of type:\n\n    { player1WinCount : Num (Integer Natural),\n    player2WinCount : Num (Integer Natural), universes : List {\n    isPlayer1sTurn : Bool, player1Position : Nat, player1Score : Nat,\n    player2Position : Nat, player2Score : Nat } }\n\nBut the type annotation on initializeMultiverse says it should be:\n\n    { player1WinCount : Nat, player2WinCount : Nat,\n    universes : List Universe }\n</code></pre></div>",
        "id": 265703682,
        "sender_full_name": "jan kili",
        "timestamp": 1640103468
    },
    {
        "content": "<p>Do records not type well?</p>",
        "id": 265703763,
        "sender_full_name": "jan kili",
        "timestamp": 1640103486
    },
    {
        "content": "<p>I meant </p>\n<div class=\"codehilite\"><pre><span></span><code>isPlayer1sTurn:  Bool\nisPlayer1sTurn = True\n</code></pre></div>",
        "id": 265703823,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1640103525
    },
    {
        "content": "<p>It looks to me that both of the supposedly-mismatched types above have <code>Bool</code> in them, is that not sufficient?</p>",
        "id": 265705003,
        "sender_full_name": "jan kili",
        "timestamp": 1640104093
    },
    {
        "content": "<p>Adding those two lines doesn't help:</p>\n<div class=\"codehilite\"><pre><span></span><code>InitialSetup : { player1Position: Nat, player2Position: Nat }\nMultiverse : { player1WinCount: Nat, player2WinCount: Nat, universes: List Universe }\nUniverse : { isPlayer1sTurn: Bool, player1Position: Nat, player1Score: Nat, player2Position: Nat, player2Score: Nat }\ninitializeMultiverse : InitialSetup -&gt; Multiverse\ninitializeMultiverse = \\setup -&gt;\n    isPlayer1sTurn : Bool\n    isPlayer1sTurn = True\n    universe : Universe\n    universe = { isPlayer1sTurn: isPlayer1sTurn, player1Position: setup.player1Position, player1Score: 0, player2Position: setup.player2Position, player2Score: 0 }\n    { player1WinCount: 0, player2WinCount: 0, universes: [universe] }\n</code></pre></div>\n<p>(same check error)</p>",
        "id": 265705075,
        "sender_full_name": "jan kili",
        "timestamp": 1640104141
    },
    {
        "content": "<p>oh, I see what's happening</p>",
        "id": 265705874,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1640104557
    },
    {
        "content": "<p>somehow <code>Universe</code> is not recognized as an alias</p>",
        "id": 265705934,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1640104569
    },
    {
        "content": "<p>ah, this is the alias ordering bug</p>",
        "id": 265705975,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1640104596
    },
    {
        "content": "<p>try putting <code>Universe</code> at the top</p>",
        "id": 265705982,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1640104601
    },
    {
        "content": "<p>due to a bug, aliases must be defined in their usage order (so no use before definition)</p>",
        "id": 265706058,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1640104636
    },
    {
        "content": "<p>Wowwwwww you're right! Flipping the order of the <code>Multiverse</code> and <code>Universe</code> definitions fixes it!</p>",
        "id": 265706304,
        "sender_full_name": "jan kili",
        "timestamp": 1640104743
    },
    {
        "content": "<p>Now I just have to optimize it so that it won't take... (checks calculator)... a week to run.</p>",
        "id": 265712681,
        "sender_full_name": "jan kili",
        "timestamp": 1640107946
    },
    {
        "content": "<p>Glad you're posing this stuff, Jan, it's really interesting, keep up the good work!</p>",
        "id": 265720936,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1640112489
    },
    {
        "content": "<p>Checking ~ 1 quintillion board game states sure takes a while... <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 265721334,
        "sender_full_name": "jan kili",
        "timestamp": 1640112713
    },
    {
        "content": "<p>That's a handful... Maybe enough to not compete with bad code generation/recursion issues</p>",
        "id": 265721646,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1640112887
    },
    {
        "content": "<p>This is my output<br>\n<a href=\"https://gist.github.com/satotake/0e5f4cb69924927cbce379212e102081\">https://gist.github.com/satotake/0e5f4cb69924927cbce379212e102081</a><br>\nnot completed  (day1 - day14)<br>\nI might add the others but I am starting feeling that they will be almost same in terms of  testing roc.<br>\nSeeing <span class=\"user-mention\" data-user-id=\"357305\">@Lucas Rosa</span> 's private leaderboard,  <code>Arkham</code> is legendary.</p>",
        "id": 266505589,
        "sender_full_name": "Takeshi Sato",
        "timestamp": 1640959952
    },
    {
        "content": "<p>You might have written the most AoC Roc code of anyone, since I'm not sure that everyone in that leaderboard used Roc!</p>",
        "id": 266505686,
        "sender_full_name": "jan kili",
        "timestamp": 1640960080
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> <a href=\"#narrow/stream/231634-beginners/topic/Advent.20of.20Code.202021/near/266505686\">said</a>:</p>\n<blockquote>\n<p>since I'm not sure that everyone in that leaderboard used Roc!</p>\n</blockquote>\n<p>possible ... but really?. <br>\nAnyway, the conversations in this channel motivated me to do so. thanks!</p>",
        "id": 266506862,
        "sender_full_name": "Takeshi Sato",
        "timestamp": 1640961645
    },
    {
        "content": "<p>I was using zig but then just quit after day 3 cause I was like why am I doing this</p>",
        "id": 266517134,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1640974842
    },
    {
        "content": "<p>zig's comptime is interesting <a href=\"https://expandingman.gitlab.io/tvu-compare/\">https://expandingman.gitlab.io/tvu-compare/</a><br>\nIt might have been also good for me to try AoC in zig or rust to understand roc codebase</p>",
        "id": 266614647,
        "sender_full_name": "Takeshi Sato",
        "timestamp": 1641130646
    },
    {
        "content": "<p>hah! from time to time I re-compile roc, fix any error that come up on the platform I stitched up and try my day 1 advent of code 2021 program. it finally worked <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;day-01&quot;\n    packages { pf: &quot;cli-platform&quot; }\n    imports [ pf.Task.{ Task, await }, pf.Stdout, pf.File ]\n    provides [ main ] to pf\n\nmain =\n    handle &lt;- File.withOpen &quot;day-01-input.txt&quot;\n    stringLines &lt;- await (File.lines handle)\n\n    lines = stringLines |&gt; List.map \\n -&gt; (Str.toNat n |&gt; Result.withDefault 0)\n\n    increases = lines\n        |&gt; List.walk { count: 0, prev: None } \\res, m -&gt;\n            when res.prev is\n                Some p -&gt;\n                    count = res.count + (if p &lt; m then 1 else 0)\n                    { count, prev: Some m }\n                None -&gt; { count: res.count, prev: Some m }\n\n    r = Num.toStr increases.count\n\n    Stdout.line &quot;res: \\(r)&quot;\n</code></pre></div>",
        "id": 284579460,
        "sender_full_name": "Nicola Peduzzi",
        "timestamp": 1654070971
    },
    {
        "content": "<p>Nice :)</p>",
        "id": 284582596,
        "sender_full_name": "Anton",
        "timestamp": 1654073078
    }
]