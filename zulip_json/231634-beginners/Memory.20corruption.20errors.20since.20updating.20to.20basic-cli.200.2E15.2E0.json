[
    {
        "content": "<p>The error seems to take many different forms, but always in the update logic for roc-start. Often it will crash in the first update (platforms), but may also crash during the package update (haven't observed an app-stub crash yet - this logic is different). It may also successfully update (no crashes in any stage of the updates), but if it does, then when the tui menu is reached, either the last item in the platforms menu list will be corrupted, or the program will crash when progressing from app name input to platform selection. In at least some cases (definitely in the tui crash case - example 6), the carriage return becomes broken in the current terminal instance, and any time that a newline is printed, the carriage does not return. It should be noted that the local files which store the platforms/packages do not get corrupted, and if the app is re-run without the update flag, all platforms, etc will list correctly, including newly downloaded items.</p>\n<h2>Error forms encountered:</h2>\n<p>1) Heap corruption</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Error Messge</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>user@Users-MacBook-Air src [update-platform] $ ./main tui -u<br>\nUpdating platform repository... ✔<br>\nmain(90547,0x16b393000) malloc: Heap corruption detected, free list is damaged at 0x600000a4bc80<br>\n*** Incorrect guard value: 8711284952<br>\nmain(90547,0x16b393000) malloc: *** set a breakpoint in malloc_error_break to debug<br>\nzsh: abort      ./main tui -u</p>\n</div></div>\n<p>2) Non-alligned pointer being freed</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Error Message</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>user@Users-MacBook-Air src [update-platform] $ ./main update<br>\nUpdating platform repository... ✔<br>\nmain(95023,0x2073b8f40) malloc: Non-aligned pointer 0x6000005332c0 being freed (2)<br>\nmain(95023,0x2073b8f40) malloc: *** set a breakpoint in malloc_error_break to debug<br>\nzsh: abort      ./main update</p>\n</div></div>\n<p>3) Segfault</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Error Message</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>user@Users-MacBook-Air src [main] $ ./main update<br>\nUpdating platform repository... ✔<br>\nzsh: segmentation fault  ./main tui -u</p>\n</div></div>\n<p>4) Internal invariant broken (next ptr of prev)</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Error Message</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>user@Users-MacBook-Air src [main] $ ./main update<br>\nUpdating platform repository... ✔<br>\nUpdating package repository... roc_app_binary(80508,0x16d863000) malloc: tiny_free_list_remove_ptr: Internal invariant broken (next ptr of prev): ptr=0x12561c640, prev_next=0x12561c64000<br>\nroc_app_binary(80508,0x16d863000) malloc: *** set a breakpoint in malloc_error_break to debug</p>\n</div></div>\n<p>5) Pointer being freed was not allocated</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Error Message</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>user@Users-MacBook-Air src [main] $ ./main update<br>\nUpdating platform repository... ✔<br>\nroc_app_binary(78890,0x16b4e7000) malloc: *** error for object 0x600000fa4fc0: pointer being freed was not allocated<br>\nroc_app_binary(78890,0x16b4e7000) malloc: *** set a breakpoint in malloc_error_break to debug</p>\n</div></div>\n<p>6) Double free when progressing from app name input to platform selection</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Error Message</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>└─ ENTER : CONFIRM | BKSP : GO BACK ──────────main(89919,0x2073b8f40) malloc: Double free of object 0x101506de0<br>\n                                                                main(89919,0x2073b8f40) malloc: *** set a breakpoint in malloc_error_break to debug<br>\n      zsh: abort      ./main tui -u<br>\n                                   % </p>\n</div></div>\n<p>7) Corrupt string where for last platform in the list (with roc-turtle added to platform list, roc-turtle is now corrupted)</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Error Message</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>╒════════════════════════════════════════════════ Ctrl+C : QUIT ═╕<br>\n│ SELECT A PLATFORM:                                             │<br>\n│ &gt; basic-cli                                                    │<br>\n│ - basic-ssg                                                    │<br>\n│ - basic-webserver                                              │<br>\n| -    &amp;                                                         |<br>\n└─ ENTER : SELECT | S : SEARCH | BKSP : GO BACK ─────────────────┘</p>\n</div></div>",
        "id": 469766323,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726170281
    },
    {
        "content": "<p>PS: I'm currently still trying to drill down on exactly where in (my) code this error is happening, although it appears to be somewhat inconsistent.</p>",
        "id": 469766730,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726170391
    },
    {
        "content": "<p>Probably need to pull it up on linux with valgrind. building with the legacy linker and a dev build preferably.</p>",
        "id": 469766812,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726170415
    },
    {
        "content": "<p>That said, sometimes a dev build on mac viewed with lldb can be helpful</p>",
        "id": 469766861,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726170431
    },
    {
        "content": "<p>Sometimes also helpful to build the builtins with debeg info depending on where the issue is coming from. That said, to do that, you need to modify the compiler.</p>",
        "id": 469767716,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726170670
    },
    {
        "content": "<p>My linux machine is down right now, so I'll spin up a VM here and see what I can do. Haven't used valgrind before - looks like the memcheck tool is probably what I need?</p>",
        "id": 469769197,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726171085
    },
    {
        "content": "<p>Yeah, and it is default</p>",
        "id": 469770862,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726171521
    },
    {
        "content": "<p>That said, it can be pretty verbose at times</p>",
        "id": 469770903,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726171533
    },
    {
        "content": "<p><del>Which version of basic-cli is this from?</del> <em>edit: lol it's in the thread title</em></p>\n<p>Just a hunch, but it it related to fetching http requests? maybe there is a bug we've introduced there.</p>",
        "id": 469798084,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1726182412
    },
    {
        "content": "<p>My hunch is that its actually file reads. Current implementation downloads to filesystem and then reads from FS (should be optimized to load directly into memory). It looks like the fetch completes, but then reading the file encounters issues. </p>\n<p>All that I've done so far is some print debugging, and not extensive yet, so I'm not 100% sure.</p>",
        "id": 469798975,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726182945
    },
    {
        "content": "<p>I'm wondering if it's related to the TCP heap, and somehow similar to the segfault I've been seeing on basic-webserver trying to implement JWT</p>",
        "id": 469799616,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1726183329
    },
    {
        "content": "<p>Or <code>FILE_HEAP</code> I guess</p>",
        "id": 469799648,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1726183354
    },
    {
        "content": "<p>Currently fighting to get a VM running on apple silicone... <span aria-label=\"face with raised eyebrow\" class=\"emoji emoji-1f928\" role=\"img\" title=\"face with raised eyebrow\">:face_with_raised_eyebrow:</span> Once I get that sorted we'll see what valgrind can tell me.</p>",
        "id": 469801462,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726184499
    },
    {
        "content": "<p>Can you make an issue for this <span class=\"user-mention\" data-user-id=\"518883\">@Ian McLerran</span>?</p>",
        "id": 470181213,
        "sender_full_name": "Anton",
        "timestamp": 1726325684
    },
    {
        "content": "<p>Sure, I can file one. I wasn't able to get an x86 linux distro running on my Mac, so I haven't been able to use valgrind to dig any deeper into this bug yet.</p>\n<p>I'm working on doing a little more print debugging to try to narrow down the source of the error, but not sure how much I'm going to be able to surface through that route. </p>\n<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> shall I just file an issue based on my original message in this thread?</p>",
        "id": 470391797,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726437815
    },
    {
        "content": "<p>Yes please :)</p>",
        "id": 470477530,
        "sender_full_name": "Anton",
        "timestamp": 1726470227
    },
    {
        "content": "<p>Filed <a href=\"https://github.com/roc-lang/roc/issues/7083\">here</a>. <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 470668156,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726504717
    },
    {
        "content": "<p>I thought I might test roc-start against the changes in <a href=\"https://github.com/roc-lang/roc/pull/7084\">https://github.com/roc-lang/roc/pull/7084</a></p>\n<p>This is what I am seeing. Though I may not have built everything correctly agains that branch. </p>\n<div class=\"codehilite\"><pre><span></span><code> $ ./roc-start tui -u\nUpdating platform repository... ✔\nUpdating package repository... ✔\nUpdating app-stubs... roc-start(3791,0x16d47f000) malloc: Heap corruption detected, free list is damaged at 0x6000037942c0\n*** Incorrect guard value: 1297437786\nroc-start(3791,0x16d47f000) malloc: *** set a breakpoint in malloc_error_break to debug\nzsh: abort      ./roc-start tui -u\n</code></pre></div>",
        "id": 470926193,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1726565766
    },
    {
        "content": "<p>I tried building an optimized version and waited ~5mins before killing it. Ended up using a non-opt build.</p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc build --output roc-start src/main.roc\n🔨 Rebuilding platform...\n0 errors and 0 warnings found in 1702 ms\n</code></pre></div>",
        "id": 470926444,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1726565840
    },
    {
        "content": "<p>I'm trying to investigate these failures further.</p>",
        "id": 470928616,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1726566325
    },
    {
        "content": "<p>For (my) future reference; I'm using <code>nix develop</code> and updated the flake to target the branch using  <code>roc.url = \"github:roc-lang/roc?ref=tag-padding\";</code> and build a debug build of roc by changing the sharedInputs to  <code>rocPkgs.cli-debug</code></p>",
        "id": 470929853,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1726566611
    },
    {
        "content": "<p>I've hit a debug assert using the debug build of roc</p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc build --output roc-start --optimize  src/main.roc\nthread &#39;&lt;unnamed&gt;&#39; panicked at crates/compiler/mono/src/ir/decision_tree.rs:777:17:\nIntLiteral([91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], U8)\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nThere was an unrecoverable error in the Roc compiler. The `roc check` command can sometimes give a more helpful error report than other commands.\n</code></pre></div>",
        "id": 470930069,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1726566683
    }
]