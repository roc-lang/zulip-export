[
    {
        "content": "<p>A few months ago I had the understanding that in general it was better to \"do things\" at the end of a <code>List</code> instead of at the start. So appending a value is much more performant than prepending a value for example. But now I have seen some discussions about \"seamless slices\" changing this. But I can't quite wrap my head around what that means. Is it still better to append than to prepend for example? I would like to learn more here <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 407705367,
        "sender_full_name": "Johan Lövgren",
        "timestamp": 1702466966
    },
    {
        "content": "<p>The \"seamless slice\" feature allows us to share data between lists. For example the <a href=\"https://www.roc-lang.org/builtins/List#sublist\">sublist</a> function returns a seamless slice. If you ask for elements 5-10 of a list, it will not create a whole new memory allocation for it and copy the contents across. Instead, it just returns a structure that <em>refers</em> to part of the original list. It contains metadata that says \"Hey I'm really a slice, not a real List. I refer to the elements of this other list at address 0xabc123456, starting at offset 5 with length 6\"<br>\nIf you then <em>modify</em> that list in any way, making it different from the original list, we have to create a new one and copy the contents. There's no way around it.</p>",
        "id": 407710038,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1702468577
    },
    {
        "content": "<p>But if you don't modify it, it's way more efficient to just share the data instead of allocating and copying.</p>",
        "id": 407710115,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1702468606
    },
    {
        "content": "<p>So the situation has gotten more complex for sure.<br>\nBUT if you are trying to decide \"should I append or prepend\", then definitely append rather than prepend! Prepending is never better. It is either the same (if you were doing a copy anyway) or worse, but never better.</p>",
        "id": 407710501,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1702468732
    },
    {
        "content": "<p>Thanks for the great explanation! That makes a lot of sense.</p>",
        "id": 407759443,
        "sender_full_name": "Johan Lövgren",
        "timestamp": 1702483521
    }
]