[
    {
        "content": "<p>Say I have a module that provides some functionality. The implementation uses a record and several functions that act on the record. What is the best way to organise that code?</p>\n<p>I could create a separate module file for the record and its functions, but that puts it \"too far\" from the core functionality in the main module. I'd prefer to keep the 10 lines or so in the main module file.</p>\n<p>I could use some naming conventions to prefix the support functions, but that gets wordy.</p>\n<div class=\"codehilite\"><pre><span></span><code>State : { ... }\nstateInit : Args -&gt; State\nstateReset: State -&gt; State\nstateIncr: State -&gt; State\n# etc...\n</code></pre></div>\n<p>Ideally I'd like to associate those functions with State, to call them like <code>State.init</code>, <code>State.reset</code>, etc., without creating a separate module file. </p>\n<p>I saw another suggestion from Brendan Hansknecht a year ago which embeds functions in a def, like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>State : { ... }\nstate =\n    init = \\args -&gt; { ... }\n    reset = \\s -&gt; ...\n    incr = \\s -&gt; ...\n    { init, reset, incr }\n</code></pre></div>\n<p>which is a good compromise, except I lose the capitalisation, and I take up a good parameter name <code>state</code>.</p>\n<p>Are there other good options?</p>",
        "id": 488714997,
        "sender_full_name": "Mo",
        "timestamp": 1734036276
    },
    {
        "content": "<p>I pretty much always go for the first</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">State</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nf\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"nv\">stateInit</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Args</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">State</span>\n<span class=\"nv\">stateIncr</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">State</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">State</span>\n</code></pre></div>\n<p>It also allows you to also choose more intuitive names sometimes like <code>urlToState</code> vs <code>State.fromUrl</code> or <code>listMapAndStatesCombine</code> vs <code>State.combineAfterMapping</code> or whatever</p>",
        "id": 488716116,
        "sender_full_name": "lue",
        "timestamp": 1734036759
    },
    {
        "content": "<p>I can live with:</p>\n<div class=\"codehilite\"><pre><span></span><code>State : { ... }\nmState =\n    init = \\args -&gt; { ... }\n    reset = \\s -&gt; ...\n    incr = \\s -&gt; ...\n    { init, reset, incr }\n</code></pre></div>\n<p>which makes refactoring into an external module easy, if it becomes necessary.</p>\n<p>I'm curious also if the compiler will as easily be able to optimise functions declared this way.</p>",
        "id": 488716186,
        "sender_full_name": "Mo",
        "timestamp": 1734036792
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"522669\">lue</span> <a href=\"#narrow/channel/231634-beginners/topic/namespacing.20a.20type.20and.20utility.20functions.20within.20a.20module.3F/near/488716116\">said</a>:</p>\n<blockquote>\n<p>It also allows you to also choose more intuitive names sometimes like <code>urlToState</code> vs <code>State.fromUrl</code></p>\n</blockquote>\n<p>That's a good point too.</p>",
        "id": 488716428,
        "sender_full_name": "Mo",
        "timestamp": 1734036884
    },
    {
        "content": "<blockquote>\n<p>I'm curious also if the compiler will as easily be able to optimise functions declared this way.</p>\n</blockquote>\n<p>I would have to double check, but I'm pretty sure it will optimize the same as long as there are no captures</p>",
        "id": 488722650,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734039227
    },
    {
        "content": "<p>In practice, I tend to either <code>stateInit</code>, <code>stateUpdate</code>, ..., or I have modules for specific types</p>",
        "id": 488722785,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734039275
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"802367\">Mo</span> has marked this topic as resolved.</p>",
        "id": 488750088,
        "sender_full_name": "Notification Bot",
        "timestamp": 1734054615
    }
]