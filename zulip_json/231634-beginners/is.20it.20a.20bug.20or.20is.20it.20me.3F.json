[
    {
        "content": "<p>When you write a string constant and forget to escape a <code>\"</code> somewhere in the middle, say:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;Hello, &quot;2&quot; World!\\n&quot;\n</code></pre></div>\n<p>Then roc crashes when trying to run your program.<br>\nInterestingly, on the 'hello world' platform, Roc gives a warning (\"too many arguments for function\") before trying to run it anyway.<br>\nBut on the cli-platform (for the 'interactive' examples), this warning is not shown, and Roc immediately crashes with what seems to be the same error, but without a veneer of Roc around the Rust panic.</p>",
        "id": 287450691,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656184540
    },
    {
        "content": "<p>Is this difference expected or not?</p>",
        "id": 287450696,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656184554
    },
    {
        "content": "<p>(Rust error shown in the 'interactive' examples:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, compiler/mono/src/ir.rs:9149:35\n</code></pre></div>\n<p>Error as shown when doing the same thing in the 'hello world' example:</p>\n<div class=\"codehilite\"><pre><span></span><code>Application crashed with message\n\n    Erroneous compiler/mono/src/ir.rs line 4704\n\nShutting down\n</code></pre></div>\n<p>)</p>",
        "id": 287450762,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656184635
    },
    {
        "content": "<p>it’s a bug. how well we’re able to continue compiling when there’s a type error varies heavily and things go poorly when the types are more complicated, as they are in the cli platform. but in any case, we would like the compiler itself to avoid panicking.</p>",
        "id": 287451080,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1656185090
    },
    {
        "content": "<p>And is the fact that warnings are shown for one platform and not for the other also a bug, or a setting I missed somewhere or something?</p>",
        "id": 287451147,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656185178
    },
    {
        "content": "<p>the first message you showed, “thread &lt;unknown&gt; panicked”, is the compiler itself crashing, which is definitely a bug. The second is the compiler finishing it’s job, and running, and the runtime crashing where it saw there was a type error. There’s a bug in the second one too, which is that the message regarding why it crashed could be a lot better.</p>",
        "id": 287451251,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1656185386
    },
    {
        "content": "<p>well you already got a type error on compilation</p>",
        "id": 287451314,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1656185456
    },
    {
        "content": "<p>we can still do better with the runtime error but I don't think that's an urgent issue</p>",
        "id": 287451323,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1656185481
    },
    {
        "content": "<p>I don't think it is urgent either (but I have reported it for good measure: <a href=\"https://github.com/rtfeldman/roc/issues/3327\">https://github.com/rtfeldman/roc/issues/3327</a> )</p>",
        "id": 287451418,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656185633
    },
    {
        "content": "<p>I was mostly confused by the difference in behaviour between running roc on the hello-world platform and the cli-platform</p>",
        "id": 287451458,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656185648
    },
    {
        "content": "<p>right, the difference as Ayaz mentioned is the complexity of types</p>",
        "id": 287451474,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1656185704
    },
    {
        "content": "<p>Ah, that makes sense <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 287451476,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656185719
    },
    {
        "content": "<p>yeah the \"you can keep running even if there's a type error\" functionality exists, but it's got a lot of bugs and is lower priority to work than several other things for the time being <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 287452934,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1656187707
    },
    {
        "content": "<p>Another fun one:</p>\n<p>After merging <code>trunk</code> into <code>3245-assoc-list</code> I get the following error when trying to run the example (<code>cargo run -- run examples/assoc-list/main.roc</code>)</p>\n<div class=\"codehilite\"><pre><span></span><code>── FILE PROBLEM ────────────────────────────────────────────────── UNKNOWN.roc ─\n\nI tried to read this file, but ran into a is a directory problem.\n</code></pre></div>",
        "id": 287568037,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656331847
    },
    {
        "content": "<p>I did not have this problem earlier.</p>\n<p>Am I doing something wrong?</p>",
        "id": 287568074,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656331870
    },
    {
        "content": "<p>I bet it's this <a href=\"https://github.com/rtfeldman/roc/issues/3249\">https://github.com/rtfeldman/roc/issues/3249</a></p>",
        "id": 287569357,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1656332560
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/VJTEveBA6FYOmL_VO8Hxj-qR/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/VJTEveBA6FYOmL_VO8Hxj-qR/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/VJTEveBA6FYOmL_VO8Hxj-qR/image.png\"></a></div><p>We're getting somewhere <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 287570025,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656332905
    },
    {
        "content": "<p>How do I run valgrind properly for this? I tried a simple <code>valgrind cargo run -- run ./examples/assoc-list/main.roc</code> but this segfaulted still and exited valgrind itself immediately as well.</p>",
        "id": 287570863,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656333362
    },
    {
        "content": "<p>And is this maybe caused by some kind of build cache invalidation? I tried <code>cargo clean</code> in the <code>cli-platform</code> subdirectory of the example, but that still gave the same result. Is there something else to try?</p>",
        "id": 287571048,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656333461
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> The segfault also shows up for other cli-platform examples (e.g. those in the <code>examples/interactive</code> folder)</p>",
        "id": 287571211,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656333532
    },
    {
        "content": "<p>is this the application itself crashing?</p>",
        "id": 287571637,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1656333728
    },
    {
        "content": "<p>or the compiler</p>",
        "id": 287571645,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1656333732
    },
    {
        "content": "<p>I usually find out what the binary is that was created, then run valgrind on that directly</p>",
        "id": 287571802,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1656333825
    },
    {
        "content": "<p>so <code>valgrind ./examples/assoc-list/main</code></p>",
        "id": 287571882,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1656333851
    },
    {
        "content": "<p>Thanks! It seems like the application itself is crashing. That might also be why in the other command, <code>valgrind</code> output does not show up (there probably is an <code>execve</code> or something happening once compilation finished, shedding the <code>Valgrind</code> wrapper)</p>",
        "id": 287572910,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656334377
    },
    {
        "content": "<p>So I've bisected the problem and was able to trace it back to one commit related to allocating recursive tags <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> </p>\n<p><a href=\"https://github.com/rtfeldman/roc/issues/3344\">https://github.com/rtfeldman/roc/issues/3344</a></p>",
        "id": 287586449,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656340565
    },
    {
        "content": "<p>indeed there is an <code>execve</code>. That commit was supposed to fix issues, not create them ...</p>",
        "id": 287606611,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1656348937
    },
    {
        "content": "<p>that address in binary is <code>0b111100010000000011101</code>, so it uses sub-byte addressing</p>",
        "id": 287607236,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1656349195
    },
    {
        "content": "<p>the lowest 3 bits should be unused right?</p>",
        "id": 287607248,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1656349201
    },
    {
        "content": "<p>One would assume so</p>",
        "id": 287613492,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656352216
    },
    {
        "content": "<p>Are there options I could pass to <code>valgrind</code> or other commands I might run that might help to shed more light on the problem?</p>",
        "id": 287613611,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1656352281
    }
]