[
    {
        "content": "<p>I think I'm probably miss understanding how to accumulate errors, but I have an error message I can't quite figure out. </p>\n<p>What confuses me here is that it is complaining about the annotation of my error type, but I actually replaced my error type annotation with a <code>[]_</code> to try to get it to type check. Here is the error message:</p>\n<div class=\"codehilite\"><pre><span></span><code>Something is off with the body of the to_str definition:\n\n22│  to_str : List U16 -&gt; Result Str []_ #[BadUtf16 Utf16Problem, BadUtf8 Utf8.Utf8Problem]\n23│  to_str = |utf16|\n24│      codepoints = to_codepoints(utf16)?\n                      ^^^^^^^^^^^^^^^^^^^^^\n\nThis returns an Err of type:\n\n    [\n        Err [BadUtf16 Utf16Problem],\n        Ok Str,\n    ]\n\nBut the type annotation on to_str says it should be:\n\n    Result Str [BadUtf8 {\n        index : U64,\n        problem : Utf8ByteProblem,\n    }]\n</code></pre></div>\n<p>The relevant code is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">to_codepoints</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">List</span><span class=\"w\"> </span><span class=\"no\">U16</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"no\">List</span><span class=\"w\"> </span><span class=\"no\">U32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"no\">BadUtf16</span><span class=\"w\"> </span><span class=\"no\">Utf16Problem</span><span class=\"o\">]</span>\n\n<span class=\"n\">to_str</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">List</span><span class=\"w\"> </span><span class=\"no\">U16</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"w\"> </span><span class=\"o\">[]</span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"c1\">#[BadUtf16 Utf16Problem, BadUtf8 Utf8.Utf8Problem]</span>\n<span class=\"n\">to_str</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">utf16</span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"n\">codepoints</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">try</span><span class=\"w\"> </span><span class=\"n\">to_codepoints</span><span class=\"p\">(</span><span class=\"n\">utf16</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"c1\"># annotation above</span>\n<span class=\"w\">    </span><span class=\"n\">codepoints</span><span class=\"w\"> </span><span class=\"c1\"># List U32</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"no\">Utf8</span><span class=\"o\">.</span><span class=\"n\">from_codepoints</span><span class=\"w\"> </span><span class=\"c1\"># List U32 -&gt; List U8</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"o\">.</span><span class=\"n\">from_utf8</span><span class=\"w\"> </span><span class=\"c1\"># List U8 -&gt; Result Str [BadUtf8 Utf8.Utf8Problem]</span>\n</code></pre></div>",
        "id": 495076776,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737471864
    },
    {
        "content": "<p>Does just <code>_</code> work instead of <code>[]_</code>?</p>",
        "id": 495097037,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1737477042
    },
    {
        "content": "<p>Same thing. And removing the type annotation entirely doesn't work either. It produces a slightly different error.</p>",
        "id": 495106222,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737479634
    }
]