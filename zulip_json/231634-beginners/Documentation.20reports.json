[
    {
        "content": "<p>Where is best place for (what appear to be) documentation fixups?</p>\n<p>in <a href=\"https://www.roc-lang.org/builtins/Num#neg\">https://www.roc-lang.org/builtins/Num#neg</a> section, there's a code snippet</p>\n<p>Frac.pi |&gt; Num.add(1.0)</p>\n<p>which gives an error, but</p>\n<p>Num.pi |&gt; Num.add(1.0)</p>\n<p>gives the answer.</p>",
        "id": 502906323,
        "sender_full_name": "Jonathan Kelly",
        "timestamp": 1740954360
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/blob/0e65aad27da5c5ce73ef39ff98f500edba88db95/crates/compiler/builtins/roc/Num.roc#L754\">https://github.com/roc-lang/roc/blob/0e65aad27da5c5ce73ef39ff98f500edba88db95/crates/compiler/builtins/roc/Num.roc#L754</a></p>",
        "id": 502906477,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1740954476
    },
    {
        "content": "<p>Looks like there's a few other places in that file where we use <code>Frac.pi</code> also</p>",
        "id": 502906558,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1740954500
    },
    {
        "content": "<p>While I'm here ... Num.sqrt(4.0) seems to crash the repl ... ?</p>\n<p>not just the repl ...</p>\n<div class=\"codehilite\"><pre><span></span><code>app [main!] { pf: platform &quot;https://github.com/roc-lang/basic-cli/releases/download/0.19.0/Hj-J_zxz7V9YurCSTFcFdu6cQJie4guzsPMUi5kBYUk.tar.br&quot; }\n\nimport pf.Stdout\n\nmain! = |_args|\n  Stdout.line!(&quot;sqrt 2.0 is ${Num.to_str(Num.sqrt(2.0))}&quot;)\n</code></pre></div>\n<p>thread 'main' panicked at crates/compiler/gen_llvm/src/llvm/lowlevel.rs:2236:13:<br>\ninternal error: entered unreachable code: Unrecognized dec unary operation: NumSqrtUnchecked<br>\nnote: run with <code>RUST_BACKTRACE=1</code> environment variable to display a backtrace</p>\n<p>oh ...</p>\n<p>if you </p>\n<p>Num.sqrt(4.0f64)</p>\n<p>it runs ok.</p>",
        "id": 502907040,
        "sender_full_name": "Jonathan Kelly",
        "timestamp": 1740954856
    },
    {
        "content": "<p>Yeah that's strange...definitely a bug</p>",
        "id": 502907244,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1740955043
    },
    {
        "content": "<p>If you don't specify a type, Roc will default to using <a href=\"https://www.roc-lang.org/builtins/Num#Dec\"><code>Dec</code></a> because it's the least error-prone overall.</p>\n<p>... except when it's not. <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 502907691,
        "sender_full_name": "Jonathan Kelly",
        "timestamp": 1740955412
    },
    {
        "content": "<p>The REPL uses the dev backend -- which was never fully implemented, so there are some sharp edge cases like this around.</p>",
        "id": 502908845,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1740956264
    },
    {
        "content": "<p>I think with the new approach in our zig compiler we won't have these kind of issues... because everything will be using the same interpreter</p>",
        "id": 502908899,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1740956286
    }
]