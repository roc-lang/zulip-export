[
    {
        "content": "<p>Loco wants to be the RoR of the Rust web dev world, and they see to be doing a great job of that!</p>",
        "id": 476605789,
        "sender_full_name": "Erlend Sogge Heggen",
        "timestamp": 1728825487
    },
    {
        "content": "<p>one thing they don’t have yet though is a Ruby-like language that enables rapid-iteration development.</p>",
        "id": 476605824,
        "sender_full_name": "Erlend Sogge Heggen",
        "timestamp": 1728825544
    },
    {
        "content": "<p>I’m trying to wrap my head around this Platforms feature. Am I right in thinking that Roc could function very well as Loco’s (functional) alternative to Ruby?</p>",
        "id": 476606032,
        "sender_full_name": "Erlend Sogge Heggen",
        "timestamp": 1728825738
    },
    {
        "content": "<p>We already have <a href=\"http://github.com/roc-lang/basic-webserver\">github.com/roc-lang/basic-webserver</a> which is built on top of rust with hyper. Theoretically something similar could be built on top of loco (maybe modeling the loco api better).</p>",
        "id": 476623390,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1728841030
    },
    {
        "content": "<p>The only warning I would give to someone trying to invest into developing a platform on top of Loco for a webserver is that Loco is big on scaffolding out Rust code via code gen. If you want to get its benefits, that big benefit of getting Rust code generated quickly is no longer helpful, unless you update their codegen to generate platform bindings as well. </p>\n<p>If you're suggesting that we do something similar to Loco, which is scaffold/generate Roc code from a custom CLI to facilitate faster development, I think that could be a good idea.</p>",
        "id": 476638545,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1728854571
    }
]