[
    {
        "content": "<p>Is there no function to get a character in a string yet? Would I need to list the graphemes and index into that list, e.g. write my own function for now?</p>",
        "id": 345878765,
        "sender_full_name": "itmuckel",
        "timestamp": 1680252009
    },
    {
        "content": "<p>Yes, so: <code>Str.graphemes \"hello\" |&gt; List.get 3</code><br>\nIs it common in stdlibs of other programming languages to do this in one function?</p>",
        "id": 345883569,
        "sender_full_name": "Anton",
        "timestamp": 1680253382
    },
    {
        "content": "<p>very</p>",
        "id": 345887079,
        "sender_full_name": "dank",
        "timestamp": 1680254340
    },
    {
        "content": "<p>Confirmed: python, js, scala and java have it.<br>\nI'm in favor of adding it</p>",
        "id": 345889176,
        "sender_full_name": "Anton",
        "timestamp": 1680254796
    },
    {
        "content": "<p>yea.. tho their str representation is very different</p>",
        "id": 345891248,
        "sender_full_name": "dank",
        "timestamp": 1680255297
    },
    {
        "content": "<p>so i think a str index function would be a linear algorithm</p>",
        "id": 345891492,
        "sender_full_name": "dank",
        "timestamp": 1680255357
    },
    {
        "content": "<p>meaning for each index you ask, you have to traverse all over again</p>",
        "id": 345891591,
        "sender_full_name": "dank",
        "timestamp": 1680255370
    },
    {
        "content": "<p>so it might just be preferable to convert to grapheme list once</p>",
        "id": 345891675,
        "sender_full_name": "dank",
        "timestamp": 1680255394
    },
    {
        "content": "<p>good point!</p>",
        "id": 345894587,
        "sender_full_name": "Anton",
        "timestamp": 1680256120
    },
    {
        "content": "<p>Seems like it would still be nice to have a <code>graphemeAt</code> function but also a clippy-like performance warning if it is used repeatedly on the same string.</p>",
        "id": 345895412,
        "sender_full_name": "Anton",
        "timestamp": 1680256329
    },
    {
        "content": "<p>yeah this is a tricky topic, and unfortunately most languages present a footgun (probably for historical reasons, at least originally)</p>\n<p>the tradeoffs are:</p>\n<ul>\n<li>accessing a grapheme by index requires a linear scan, and always gives you back a valid string</li>\n<li>accessing a byte at a particular index is constant time, and is completely broken if things like emojis are involved <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></li>\n</ul>",
        "id": 345917097,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1680262144
    },
    {
        "content": "<p>offering \"get a “character” in constant time\" (with the note that what \"character\" means varies by language) seems to me the most likely reason that emojis commonly break software</p>",
        "id": 345917492,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1680262236
    },
    {
        "content": "<p>so Swift doesn't offer that functionality, and I don't think Roc should either - for the same reasons!</p>",
        "id": 345917545,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1680262254
    },
    {
        "content": "<p>so although <code>Str.graphemes \"hello\" |&gt; List.get 3</code> is obviously slow, I think that's a feature and not a bug <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 345917645,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1680262281
    },
    {
        "content": "<p>because <code>Str.graphemesAt</code> would also be slow, but not obviously so</p>",
        "id": 345917672,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1680262291
    },
    {
        "content": "<p>and yes, if you needed to do multiple \"get grapheme by index\" it would indeed often be faster to make the list of graphemes once, and then index into that list multiple times (each access being constant time) than to do multiple linear scans of the string</p>",
        "id": 345917867,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1680262337
    },
    {
        "content": "<p>so I'd propose that maybe explaining all of this in the <code>Str</code> docs is maybe the best solution here!</p>",
        "id": 345917950,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1680262357
    },
    {
        "content": "<p>Yes, good reasoning!</p>",
        "id": 345923661,
        "sender_full_name": "itmuckel",
        "timestamp": 1680263749
    }
]