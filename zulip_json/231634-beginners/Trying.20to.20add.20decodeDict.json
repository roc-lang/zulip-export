[
    {
        "content": "<p>I'm trying to add an ability for <code>dict</code> in <code>Decode.roc</code> and the relevant function in <code>Json.roc</code>. When doing <code>roc check</code> on <code>Json.roc</code> I'm getting the error?</p>\n<div class=\"codehilite\"><pre><span></span><code>The DecoderFormatting ability does not have a member dict\n\n120â”‚               dict: decodeDict,\n                   ^^^^\n\nOnly implementations for members an ability has can be specified in\nthis location.\n</code></pre></div>",
        "id": 342205329,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678934927
    },
    {
        "content": "<p>Can you share the larger chunk of surrounding code?</p>",
        "id": 342206254,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678935568
    },
    {
        "content": "<p>Sure, here is relevant part of <code>Json.roc</code> with the issue. You can see I added the member <code>dict</code> at the bottom</p>\n<div class=\"codehilite\"><pre><span></span><code>Json := {} has [\n         EncoderFormatting {\n             u8: encodeU8,\n             u16: encodeU16,\n             u32: encodeU32,\n             u64: encodeU64,\n             u128: encodeU128,\n             i8: encodeI8,\n             i16: encodeI16,\n             i32: encodeI32,\n             i64: encodeI64,\n             i128: encodeI128,\n             f32: encodeF32,\n             f64: encodeF64,\n             dec: encodeDec,\n             bool: encodeBool,\n             string: encodeString,\n             list: encodeList,\n             record: encodeRecord,\n             tag: encodeTag,\n         },\n         DecoderFormatting {\n             u8: decodeU8,\n             u16: decodeU16,\n             u32: decodeU32,\n             u64: decodeU64,\n             u128: decodeU128,\n             i8: decodeI8,\n             i16: decodeI16,\n             i32: decodeI32,\n             i64: decodeI64,\n             i128: decodeI128,\n             f32: decodeF32,\n             f64: decodeF64,\n             dec: decodeDec,\n             bool: decodeBool,\n             string: decodeString,\n             list: decodeList,\n             record: decodeRecord,\n             dict: decodeDict,\n         },\n     ]\n</code></pre></div>\n<p>and I added to <code>Decode.roc</code> and also exposed it</p>\n<div class=\"codehilite\"><pre><span></span><code>DecoderFormatting has\n    u8 : Decoder U8 fmt | fmt has DecoderFormatting\n    u16 : Decoder U16 fmt | fmt has DecoderFormatting\n    u32 : Decoder U32 fmt | fmt has DecoderFormatting\n    u64 : Decoder U64 fmt | fmt has DecoderFormatting\n    u128 : Decoder U128 fmt | fmt has DecoderFormatting\n    i8 : Decoder I8 fmt | fmt has DecoderFormatting\n    i16 : Decoder I16 fmt | fmt has DecoderFormatting\n    i32 : Decoder I32 fmt | fmt has DecoderFormatting\n    i64 : Decoder I64 fmt | fmt has DecoderFormatting\n    i128 : Decoder I128 fmt | fmt has DecoderFormatting\n    f32 : Decoder F32 fmt | fmt has DecoderFormatting\n    f64 : Decoder F64 fmt | fmt has DecoderFormatting\n    dec : Decoder Dec fmt | fmt has DecoderFormatting\n    bool : Decoder Bool fmt | fmt has DecoderFormatting\n    string : Decoder Str fmt | fmt has DecoderFormatting\n    list : Decoder elem fmt -&gt; Decoder (List elem) fmt | fmt has DecoderFormatting\n    record : state, (state, Str -&gt; [Keep (Decoder state fmt), Skip]), (state -&gt; Result val DecodeError) -&gt; Decoder val fmt | fmt has DecoderFormatting\n    dict : Decoder elem fmt -&gt; Decoder (Dict Str elem) fmt | fmt has DecoderFormatting\n</code></pre></div>",
        "id": 342207006,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678936028
    },
    {
        "content": "<p>Ah, yeah, you can't add a new value there.</p>",
        "id": 342209810,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678937937
    },
    {
        "content": "<p>DecodeFormatting is defined here: <a href=\"https://github.com/roc-lang/roc/blob/a80b25d0447666719d26eb5717c62c7fe6b9a54f/crates/compiler/builtins/roc/Decode.roc#L62\">https://github.com/roc-lang/roc/blob/a80b25d0447666719d26eb5717c62c7fe6b9a54f/crates/compiler/builtins/roc/Decode.roc#L62</a></p>",
        "id": 342209823,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678937944
    },
    {
        "content": "<p>All other types have to be defined in terms of those primatives.</p>",
        "id": 342209834,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678937956
    },
    {
        "content": "<p>I believe you would need to define the <code>Decoding</code> ability for <code>Dict</code> or some <code>Dict</code> wrapper type (though should get added to the standard library <code>Dict</code>: <a href=\"https://github.com/roc-lang/roc/blob/a80b25d0447666719d26eb5717c62c7fe6b9a54f/crates/compiler/builtins/roc/Decode.roc#L59\">https://github.com/roc-lang/roc/blob/a80b25d0447666719d26eb5717c62c7fe6b9a54f/crates/compiler/builtins/roc/Decode.roc#L59</a></p>",
        "id": 342209983,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678938052
    },
    {
        "content": "<p><code>Decoding</code> uses those primitives to decode a list of bytes into another type. in this case, <code>Dict</code>.</p>",
        "id": 342210019,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678938085
    },
    {
        "content": "<p>So you probably want to use create a definition that first decodes a <code>List (k, v)</code> Then it creates a dictionary from the list.</p>",
        "id": 342210066,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678938122
    },
    {
        "content": "<p>Or something of that nature.</p>",
        "id": 342210112,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678938132
    },
    {
        "content": "<p>Though I guess json has a native dict type, so maybe we need native decoding for it, I am not fully sure how these things compose.</p>",
        "id": 342210178,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678938195
    },
    {
        "content": "<p>Turns out my question was with the fact I needed to run <code>cargo build</code> in order to get the new DecoderFormatting member <code>dict</code></p>",
        "id": 342348572,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678980549
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"465260\">@Seth Workman</span> I'm interested to know how you went here? Any success adding Dicts for Json decoding?</p>",
        "id": 343014959,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1679280193
    },
    {
        "content": "<p>Not far enough, just got a generic method compiling but nothing actually working. I don't have enough knowledge of how its all linked together yet</p>",
        "id": 343017881,
        "sender_full_name": "Seth Workman",
        "timestamp": 1679282656
    }
]