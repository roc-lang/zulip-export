[
    {
        "content": "<p>Hey, I've managed to get roc repl + compiler to work on my Mac 12.6 Monterey, but roc test gets mad:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>thread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Result::unwrap()` on an `Err` value: Erroneous'</span>, crates/compiler/mono/src/ir.rs:10148:10\nnote: run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span> environment variable to display a backtrace\n</code></pre></div>\n<p>I tried with/without the <code>app</code> header. I'm following the Roc tutorial docs.</p>",
        "id": 313302543,
        "sender_full_name": "JesterXL",
        "timestamp": 1669907665
    },
    {
        "content": "<p>What does <code>roc check</code> say? Do you have any type errors?</p>",
        "id": 313302709,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1669907716
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>── MISSING DEFINITION ─────────────────────────────────────────────── main.roc ─\n\nmain is listed as exposed, but it isn<span class=\"err\">'</span>t defined <span class=\"k\">in</span> this module.\n\nYou can fix this by adding a definition <span class=\"k\">for</span> main, or by removing it\nfrom exposes.\n\n\n── TYPE MISMATCH ──────────────────────────────────────────────────── main.roc ─\n\nThis 2nd argument to isEq has an unexpected type:\n\n<span class=\"m\">20</span>│      <span class=\"k\">if</span> <span class=\"nv\">count</span> <span class=\"o\">==</span> <span class=\"m\">1</span> <span class=\"k\">then</span>\n                     ^\n\nThe argument is a number of type:\n\n    Num *\n\nBut isEq needs its 2nd argument to be:\n\n    Num * <span class=\"p\">|</span> * has Eq\n\n────────────────────────────────────────────────────────────────────────────────\n\n<span class=\"m\">2</span> errors and <span class=\"m\">1</span> warning found <span class=\"k\">in</span> <span class=\"m\">14</span> ms.\n</code></pre></div>",
        "id": 313302789,
        "sender_full_name": "JesterXL",
        "timestamp": 1669907739
    },
    {
        "content": "<p>Yeah, currently we have some bugs if you try to compile a Roc program that has type errors. That type error is a bug; I'm working on fixing it now. In the meantime you can use a type annotation as a workaround (<a href=\"#narrow/stream/231634-beginners/topic/Type.20mismatch.20in.20if-then-else.20tutorial.20example/near/313227546\">https://roc.zulipchat.com/#narrow/stream/231634-beginners/topic/Type.20mismatch.20in.20if-then-else.20tutorial.20example/near/313227546</a>)</p>",
        "id": 313303823,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1669907998
    },
    {
        "content": "<p>Currently <code>roc test</code> does not exit early if there are type errors, which is why you saw the panic above, rather than a type error. We intend to change that soon.</p>",
        "id": 313304115,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1669908079
    },
    {
        "content": "<p>No worries, ok. I tried: <code>pluralize : Str, Str, Num * -&gt; Str</code> and <code>pluralize : Str, Str, Num -&gt; Str</code>, but both seem... off. Do you know what that 3rd param should be?</p>",
        "id": 313305567,
        "sender_full_name": "JesterXL",
        "timestamp": 1669908447
    },
    {
        "content": "<p>try <code>pluralize : Str, Str, Num a -&gt; Str | a has Eq</code></p>",
        "id": 313307254,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1669908872
    },
    {
        "content": "<p>Fascinating, same response:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"err\">──</span><span class=\"w\"> </span><span class=\"kt\">TYPE</span><span class=\"w\"> </span><span class=\"kt\">MISMATCH</span><span class=\"w\"> </span><span class=\"err\">────────────────────────────────────────────────────</span><span class=\"w\"> </span><span class=\"nv\">main</span><span class=\"nf\">.</span><span class=\"nv\">roc</span><span class=\"w\"> </span><span class=\"err\">─</span><span class=\"w\"></span>\n\n<span class=\"kt\">This</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"nv\">nd</span><span class=\"w\"> </span><span class=\"nv\">argument</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">isEq</span><span class=\"w\"> </span><span class=\"nv\">has</span><span class=\"w\"> </span><span class=\"nv\">an</span><span class=\"w\"> </span><span class=\"nv\">unexpected</span><span class=\"w\"> </span><span class=\"kr\">type</span><span class=\"nf\">:</span><span class=\"w\"></span>\n\n<span class=\"mi\">51</span><span class=\"err\">│</span><span class=\"w\">      </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"nv\">count</span><span class=\"w\"> </span><span class=\"nf\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"kr\">then</span><span class=\"w\"></span>\n<span class=\"w\">                     </span><span class=\"nf\">^</span><span class=\"w\"></span>\n\n<span class=\"kt\">The</span><span class=\"w\"> </span><span class=\"nv\">argument</span><span class=\"w\"> </span><span class=\"nv\">is</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"nv\">number</span><span class=\"w\"> </span><span class=\"kr\">of</span><span class=\"w\"> </span><span class=\"kr\">type</span><span class=\"nf\">:</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kt\">Num</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"></span>\n\n<span class=\"kt\">But</span><span class=\"w\"> </span><span class=\"nv\">isEq</span><span class=\"w\"> </span><span class=\"nv\">needs</span><span class=\"w\"> </span><span class=\"nv\">its</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"nv\">nd</span><span class=\"w\"> </span><span class=\"nv\">argument</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">be</span><span class=\"nf\">:</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kt\">Num</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"nf\">|</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"nv\">has</span><span class=\"w\"> </span><span class=\"kt\">Eq</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 313308977,
        "sender_full_name": "JesterXL",
        "timestamp": 1669909363
    },
    {
        "content": "<p>What if you say</p>\n<div class=\"codehilite\"><pre><span></span><code>one : Num a | a has Eq\none = 1\nif count == one then ...\n</code></pre></div>",
        "id": 313309729,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1669909597
    },
    {
        "content": "<p>lol, here's what <code>roc check</code> says:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>── TYPE MISMATCH ──────────────────────────────────────────────────── main.roc ─\n\nSomething is off with the body of the one definition:\n\n<span class=\"m\">51</span>│  one : Num a <span class=\"p\">|</span> a has Eq\n<span class=\"m\">52</span>│  <span class=\"nv\">one</span> <span class=\"o\">=</span> <span class=\"m\">1</span>\n           ^\n\nThe body is a number of type:\n\n    Num *\n\nBut the <span class=\"nb\">type</span> annotation on one says it should be:\n\n    Num a <span class=\"p\">|</span> a has Eq\n</code></pre></div>",
        "id": 313310399,
        "sender_full_name": "JesterXL",
        "timestamp": 1669909802
    },
    {
        "content": "<p>Oh man, I'm sorry. I have a fix here: <a href=\"https://github.com/roc-lang/roc/pull/4644\">https://github.com/roc-lang/roc/pull/4644</a> - if it lands today it'll be in tomorrow's nightly release.</p>",
        "id": 313313520,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1669910642
    },
    {
        "content": "<p>Nooooo worries, it was fun to learn about the types!</p>",
        "id": 313316477,
        "sender_full_name": "JesterXL",
        "timestamp": 1669911471
    },
    {
        "content": "<p>Appreciate your help and patience here.</p>",
        "id": 313316520,
        "sender_full_name": "JesterXL",
        "timestamp": 1669911478
    },
    {
        "content": "<p>The fix for this should be in the nightly release available tomorrow</p>",
        "id": 313395383,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1669935593
    },
    {
        "content": "<p>New nightly releases are published :)</p>",
        "id": 313472390,
        "sender_full_name": "Anton",
        "timestamp": 1669978318
    }
]