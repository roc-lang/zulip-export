[
    {
        "content": "<p>Every once in a while I get an error like the one below. Usually they seem to be because I had a syntax error in my code and I can fix them by finding the syntax error. This is the first time I've been stumped on one of them and I'm wondering if someone can help explain what this error means and how it can hopefully help me figure out what's wrong with my code.</p>\n<div class=\"codehilite\"><pre><span></span><code>Please file an issue here: https://github.com/roc-lang/roc/issues/new/choose\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;no lambda set found for (`22.IdentId(21)`, [\n    InLayout(\n        39,\n    ),\n    InLayout(\n        250,\n    ),\n]): LambdaSet {\n    set: [\n        ( 22.21, [InLayout(39), InLayout(106)]),\n        ( 22.24, [InLayout(20), InLayout(21)]),\n        ( 22.26, [InLayout(1)]),\n    ],\n    args: [\n        InLayout(\n            1,\n        ),\n    ],\n    ret: InLayout(\n        1,\n    ),\n    representation: InLayout(\n        83,\n    ),\n    full_layout: InLayout(\n        95,\n    ),\n}&#39;, crates/compiler/mono/src/layout.rs:1506:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 327469314,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676266913
    },
    {
        "content": "<p>Can't give justice to the error, but in general would advise running <code>roc check</code> before compiling your code. Not sure if it would find the issue in this case, but it tends to crash less and report more proper errors that can help fix code and syntax bugs.</p>",
        "id": 327470024,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1676267497
    },
    {
        "content": "<p>I think I found the issue. I get that error when I have <code>when Str.toU16 a is</code> but if I change it to <code>when (Str.toU16 a) is</code> then it goes away. Can you not have expressions between <code>when</code> and <code>is</code>? Also, interestingly, running <code>roc check</code> on the bad version gives me <code>0 errors and 0 warnings found in 352 ms.</code></p>",
        "id": 327470184,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676267625
    },
    {
        "content": "<p>Wait, now it's not working. What the heck. It was just working after that change. This is a weird one...</p>",
        "id": 327470276,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676267690
    },
    {
        "content": "<p>Ok, maybe it's actually when there is a recursive function call. Is that not allowed in Roc?</p>",
        "id": 327471049,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676268257
    },
    {
        "content": "<p>Here's the function that seems to be generating the error:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">setVal</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">U16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"nv\">setVal</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">address</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">pin</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">await</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">Pca9685</span><span class=\"p\">.</span><span class=\"nx\">setPinOffTicks</span><span class=\"w\"> </span><span class=\"nx\">address</span><span class=\"w\"> </span><span class=\"nx\">pin</span><span class=\"w\"> </span><span class=\"nx\">value</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">await</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"> </span><span class=\"s\">\"How is this?\"</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">await</span><span class=\"w\"> </span><span class=\"nx\">Stdin</span><span class=\"p\">.</span><span class=\"nx\">line</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">\"next\"</span><span class=\"w\"> </span><span class=\"k\">then</span>\n<span class=\"w\">        </span><span class=\"nv\">addressStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">toStr</span><span class=\"w\"> </span><span class=\"nx\">address</span>\n<span class=\"w\">        </span><span class=\"nv\">pinStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">toStr</span><span class=\"w\"> </span><span class=\"nx\">pin</span>\n<span class=\"w\">        </span><span class=\"nv\">valueStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">toStr</span><span class=\"w\"> </span><span class=\"nx\">value</span>\n<span class=\"w\">        </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"> </span><span class=\"s\">\"Set address \\(addressStr) and pin \\(pinStr) to value: \\(valueStr)\"</span>\n<span class=\"w\">    </span><span class=\"k\">else</span>\n<span class=\"w\">        </span><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">.</span><span class=\"nx\">toU16</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"o\">is</span>\n<span class=\"w\">            </span><span class=\"nx\">Ok</span><span class=\"w\"> </span><span class=\"nx\">v</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">setVal</span><span class=\"w\"> </span><span class=\"nx\">v</span><span class=\"w\"> </span><span class=\"nx\">address</span><span class=\"w\"> </span><span class=\"nx\">pin</span>\n<span class=\"w\">            </span><span class=\"nx\">Err</span><span class=\"w\"> </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">succeed</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n</code></pre></div>\n<p>But if I change that second to last line to <code>Ok _ -&gt; Task.succeed {}</code> then it compiles just fine</p>",
        "id": 327471354,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676268430
    },
    {
        "content": "<p>Yep, after doing more testing it seems to be that recursion causes this error. I get something similar from the following:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">main</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"nv\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">test</span>\n\n<span class=\"nv\">test</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">    </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">await</span><span class=\"w\"> </span><span class=\"nx\">Stdin</span><span class=\"p\">.</span><span class=\"nx\">line</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">\"done\"</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">succeed</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"nx\">test</span>\n</code></pre></div>\n<p>But if I change the recursive <code>test</code> call into <code>Task.succeed {}</code> it compiles just fine</p>",
        "id": 327472802,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676269152
    },
    {
        "content": "<p>Recursive calls are most definitely allowed! In a functional language, recursion is the only way to express loops. This is a compiler bug.<br>\nI've seen this before in my work on virtual DOM. There was some work on these bugs a while ago but I don't know the current status. <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> might be able to offer some insight.</p>",
        "id": 327487940,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1676276053
    },
    {
        "content": "<p>yeah stuff like this we’re actively trying to fix. I’ve been on a kick, but had to slow down for the past couple weeks for other priorities. I’ll diagnose this in the afternoon. Thanks for the report Nick!</p>",
        "id": 327558723,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1676297688
    },
    {
        "content": "<p>Okay, this was a really challenging bug.. took me all day <span aria-label=\"woozy face\" class=\"emoji emoji-1f974\" role=\"img\" title=\"woozy face\">:woozy_face:</span> but <a href=\"https://github.com/roc-lang/roc/pull/5028\">https://github.com/roc-lang/roc/pull/5028</a> should fix it</p>",
        "id": 327667896,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1676331928
    },
    {
        "content": "<p>Wooohoo! That was fast! Thanks so much for hopping on this right away Ayaz</p>",
        "id": 327668427,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676332203
    },
    {
        "content": "<p>That fix worked Ayaz! I'm no longer getting the error I was before. I have a new one though. Anybody know what would be causing this guy?</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;Error in alias analysis: error in module ModName(&quot;UserApp&quot;), function definition FuncName(&quot;\\x04\\x00\\x00\\x00\\x18\\x00\\x00\\x00j3\\x1e\\x91C\\xfb\\x16K&quot;): expected type &#39;union { ((),), ((),) }&#39;, found type &#39;()&#39;&#39;, crates/compiler/gen_llvm/src/llvm/build.rs:4748:19\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 327688216,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676347185
    },
    {
        "content": "<p>I definitely seen that plenty of times. assuming <code>roc check</code> doesn't give a solution, these can be annoying to debug. I think I often resort to commenting out code to try and figure out what caused the issue. Maybe someone else has better advice.</p>",
        "id": 327688507,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1676347395
    },
    {
        "content": "<p>Ya unfortunately <code>roc check</code> gives nothing. I’ll give that a try, thanks</p>",
        "id": 327689116,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676347860
    },
    {
        "content": "<p>Do you have a debug build of the compiler? If so could you try running roc with the env var ROC_CHECK_IR=1 set and let us know if there is any output?</p>",
        "id": 327691083,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1676349874
    },
    {
        "content": "<p>That gave the same error. So maybe I don’t have the debug build? How would I know? I built the compiler from source</p>",
        "id": 327798341,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676387139
    },
    {
        "content": "<p>try <code>ROC_CHECK_MONO_IR</code></p>",
        "id": 327798696,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1676387210
    },
    {
        "content": "<p>you'd need to build from source without passing <code>--release</code> to cargo</p>",
        "id": 327798847,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1676387237
    },
    {
        "content": "<p>that is the default, so probably your build is good</p>",
        "id": 327798905,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1676387252
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/Nzi28q7EA4Dpy40hkhMxcmLU/CFC3F0FE-2626-4642-84B5-90386CF6E7B9.jpg\">CFC3F0FE-2626-4642-84B5-90386CF6E7B9.jpg</a><br>\nSame thing. Am I doing this right?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/Nzi28q7EA4Dpy40hkhMxcmLU/CFC3F0FE-2626-4642-84B5-90386CF6E7B9.jpg\" title=\"CFC3F0FE-2626-4642-84B5-90386CF6E7B9.jpg\"><img src=\"/user_uploads/22008/Nzi28q7EA4Dpy40hkhMxcmLU/CFC3F0FE-2626-4642-84B5-90386CF6E7B9.jpg\"></a></div>",
        "id": 327802675,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676388095
    },
    {
        "content": "<p>hmm, maybe that printing only happens after alias analysis?</p>",
        "id": 327803038,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1676388178
    },
    {
        "content": "<p>try it without <code>--optimize</code>?</p>",
        "id": 327803509,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1676388277
    },
    {
        "content": "<p>Same thing<br>\n<a href=\"/user_uploads/22008/D1rpW_DLecXvsgwPrdftxy8r/2E9CE00A-BDFB-4D1B-9C17-A52DF0F096EB.jpg\">2E9CE00A-BDFB-4D1B-9C17-A52DF0F096EB.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/D1rpW_DLecXvsgwPrdftxy8r/2E9CE00A-BDFB-4D1B-9C17-A52DF0F096EB.jpg\" title=\"2E9CE00A-BDFB-4D1B-9C17-A52DF0F096EB.jpg\"><img src=\"/user_uploads/22008/D1rpW_DLecXvsgwPrdftxy8r/2E9CE00A-BDFB-4D1B-9C17-A52DF0F096EB.jpg\"></a></div>",
        "id": 327816291,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676391491
    },
    {
        "content": "<p>I think I’m starting to figure it out though. If I comment out one of the platform functions that I added it goes away, so I must have messed something up there</p>",
        "id": 327816448,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676391536
    },
    {
        "content": "<p>He has the custom low memory profile, so that probably blocks it. He would have to enable debug asserts in the profile and recompile</p>",
        "id": 327867159,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1676406320
    },
    {
        "content": "<p>How do I do that?</p>",
        "id": 327870173,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676407522
    },
    {
        "content": "<p><a href=\"https://doc.rust-lang.org/cargo/reference/profiles.html#debug-assertions\">https://doc.rust-lang.org/cargo/reference/profiles.html#debug-assertions</a></p>",
        "id": 327884613,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1676413180
    },
    {
        "content": "<p>I think you just add <code>debug-assertions = true</code> under the profile on cargo.toml. of course this will lead to a full recompile.</p>",
        "id": 327884755,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1676413224
    },
    {
        "content": "<p>So will be really slow</p>",
        "id": 327884790,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1676413236
    },
    {
        "content": "<p>Ok, I've finally narrowed down the issue. This fails with the previously mentioned error:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">main</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"nv\">main</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">    </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">await</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">Pca9685</span><span class=\"p\">.</span><span class=\"nx\">setPinOffTicks</span><span class=\"w\"> </span><span class=\"mh\">0x0040</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">500</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">attempt</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">Pca9685</span><span class=\"p\">.</span><span class=\"nx\">setPrescale</span><span class=\"w\"> </span><span class=\"mh\">0x0040</span><span class=\"w\"> </span><span class=\"mi\">121</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">succeed</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n</code></pre></div>\n<p>But if I comment out either of the lines with the <code>Pca9685</code> call then it works, it just doesn't seem to like them both in the same file.<br>\nSuuupuer weird, any idea why that might be?</p>",
        "id": 327885028,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676413350
    },
    {
        "content": "<p>what do <code>setPinOffTicks</code>/setPrescale look like?</p>",
        "id": 327886248,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1676413897
    },
    {
        "content": "<p>Could you try running with <code>ROC_PRINT_IR_AFTER_SPECIALIZATION=1</code> and dump what you get out into a gist? that might help too</p>",
        "id": 327886354,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1676413926
    },
    {
        "content": "<p>Here's the code for those <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> <br>\n<a href=\"https://github.com/Billzabob/roc-clock/blob/main/src/Pca9685.roc#L18-L31\">https://github.com/Billzabob/roc-clock/blob/main/src/Pca9685.roc#L18-L31</a><br>\nI'll add the debug-assertions to my Roc build and try that flag. Could be a bit though since it usually takes almost an hour to compile from scratch</p>",
        "id": 327896136,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676418319
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/ZuXjrIKLYXGQ62RvYO9LvsSm/CBE7FB8F-1A19-4529-BD66-95C3DF8641FF.jpg\">CBE7FB8F-1A19-4529-BD66-95C3DF8641FF.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/ZuXjrIKLYXGQ62RvYO9LvsSm/CBE7FB8F-1A19-4529-BD66-95C3DF8641FF.jpg\" title=\"CBE7FB8F-1A19-4529-BD66-95C3DF8641FF.jpg\"><img src=\"/user_uploads/22008/ZuXjrIKLYXGQ62RvYO9LvsSm/CBE7FB8F-1A19-4529-BD66-95C3DF8641FF.jpg\"></a></div>",
        "id": 327906688,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676424282
    },
    {
        "content": "<p>Is this useful?</p>",
        "id": 327906699,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676424288
    },
    {
        "content": "<p>Guessing this means something is messed up in my I2c module?</p>",
        "id": 327907207,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676424689
    },
    {
        "content": "<p>Yes, that’s super useful!! Nice, thanks!</p>",
        "id": 327907932,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1676425289
    },
    {
        "content": "<p>Not sure if this helps Ayaz, but I was able to finally figure out that it seemed to be caused by a call to <code>Task.fromResult</code>. I changed it from this:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"w\">    </span><span class=\"c1\"># ...</span>\n<span class=\"w\">    </span><span class=\"nx\">bytes</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">await</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">I2c</span><span class=\"p\">.</span><span class=\"nx\">readBytes</span><span class=\"w\"> </span><span class=\"nx\">address</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">fromResult</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"w\"> </span><span class=\"nx\">bytes</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>To just doing this for now:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"w\">    </span><span class=\"c1\">#...</span>\n<span class=\"w\">    </span><span class=\"nx\">bytes</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">await</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">I2c</span><span class=\"p\">.</span><span class=\"nx\">readBytes</span><span class=\"w\"> </span><span class=\"nx\">address</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"nx\">bytes</span><span class=\"w\"> </span><span class=\"o\">is</span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"nx\">h</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">..]</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">h</span>\n<span class=\"w\">        </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<p>It's obviously not as good this way, but it gets me past this bug for now and hopefully gives you some more useful info.</p>",
        "id": 327928361,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676440595
    },
    {
        "content": "<p>Thanks Nick. I have a hypothesis for what this is, will try to validate it later in the week. Thanks for all for your help here and work through the compiler bugs!</p>",
        "id": 327928761,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1676440861
    }
]