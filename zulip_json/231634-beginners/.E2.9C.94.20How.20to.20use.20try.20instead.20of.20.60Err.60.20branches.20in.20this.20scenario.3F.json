[
    {
        "content": "<p>I'm trying to wrap my head around how results work, and how to work with them less verbosely. The <a href=\"https://github.com/roc-lang/examples/blob/main/examples/Results/main.roc\">results example</a> is very helpful, but I still can't connect the dots in the CLI program below, which shows a menu of options and takes user input until a valid option number is inputted. (It actually doesn't compile due to a compiler bug, but that's not my question; I'll file the bug.)</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">pf</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">platform</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Stdout</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Stdin</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">getChoice</span>\n\n<span class=\"nv\">options</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"parse\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"validate\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"analyze\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"analyze and correct\"</span><span class=\"p\">]</span>\n\n<span class=\"nv\">exitInputs</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"e\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"exit\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"q\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"quit\"</span><span class=\"p\">]</span>\n\n<span class=\"nv\">menu</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"nv\">options</span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">mapWithIndex</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">option</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">index</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"s\">\"$(Num.toStr (index + 1)). $(option)\"</span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">joinWith</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span>\n\n<span class=\"nv\">getChoice</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Please enter a number for an option below:</span><span class=\"se\">\\n\\n</span><span class=\"s\">$(menu)\"</span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">write</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">&gt; \"</span>\n<span class=\"w\">    </span><span class=\"nv\">choice</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Stdin</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span>\n\n<span class=\"w\">    </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"nv\">exitInputs</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">contains</span><span class=\"w\"> </span><span class=\"nv\">choice</span><span class=\"w\"> </span><span class=\"kr\">then</span>\n<span class=\"w\">        </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"kr\">else</span>\n<span class=\"w\">        </span><span class=\"nv\">retry</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Oops, that's not an option.\"</span>\n<span class=\"w\">            </span><span class=\"nv\">getChoice</span>\n\n<span class=\"w\">        </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">toU64</span><span class=\"w\"> </span><span class=\"nv\">choice</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">            </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">choiceNum</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">options</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nv\">choiceNum</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">                    </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">option</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                        </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nv\">option</span>\n\n<span class=\"w\">                    </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">OutOfBounds</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">retry</span>\n\n<span class=\"w\">            </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">InvalidNumStr</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">retry</span>\n</code></pre></div>\n<p>The double <code>when</code> with <code>Ok</code> and <code>Err</code> isn't too bad in this simple example, but I want to write it differently just to practice the \"try\" style. The closest I've gotten is to change the <code>else</code> branch to this:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kr\">else</span>\n<span class=\"w\">        </span><span class=\"nv\">retry</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Oops, that's not an option.\"</span>\n<span class=\"w\">            </span><span class=\"nv\">getChoice</span>\n\n<span class=\"w\">        </span><span class=\"nv\">choiceNum</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">toU64</span><span class=\"w\"> </span><span class=\"nv\">choice</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"nf\">.</span><span class=\"nv\">mapErr</span><span class=\"err\">?</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">retry</span>\n<span class=\"w\">        </span><span class=\"nv\">option</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"nv\">options</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nv\">choiceNum</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"nf\">.</span><span class=\"nv\">mapErr</span><span class=\"err\">?</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">retry</span>\n\n<span class=\"w\">        </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nv\">option</span>\n</code></pre></div>\n<p>But that gives me a type mismatch error, saying that the first branch has the type <code>Task {} *</code> and the <code>else</code> branch has a <code>Result</code> type.</p>\n<p>Ideally I'm looking for how to avoid the repeated error handling altogether, and do something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kr\">else</span>\n<span class=\"w\">        </span><span class=\"nv\">retry</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Oops, that's not an option.\"</span>\n<span class=\"w\">            </span><span class=\"nv\">getChoice</span>\n\n<span class=\"w\">        </span><span class=\"nv\">option</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"nv\">options</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">toU64</span><span class=\"w\"> </span><span class=\"nv\">choice</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"nf\">.</span><span class=\"nv\">mapErr</span><span class=\"err\">?</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">retry</span>\n\n<span class=\"w\">        </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nv\">option</span>\n</code></pre></div>\n<p>But that gives me yet another type mismatch error in the value of <code>option</code>.</p>\n<p>Any pointers would be much appreciated.</p>",
        "id": 469752762,
        "sender_full_name": "Felipe Vogel",
        "timestamp": 1726166055
    },
    {
        "content": "<p>Not at my computer, but two immediate thoughts:</p>\n<ol>\n<li><code>getChoice</code> probably needs to be a function work correctly with the recursive definitions</li>\n<li>Something like Task.loop would probably help here.</li>\n</ol>",
        "id": 469760879,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726168437
    },
    {
        "content": "<ol start=\"3\">\n<li><code>Result.try</code> and <code>Result.map</code> are your friend to avoid the nested error handling.</li>\n</ol>",
        "id": 469761041,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726168485
    },
    {
        "content": "<p>Let me grab a laptop to give a better answer</p>",
        "id": 469761127,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726168514
    },
    {
        "content": "<p>I might do something like this, but not fully sold, feel like there is more cleanup here to do:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>code</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">pf</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">platform</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Stdout</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Stdin</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">getChoice</span>\n\n<span class=\"nv\">options</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"parse\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"validate\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"analyze\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"analyze and correct\"</span><span class=\"p\">]</span>\n\n<span class=\"nv\">menu</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"nv\">options</span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">mapWithIndex</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">option</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">index</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"s\">\"$(Num.toStr (index + 1)). $(option)\"</span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">joinWith</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span>\n\n<span class=\"nv\">getChoice</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">loop</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Please enter a number for an option below:</span><span class=\"se\">\\n\\n</span><span class=\"s\">$(menu)\"</span>\n<span class=\"w\">        </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">write</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">&gt; \"</span>\n<span class=\"w\">        </span><span class=\"nv\">choice</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Stdin</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span>\n\n<span class=\"w\">        </span><span class=\"nv\">optionRes</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"nv\">choiceNum</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">toU64</span><span class=\"err\">?</span><span class=\"w\"> </span><span class=\"nv\">choice</span>\n<span class=\"w\">            </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nv\">options</span><span class=\"w\"> </span><span class=\"nv\">choiceNum</span>\n\n<span class=\"w\">        </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">choice</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">optionRes</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"e\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">|</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"s\">\"exit\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">|</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"s\">\"q\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">|</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"s\">\"quit\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Done</span><span class=\"w\"> </span><span class=\"p\">{})</span>\n\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nv\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">option</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nv\">option</span>\n<span class=\"w\">                </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Done</span><span class=\"w\"> </span><span class=\"p\">{})</span>\n\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nv\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Oops, that's not an option.\"</span>\n<span class=\"w\">                </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Step</span><span class=\"w\"> </span><span class=\"p\">{})</span>\n</code></pre></div>\n</div></div>\n<p>Edit: made it a bit better.</p>",
        "id": 469763521,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726169365
    },
    {
        "content": "<p>If you specifically want to mix Results and Task in the \"try\" style, I think that you probably should convert the results to tasks via <code>Task.fromResult</code>.</p>\n<p>Something roughly like:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kr\">else</span>\n<span class=\"w\">        </span><span class=\"nv\">retry</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Oops, that's not an option.\"</span>\n<span class=\"w\">            </span><span class=\"nv\">getChoice</span>\n\n<span class=\"w\">        </span><span class=\"nv\">choiceNum</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">toU64</span><span class=\"w\"> </span><span class=\"nv\">choice</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">fromResult</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">onErr</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">retry</span>\n<span class=\"w\">        </span><span class=\"nv\">option</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"nv\">options</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nv\">choiceNum</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">fromResult</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">onErr</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">retry</span>\n\n<span class=\"w\">        </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nv\">option</span>\n</code></pre></div>\n<p>That said, I don't expect that to compile today. I think to make this work today, <code>Task.loop</code> is required.</p>",
        "id": 469764972,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726169893
    },
    {
        "content": "<p>Thank you! I ran across the <code>Task.loop</code> example too, but I thought, <em>\"I don't think I need this because I won't be passing state between iterations. So I'll just call <code>getChoice</code> recursively.\"</em> But now I see that I can just pass an empty record.</p>\n<p>I like your suggestion better than anything compilable that I've come up with, but I still wanted to take a stab at a solution that doesn't use <code>Task.loop</code> and this is the best I could get:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">pf</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">platform</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Stdout</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Stdin</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">getChoice</span>\n\n<span class=\"nv\">options</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"parse\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"validate\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"analyze\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"analyze and correct\"</span><span class=\"p\">]</span>\n\n<span class=\"nv\">exitInputs</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"e\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"exit\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"q\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"quit\"</span><span class=\"p\">]</span>\n\n<span class=\"nv\">menu</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"nv\">options</span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">mapWithIndex</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">option</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">index</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"s\">\"$(Num.toStr (index + 1)). $(option)\"</span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">joinWith</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span>\n\n<span class=\"nv\">retry</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Oops, that's not an option.\"</span>\n<span class=\"w\">    </span><span class=\"nv\">getChoice</span>\n\n<span class=\"nv\">getChoice</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Please enter a number for an option below:</span><span class=\"se\">\\n\\n</span><span class=\"s\">$(menu)\"</span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">write</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">&gt; \"</span>\n<span class=\"w\">    </span><span class=\"nv\">choice</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Stdin</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span>\n\n<span class=\"w\">    </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"nv\">exitInputs</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">contains</span><span class=\"w\"> </span><span class=\"nv\">choice</span><span class=\"w\"> </span><span class=\"kr\">then</span>\n<span class=\"w\">        </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"kr\">else</span>\n<span class=\"w\">        </span><span class=\"nv\">optionRes</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"nv\">choiceNum</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">toU64</span><span class=\"err\">?</span><span class=\"w\"> </span><span class=\"nv\">choice</span>\n<span class=\"w\">            </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nv\">options</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">choiceNum</span><span class=\"w\"> </span><span class=\"nf\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"w\">        </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">optionRes</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">            </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">option</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nv\">option</span>\n<span class=\"w\">            </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">retry</span>\n</code></pre></div>\n<p>There are some things I don't like about it, which boil down to: I wish I could just do the operations I need to do and stick a <code>|&gt; Result.mapErr</code> at the end of the pipeline where any errors can be produced, as in this example which I know is incorrect and produces a bunch of errors:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kr\">else</span>\n<span class=\"w\">        </span><span class=\"nv\">option</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"nv\">options</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">toU64</span><span class=\"w\"> </span><span class=\"nv\">choice</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"nf\">.</span><span class=\"nv\">mapErr</span><span class=\"err\">?</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Oops, that's not an option.\"</span>\n<span class=\"w\">                    </span><span class=\"nv\">getChoice</span>\n\n<span class=\"w\">        </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nv\">option</span>\n</code></pre></div>\n<p>I know that's not how <code>Result.mapErr</code> or <code>Result</code> works, but is there any way I can approximate this style in a correct way?</p>\n<p>(I know this is not a recipe for very robust or self-documenting code; I'm just exploring possibilities for scripting, prototyping, etc.)</p>",
        "id": 469775257,
        "sender_full_name": "Felipe Vogel",
        "timestamp": 1726173052
    },
    {
        "content": "<p>Yeah, the issues of task and result not fully mixing. This all should change with some of the proposal in ideas rn. When task will go away and instead be represented by effectful functions returning results. That should make them mingle with result much better</p>",
        "id": 469775799,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726173263
    },
    {
        "content": "<p>Gotcha, I will keep an eye out then. Thanks for your help!</p>",
        "id": 469777679,
        "sender_full_name": "Felipe Vogel",
        "timestamp": 1726174079
    },
    {
        "content": "<p>Another question: instead of outputting the chosen option at the end of <code>getChoice</code>, how can I return it so that it can be used in <code>main</code>? In the code below I'm still just printing it out, but the goal later is to take different actions based on the chosen option.</p>\n<p>This is as far as I've gotten, but I'm getting a type mismatch error in <code>main</code>. I don't feel I understand Tasks or Results very well.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>code</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">pf</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">platform</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Stdout</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Stdin</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">getChoice</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">        </span><span class=\"kt\">Task</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Done</span><span class=\"w\"> </span><span class=\"kt\">Exit</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">        </span><span class=\"kt\">Task</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Done</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Choice</span><span class=\"w\"> </span><span class=\"nv\">option</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nv\">option</span>\n\n<span class=\"nv\">options</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"parse\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"validate\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"analyze\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"analyze and correct\"</span><span class=\"p\">]</span>\n\n<span class=\"nv\">menu</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"nv\">options</span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">mapWithIndex</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">option</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">index</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"s\">\"$(Num.toStr (index + 1)). $(option)\"</span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">joinWith</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span>\n\n<span class=\"nv\">getChoice</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">loop</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Please enter a number for an option below:</span><span class=\"se\">\\n\\n</span><span class=\"s\">$(menu)\"</span>\n<span class=\"w\">        </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">write</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">&gt; \"</span>\n<span class=\"w\">        </span><span class=\"nv\">choice</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Stdin</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span>\n\n<span class=\"w\">        </span><span class=\"nv\">optionRes</span><span class=\"w\"> </span><span class=\"nf\">=</span>\n<span class=\"w\">            </span><span class=\"nv\">choiceNum</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">toU64</span><span class=\"err\">?</span><span class=\"w\"> </span><span class=\"nv\">choice</span>\n<span class=\"w\">            </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nv\">options</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">choiceNum</span><span class=\"w\"> </span><span class=\"nf\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"w\">        </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">choice</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">optionRes</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"e\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">|</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"s\">\"exit\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">|</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"s\">\"q\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">|</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"s\">\"quit\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Done</span><span class=\"w\"> </span><span class=\"kt\">Exit</span><span class=\"p\">)</span>\n\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nv\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">option</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nv\">option</span>\n<span class=\"w\">                </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Done</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Choice</span><span class=\"w\"> </span><span class=\"nv\">option</span><span class=\"p\">))</span>\n\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nv\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Oops, that's not an option.\"</span>\n<span class=\"w\">                </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Step</span><span class=\"w\"> </span><span class=\"p\">{})</span>\n</code></pre></div>\n</div></div>",
        "id": 469782314,
        "sender_full_name": "Felipe Vogel",
        "timestamp": 1726176038
    },
    {
        "content": "<p>Ah yeah, you can simply match on a task. You have to await it and match on the result <code>getChoice!</code> and then match without the word <code>Task</code> and it should work I think</p>",
        "id": 469786342,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726177942
    },
    {
        "content": "<p>Thanks, that worked!</p>",
        "id": 469795457,
        "sender_full_name": "Felipe Vogel",
        "timestamp": 1726180896
    },
    {
        "content": "<p>I also struggled to get <code>Task</code> and <code>Result</code> to play nicely together. <code>Task.fromResult</code> was the key. But I still felt it was a bit weird to have both <code>Task</code> and <code>Result</code>, I'm very glad to read Brendan's comment about the idea of getting rid of <code>Task</code>. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 469824315,
        "sender_full_name": "Aurélien Geron",
        "timestamp": 1726195828
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"752978\">Felipe Vogel</span> has marked this topic as resolved.</p>",
        "id": 471062395,
        "sender_full_name": "Notification Bot",
        "timestamp": 1726598342
    }
]