[
    {
        "content": "<p>OK, so I've started to get things working on my windows machine.</p>\n<p>I have the following versions of stuff</p>\n<ol>\n<li>up to date on the main branch in the roc repo</li>\n<li>Installed zig 0.8.0</li>\n<li>python 2.7.4</li>\n<li>cargo 1.54.0</li>\n<li>installed llvm using the windows instructions here(<a href=\"https://github.com/rtfeldman/roc/blob/trunk/BUILDING_FROM_SOURCE.md#llvm-installation-on-windows\">https://github.com/rtfeldman/roc/blob/trunk/BUILDING_FROM_SOURCE.md#llvm-installation-on-windows</a>)</li>\n</ol>\n<p>Now running <code>cargo run repl</code> I get </p>\n<div class=\"codehilite\" data-code-language=\"compiling\"><pre><span></span><code>   Compiling num-traits v0.2.14\n   Compiling ahash v0.7.4\n   Compiling im-rc v14.3.0\nerror: failed to run custom build command for `roc_builtins v0.1.0 (C:\\Users\\Matthias\\Documents\\GitHub\\roc\\compiler\\builtins)`\n\nCaused by:\n  process didn't exit successfully: `C:\\Users\\Matthias\\Documents\\GitHub\\roc\\target\\debug\\build\\roc_builtins-7593273b6bf0ccc6\\build-script-build` (exit code: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n  cargo:rustc-env=BUILTINS_O=C:\\Users\\Matthias\\Documents\\GitHub\\roc\\target\\debug\\build\\roc_builtins-fc62ed947dc1042e\\out\\builtins.o\n  Compiling zig object to: \\\\?\\C:\\Users\\Matthias\\Documents\\GitHub\\roc\\compiler\\builtins\\bitcode\\builtins-64bit.o\n\n  --- stderr\n  thread 'main' panicked at 'zig failed: error: BadPathName\n  ', compiler\\builtins\\build.rs:115:17\n  stack backtrace:\n     0: std::panicking::begin_panic_handler\n               at /rustc/a178d0322ce20e33eac124758e837cbd80a6f633\\/library\\std\\src\\panicking.rs:515\n     1: std::panicking::begin_panic_fmt\n               at /rustc/a178d0322ce20e33eac124758e837cbd80a6f633\\/library\\std\\src\\panicking.rs:457\n     2: build_script_build::run_command&lt;str*,[str; 3]*,std::path::PathBuf*&gt;\n               at .\\build.rs:115\n     3: build_script_build::main\n               at .\\build.rs:51\n     4: core::ops::function::FnOnce::call_once&lt;fn(),tuple&lt;&gt;&gt;\n               at /rustc/a178d0322ce20e33eac124758e837cbd80a6f633\\library\\core\\src\\ops\\function.rs:227\n  note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\n</code></pre></div>\n<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 251136652,
        "sender_full_name": "Matthew Griffith",
        "timestamp": 1630247883
    },
    {
        "content": "<p>Interesting. I bet the issue is coming from <code>fs::canonicalize(Path::new(\".\")).unwrap()</code><br>\nWhich on your windows machine is generating a path that starts with <code>\\\\?\\C:</code>. I think that path maybe throwing off zig even if rust seems capable to set it as the current directory path. That is at least my guess</p>",
        "id": 251137818,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1630249105
    },
    {
        "content": "<p>From the docs on the function:</p>\n<div class=\"codehilite\"><pre><span></span><code>On Windows, this converts the path to use extended length path syntax, which allows your program to use longer path names, but means you can only join backslash-delimited paths to it, and it may be incompatible with other applications (if passed to the application on the command-line, or written to a file another application may read).\n</code></pre></div>",
        "id": 251137871,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1630249184
    },
    {
        "content": "<p>oh, we should update those docs - the compiler currently doesn't work on Windows <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 251138204,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1630249492
    },
    {
        "content": "<p>would e.g. the repl work?</p>",
        "id": 251138286,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1630249565
    },
    {
        "content": "<p>that will change once the surgical linking project is done though!</p>",
        "id": 251138287,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1630249566
    },
    {
        "content": "<p>Ah, ok!  No worries, I can set it up on my other machine :D</p>",
        "id": 251138298,
        "sender_full_name": "Matthew Griffith",
        "timestamp": 1630249583
    },
    {
        "content": "<p>the repl used to with the llvm jit execution engine, but now it would need to know about dlls to work</p>",
        "id": 251138323,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1630249625
    },
    {
        "content": "<p>I suppose getting the repl to work isn't blocked on surgical linking <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 251139835,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1630251452
    },
    {
        "content": "<p>I was going to take another attempt at this tonight on my Ubuntu machine.  Safe to assume linux is fine for the compiler?</p>",
        "id": 251270034,
        "sender_full_name": "Matthew Griffith",
        "timestamp": 1630347079
    },
    {
        "content": "<p>Otherwise I can do my mac.  And if that doesn't work, there's always my old TI-83 calculator</p>",
        "id": 251270223,
        "sender_full_name": "Matthew Griffith",
        "timestamp": 1630347151
    },
    {
        "content": "<p>however I may be out of devices after that <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 251270272,
        "sender_full_name": "Matthew Griffith",
        "timestamp": 1630347177
    },
    {
        "content": "<p>linux is fine</p>",
        "id": 251270578,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1630347301
    },
    {
        "content": "<p>as is mac, mostly</p>",
        "id": 251270593,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1630347305
    },
    {
        "content": "<p>calculator though, not sure</p>",
        "id": 251270631,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1630347323
    },
    {
        "content": "<p>but apparently doom runs on landline phones these days so who knows</p>",
        "id": 251271165,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1630347542
    },
    {
        "content": "<p>I noticed some flaky gen tests on Mac recently, but otherwise everything seems fine</p>",
        "id": 251274293,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1630348794
    },
    {
        "content": "<p>we only have CI set up for Linux at the moment, so it's the most solid</p>",
        "id": 251274393,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1630348823
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"432590\">@Matthew Griffith</span> if you have mac issues, feel free to ping me</p>",
        "id": 251481285,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1630455678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"357305\">Lucas Rosa</span> <a href=\"#narrow/stream/231634-beginners/topic/Windows.20-.20Getting.20set.20up/near/251481285\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"432590\">Matthew Griffith</span> if you have mac issues, feel free to ping me</p>\n</blockquote>\n<p>Thanks! I will.</p>",
        "id": 251623724,
        "sender_full_name": "Matthew Griffith",
        "timestamp": 1630527954
    },
    {
        "content": "<p>Hi all. Does the compiler still not work on Windows? I was just starting to go through the <a href=\"https://github.com/rtfeldman/roc/blob/trunk/BUILDING_FROM_SOURCE.md\">Building from Source</a> page and it mentions Windows in the python spec, but it also lists <code>libxkbcommon</code> as a requirement. (I also noticed another message recently about someone using WSL, which made me wonder if normal Windows didn't work.) Thanks <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 257247803,
        "sender_full_name": "Luis Gutierrez",
        "timestamp": 1634062451
    },
    {
        "content": "<p>Is anyone up for a pairing/ensemble session to go through the Windows-or-WSL configuration? Maybe <span class=\"user-mention\" data-user-id=\"450091\">@Wolfgang Schuster</span>, though you seem to be a few steps ahead already.</p>",
        "id": 257248788,
        "sender_full_name": "Luis Gutierrez",
        "timestamp": 1634062849
    },
    {
        "content": "<p>WSL should work, and I expect <code>roc check</code> and <code>roc edit</code> should work on normal Windows (although I haven't checked recently, and we don't currently have any Windows CI machines), but actually building or running a roc program (or the repl) on windows doesn't currently work because we don't have linking working there yet</p>",
        "id": 257249118,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1634062971
    },
    {
        "content": "<p>we're currently in the process of overhauling how roc does linking; the new system works on Linux, and macOS development is partway there. Once it works on both of those and we've switched the compiler over to use it, then we can start on doing the same for linking Windows binaries and Web Assembly</p>",
        "id": 257249557,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1634063161
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>, thanks for the information.</p>",
        "id": 257250059,
        "sender_full_name": "Luis Gutierrez",
        "timestamp": 1634063372
    },
    {
        "content": "<p>certainly! And I'd be happy to pair on getting at least <code>roc check</code> and <code>roc edit</code> building on Windows, since we'll at a minimum need those to work before building programs can work</p>",
        "id": 257252920,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1634064576
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"448759\">@Luis Gutierrez</span> I'd be happy to pair on using WSL as well. It was fairly straight forward. The only issues I ran into were that I'd installed Zig well over a year ago and that wasn't working anymore, so I had to re-install, and it took me a moment to get llvm installed correctly. I'm only running in WSL because I find it easier than in Windows for most development.</p>",
        "id": 257255352,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1634065538
    },
    {
        "content": "<p>I'm free around 6:30pm Central Time or later</p>",
        "id": 257255549,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1634065605
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"450091\">@Wolfgang Schuster</span>, thanks that would be great. I'll switch to DM to arrange the logistical details, but if anyone else is interested in joining too, let us know.</p>\n<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>, seems like there's maybe still value in doing the Windows (non-WSL) work for <code>roc check</code> and <code>roc edit</code> too, since that may be relevant for a different audience and maybe there's a need for some documentation about this more limited setup. If you agree, then I'll take you up on your pairing offer.</p>",
        "id": 257256480,
        "sender_full_name": "Luis Gutierrez",
        "timestamp": 1634065990
    }
]