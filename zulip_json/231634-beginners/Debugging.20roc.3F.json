[
    {
        "content": "<p>This is not something that's stopping me in my tracks. Just something that feels like I'm holding it wrong.<br>\nHow do you debug a roc function when it doesn't work as expected?</p>\n<p>My usual go-to is calling the function from a repl, but I can't figure out how to import roc files from a repl.<br>\nThe <code>expect</code> keyword is cool. But it doesn't tell me what the output actually was - just that it's wrong. (Not so useful)<br>\nThe <code>dbg</code> keyword seems to be completely broken? It panics every time, so maybe it's just not implemented yet?<br>\nThe only thing I can think of is turning everything into <code>Task</code>, and then doing the <code>Num.toStr |&gt; Stdout.line |&gt; Task.await</code> dance everytime.<br>\n...but it's a lot of cumbersome boilerplate and type-faffery just to get my eyes onto the result of a function call.</p>\n<p>Am I doing it wrong?<br>\nHow do I get to see the result of a function I wrote?<br>\nIdeally I'd like to just call my roc functions from a repl.<br>\nIs there something like <code>python -i</code> in Roc? Is it possible to import Roc code to the repl in any way?</p>",
        "id": 405353072,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701433836
    },
    {
        "content": "<p>Importing roc files form the repl is not yet supported.<br>\n<code>dbg</code> should work a whole lot better now with today's nightly and basic-cli 0.7.0</p>",
        "id": 405359485,
        "sender_full_name": "Anton",
        "timestamp": 1701436056
    },
    {
        "content": "<p>Hmm.. I'm on the very latest commit on roc <code>master</code> rn- and the compiler just panicks and says \"this is definitely a compiler bug\" whenever there is a <code>dbg</code> statement anywere. No matter where.</p>\n<p>I'll try updating to basic-cli 0.7.0, and see if that makes a difference.</p>\n<p>But I thought <code>dbg</code> was a language-specific thing, and not something implemented by the platform?</p>",
        "id": 405362235,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701436889
    },
    {
        "content": "<p>we recently changed that - basically now the platform is in charge of specifying where <code>dbg</code> gets written to - so, for example, if you're running a WebAssembly platform in the browser, it might be implemented using <code>console.log</code>, or in a VS Code extension it might show up in a developer console</p>",
        "id": 405362573,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701436986
    },
    {
        "content": "<p>but more relevantly here, the new way we're doing things fixes a bunch of bugs with the old implementation <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 405362632,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701437005
    },
    {
        "content": "<p>I have noticed that the \"this is definitely a compiler bug\" message gets logged a lot, for things that are user errors</p>",
        "id": 405363036,
        "sender_full_name": "Matthew Phillips",
        "timestamp": 1701437135
    },
    {
        "content": "<p><code>dbg</code> works once I've upgraded to basic-clli 0.7.0! yay thanks</p>",
        "id": 405363483,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701437277
    },
    {
        "content": "<p>I'm guessing the error was just because I was using a too-old platform for a too-new version of roc.</p>",
        "id": 405363597,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701437302
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"668654\">Matthew Phillips</span> <a href=\"#narrow/stream/231634-beginners/topic/Debugging.20roc.3F/near/405363036\">said</a>:</p>\n<blockquote>\n<p>I have noticed that the \"this is definitely a compiler bug\" message gets logged a lot, for things that are user errors</p>\n</blockquote>\n<p>I think in some cases the bug is that there should be a better error message</p>",
        "id": 405364006,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1701437433
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"489294\">Agus Zubiaga</span> <a href=\"#narrow/stream/231634-beginners/topic/Debugging.20roc.3F/near/405364006\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"668654\">Matthew Phillips</span> <a href=\"#narrow/stream/231634-beginners/topic/Debugging.20roc.3F/near/405363036\">said</a>:</p>\n<blockquote>\n<p>I have noticed that the \"this is definitely a compiler bug\" message gets logged a lot, for things that are user errors</p>\n</blockquote>\n<p>I think in some cases the bug is that there should be a better error message</p>\n</blockquote>\n<p>hah, fair point</p>",
        "id": 405364340,
        "sender_full_name": "Matthew Phillips",
        "timestamp": 1701437535
    },
    {
        "content": "<p>Yeah, that error generally happens when somewhere in the compile we don't yet handle a case or assumed something is impossible.</p>\n<p>Long term those should all either work or return pretty error message.</p>",
        "id": 405384221,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701443861
    },
    {
        "content": "<p>I reported an <a href=\"https://github.com/roc-lang/roc/issues/6097\">issue</a> the other day, noticed this thread, and upgraded the <code>basic-cli</code> but now I get what seems to be some macOS signing issue?</p>\n<div class=\"codehilite\"><pre><span></span><code>main: is already signed\n</code></pre></div>\n<p>I don't mean to press more on the issue, just added this here if it helps in any way :)</p>",
        "id": 405396388,
        "sender_full_name": "Johan Lindskogen",
        "timestamp": 1701447954
    },
    {
        "content": "<p>Are you using today's nightly release?</p>",
        "id": 405396650,
        "sender_full_name": "Anton",
        "timestamp": 1701448066
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/231634-beginners/topic/Debugging.20roc.3F/near/405396650\">said</a>:</p>\n<blockquote>\n<p>Are you using today's nightly release?</p>\n</blockquote>\n<p>I recompiled latest main from source</p>",
        "id": 405396731,
        "sender_full_name": "Johan Lindskogen",
        "timestamp": 1701448084
    },
    {
        "content": "<p>Strange, I'll try to reproduce</p>",
        "id": 405397287,
        "sender_full_name": "Anton",
        "timestamp": 1701448293
    },
    {
        "content": "<p>Failed to reproduce on NixOS, will try on macOS</p>",
        "id": 405400036,
        "sender_full_name": "Anton",
        "timestamp": 1701449157
    },
    {
        "content": "<p>Using expect works great for printing things out, if the test fails it prints the locally defined variables. So I like to do things like </p>\n<div class=\"codehilite\"><pre><span></span><code>expect\n    a = myfunc input\n    a == expectedValue\n</code></pre></div>\n<p>Here it will print out the value of <code>a</code></p>",
        "id": 405406941,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701451253
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> oooh I didn't realize you could do that. pretty dope!</p>",
        "id": 405537639,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701525705
    },
    {
        "content": "<p>We could update the tutorial section to make this clearer by including the output for the example, and I think it would be helpful to mention it and link to the \"tests and expectations\" section in the \"debugging\" section</p>",
        "id": 405562011,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701546913
    },
    {
        "content": "<p>For sure. I found myself a bit frustrated at not having exactly this ability - but then it was just in there! <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span></p>",
        "id": 405562324,
        "sender_full_name": "Asbjørn Olling",
        "timestamp": 1701547202
    },
    {
        "content": "<p><code>dbg</code> just isn't printing anything for me with <code>basic-cli</code> 0.7.0. Am I doing something wrong?</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>app \"dbg\"\n    packages { pf: \"https://github.com/roc-lang/basic-cli/releases/download/0.7.0/bkGby8jb0tmZYsy2hg1E_B2QrCgcSTxdUlHtETwm5m4.tar.br\" }\n    imports [pf.Stdout, pf.Task.{ Task }]\n    provides [main] to pf\n\nmain : Task {} I32\nmain =\n    dbg \"hello\"\n    Stdout.line \"world\"\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>roc<span class=\"w\"> </span>run<span class=\"w\"> </span>dbg.roc\n<span class=\"go\">world</span>\n</code></pre></div>",
        "id": 406630053,
        "sender_full_name": "timotree",
        "timestamp": 1701987382
    },
    {
        "content": "<p>oh it's <code>roc dev</code> instead</p>",
        "id": 406630125,
        "sender_full_name": "timotree",
        "timestamp": 1701987428
    },
    {
        "content": "<p>Is there a reason <code>dbg</code> is disabled for <code>roc run</code>? They both don't seem to use optimizations by default</p>",
        "id": 406630199,
        "sender_full_name": "timotree",
        "timestamp": 1701987467
    },
    {
        "content": "<p>I agree, I've found this is a little confusing. I've started an <a href=\"#narrow/stream/304641-ideas/topic/Roc.20cli.20workflow/near/406632998\">idea discussion</a> to maybe clarify what these mean.</p>",
        "id": 406633045,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701989025
    }
]