[
    {
        "content": "<p>I have some questions about backpassing:</p>\n<ul>\n<li>I saw that \"multiple things\" could be returned from a single backpass. Is this syntactic sugar on pattern matching a tuple, or something special?</li>\n<li>Are arbitrary pattern matches supported? (If so, what happens if they fail?)</li>\n</ul>",
        "id": 286373073,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655394619
    },
    {
        "content": "<p>backpassing is syntactic sugar for lambdas</p>",
        "id": 286375458,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655395613
    },
    {
        "content": "<p>so you can do anything with them that you could do with a lambda, and vice versa</p>",
        "id": 286375477,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655395623
    },
    {
        "content": "<p>so for example, these desugar to the same thing:</p>\n<div class=\"codehilite\"><pre><span></span><code>foo bar baz (\\arg1, arg2, arg3 -&gt; blah blah)\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>arg1, arg2, arg3 &lt;- foo bar baz\n\nblah blah\n</code></pre></div>",
        "id": 286375593,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655395680
    },
    {
        "content": "<p>backpassing is sort of like \"writing the lambda backwards\"</p>",
        "id": 286375696,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655395708
    },
    {
        "content": "<p>the feature doesn't do anything other than being syntactic sugar for a lambda</p>",
        "id": 286375808,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655395767
    },
    {
        "content": "<p>and within an arg, you can have a pattern, but that must be exhaustive</p>",
        "id": 286375814,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1655395776
    },
    {
        "content": "<p>right, same as a lambda</p>",
        "id": 286375832,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655395783
    },
    {
        "content": "<p>Thanks a lot! Makes a lot of sense.<br>\n(And sidestepping the whole 'MonadFail' debacle is probably a smart choice <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> )</p>",
        "id": 286416150,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655414934
    },
    {
        "content": "<p>Can I describe “backpassing” as “do-notation for continuation-passing-style?”</p>",
        "id": 327175975,
        "sender_full_name": "James Brock",
        "timestamp": 1676078450
    },
    {
        "content": "<p>Maybe not because backpassing only allows for one continuation.</p>",
        "id": 327176307,
        "sender_full_name": "James Brock",
        "timestamp": 1676078768
    }
]