[
    {
        "content": "<p>Is a function that maps a Result to a Task in <code>cli-platform</code>? I would imagine there would be one that maps <code>Ok</code> to <code>Task.succeed</code> and <code>Err</code> to <code>Task.fail</code>.</p>",
        "id": 302972159,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665210821
    },
    {
        "content": "<p>I am pretty sure the answer is currently no, but it probably should be sdded</p>",
        "id": 302972729,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665211283
    },
    {
        "content": "<p>Something like:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">fromResult</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">result</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"nx\">result</span><span class=\"w\"> </span><span class=\"o\">is</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">Ok</span><span class=\"w\"> </span><span class=\"nx\">x</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">succeed</span><span class=\"w\"> </span><span class=\"nx\">x</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">Err</span><span class=\"w\"> </span><span class=\"nx\">e</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Task</span><span class=\"p\">.</span><span class=\"nx\">fail</span><span class=\"w\"> </span><span class=\"nx\">e</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 302972849,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1665211382
    },
    {
        "content": "<p>sounds reasonable! If anyone would like to make a PR to add it, here's the file where it would go:</p>\n<p><a href=\"https://github.com/roc-lang/roc/blob/main/examples/interactive/cli-platform/Task.roc\">https://github.com/roc-lang/roc/blob/main/examples/interactive/cli-platform/Task.roc</a></p>",
        "id": 302972969,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665211464
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> would it be better to put it in <a href=\"https://github.com/roc-lang/roc/blob/main/examples/interactive/cli-platform/InternalTask.roc\">https://github.com/roc-lang/roc/blob/main/examples/interactive/cli-platform/InternalTask.roc</a>? Since <code>fromEffect</code>also sits there...</p>",
        "id": 302974036,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665212440
    },
    {
        "content": "<p>The tutorial says Tasks have two type params (<code>Task {} *</code>), but the definitions in <code>Task.roc</code> all have three - <code>Task ok err fx</code>. What is this fx?</p>",
        "id": 302974199,
        "sender_full_name": "Prajwal S N",
        "timestamp": 1665212578
    },
    {
        "content": "<p>No, fromEffect is an internal function that users shouldn't directly access. Roc has managed effects so they are treated very specially.<br>\nThis new fromResult function is very different. It has nothing to do with effects and there is no reason to make it internal.</p>",
        "id": 302983397,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1665218792
    },
    {
        "content": "<p>Regarding <code>fx</code>, the docs should be updated to include this.</p>\n<p>Each different effect in the platform has its own tag that goes in this part of the type.</p>\n<p>So the type system is able to keep track of which effects are used in which parts of the app code. This is useful information for the app developer. If some effect goes wrong, you can find the problem easily.</p>",
        "id": 302983886,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1665219104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>, I can take that on. The only documentation one adds to the platform is the comment above the function definition? Are there other places to add documention for a platform's API?</p>",
        "id": 303005214,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665229585
    },
    {
        "content": "<p>you're correct - that's the only place!</p>",
        "id": 303016829,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665234851
    },
    {
        "content": "<p>Here's the PR:<br>\n<a href=\"https://github.com/roc-lang/roc/pull/4265\">https://github.com/roc-lang/roc/pull/4265</a></p>",
        "id": 303078365,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1665277226
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"551608\">Chris Duncan</span> has marked this topic as resolved.</p>",
        "id": 303132698,
        "sender_full_name": "Notification Bot",
        "timestamp": 1665321355
    }
]