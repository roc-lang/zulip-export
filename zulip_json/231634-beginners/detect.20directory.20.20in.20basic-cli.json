[
    {
        "content": "<p>I want to detect that something  is  directory in  basic  cli I figured  out  that  I will list  it,  but  this  does not work for  empty  directories  because  usual  content  \"..\"  \".\"  is not there</p>",
        "id": 410167113,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1703689836
    },
    {
        "content": "<p>Yeah, we should create a function for this, I'll create a topic in the ideas stream for discussion.</p>",
        "id": 410169932,
        "sender_full_name": "Anton",
        "timestamp": 1703691226
    },
    {
        "content": "<p>For now you can use  the unix command <code>test -d dirOrFilePath</code> through <code>Cmd</code></p>",
        "id": 410170263,
        "sender_full_name": "Anton",
        "timestamp": 1703691393
    },
    {
        "content": "<p>ok  thx  for  tips</p>",
        "id": 410172178,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1703692426
    },
    {
        "content": "<p>I made <a href=\"https://github.com/roc-lang/basic-cli/issues/145\">issue 145</a> for the new functions to be added.</p>",
        "id": 410404396,
        "sender_full_name": "Anton",
        "timestamp": 1703838120
    },
    {
        "content": "<p>it  does not work for me it is suggested to  do this </p>\n<div class=\"codehilite\"><pre><span></span><code>test -f file; echo $?\n</code></pre></div>\n<p>but $? can't be understood</p>",
        "id": 410475907,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1703882147
    },
    {
        "content": "<p>in general  test  gives no visible output like  ls  and others</p>",
        "id": 410475972,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1703882176
    },
    {
        "content": "<p>If I understand you correctly - <code>test</code> returns a truthy or falsy value which can be chained with &amp;&amp;, for example; and <code>$?</code> resolves to the return value of the latest executed command, in this case - <code>test</code></p>",
        "id": 410477993,
        "sender_full_name": "Karakatiza",
        "timestamp": 1703883626
    },
    {
        "content": "<p>yes  and I think that's the problem because I do not get typical  output to console</p>",
        "id": 410478111,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1703883695
    },
    {
        "content": "<p>I just realized Cmd module does not return program result value <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 410478547,
        "sender_full_name": "Karakatiza",
        "timestamp": 1703883921
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> regarding  <a href=\"https://github.com/roc-lang/basic-cli/issues/145\">145</a> - would it make sense to have <code>isADir : Path -&gt; [IsDir, Other]</code> and so on, to have a version consistent with <code>type</code>?</p>",
        "id": 410478584,
        "sender_full_name": "Karakatiza",
        "timestamp": 1703883961
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"568088\">@Artur Swiderski</span> for <code>test -f</code> you need to use the <a href=\"https://www.roc-lang.org/packages/basic-cli/0.7.1/Cmd#status\"><code>Cmd.status</code> function</a>. <code>test -f fileOrDir</code> returns with exit code 0 if  <code>fileOrDir</code> is a file and with exit code 1 if it is not a file. The status function will return a success task if the exit code was 0 and an error task if not. You can use <code>Task.attempt</code> to pattern match on the <code>Result</code>.</p>",
        "id": 410527511,
        "sender_full_name": "Anton",
        "timestamp": 1703927800
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> regarding  <a href=\"https://github.com/roc-lang/basic-cli/issues/145\">145</a> - would it make sense to have <code>isADir : Path -&gt; [IsDir, Other]</code> and so on, to have a version consistent with <code>type</code>?</p>\n</blockquote>\n<p>Do you mean in addition to the proposed <code>isDir</code> or instead of it?</p>",
        "id": 410527608,
        "sender_full_name": "Anton",
        "timestamp": 1703927880
    },
    {
        "content": "<p>In addition - as having just Bool functions is useful, too<br>\nThis way, the same function will be able to be used in different contexts, something like:<br>\n<code>\nlogDirectory = \\ elem -&gt; when elem is\n   IsDir -&gt; Log.writeLine \"encountered \\(dirname)\"\n  _ -&gt; Task.ok\n...\ntype pathA |&gt; logDirectory\nisDir pathB |&gt; logDirectory\n</code><br>\nDon't know how common a usecase this would be.<br>\nBut the Bool one is more important anyway.</p>\n<p>Also, then it would make sense to swap the names:<br>\nisDir: Path -&gt; [IsDir, Other]<br>\nisADir: Path -&gt; Bool</p>",
        "id": 410546420,
        "sender_full_name": "Karakatiza",
        "timestamp": 1703943823
    },
    {
        "content": "<blockquote>\n<p>Don't know how common a usecase this would be.</p>\n</blockquote>\n<p>I think it's wise to wait until there is demand in this case.</p>",
        "id": 410548680,
        "sender_full_name": "Anton",
        "timestamp": 1703945781
    },
    {
        "content": "<p>ok below works for me</p>\n<div class=\"codehilite\"><pre><span></span><code>isDirectoryPath : Str -&gt; Task Bool  *\nisDirectoryPath = \\ str -&gt;\n    command =\n        Cmd.new &quot;test&quot;\n        |&gt; Cmd.args [&quot;-d&quot;,  str]\n\n    result &lt;- Cmd.status  command |&gt; Task.attempt\n    when result is\n        Ok out -&gt;\n            Task.ok Bool.true\n        Err _ -&gt;\n            Task.ok Bool.false\n</code></pre></div>",
        "id": 410658795,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1704055189
    }
]