[
    {
        "content": "<p>I used Python to serve the file over https locally, but the <code>roc run</code> command fails with </p>\n<div class=\"codehilite\"><pre><span></span><code>I was trying to download this URL:\n\n    https://localhost:8000/azbw4D7cGxjGDA_j1a1-7TDJFRf11vbFM0cd0gTAEgc.tar.br\n\nBut I encountered a network error:\n\n    error sending request for url (https://localhost:8000/azbw4D7cGxjGDA_j1a1-7TDJFRf11vbFM0cd0gTAEgc.tar.br): error trying to connect: invalid peer certificate: Other(CaUsedAsEndEntity)\n</code></pre></div>\n<p>Is there any way to run my program without having to host it on GitHub?</p>",
        "id": 404735789,
        "sender_full_name": "mainrs",
        "timestamp": 1701213143
    },
    {
        "content": "<p>Probably an issue with using <code>https</code> instead of <code>http</code>?</p>",
        "id": 404735859,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701213184
    },
    {
        "content": "<p>Also, you shouldn't need to bundle a platform to use it locally. Roc can also refer to the <code>main.roc</code> file in a platform and use that locally. If you don't want it to try and build the platform, you can add <code>--precompiled-platform</code></p>",
        "id": 404736062,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701213288
    },
    {
        "content": "<p>How do I refer my custom platform in my script? Let's say my main platform file is under <code>platform/main.roc</code> and my script I want to run is under <code>examples/logging.roc</code>. I then issue the command <code>roc run ./examples/logging.roc</code>.</p>",
        "id": 404736546,
        "sender_full_name": "mainrs",
        "timestamp": 1701213570
    },
    {
        "content": "<p>Ahhh, getting the file paths correct is a pain. It throw some weird error and I thought it only works on https.<br>\nThe correct path is './api/main.roc'</p>",
        "id": 404736787,
        "sender_full_name": "mainrs",
        "timestamp": 1701213708
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"670801\">mainrs</span> has marked this topic as resolved.</p>",
        "id": 404736790,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701213712
    },
    {
        "content": "<p>When I want to test a <code>.tar.br</code> I usually just make a fork, create a release, and upload the file on GH. Easy enough to remove once I'm done testing. I'm not sure if there is a better way, but this has been working for me.</p>",
        "id": 404737279,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701213968
    }
]