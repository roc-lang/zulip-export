[
    {
        "content": "<p>There are currently some issues, that make it practically impossible to bundle a wasm platform.</p>\n<p>roc currently uses zig 0.9.1 which has a bug, that the <code>zig-cache</code> has to be removed manually: <a href=\"https://github.com/ziglang/zig/issues/12864\">https://github.com/ziglang/zig/issues/12864</a></p>\n<p>It is not possible to build a platform with a different version of zig.</p>\n<p>roc can currently not use a \"binary\"-platform, but has to rebuild it every time. By doing it, it creates a folder `$HOME/.cache/roc/packages/example.com/SOME_HASH/zig-cache that has to be removed manually.</p>\n<p>Can you think of any workaround how a wasm platform could currently be bundled? I tried to set <code>--cache-dir /dev/null</code> in <code>link.rs</code>. But zig expects a directory and not a file.</p>\n<p>Do you plan to upgrade the zig version in the near future?</p>",
        "id": 369133426,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1687601350
    },
    {
        "content": "<blockquote>\n<p>It is not possible to build a platform with a different version of zig.</p>\n</blockquote>\n<p>Really? Why not?</p>",
        "id": 369224857,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687623581
    },
    {
        "content": "<p>Oh, actually, I think I have a guess. It is probably cause we currently bundle some of the code to zig automatically for convenience and it is in zig 0.9.1.</p>",
        "id": 369225048,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687623622
    },
    {
        "content": "<p>That is a hack that we probably need to remove to enable using a newer version of zig without roc updating its internal version of zig.</p>",
        "id": 369225128,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687623643
    },
    {
        "content": "<blockquote>\n<p>Do you plan to upgrade the zig version in the near future?</p>\n</blockquote>\n<p>We have wanted to do this for a while, but it is not an easy project cause we have to update zig and llvm at the same time. On top of that, it can often cause issue with our custom linker that is not quite feature full.</p>",
        "id": 369225391,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687623723
    },
    {
        "content": "<p>I thought <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> had the Zig upgrade working on a branch, except that it broke some Zig hosts</p>",
        "id": 369229852,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1687625239
    },
    {
        "content": "<p>I wonder if this is related? like maybe the problem there is the hosts being accidentally coupled to the Zig version the compiler is using <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 369229943,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1687625268
    },
    {
        "content": "<p>zig is not the problem here, althought a new zig release is close (2 weeks, I think?) so it might make sense to wait for that at least</p>",
        "id": 369230051,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1687625294
    },
    {
        "content": "<p>I was able to build my platform with zig 0.10.1. All I had to do was looking at the error message <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>\n<p>The error message was: \"error: unrecognized parameter: '--strip'\"</p>\n<p>So I removed this line and rebuild roc from source: <a href=\"https://github.com/roc-lang/roc/blob/addd513528b64326d26658549a045647ae7a0f44/crates/compiler/build/src/link.rs#L1287\">https://github.com/roc-lang/roc/blob/addd513528b64326d26658549a045647ae7a0f44/crates/compiler/build/src/link.rs#L1287</a></p>\n<p>Afterwards, it works.</p>\n<p>But my zig-code does not include any glue-code. So I don't know if this is something that helps in every case.</p>\n<p>The <a href=\"https://ziglang.org/download/0.10.0/release-notes.html\">zig 0.10 release notes say</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code>--strip is renamed to -fstrip and -fno-strip is introduced. Stripping is enabled by default for ReleaseSmall and the flag is properly forwarded to LLD\n</code></pre></div>\n<p>Since <code>ReleaseSmall</code>is used anyway, there is no need to replace <code>--strip</code> with another flag.</p>\n<p>Would it be possible for roc to check the zig version and only use <code>--stip</code> in version 0.9.1? Or would you accept a PR that removes <code>--strip</code> for all versions of zig?</p>",
        "id": 369268221,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1687643465
    },
    {
        "content": "<p>When I tested it yesterday, I still was in the nix-environment. So I actually tested it with zig 0.9 <span aria-label=\"face with peeking eye\" class=\"emoji emoji-1fae3\" role=\"img\" title=\"face with peeking eye\">:face_with_peeking_eye:</span> </p>\n<p>It still works with zig 0.10. But you also have to remove this line: <a href=\"https://github.com/roc-lang/roc/blob/addd513528b64326d26658549a045647ae7a0f44/crates/compiler/build/src/link.rs#L390\">https://github.com/roc-lang/roc/blob/addd513528b64326d26658549a045647ae7a0f44/crates/compiler/build/src/link.rs#L390</a></p>\n<p>Shen you run <code>roc build</code>, you get a log of messages like </p>\n<div class=\"codehilite\"><pre><span></span><code>wasm-ld: warning: Linking two modules of different data layouts: &#39;/home/ossi/src/roc/target/debug/build/wasi_libc_sys-661fd49d43379bb3/out/wasi-libc.a(lrint.o at 2551060)&#39; is &#39;e-m:e-p:32:32-i64:64-n32:64-S128-ni:1:10:20&#39; whereas &#39;ld-temp.o&#39; is &#39;e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-n32:64-S128-ni:1:10:20&#39;\n</code></pre></div>\n<p>But it works anyway.</p>",
        "id": 369321926,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1687676769
    }
]