[
    {
        "content": "<p>I hadnâ€™t thought about the fact that higher-order functions must have a different name if they take an effectful function than if they donâ€™t, since effectful functions have different type signatures. Given this, will there be effectful versions of all higher-order functions in the builtins?</p>\n<p>For example, the current builtins documentation has a List.walk! but not a <a href=\"http://List.map\">List.map</a>!, even though the example code for List.walk! would be simpler as <a href=\"http://List.map\">List.map</a>!.</p>",
        "id": 496999211,
        "sender_full_name": "misterdrgn",
        "timestamp": 1738327402
    },
    {
        "content": "<blockquote>\n<p>will there be effectful versions of all higher-order functions in the builtins?</p>\n</blockquote>\n<p>I think the plan was to provide effectful versions on an as needed basis. We've talked about <code>List.map!</code> before, let me see if I can find that.</p>",
        "id": 497000582,
        "sender_full_name": "Anton",
        "timestamp": 1738327917
    },
    {
        "content": "<p><a class=\"message-link\" href=\"/#narrow/channel/316715-contributing/topic/More.20standard.20library.20purity.20inference/near/491117460\">#contributing &gt; More standard library purity inference @ ðŸ’¬</a></p>",
        "id": 497000842,
        "sender_full_name": "Anton",
        "timestamp": 1738327988
    },
    {
        "content": "<p>Alright. Obviously you can always use walk! to achieve what you would do with map!. Itâ€™s just a tradeoff between more clutter in the builtins vs slightly more complicated code. </p>\n<p>I donâ€™t see anything at that link that talks about whether to have a <a href=\"http://List.map\">List.map</a>!, but I take it people concluded walk! and for_each! were enough.</p>\n<p>EDIT: Oh I see, <a href=\"http://List.map\">List.map</a>! is mentioned earlier.</p>",
        "id": 497001866,
        "sender_full_name": "misterdrgn",
        "timestamp": 1738328348
    },
    {
        "content": "<blockquote>\n<p>Itâ€™s just a tradeoff between more clutter in the builtins vs slightly more complicated code.</p>\n</blockquote>\n<p>Yeah, we always prefer \"feature\" discussion based on specific needs instead of hypothetical needs. <code>List.map!</code> could make sense though!</p>",
        "id": 497002498,
        "sender_full_name": "Anton",
        "timestamp": 1738328540
    },
    {
        "content": "<p>I do find it slightly amusing that the documentation for List.walk! itself provides a good use case for <a href=\"http://List.map\">List.map</a>!. Of course that might not come up too often in practice.</p>",
        "id": 497003065,
        "sender_full_name": "misterdrgn",
        "timestamp": 1738328748
    },
    {
        "content": "<p>Yeah, examples can be artificial because their goal is simply to be a nice demonstration</p>",
        "id": 497003451,
        "sender_full_name": "Anton",
        "timestamp": 1738328883
    }
]