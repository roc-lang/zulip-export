[
    {
        "content": "<p>Any crustaceans out there, I'm wondering if there is a nicer way to handle things than using nested <code>match</code> statements like below?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/// See docs in `platform/Stdout.roc` for descriptions</span>\n<span class=\"k\">fn</span> <span class=\"nf\">handleStdoutErr</span><span class=\"p\">(</span><span class=\"n\">io_err</span>: <span class=\"nc\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">Error</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">RocResult</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">io_err</span><span class=\"p\">.</span><span class=\"n\">kind</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">ErrorKind</span>::<span class=\"n\">BrokenPipe</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">RocStr</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"ErrorKind::BrokenPipe\"</span><span class=\"p\">)),</span>\n<span class=\"w\">        </span><span class=\"n\">ErrorKind</span>::<span class=\"n\">WouldBlock</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">RocStr</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"ErrorKind::WouldBlock\"</span><span class=\"p\">)),</span>\n<span class=\"w\">        </span><span class=\"n\">ErrorKind</span>::<span class=\"n\">WriteZero</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">RocStr</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"ErrorKind::WriteZero\"</span><span class=\"p\">)),</span>\n<span class=\"w\">        </span><span class=\"n\">ErrorKind</span>::<span class=\"n\">Unsupported</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">RocStr</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"ErrorKind::Unsupported\"</span><span class=\"p\">)),</span>\n<span class=\"w\">        </span><span class=\"n\">ErrorKind</span>::<span class=\"n\">Interrupted</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">RocStr</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"ErrorKind::Interrupted\"</span><span class=\"p\">)),</span>\n<span class=\"w\">        </span><span class=\"n\">ErrorKind</span>::<span class=\"n\">OutOfMemory</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">RocStr</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"ErrorKind::OutOfMemory\"</span><span class=\"p\">)),</span>\n<span class=\"w\">        </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">err</span><span class=\"p\">(</span><span class=\"n\">RocStr</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"n\">RocStr</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">io_err</span><span class=\"p\">).</span><span class=\"n\">as_str</span><span class=\"p\">()))),</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[no_mangle]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">roc_fx_stdoutLine</span><span class=\"p\">(</span><span class=\"n\">line</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">RocStr</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">RocResult</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">stdout</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"p\">.</span><span class=\"n\">lock</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"p\">.</span><span class=\"n\">write_all</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">.</span><span class=\"n\">as_bytes</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"p\">.</span><span class=\"n\">write_all</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">.</span><span class=\"n\">as_bytes</span><span class=\"p\">()){</span>\n<span class=\"w\">            </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"p\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">RocResult</span>::<span class=\"n\">ok</span><span class=\"p\">(()),</span>\n<span class=\"w\">                </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">io_err</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">handleStdoutErr</span><span class=\"p\">(</span><span class=\"n\">io_err</span><span class=\"p\">),</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">io_err</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">handleStdoutErr</span><span class=\"p\">(</span><span class=\"n\">io_err</span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">io_err</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">handleStdoutErr</span><span class=\"p\">(</span><span class=\"n\">io_err</span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 434663974,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713768055
    },
    {
        "content": "<p>Thank you ChatGPT .... <span aria-label=\"heart hands\" class=\"emoji emoji-1faf6\" role=\"img\" title=\"heart hands\">:heart_hands:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[no_mangle]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">roc_fx_stdoutLine</span><span class=\"p\">(</span><span class=\"n\">line</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">RocStr</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">RocResult</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">io</span>::<span class=\"n\">stdout</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"p\">.</span><span class=\"n\">lock</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"n\">handle</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">write_all</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">.</span><span class=\"n\">as_bytes</span><span class=\"p\">())</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">and_then</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"p\">()</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"p\">.</span><span class=\"n\">write_all</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">.</span><span class=\"n\">as_bytes</span><span class=\"p\">()))</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">and_then</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"p\">()</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"p\">.</span><span class=\"n\">flush</span><span class=\"p\">())</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map_err</span><span class=\"p\">(</span><span class=\"n\">handleStdoutErr</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 434669734,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1713769933
    }
]