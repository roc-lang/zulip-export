[
    {
        "content": "<p>So <a href=\"http://repl.it\">repl.it</a> environments are controlled by a replit.nix file. I'd like to know what to put in there to have a Roc playground I can use from all my computers. I also think this would be useful for others to get up to speed quickly. I took a stab at it (see this gist: <a href=\"https://gist.github.com/pmarreck/b3de701b61ae44720cbbb65dcaf65885\">https://gist.github.com/pmarreck/b3de701b61ae44720cbbb65dcaf65885</a>) but no dice yet... I know Roc is nix-friendly so I'm sure someone could probably make this work pretty easily...</p>",
        "id": 473755726,
        "sender_full_name": "Peter Marreck",
        "timestamp": 1727707227
    },
    {
        "content": "<p>I'm not very familiar with replit but the premise sounds cool! Are you currently getting any errors using the gist?</p>",
        "id": 473761743,
        "sender_full_name": "Anton",
        "timestamp": 1727708420
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>nix error: building nix env: exit status 1\nOutput has been trimmed to the last 20 lines\n       … while calling the &#39;derivationStrict&#39; builtin\n\n         at /builtin/derivation.nix:9:12: (source not available)\n\n       … while evaluating derivation &#39;nix-shell&#39;\n         whose name attribute is located at /nix/store/pp028rj4l81sm4bs36l9mx80602m8kq4-nixpkgs-24.05-src/pkgs/stdenv/generic/make-derivation.nix:331:7\n\n       … while evaluating attribute &#39;REPLIT_LD_LIBRARY_PATH&#39; of derivation &#39;nix-shell&#39;\n\n         at «string»:309:9:\n\n          308|       {\n          309|         REPLIT_LD_LIBRARY_PATH = (pkgs.lib.optionalString (env ? REPLIT_LD_LIBRARY_PATH) (env.REPLIT_LD_LIBRARY_PATH + &quot;:&quot;)) +\n             |         ^\n          310|         pkgs.lib.makeLibraryPath deps;\n\n       (stack trace truncated; use &#39;--show-trace&#39; to show the full trace)\n\n       error: invalid SRI hash &#39;11yw9xh1719smxbp0ia03kkv6hrvw4l6hhvxjxa4w2i7wc2r6yqy&#39;\n\npath &#39;/home/runner/roc-playground&#39; does not contain a &#39;flake.nix&#39;, searching up\nerror: unable to find a flake before encountering filesystem boundary at &#39;/home/runner&#39;\n</code></pre></div>",
        "id": 473788875,
        "sender_full_name": "Peter Marreck",
        "timestamp": 1727713488
    },
    {
        "content": "<p>It's possible I'm not doing it the \"replit way\" but not sure</p>",
        "id": 473788927,
        "sender_full_name": "Peter Marreck",
        "timestamp": 1727713505
    },
    {
        "content": "<p>invalid hash is odd because it's not one I included there</p>",
        "id": 473788999,
        "sender_full_name": "Peter Marreck",
        "timestamp": 1727713532
    },
    {
        "content": "<p>I suppose I can just do it with a flake.nix but I was hoping to get something going at the project level (or right above it)</p>",
        "id": 473789258,
        "sender_full_name": "Peter Marreck",
        "timestamp": 1727713600
    },
    {
        "content": "<blockquote>\n<p>invalid hash is odd because it's not one I included there</p>\n</blockquote>\n<p>The hash in the error is the one in the gist</p>",
        "id": 473797331,
        "sender_full_name": "Anton",
        "timestamp": 1727715452
    },
    {
        "content": "<p>Usually, nix gives you the hash it calculated instead but here it doesn't, perhaps the hash is missing a character?</p>",
        "id": 473798451,
        "sender_full_name": "Anton",
        "timestamp": 1727715704
    },
    {
        "content": "<p>I'll sign up to replit and check it out</p>",
        "id": 473799090,
        "sender_full_name": "Anton",
        "timestamp": 1727715882
    },
    {
        "content": "<p>I don't get nix errors anymore but it could not use the roc command yet... I can try some more tomorrow.</p>",
        "id": 473812573,
        "sender_full_name": "Anton",
        "timestamp": 1727719421
    },
    {
        "content": "<p>I wonder if PATH is set up correctly in that case, although nix should be taking care of that if it is installing correctly via nix, I should think, since it's an output</p>",
        "id": 474090540,
        "sender_full_name": "Peter Marreck",
        "timestamp": 1727803936
    },
    {
        "content": "<p>Uhu, I would expect so too. Yeasterday I wrote <code>packages.cl</code> instead of <code>packages.cli</code> and I did not get any nix errors, so  something could still be going wrong with nix. I'm now trying a very similar nix setup locally so I can test it properly</p>",
        "id": 474091773,
        "sender_full_name": "Anton",
        "timestamp": 1727804339
    },
    {
        "content": "<p>Thanks for investigating. I still don't understand nix (or replit) well enough to know why the same contents of a flake.nix wouldn't work in a replit.nix.<br>\nOne thing I was going to try next was to create a few arbitrary replit preconfigured environments, examine their corresponding replit.nix files, and see if I could surmise what was missing that way via deduction</p>",
        "id": 474130520,
        "sender_full_name": "Peter Marreck",
        "timestamp": 1727817988
    },
    {
        "content": "<p>It would be nice if roc was simply available on nixpkgs unstable... might also help make it easier to check out for the uninitiated (and I would argue that the nix crowd is a good one...)</p>",
        "id": 474134061,
        "sender_full_name": "Peter Marreck",
        "timestamp": 1727819558
    },
    {
        "content": "<blockquote>\n<p>why the same contents of a flake.nix wouldn't work in a replit.nix.</p>\n</blockquote>\n<p>replit.nix does not use the newer flake style, officially they are still experimental, yet very popular :p</p>",
        "id": 474251656,
        "sender_full_name": "Anton",
        "timestamp": 1727863641
    },
    {
        "content": "<blockquote>\n<p>One thing I was going to try next was to create a few arbitrary replit preconfigured environments, examine their corresponding replit.nix files, and see if I could surmise what was missing that way via deduction</p>\n</blockquote>\n<p>I was looking at those too :)<br>\n<a href=\"https://github.com/search?q=fetch%20github%20path%3Areplit.nix&amp;type=code\">https://github.com/search?q=fetch%20github%20path%3Areplit.nix&amp;type=code</a></p>",
        "id": 474252043,
        "sender_full_name": "Anton",
        "timestamp": 1727863782
    },
    {
        "content": "<blockquote>\n<p>It would be nice if roc was simply available on nixpkgs unstable... might also help make it easier to check out for the uninitiated (and I would argue that the nix crowd is a good one...)</p>\n</blockquote>\n<p>I've tried that in the past but got stuck on some macos problem. We could start off with linux support only...<br>\nRoc is changing fast so we would ideally also want a nix overlay so people can get the most recent version.</p>",
        "id": 474252730,
        "sender_full_name": "Anton",
        "timestamp": 1727864015
    },
    {
        "content": "<p>I finally got it to work locally:</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code><span class=\"k\">let</span>\n  <span class=\"ss\">pkgs</span> <span class=\"o\">=</span> <span class=\"nb\">import</span> <span class=\"l\">&lt;nixpkgs&gt;</span> <span class=\"p\">{};</span>\n\n  <span class=\"ss\">rocRepo</span> <span class=\"o\">=</span>\n    <span class=\"nb\">import</span> <span class=\"p\">(</span>pkgs<span class=\"o\">.</span>fetchFromGitHub <span class=\"p\">{</span>\n      <span class=\"ss\">owner</span> <span class=\"o\">=</span> <span class=\"s2\">\"roc-lang\"</span><span class=\"p\">;</span>\n      <span class=\"ss\">repo</span> <span class=\"o\">=</span> <span class=\"s2\">\"roc\"</span><span class=\"p\">;</span>\n      <span class=\"ss\">rev</span> <span class=\"o\">=</span> <span class=\"s2\">\"2c62f773efaa08302dd8e765f4dba91a0cdbde8d\"</span><span class=\"p\">;</span>\n      <span class=\"ss\">sha256</span> <span class=\"o\">=</span> <span class=\"s2\">\"sha256-kGYrBpSQ4zdPrV10gVemCKk3zKBW6XeC5wROcped8Ms=\"</span><span class=\"p\">;</span>\n    <span class=\"p\">});</span>\n\n  <span class=\"ss\">roc</span> <span class=\"o\">=</span> rocRepo<span class=\"o\">.</span>packages<span class=\"o\">.</span><span class=\"si\">${</span>pkgs<span class=\"o\">.</span>system<span class=\"si\">}</span><span class=\"o\">.</span>cli<span class=\"p\">;</span>\n<span class=\"k\">in</span>\npkgs<span class=\"o\">.</span>mkShell <span class=\"p\">{</span>\n  <span class=\"ss\">buildInputs</span> <span class=\"o\">=</span> <span class=\"k\">with</span> pkgs<span class=\"p\">;</span> <span class=\"p\">[</span>\n    roc\n  <span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>But when I put the slightly modified version into replit:</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code><span class=\"k\">let</span>\n    <span class=\"ss\">pkgs</span> <span class=\"o\">=</span> <span class=\"nb\">import</span> <span class=\"p\">(</span>fetchTarball <span class=\"l\">https://github.com/NixOS/nixpkgs/archive/24.05.tar.gz</span><span class=\"p\">)</span> <span class=\"p\">{}</span> <span class=\"p\">;</span>\n\n    <span class=\"ss\">rocRepo</span> <span class=\"o\">=</span>\n        <span class=\"nb\">import</span> <span class=\"p\">(</span>pkgs<span class=\"o\">.</span>fetchFromGitHub <span class=\"p\">{</span>\n            <span class=\"ss\">owner</span> <span class=\"o\">=</span> <span class=\"s2\">\"roc-lang\"</span><span class=\"p\">;</span>\n            <span class=\"ss\">repo</span> <span class=\"o\">=</span> <span class=\"s2\">\"roc\"</span><span class=\"p\">;</span>\n            <span class=\"ss\">rev</span> <span class=\"o\">=</span> <span class=\"s2\">\"2c62f773efaa08302dd8e765f4dba91a0cdbde8d\"</span><span class=\"p\">;</span>\n            <span class=\"ss\">sha256</span> <span class=\"o\">=</span> <span class=\"s2\">\"sha256-kGYrBpSQ4zdPrV10gVemCKk3zKBW6XeC5wROcped8Ms=\"</span><span class=\"p\">;</span>\n        <span class=\"p\">});</span>\n\n    <span class=\"ss\">roc</span> <span class=\"o\">=</span> rocRepo<span class=\"o\">.</span>packages<span class=\"o\">.</span><span class=\"si\">${</span>pkgs<span class=\"o\">.</span>system<span class=\"si\">}</span><span class=\"o\">.</span>cli<span class=\"p\">;</span>\n<span class=\"k\">in</span>\n<span class=\"p\">{</span>\n    <span class=\"ss\">deps</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        roc\n    <span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>It gives me:</p>\n<div class=\"codehilite\"><pre><span></span><code>nix error: building nix env: exit status 1\nOutput has been trimmed to the last 20 lines\n       … from call site\n\n         at /nix/store/pp028rj4l81sm4bs36l9mx80602m8kq4-nixpkgs-24.05-src/lib/trivial.nix:895:7:\n\n          894|     { # TODO: Should we add call-time &quot;type&quot; checking like built in?\n          895|       __functor = self: f;\n             |       ^\n          896|       __functionArgs = args;\n\n       (stack trace truncated; use &#39;--show-trace&#39; to show the full trace)\n\n       error: assertion &#39;((builtins).isFunction raw)&#39; failed\n\n       at «string»:286:5:\n\n          285|     in\n          286|     assert builtins.isFunction raw; (callPackage { inherit pkgs legacyPolygott; } raw);\n             |     ^\n          287|\n</code></pre></div>\n<p>I don't think I can show that error not trimmed and I don't know what's wrong based on the trimmed version :(</p>",
        "id": 474333827,
        "sender_full_name": "Anton",
        "timestamp": 1727884072
    },
    {
        "content": "<p>I'll revisit this once Roc is on nix <a href=\"https://github.com/roc-lang/roc/issues/7139\">#7139</a></p>",
        "id": 474334967,
        "sender_full_name": "Anton",
        "timestamp": 1727884383
    }
]