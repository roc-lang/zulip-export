[
    {
        "content": "<p>Hey folks - I'm trying to use the record builder syntax but I think there is something outdated between builtin docs and the tutorial.</p>\n<p>Ref:<br>\n<a href=\"https://www.roc-lang.org/tutorial#record-builder\">https://www.roc-lang.org/tutorial#record-builder</a><br>\n<a href=\"https://www.roc-lang.org/builtins/Task#batch\">https://www.roc-lang.org/builtins/Task#batch</a></p>\n<p>How would I use the record builder syntax these days with a Task?</p>\n<p>My code as example using the <a href=\"mailto:basic-webserver@0.10\">basic-webserver@0.10</a> platform:</p>\n<div class=\"codehilite\"><pre><span></span><code>{ Task.ok &lt;-\n    a: Env.var &quot;A&quot;,\n    b: Env.var &quot;B&quot;\n}\n</code></pre></div>",
        "id": 490797431,
        "sender_full_name": "Georges Boris",
        "timestamp": 1735149889
    },
    {
        "content": "<p>Oh, sorry, that's out of date yes</p>",
        "id": 490799022,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735151409
    },
    {
        "content": "<p>Record builders used to be built with <a href=\"https://adueck.github.io/blog/functors-applicatives-and-monads-with-pictures-in-typescript/\">applicative functors</a></p>",
        "id": 490799190,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735151605
    },
    {
        "content": "<p>Which was a complex tool for beginners to grok</p>",
        "id": 490799195,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735151622
    },
    {
        "content": "<p>So now we just accept any function that takes two things and combines them</p>",
        "id": 490799264,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735151695
    },
    {
        "content": "<p>So <code>Task.batch</code> is for the old style, and we don't have a function for the new style</p>",
        "id": 490799286,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735151718
    },
    {
        "content": "<p>Oh wow! Yeah - I was still under the impression it was related to applicatives.</p>",
        "id": 490799311,
        "sender_full_name": "Georges Boris",
        "timestamp": 1735151753
    },
    {
        "content": "<p>The tutorial needs some love</p>",
        "id": 490799405,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735151805
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">combineTasks</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"nv\">err</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"nv\">err</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">c</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"w\"> </span><span class=\"nv\">c</span><span class=\"w\"> </span><span class=\"nv\">err</span>\n<span class=\"nv\">combineTasks</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">leftTask</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">rightTask</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">combiner</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">left</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">leftTask</span><span class=\"err\">!</span>\n<span class=\"w\">    </span><span class=\"nv\">right</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">rightTask</span><span class=\"err\">!</span>\n\n<span class=\"w\">    </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">combiner</span><span class=\"w\"> </span><span class=\"nv\">left</span><span class=\"w\"> </span><span class=\"nv\">right</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 490799435,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735151836
    },
    {
        "content": "<p>This function should be a userspace record builder combiner</p>",
        "id": 490799482,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735151868
    },
    {
        "content": "<p>With Purity Inference, you shouldn't really need this</p>",
        "id": 490799577,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735151903
    },
    {
        "content": "<p>But you could do this:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">combine</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">({}</span><span class=\"w\"> </span><span class=\"nf\">=&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"nv\">err</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"p\">({}</span><span class=\"w\"> </span><span class=\"nf\">=&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"nv\">err</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">c</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nf\">=&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"w\"> </span><span class=\"nv\">c</span><span class=\"w\"> </span><span class=\"nv\">err</span>\n<span class=\"nv\">combine</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">leftGen</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">rightGen</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">combiner</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">left</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">try</span><span class=\"w\"> </span><span class=\"nv\">leftGen</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"nv\">right</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">try</span><span class=\"w\"> </span><span class=\"nv\">rightGen</span><span class=\"err\">!</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">combiner</span><span class=\"w\"> </span><span class=\"nv\">left</span><span class=\"w\"> </span><span class=\"nv\">right</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 490799766,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735152079
    },
    {
        "content": "<p>Why does it need to be a userspace function? Shouldn't it be part of the <code>Task</code> module?</p>",
        "id": 490800122,
        "sender_full_name": "Georges Boris",
        "timestamp": 1735152321
    },
    {
        "content": "<p>It should, but Task is going the way of the dodo pretty soon</p>",
        "id": 490800186,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735152361
    },
    {
        "content": "<p>Maybe I'm misinterpreting what userspace means <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 490800233,
        "sender_full_name": "Georges Boris",
        "timestamp": 1735152370
    },
    {
        "content": "<p>I guess I could add that just as a stopgap</p>",
        "id": 490800239,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735152376
    },
    {
        "content": "<p>Ohhh right - with the purity inference thing</p>",
        "id": 490800248,
        "sender_full_name": "Georges Boris",
        "timestamp": 1735152383
    },
    {
        "content": "<p>Not sure what the right name is.</p>",
        "id": 490800258,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735152391
    },
    {
        "content": "<ul>\n<li>Task.combine</li>\n<li>Task.chain</li>\n<li>Task.serialize</li>\n<li>Task.sequence</li>\n</ul>",
        "id": 490800264,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735152395
    },
    {
        "content": "<p>What would you prefer?</p>",
        "id": 490800297,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735152419
    },
    {
        "content": "<p><code>combine</code> makes sense to me! I like that it seems like a reusable name for the pattern to be used in different modules.</p>",
        "id": 490801814,
        "sender_full_name": "Georges Boris",
        "timestamp": 1735153715
    },
    {
        "content": "<p>I'll make a PR, then</p>",
        "id": 490801841,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735153756
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364014\">@Georges Boris</span> could you look at <a href=\"https://github.com/roc-lang/roc/pull/7413\">https://github.com/roc-lang/roc/pull/7413</a> if you get a chance and tell me if the docs make sense to you?</p>",
        "id": 490805121,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735156918
    },
    {
        "content": "<p>It's pretty simple</p>",
        "id": 490805160,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735156924
    },
    {
        "content": "<p>Looks good to me!</p>\n<p>I wonder if it wouldn't be better to remove the previous <code>batch</code> example as a whole since that code doesn't compile anymore.</p>",
        "id": 490806587,
        "sender_full_name": "Georges Boris",
        "timestamp": 1735158562
    },
    {
        "content": "<p>Yeah, probably the right move</p>",
        "id": 490806599,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735158586
    },
    {
        "content": "<p>done</p>",
        "id": 490806678,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735158650
    }
]