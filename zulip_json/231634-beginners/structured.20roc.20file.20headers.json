[
    {
        "content": "<p>hello! is there a good method for getting the roc headers of a given module?</p>\n<ul>\n<li>app</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>app [main!] {\n    pf: platform &quot;./Platform/main.roc&quot;,\n    lib: &quot;./Lib/main.roc&quot;,\n}\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>app [main!] { pf: platform &quot;https://github.com/roc-lang/basic-cli/releases/download/0.19.0/Hj-J_zxz7V9YurCSTFcFdu6cQJie4guzsPMUi5kBYUk.tar.br&quot; }\n</code></pre></div>\n<ul>\n<li>module</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>module [to_str, matrix]\n</code></pre></div>\n<ul>\n<li>package</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>package [\n    Hello,\n    Goodbye\n] {}\n</code></pre></div>\n<ul>\n<li>platform</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>platform &quot;go-basic-cli&quot;\n    requires {} { main : Str }\n    exposes []\n    packages {}\n    imports []\n    provides [main_for_host]\n</code></pre></div>\n<ul>\n<li>hosted</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>hosted [\n    stdout_line!,\n    hello!,\n]\n</code></pre></div>\n<p>for each of these types of files what's the ideal way to access?</p>\n<p>should i parse the ir expression output into something easier to pass around?</p>\n<p>i imagine a format like json yaml or kdl may be ideal.</p>\n<p>i could also see something that provides the data decoded into roc primitives,</p>\n<p>then a user could encode however they like. that might be most performant?</p>\n<p>idk if the data would look like <code>\"hosted\": [\"stdout_line!\", \"hello!\"]</code> or if it would be more like</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;type&quot;: &quot;hosted&quot;,\n  &quot;list_data&quot;: [&quot;stdout_line!&quot;, &quot;hello!&quot;]\n  &quot;record_data&quot;: {}\n}\n</code></pre></div>\n<p>or something else entirely including access type hash filename etc.</p>\n<p>what i really want is to provide a roc file and receive</p>\n<ul>\n<li>module type</li>\n<li>if it has imports, list all import data {alias, url, hash, types}<ul>\n<li>(type includes <code>local</code>, <code>remote</code>, <code>platform</code>)</li>\n</ul>\n</li>\n</ul>\n<p>but i guess i'm asking somewhat generically is the best way to go about any of this kind of meta stuff is it the ir output?  maybe a cli flag or builtin or something? i suppose docs may have what i need.</p>\n<p>i take <a href=\"https://github.com/roc-lang/roc/blob/c02e047cae8244bc4ecf16806d65ebe3ccee28a2/src/snapshots/hello_world.md#parse\">parse</a> and extract what i need? how stable is the parse output? (does <code>record-field</code> mean platform?)</p>\n<div class=\"codehilite\"><pre><span></span><code>(app @1.1-1.57\n        (provides @1.6-1.12\n            (exposed-lower-ident (text &quot;main!&quot;)))\n        (record-field @1.15-1.57 (name &quot;pf&quot;)\n            (e-string @1.28-1.55\n                (e-string-part @1.29-1.54 (raw &quot;../basic-cli/platform.roc&quot;))))\n        (packages @1.13-1.57\n            (record-field @1.15-1.57 (name &quot;pf&quot;)\n                (e-string @1.28-1.55\n                    (e-string-part @1.29-1.54 (raw &quot;../basic-cli/platform.roc&quot;))))))\n</code></pre></div>",
        "id": 528481297,
        "sender_full_name": "Drewry Pope",
        "timestamp": 1752350315
    },
    {
        "content": "<p>We just had a discussion about how to provide this kind of data: <a class=\"message-link\" href=\"/#narrow/channel/316715-contributing/topic/zig.20compiler.20-.20LSP/near/528193574\">#contributing &gt; zig compiler - LSP @ ðŸ’¬</a></p>",
        "id": 528527912,
        "sender_full_name": "Anton",
        "timestamp": 1752411080
    },
    {
        "content": "<blockquote>\n<p>does <code>record-field</code> mean platform?</p>\n</blockquote>\n<p>Other headers may also have record-fields in them, I'm not sure</p>",
        "id": 528528284,
        "sender_full_name": "Anton",
        "timestamp": 1752411522
    },
    {
        "content": "<p>In parsing. it appears we discard the info that something has the platform keyword, is that correct <span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> <span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span>?</p>",
        "id": 528528337,
        "sender_full_name": "Anton",
        "timestamp": 1752411585
    },
    {
        "content": "<blockquote>\n<p>how stable is the parse output</p>\n</blockquote>\n<p>Small changes are pretty likely in the near future, but I do not expect large changes.</p>",
        "id": 528528419,
        "sender_full_name": "Anton",
        "timestamp": 1752411671
    },
    {
        "content": "<p>thank you!! I'll look into what I can put together using the parse data. do you have any recommendations for how best I can find which packages import is the platform when viewing parser output?</p>",
        "id": 528564498,
        "sender_full_name": "Drewry Pope",
        "timestamp": 1752448429
    },
    {
        "content": "<p>Keep in mind that we have a bare bones implementation in the parser, we haven't really touch canonicalization for the headers yet AFAIK -- or implemented support for packages etc. </p>\n<p>So I think it's quite possible the s-expression will change.</p>\n<p>What are you planning on doing with this information? There isn't a lot of 0.1 roc code floating around to work with.</p>",
        "id": 528564826,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752448817
    },
    {
        "content": "<p>ha, yeah updating a lot of packages is on my list. I want to get the platform and then accept or reject based on the provided platform. also nix experimentally supports blake3 hashing now so I was thinking of trying to improve roc2nix</p>",
        "id": 528564938,
        "sender_full_name": "Drewry Pope",
        "timestamp": 1752448948
    },
    {
        "content": "<p>I totally get that it's all moving around I can pin and upgrade later if I have to I'm not worried about it. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 528565080,
        "sender_full_name": "Drewry Pope",
        "timestamp": 1752449085
    }
]