[
    {
        "content": "<p>Just trying to wrap my head around Abilities and the <code>Json</code> implementation at a deeper level, and I'm unsure about something. </p>\n<p>What do we need the <code>Encoding</code> ability in <code>crates/compiler/builtins/roc/Encode.roc</code> for?</p>\n<div class=\"codehilite\"><pre><span></span><code>Encoding has\n    toEncoder : val -&gt; Encoder fmt | val has Encoding, fmt has EncoderFormatting\n</code></pre></div>\n<p>I can delete <code>Encoding</code> and all my Json tests still pass which seems strange.</p>",
        "id": 341955139,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678852887
    },
    {
        "content": "<p>Encoding should be going from a Roc type to a Json byte List.</p>",
        "id": 341960105,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678856987
    },
    {
        "content": "<p>Do you have tests for that?</p>",
        "id": 341960113,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678856997
    },
    {
        "content": "<p>Actually.. it is needed. I can't build <code>roc</code> without it. Disregard my question above. <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> yeah I'm trying to add more tests, and fix bugs along the way.</p>",
        "id": 341961559,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678858110
    },
    {
        "content": "<p>I've got a strange bug I'm trying to track down. When I add the following test to the <code>Json.roc</code> file it fails with <code>Err (Leftover [123, ... all the other bytes])</code>. But when I add to another random file it passes. </p>\n<p>It's strange because it doesn't even parse a single byte. </p>\n<div class=\"codehilite\"><pre><span></span><code>expect\n    input = Str.toUtf8 &quot;{\\&quot;name\\&quot;:\\&quot;Röc Lang\\&quot;}&quot;\n    actual = Decode.fromBytes input fromUtf8\n    expected = Ok { name: &quot;Röc Lang&quot; }\n\n    actual == expected\n</code></pre></div>",
        "id": 341963698,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678859443
    },
    {
        "content": "<p>Sure sounds like a compiler bug! Probably worth creating an issue. <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> is this something you know about?</p>",
        "id": 341965197,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1678860405
    },
    {
        "content": "<p>seems like a bug in the JSON implementation, but not with abilities themselves. The JSON impl definitely could use some love</p>",
        "id": 342134552,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1678904346
    }
]