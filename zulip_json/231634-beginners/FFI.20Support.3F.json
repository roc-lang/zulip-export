[
    {
        "content": "<p>Hi, I was thinking about tinkering with Roc, but the project I have in mind requires FFI. I understand that Roc compiles to WASM, so calling \"exported\" WASM functions is okay. Does Roc support this?</p>",
        "id": 323757283,
        "sender_full_name": "Nikita Tchayka",
        "timestamp": 1674749120
    },
    {
        "content": "<p>Every interaction with a platform in Roc is wrapped in an Effect in Roc, but otherwise, yes, roc has FFI. It is just a more constrained FFI to keep roc pure.</p>",
        "id": 323801400,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1674756129
    },
    {
        "content": "<p>For wasm, it can call other js and wasm functions that are available in to the wasm environment.</p>",
        "id": 323801501,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1674756159
    },
    {
        "content": "<p>As a note, Roc also compiles to native arm and x86. For those, it uses c ffi for communication with the platform.</p>",
        "id": 323801751,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1674756220
    },
    {
        "content": "<p>Nice, is there any docs related to FFI? I have experience in Haskell, Idris, Elm, etc.. so any pointers/similar code would be very appreciated &lt;3</p>",
        "id": 323920322,
        "sender_full_name": "Nikita Tchayka",
        "timestamp": 1674771632
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span> any best example for helping someone start with a wasm platform?</p>",
        "id": 323928393,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1674775031
    },
    {
        "content": "<p>We only have one example and it's either hello world or \"platform switching\", I can't remember which.</p>\n<p>The majority of our examples and projects are targeting machine code rather than Wasm.</p>\n<p>Is this project targeting the browser? Or running in another wasm interpreter? It makes a big difference to the platform design. The hello world example is for the browser.</p>\n<p>I'm working on a virtual DOM platform but there's a long way to go.</p>",
        "id": 324015792,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1674816273
    },
    {
        "content": "<p>The idea is to integrate with an existing Node framework. So I was thinking using Node's wasm capabilities to make Roc interact with it</p>",
        "id": 324022545,
        "sender_full_name": "Nikita Tchayka",
        "timestamp": 1674818287
    },
    {
        "content": "<p>Node has C interop (I don't know the details, but I know there's some way to do it!)</p>",
        "id": 324037481,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1674822719
    },
    {
        "content": "<p>so that's an option too!</p>",
        "id": 324037566,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1674822732
    },
    {
        "content": "<p>Is there any info on interoperability with Roc? Compiler source code works for me as well, just figuring out which thread to pull</p>",
        "id": 324060217,
        "sender_full_name": "Nikita Tchayka",
        "timestamp": 1674828641
    },
    {
        "content": "<p>No we don't have any docs on that yet, the only way is to read the source code of the example platforms and talk to people!</p>",
        "id": 324127627,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1674844532
    },
    {
        "content": "<p>Ah ok Wasm on Node makes sense. Nobody has attempted it yet but it would be cool to see how it goes!</p>",
        "id": 324127817,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1674844578
    },
    {
        "content": "<p><code>examples/virtual-dom-wip</code> would be the closest thing we have. It doesn't build because of some features that aren't complete in the compiler.<br>\nBut you can check out host.zig and host.js on the client side.<br>\nIt's tricky to interface directly from JS to Roc because you need to make sure all the bytes are in the right locations. It's possible in js but it's nicer in lower level languages. So I used Zig for some glue code.</p>",
        "id": 324129237,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1674844997
    },
    {
        "content": "<p>Thanks for the pointers, I really appreciate this!</p>",
        "id": 324593509,
        "sender_full_name": "Nikita Tchayka",
        "timestamp": 1675081483
    }
]