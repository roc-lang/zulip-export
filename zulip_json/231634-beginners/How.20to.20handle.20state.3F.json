[
    {
        "content": "<p>How do you handle state in Roc? For instance with the basic-web server platform, let's say that I have an in memory counter that I wanna increase on every request? Is there a way to do that from Roc?</p>",
        "id": 406994917,
        "sender_full_name": "Hannes Nevalainen",
        "timestamp": 1702172945
    },
    {
        "content": "<p>basic-webserver doesn't currently support that feature, but in general it's possible for a platform to offer that!</p>",
        "id": 407005299,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702180050
    },
    {
        "content": "<p>I am using sqlite3 for that. Works great with basic-webserver</p>",
        "id": 407006157,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702180695
    },
    {
        "content": "<p>The todos app shows a basic use case. But yeah definitely not as nice as having something all in memory</p>",
        "id": 407006182,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702180724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> is there an interim design I could implement which works like Stored ability and keeps things in memory for webserver? I would love to have a cache or something similar.</p>",
        "id": 407006674,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702180955
    },
    {
        "content": "<p>it wouldn't quite be like <code>Stored</code>, but you could use the equivalent of <a href=\"https://github.com/roc-lang/roc/blob/eadd0e82ceb41e95657b9f4d0c2d1a7ae698e1e8/examples/gui/breakout/platform/main.roc#L2\"><code>Model</code> here</a> to let the application specify a particular type that the platform knows about</p>",
        "id": 407007381,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702181451
    },
    {
        "content": "<p>and then the platform can have the <code>Response</code> include that as a type parameter</p>",
        "id": 407007409,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702181477
    },
    {
        "content": "<p>this wouldn't be nearly as ergonomic as <code>Stored</code>, which is one reason basic-webserver doesn't do it <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 407007427,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702181497
    },
    {
        "content": "<p>Would be sweet to have sqlite builtin to the platform instead of shelling out to a child process like that.  Not sure that version is resistant to todos named <code>');DROP TABLE todos; --</code> either, but I can be missing something :)</p>",
        "id": 407052841,
        "sender_full_name": "Hannes Nevalainen",
        "timestamp": 1702207202
    },
    {
        "content": "<p>Your not missing anything, that's a simple example to show something using webserver. I would love to add sqlite effects for that platform, but not sure if we should be coupled so closely to a single db? I think sqlite3 is probable an exception given it is so common. Other db's will probably interface using tcp/ip while sqlite3 is a library.</p>",
        "id": 407100423,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702238262
    },
    {
        "content": "<p>Yeah, sqlite is one of the example pain points of a popular c library that has no good way to interact with roc through a generic interface like tcp</p>",
        "id": 407100593,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702238336
    },
    {
        "content": "<p>Instead needs custom platform support</p>",
        "id": 407100635,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702238356
    },
    {
        "content": "<p>Could maybe load it with libffi, but would be a pain and probably not worth doing</p>",
        "id": 407100664,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702238373
    }
]