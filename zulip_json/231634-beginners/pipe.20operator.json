[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> I meant to ask the other day about why you chose to go with <code>|&gt;</code> instead of <code>.</code> as the pipe operator? Especially considering I've seen Koka mentioned in the GitHub repo at least once or twice.</p>",
        "id": 258062501,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1634576405
    },
    {
        "content": "<p><code>|&gt;</code> indicates direction, and we already use <code>.</code> for record fields are two reasons</p>",
        "id": 258072917,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1634580374
    },
    {
        "content": "<p>we use reference counting tricks implemented in koka, and later found out they also do what we call \"backpassing\" but I have to admit I never actually ran any koka code</p>",
        "id": 258073066,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1634580430
    },
    {
        "content": "<p><code>|&gt;</code> being the pipe operator is fairly common for FP languages. Elixir and Elm are two off the top of my head</p>",
        "id": 258073698,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1634580635
    },
    {
        "content": "<p>purescript too I believe, at least you can use it there, f# is another example</p>",
        "id": 258074498,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1634580937
    },
    {
        "content": "<p>yea it's an extensive list :p</p>",
        "id": 258078666,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1634582589
    },
    {
        "content": "<p><code>.</code> in haskell is function composition if I remember correctly</p>",
        "id": 258078783,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1634582635
    },
    {
        "content": "<p>yes</p>",
        "id": 258078864,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1634582651
    },
    {
        "content": "<p>interestingly, Clean uses the letter <code>o</code> for that purpose</p>",
        "id": 258078912,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1634582667
    },
    {
        "content": "<p>one of its many quirks</p>",
        "id": 258078949,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1634582682
    },
    {
        "content": "<p>I kinda guessed these were the reasons, but figured it was worth asking in case there was something else. Can likely add JS to the list of languages that use <code>|&gt;</code> too once the proposal gets fully accepted</p>",
        "id": 258086891,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1634585863
    },
    {
        "content": "<p>yeah, I think that one seems to be well on the road to standardization...except when it comes to argument order <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 258093066,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1634588260
    },
    {
        "content": "<p><code>|&gt;</code> in Elixir and Roc makes the preceding value be the first argument, whereas in Elm and F# it's the last argument. Last I heard, JS was debating between \"first argument\" and \"explicit placeholder symbol for where you want it to go\"</p>",
        "id": 258093227,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1634588326
    },
    {
        "content": "<p>In gleam because function arguments are labeled, it's accidentally arbitrary</p>",
        "id": 258102971,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1634592280
    },
    {
        "content": "<p>that wasn't planned, it was discovered after</p>",
        "id": 258103020,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1634592307
    },
    {
        "content": "<p>This just popped up on Orange Website:<br>\n<a href=\"https://github.com/tc39/proposal-pipeline-operator\">https://github.com/tc39/proposal-pipeline-operator</a></p>",
        "id": 258224652,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1634660254
    }
]