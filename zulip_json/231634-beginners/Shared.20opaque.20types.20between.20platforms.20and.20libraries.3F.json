[
    {
        "content": "<p>I remember a previous discussion where there was mention of a desire to allow Roc packages (and platforms) to import other packages for their own use, such that common resources have a single source of truth. IE: The <code>basic-cli</code> and <code>basic-webserver</code> platforms might both want to use <code>Utc</code>, and a date/time package might also want to use <code>Utc</code>. Just wondering if plans for such a feature have developed any farther?</p>",
        "id": 436126835,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714420249
    },
    {
        "content": "<p>I bring this up because I have realized that My Roc-IsoDate package will not be able to provide <code>Utc</code> as a parsed type. This is because <code>Utc</code> is an opaque type. If an app imports <code>Utc</code> from the platform, it cannot also import <code>Utc</code> from a package, since they will conflict, and since the type is opaque, if a function cannot simply return <code>Utc</code> and have have the app treat it like a <code>Utc</code> without importing the type from the package, like it could if the type were non-opaque.</p>",
        "id": 436127411,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714420443
    },
    {
        "content": "<p>This means that my package cannot provide the functionality to parse directly to <code>Utc</code>. It can  convert to nanos since the epoch which can then be converted into <code>Utc</code> by fromNanosSinceEpoch (not the end of the world, and what I will end up doing), but it means my intention for a unified API will be slightly less unified. </p>\n<p>However this has reminded me how much I wish there were someway for packages and platforms to import other packages into their own code bases, and wondering if there are any plans around this.</p>",
        "id": 436127938,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714420633
    },
    {
        "content": "<p>yeah the current situation is because of a bug in how imports are implemented - but <span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span> has fixed it in a branch that hasn't quite been merged yet! That will let platforms depend on packages, and packages depend on other packages</p>",
        "id": 436133513,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1714422615
    },
    {
        "content": "<p>Awesome! Great to hear thats coming along! Thanks for the hard work <span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span>! <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 436141021,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714425402
    }
]