[
    {
        "content": "<p>How do I write the value that <code>Stdout.write!</code> and friends return on success? I want my own routine to return a compatible value in both branches of a conditional, one of which does some output while the other does not...</p>",
        "id": 525084841,
        "sender_full_name": "Mark J. Reed",
        "timestamp": 1750443382
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"930965\">@Mark J. Reed</span>,<br>\n<code>Stdout.write!</code> returns <code>Ok({})</code> on success, so in your other branch you'll have to end with <code>Ok({})</code> as well.</p>",
        "id": 525085564,
        "sender_full_name": "Anton",
        "timestamp": 1750443722
    },
    {
        "content": "<p>You can figure this out like this btw:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">main</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"w\"> </span><span class=\"nx\">Arg</span><span class=\"w\"> </span><span class=\"nf\">=&gt;</span><span class=\"w\"> </span><span class=\"nx\">Result</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"nx\">_</span>\n<span class=\"nx\">main</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"nx\">_args</span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"nv\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"Hello, World!\"</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"nx\">Inspect</span><span class=\"p\">.</span><span class=\"nx\">to_str</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">))</span>\n</code></pre></div>",
        "id": 525085624,
        "sender_full_name": "Anton",
        "timestamp": 1750443758
    },
    {
        "content": "<p>Huh. I tried that, and got this: </p>\n<div class=\"codehilite\"><pre><span></span><code>This OK tag application has the type:\n\n    [OK {}]\n\nbut the then branch has the type:\n\n    Result {} [StdoutErr [\n        AlreadyExists,\n        BrokenPipe,\n        Interrupted,\n        NotFound,\n        Other Str,\n        OutOfMemory,\n        PermissionDenied,\n        Unsupported,\n    ]]\n\nAll branches in an if must have the same type!```\n</code></pre></div>",
        "id": 525086648,
        "sender_full_name": "Mark J. Reed",
        "timestamp": 1750444216
    },
    {
        "content": "<p>it's a capitalization issue - should be <code>Ok</code> over <code>OK</code> <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 525092399,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1750446889
    },
    {
        "content": "<p>that might be a good special-case compiler error to include</p>",
        "id": 525092442,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1750446909
    },
    {
        "content": "<p>Might not even need to be special case?<br>\nCouldn't we check for tags which should be valid with different casing in general?</p>",
        "id": 525104044,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1750454028
    },
    {
        "content": "<p>yeah we could do that after unrolling the type alias <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 525109314,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1750457499
    },
    {
        "content": "<p>Ack! You'd think after 40 years of programming I'd be better at spotting a case issue. That's just embarrassing.</p>",
        "id": 525109632,
        "sender_full_name": "Mark J. Reed",
        "timestamp": 1750457732
    },
    {
        "content": "<p>in fairness, OK is the usual way it's spelled; nobody really spells it Ok except for programming languages <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 525117868,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1750466718
    },
    {
        "content": "<p>There is an issue for better error messages for <code>OK</code> <a href=\"https://github.com/roc-lang/roc/issues/6630\">#6630</a></p>",
        "id": 525140819,
        "sender_full_name": "Anton",
        "timestamp": 1750493295
    }
]