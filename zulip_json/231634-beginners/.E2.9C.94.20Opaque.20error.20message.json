[
    {
        "content": "<p>I hit a pretty opaque error message today, and not sure what to do with it. Any help would be much appreciated! The error is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">This</span><span class=\"w\"> </span><span class=\"nx\">expectation</span><span class=\"w\"> </span><span class=\"nx\">crashed</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"nv\">running</span><span class=\"o\">:</span>\n<span class=\"mi\">51</span><span class=\"err\">â”‚</span><span class=\"w\">  </span><span class=\"nx\">expect</span><span class=\"w\"> </span><span class=\"nx\">normalize</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">fromYmdhms</span><span class=\"w\"> </span><span class=\"mi\">1970</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nx\">fromYmdhms</span><span class=\"w\"> </span><span class=\"mi\">1970</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">     </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n\n<span class=\"nx\">The</span><span class=\"w\"> </span><span class=\"nx\">crash</span><span class=\"w\"> </span><span class=\"nx\">reported</span><span class=\"w\"> </span><span class=\"k\">this</span><span class=\"w\"> </span><span class=\"nv\">message</span><span class=\"o\">:</span>\n<span class=\"nx\">Hit</span><span class=\"w\"> </span><span class=\"nx\">an</span><span class=\"w\"> </span><span class=\"nx\">erroneous</span><span class=\"w\"> </span><span class=\"nx\">type</span><span class=\"w\"> </span><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"nx\">creating</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"nx\">layout</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"o\">`</span><span class=\"mi\">4</span><span class=\"p\">.</span><span class=\"nx\">IdentId</span><span class=\"p\">(</span><span class=\"mi\">21</span><span class=\"p\">)</span><span class=\"o\">`</span>\n</code></pre></div>\n<p>Here is the relevant code (note that all functions listed here have been tested and seem to be working prior to addition of DateTime.normalize):</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"c1\"># from DateTime.roc</span>\n<span class=\"nv\">DateTime</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">date</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">Date</span><span class=\"p\">.</span><span class=\"nb\">Date</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">time</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Time</span><span class=\"p\">.</span><span class=\"nx\">Time</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"nv\">normalize</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span>\n<span class=\"nv\">normalize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">dateTime</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nx\">addHours</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nv\">date</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">date</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nv\">time</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Time</span><span class=\"p\">.</span><span class=\"nx\">fromHmsn</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">minute</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">second</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">nanosecond</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">hour</span>\n\n<span class=\"nx\">expect</span><span class=\"w\"> </span><span class=\"nx\">normalize</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">fromYmdhms</span><span class=\"w\"> </span><span class=\"mi\">1970</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nx\">fromYmdhms</span><span class=\"w\"> </span><span class=\"mi\">1970</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"nv\">addHours</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">Int</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span>\n<span class=\"nv\">addHours</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">dateTime</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">hours</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">addNanoseconds</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">hours</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nx\">Const</span><span class=\"p\">.</span><span class=\"nx\">nanosPerHour</span><span class=\"p\">)</span>\n\n<span class=\"nv\">addNanoseconds</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">Int</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span>\n<span class=\"nv\">addNanoseconds</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">dateTime</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">nanos</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">timeNanos</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Time</span><span class=\"p\">.</span><span class=\"nx\">toNanosSinceMidnight</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">toI64</span><span class=\"w\"> </span><span class=\"nx\">nanos</span>\n<span class=\"w\">    </span><span class=\"nv\">days</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"nx\">timeNanos</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">        </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"nx\">timeNanos</span><span class=\"w\"> </span><span class=\"o\">//</span><span class=\"w\"> </span><span class=\"nx\">Const</span><span class=\"p\">.</span><span class=\"nx\">nanosPerDay</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">toI64</span>\n<span class=\"w\">        </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"nx\">timeNanos</span><span class=\"w\"> </span><span class=\"o\">//</span><span class=\"w\"> </span><span class=\"nx\">Const</span><span class=\"p\">.</span><span class=\"nx\">nanosPerDay</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">add</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"nx\">timeNanos</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"nx\">Const</span><span class=\"p\">.</span><span class=\"nx\">nanosPerDay</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"k\">then</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">toI64</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">date</span><span class=\"o\">:</span><span class=\"w\">  </span><span class=\"nb\">Date</span><span class=\"p\">.</span><span class=\"nx\">addDays</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">date</span><span class=\"w\"> </span><span class=\"nx\">days</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">time</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Time</span><span class=\"p\">.</span><span class=\"nx\">fromNanosSinceMidnight</span><span class=\"w\"> </span><span class=\"nx\">timeNanos</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Time</span><span class=\"p\">.</span><span class=\"nx\">normalize</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"c1\"># from Time.roc</span>\n<span class=\"nv\">Time</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">hour</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">I8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">minute</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">second</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">nanosecond</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U32</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"c1\"># from Date.roc</span>\n<span class=\"nb\">Date</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">year</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">month</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">dayOfMonth</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">dayOfYear</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U16</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 435437536,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714066827
    },
    {
        "content": "<p>Can you make put it in a single Interface module as a minimal reproduction and log an Issue please?</p>",
        "id": 435465737,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714078260
    },
    {
        "content": "<p>I'm not sure what the issue is specifically, sorry.</p>",
        "id": 435465843,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714078299
    },
    {
        "content": "<p>Update: I tried adjusting my <code>normalize</code> function to see if I could work around this error and encountered a new crash:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">compiler</span><span class=\"o\">/</span><span class=\"n\">alias_analysis</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">612</span>:<span class=\"mi\">38</span>:\n<span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">key</span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n</code></pre></div>\n<p><strong>All of the below variations crash the same way</strong></p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">normalize</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span>\n<span class=\"nv\">normalize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">dateTime</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">date</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">date</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">time</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Time</span><span class=\"p\">.</span><span class=\"nx\">midnight</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addHours</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">hour</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addMinutes</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">minute</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addSeconds</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">second</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addNanoseconds</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">nanosecond</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">normalize</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span>\n<span class=\"nv\">normalize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">dateTime</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">date</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">Date</span><span class=\"p\">.</span><span class=\"nx\">fromYd</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">date</span><span class=\"p\">.</span><span class=\"nx\">year</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">date</span><span class=\"p\">.</span><span class=\"nx\">dayOfYear</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"nv\">time</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Time</span><span class=\"p\">.</span><span class=\"nx\">midnight</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addHours</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">hour</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addMinutes</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">minute</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addSeconds</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">second</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addNanoseconds</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">nanosecond</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">normalize</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">DateTime</span>\n<span class=\"nv\">normalize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">dateTime</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nx\">fromYd</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">date</span><span class=\"p\">.</span><span class=\"nx\">year</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">date</span><span class=\"p\">.</span><span class=\"nx\">dayOfYear</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addHours</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">hour</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addMinutes</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">minute</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addSeconds</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">second</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">addNanoseconds</span><span class=\"w\"> </span><span class=\"nx\">dateTime</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">nanosecond</span>\n</code></pre></div>",
        "id": 435466029,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714078373
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span>  So far I have not been able to create a min repro. Here's what I have thus far. Any suggestions on a direction I should look?</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">interface</span><span class=\"w\"> </span><span class=\"nx\">MinRepro</span>\n<span class=\"w\">    </span><span class=\"nx\">exposes</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"nx\">imports</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n\n<span class=\"nv\">T1</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"nv\">T2</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"nv\">T3</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">t1</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">T1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">t2</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">T2</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"nv\">foo</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">T3</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">T3</span>\n<span class=\"nv\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">t3</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nx\">bar</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">t1</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">t3</span><span class=\"p\">.</span><span class=\"nx\">t1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">t2</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n\n<span class=\"nv\">bar</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">T3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">U8</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">T3</span>\n<span class=\"nv\">bar</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">t3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">n</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">t1</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">t3</span><span class=\"p\">.</span><span class=\"nx\">t1</span><span class=\"p\">.</span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">n</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nv\">t2</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">t3</span><span class=\"p\">.</span><span class=\"nx\">t2</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"nx\">expect</span><span class=\"w\"> </span><span class=\"nx\">foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">t1</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nv\">t2</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">t1</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nv\">t2</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 435468938,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714079629
    },
    {
        "content": "<p>I suspect it's related to importing symbols or a naming issue. Maybe we need two modules to reproduce?</p>",
        "id": 435470702,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714080492
    },
    {
        "content": "<p>I'd start with the code you have that produces it, and remove things one at a time.</p>",
        "id": 435470766,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714080525
    },
    {
        "content": "<p>Any preference on whether I work backwards from the rust panic or Roc crash?</p>",
        "id": 435471009,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714080653
    },
    {
        "content": "<p>I dont have any preference, though they might be a similar issue. Maybe start with the first?</p>",
        "id": 435471109,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714080719
    },
    {
        "content": "<p>I can probably tinker with it later, just busy with some other things rn.</p>",
        "id": 435471190,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714080757
    },
    {
        "content": "<p>That was my instinct that they were related.</p>",
        "id": 435471208,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714080766
    },
    {
        "content": "<p>I'll get a branch of my repo up with my latest (borked) code, if you happen to take a look. I'm gonna be signing off for the day soon, but I'll keep working on this tomorrow.</p>",
        "id": 435471407,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714080869
    },
    {
        "content": "<p><a href=\"https://github.com/imclerran/Roc-IsoDate/blob/637fdc6135e802d4fbebbed022ed96243639a6f7/package/DateTime.roc#L48-L77\">https://github.com/imclerran/Roc-IsoDate/blob/637fdc6135e802d4fbebbed022ed96243639a6f7/package/DateTime.roc#L48-L77</a></p>",
        "id": 435472752,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714081636
    },
    {
        "content": "<p>^ dedicated branch of repo - linked to function location</p>",
        "id": 435472770,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714081657
    },
    {
        "content": "<p>Still working on narrowing down the source of this bug, but a quick update. I've narrowed the issue down to <code>addHours</code> and <code>addNanoseconds</code> - when using a self referential argument as the int argument to <code>addHours</code>. </p>\n<p>A <code>dbg</code> statement inside <code>addHours</code> prior to calling <code>addNanoseconds</code> will successfully print before the crash. A first line <code>dbg</code> inside <code>addNanoseconds</code> will never print. However, making a direct call to <code>addNanoseconds</code> with a self referential argument for the int argument does not trigger the crash.</p>\n<div class=\"codehilite\"><pre><span></span><code>expect # CRASH\n    dt = fromYmdhms 1970 1 1 1 0 0\n    dt2 = addHours dt dt.time.hour\n    dt2 == fromYmdhmsn 1970 1 1 2 0 0 0\n\nexpect  # NO CRASH\n    dt = fromYmdhms 1970 1 1 1 0 0\n    dt2 = addHours 1\n    dt2 == fromYmdhmsn 1970 1 1 2 0 0 0\n\nexpect #  NO CRASH\n    dt = fromYmdhmsn 1970 1 1 1 0 0 1\n    dt2 = addNanoseconds dt dt.time.nanosecond #\n    dt2 == fromYmdhmsn 1970 1 1 1 0 0 2\n</code></pre></div>",
        "id": 435585622,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714137745
    },
    {
        "content": "<p>Okay, I seem to have found the issue. I discovered I had an integer overflow in addHours if I passed any number type smaller than a 64-bit int into addHours. Adding a typecast to I64 on hours before multiplying by nanosPerHour solved both the overflow and the <code> Hit an erroneous type when creating a layout for '4.IdentId(21)' </code> crash.</p>\n<p>Gonna be switching gears for a little while, but when I come back, should have a good direction to look for a min repro. Looks like an int overflow is the base issue, then just need to identify the modifier which is unhandled to trigger the layout crash.</p>",
        "id": 435588150,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714138596
    },
    {
        "content": "<ul>\n<li><code>addHours</code> variations:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code># WILL CRASH:\naddHours : DateTime, Int * -&gt; DateTime\naddHours = \\dateTime, hours -&gt; addNanoseconds dateTime (hours * Const.nanosPerHour)\n\n# NO CRASH:\naddHours = \\dateTime, hours -&gt; addNanoseconds dateTime (Num.toI64 hours * Const.nanosPerHour)\n</code></pre></div>\n<ul>\n<li><code>expect</code> variations:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>expect # NO CRASH\n    dt = fromYmdhms 1970 1 1 0 0 0\n    addHours dt 1 == fromYmdhms 1970 1 1 2 0 0\n\nexpect # CRASH: INT OVERFLOW\n    dt = fromYmdhms 1970 1 1 0 0 0\n    addHours dt 1u32 == fromYmdhms 1970 1 1 2 0 0\n\nexpect # CRASH: ERRONEOUS TYPE FOR LAYOUT `4.IdentId(21)`\n    dt = fromYmdhms 1970 1 1 0 0 0\n    addHours dt dt.time.hour == fromYmdhms 1970 1 1 2 0 0\n</code></pre></div>",
        "id": 435590929,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714139515
    },
    {
        "content": "<p><a href=\"https://github.com/imclerran/Roc-IsoDate/blob/12bf40d9994756ccc11cc6652e68cd2967c81e71/package/DateTime.roc#L125-L138\">Updated git link with the 3 expects above</a></p>",
        "id": 435593460,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714140314
    },
    {
        "content": "<p>Okay, I've got the min repro. Its based on an integer overflow, when a mathematical operation is performed on an <code>Int *</code>, along with a constant defined in an external module. The constant must a derived value, where both the original value and the derivation are external to the current module, and the constant's value exceeds the maximum value of the type which is used as the <code>Int *</code>.</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"c1\"># MinRepro.roc</span>\n<span class=\"nx\">interface</span><span class=\"w\"> </span><span class=\"nx\">MinRepro</span>\n<span class=\"w\">    </span><span class=\"nx\">exposes</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"nx\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"nx\">External</span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"nx\">externalDerivedConst</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n\n<span class=\"nv\">foo</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Int</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">U16</span>\n<span class=\"nv\">foo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">n</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">toU16</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">n</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">externalDerivedConst</span><span class=\"p\">)</span>\n\n<span class=\"nx\">expect</span><span class=\"w\"> </span><span class=\"nx\">foo</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"nx\">u8</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">externalDerivedConst</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"c1\"># External.roc</span>\n<span class=\"nx\">interface</span><span class=\"w\"> </span><span class=\"nx\">External</span>\n<span class=\"w\">    </span><span class=\"nx\">exposes</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"nx\">externalDerivedConst</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"nx\">imports</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n\n<span class=\"nv\">externalBaseConst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">256</span>\n<span class=\"nv\">externalDerivedConst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nx\">externalBaseConst</span>\n</code></pre></div>\n<p>Crashes with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">This</span><span class=\"w\"> </span><span class=\"n\">expectation</span><span class=\"w\"> </span><span class=\"n\">crashed</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">running</span>:\n\n<span class=\"mi\">10</span><span class=\"err\">â”‚</span><span class=\"w\">  </span><span class=\"n\">expect</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"k\">u8</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">externalDerivedConst</span>\n<span class=\"w\">     </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span>\n\n<span class=\"n\">The</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"w\"> </span><span class=\"n\">reported</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">message</span>:\n\n<span class=\"nc\">Hit</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">erroneous</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">when</span><span class=\"w\"> </span><span class=\"n\">creating</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">layout</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"mf\">4.</span><span class=\"n\">IdentId</span><span class=\"p\">(</span><span class=\"mi\">21</span><span class=\"p\">)</span><span class=\"err\">`</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">passed</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mi\">333</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">.</span>\n</code></pre></div>",
        "id": 435666903,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714169845
    },
    {
        "content": "<p>Going to file an issue now.</p>",
        "id": 435667176,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714170013
    },
    {
        "content": "<p>Okay, I've filed an issue <a href=\"https://github.com/roc-lang/roc/issues/6682\">here</a>. I've provided better detail there.</p>",
        "id": 435671433,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714173048
    },
    {
        "content": "<p>Additionally, I've found that for 4 different ways to define the same constant, I get 3 distinct failure modes. Only one of four produces the expected result, which is a type mismatch error.</p>",
        "id": 435671488,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714173115
    },
    {
        "content": "<p>Depending on how I define the constant I get: <br>\n1) successful compilation, and a mathematically incorrect result. <br>\n2) Rust panic and crash. <br>\n3) Roc crash with opaque error described above. </p>\n<p>I've also described how to reproduce all 3 of these results (and the success mode) in my issue comments.</p>",
        "id": 435671628,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1714173217
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"518883\">Ian McLerran</span> has marked this topic as resolved.</p>",
        "id": 435671799,
        "sender_full_name": "Notification Bot",
        "timestamp": 1714173358
    },
    {
        "content": "<p>Thanks for the thorough investigation <span class=\"user-mention\" data-user-id=\"518883\">@Ian McLerran</span> :)</p>",
        "id": 435735302,
        "sender_full_name": "Anton",
        "timestamp": 1714209848
    }
]