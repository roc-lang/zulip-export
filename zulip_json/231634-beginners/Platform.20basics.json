[
    {
        "content": "<p>Hello,<br>\nI am coming from nodes/js/ts environment and just stumble upon Roc.</p>\n<p>I am sorry for being stupid, but I somehow cannot wrap my head about the relationship between core Roc lang and platform. How is it comparable to other languages where you typically have the lang itself, some standard library and various frameworks on top of that?</p>\n<p>Also as I understand from few posts, Roc on its own cannot handle IO and is reliant on platform. Isn't it quite limiting to not have such important feature in the basic package? Is there some strong reason to have it this way?</p>",
        "id": 467735054,
        "sender_full_name": "Michal Timko",
        "timestamp": 1725518746
    },
    {
        "content": "<p>G'day <span class=\"user-mention\" data-user-id=\"748533\">@Michal Timko</span> , welcome <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> </p>\n<p>Have you seen this guide? <a href=\"https://www.roc-lang.org/platforms\">https://www.roc-lang.org/platforms</a></p>",
        "id": 467737773,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725519601
    },
    {
        "content": "<p>I read through that. <br>\nIt looks like platform is something like both external library and interface between Roc and another lang, that actually compile some executable from the code.</p>\n<p>But the it raise another questions like if it doesn't make Roc just nice interface for Rust and what is possible to do with Roc without platform (can I even compile it to executable without platform?)</p>\n<p>So for me is unclear what type of entity the platform is and what I can expect from it. But maybe when i try to build something, it will start making sense.</p>",
        "id": 467740321,
        "sender_full_name": "Michal Timko",
        "timestamp": 1725520215
    },
    {
        "content": "<p>Yeah, I definitely recommend you try roc out. Maybe checkout the basic-cli and basic-webserver first. You could then also look at roc-wasm4 (a game platform), or one of the others.</p>",
        "id": 467740714,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725520335
    },
    {
        "content": "<p>My background is web developer, so my first intuition is \"how to build server with this?\"<br>\nAnd when I read a bit about platforms and the IO limitations, second question was \"Can I build https server with this, if I need both web based api and IO in one platform?\"</p>\n<p>So I will see, what I can do.</p>",
        "id": 467742017,
        "sender_full_name": "Michal Timko",
        "timestamp": 1725520667
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"748533\">@Michal Timko</span> I think Roc's platforms make more explicit the relationship we have to lower level languages. The reason we use JS to write webservers is because we don't want to think about how to do stuff like manage memory or access resources, we want a PL that has done that adequately for us.</p>",
        "id": 467745191,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1725521342
    },
    {
        "content": "<p>Roc functions as a language that is easy to write in and think about, and actively talks to someone else for the important stuff. But I'd rather write my logic in an easy language like Roc and have Rust do the hard stuff that needs to be done particularly and efficiently</p>",
        "id": 467745490,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1725521413
    },
    {
        "content": "<p>JS doesn't go quite as far, but there are a lot of \"performance critical\" libs written in C that get wrapped in JS. Platforms work a similar way to that FFI</p>",
        "id": 467745693,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1725521488
    },
    {
        "content": "<p>Shameless plug for my demo app <a href=\"https://github.com/lukewilliamboswell/roc-htmx-tailwindcss-demo\">https://github.com/lukewilliamboswell/roc-htmx-tailwindcss-demo</a></p>",
        "id": 467748533,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725522252
    },
    {
        "content": "<p>If you're coming from a web background, and looking for something to hack around with... you're welcome to play with that and if you want to make a PR with any features I'd be happy to review.</p>",
        "id": 467748663,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725522291
    },
    {
        "content": "<p>The goal of that demo is to be a good starting point for building web apps with roc, and demonstrate how to use familiar technologies like htmx and tailwindcss. </p>\n<p>There's a lot more we could add in there, I just get distracted easily with other things <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 467748920,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725522359
    },
    {
        "content": "<p>Thank you,<br>\nwill look into it.</p>",
        "id": 467749154,
        "sender_full_name": "Michal Timko",
        "timestamp": 1725522415
    },
    {
        "content": "<blockquote>\n<p>Can I build https server with this, if I need both web based api and IO in one platform?</p>\n</blockquote>\n<p><a href=\"https://github.com/roc-lang/basic-webserver\">basic-webserver</a> has both, it support for example <a href=\"https://roc-lang.github.io/basic-webserver/File/#write\">File.write</a>, <a href=\"https://roc-lang.github.io/basic-webserver/Stdout/#line\">Stdout.line</a> and <a href=\"https://roc-lang.github.io/basic-webserver/Http/#get\">Http.get</a>, ...</p>",
        "id": 468070292,
        "sender_full_name": "Anton",
        "timestamp": 1725600178
    },
    {
        "content": "<p>Yeah...I already realize it too. It just that in one speech Feldman mention something along the line that you probably don't need IO for web based apps, so I just assume that web oriented platforms are without IO...silly me.</p>",
        "id": 468080906,
        "sender_full_name": "Michal Timko",
        "timestamp": 1725603585
    }
]