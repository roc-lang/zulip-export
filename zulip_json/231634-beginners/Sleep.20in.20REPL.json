[
    {
        "content": "<p><code>Sleep 10000</code> does not seem to actually sleep in the REPL. How can I get it to sleep? And which platform is it running? How can I print stuff?</p>",
        "id": 449762212,
        "sender_full_name": "Aurélien Geron",
        "timestamp": 1720409180
    },
    {
        "content": "<p>The REPL isn't running a platform.</p>",
        "id": 449762270,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720409218
    },
    {
        "content": "<p>There are no Effects available</p>",
        "id": 449762303,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720409230
    },
    {
        "content": "<p>You can read more about it in <code>crates/repl_wasm</code> <a href=\"https://github.com/roc-lang/roc/tree/main/crates/repl_wasm\">https://github.com/roc-lang/roc/tree/main/crates/repl_wasm</a></p>",
        "id": 449762489,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720409326
    },
    {
        "content": "<p>Oh, wait your asking about the roc cli REPL not the web REPL.</p>",
        "id": 449762717,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720409460
    },
    {
        "content": "<p>I think that is in <code>crates/repl_cli</code></p>",
        "id": 449762792,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720409518
    },
    {
        "content": "<p>And also doesn't have any Effects</p>",
        "id": 449762853,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720409533
    },
    {
        "content": "<p>Though I really don't have much familiarity with this part of the codebase</p>",
        "id": 449762932,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720409587
    },
    {
        "content": "<p>Definitely a little off-topic from your question... but I thought we discussed somewhere an idea that would enable platforms to provide something and enable REPL-like experiences. Like you could have basic-cli provide something, and then when you run <code>roc repl URL/to/platform</code> or something you could be in a REPL with basic-cli Effects available.</p>",
        "id": 449763183,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720409748
    },
    {
        "content": "<p>Just a vague recollection, I'm not sure it got seriously discussed or proposed.</p>",
        "id": 449763287,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720409793
    },
    {
        "content": "<p>Thanks Luke, that's very helpful.</p>",
        "id": 449766090,
        "sender_full_name": "Aurélien Geron",
        "timestamp": 1720411062
    },
    {
        "content": "<p>Having effects in the REPL, and ideally being able to choose the platform, that would make the REPL much more useful.</p>",
        "id": 449766537,
        "sender_full_name": "Aurélien Geron",
        "timestamp": 1720411316
    },
    {
        "content": "<p>What are you wanting to do with it? </p>\n<p>You just reminded me, <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> built something that makes it possible to use Roc in a jupyter notebook I thought. I wonder if that is still working? I'd love to add that to roc-awesome if it's something people can easily use.</p>",
        "id": 449766739,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720411438
    },
    {
        "content": "<p><a href=\"https://gist.github.com/ayazhafiz/2ecb5d07393421c06fde945784efb384\">https://gist.github.com/ayazhafiz/2ecb5d07393421c06fde945784efb384</a></p>",
        "id": 449767923,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1720412165
    },
    {
        "content": "<p>you also need a branch of the compiler - <a href=\"https://github.com/roc-lang/roc/tree/patch-for-jupyter-kernel\">https://github.com/roc-lang/roc/tree/patch-for-jupyter-kernel</a></p>",
        "id": 449767968,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1720412202
    },
    {
        "content": "<p>Any reason why we don't just rebase that and merge it so anyone can use env <code>JUPYTER_KERNEL</code> just from a nightly?</p>",
        "id": 449768033,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720412276
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"734214\">Aurélien Geron</span> <a href=\"#narrow/stream/231634-beginners/topic/Sleep.20in.20REPL/near/449766537\">said</a>:</p>\n<blockquote>\n<p>Having effects in the REPL, and ideally being able to choose the platform, that would make the REPL much more useful.</p>\n</blockquote>\n<p>Yeah, I think we could make a bespoke basic CLI like platform that was for the repl, but I dont think we could ever make it platform generic. Just due to how platforms work. though I would guess instead of adding effects and platform picking to the repl, it would make more sense to add repls to platforms where they fit. But yeah, something to think about more</p>",
        "id": 449768771,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720412667
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> it's a bit hacky, but feel free to open a PR for it if you think it's worth landing</p>",
        "id": 449770619,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1720413377
    },
    {
        "content": "<p>Maybe Richard's safe scripting idea is just the roc cli/REPL... the Effects can be provided to the REPL, and if you run a roc file without any header it is assumed to be a REPL input.</p>",
        "id": 449771497,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720413875
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/231634-beginners/topic/Sleep.20in.20REPL/near/449766739\">said</a>:</p>\n<blockquote>\n<p>What are you wanting to do with it? </p>\n</blockquote>\n<p>Pretty much anything I could do in a Python or Ruby shell, i.e. just like a basic-cli app, I suppose (but I'm still learning Roc, so this might not make any sense)</p>",
        "id": 449774394,
        "sender_full_name": "Aurélien Geron",
        "timestamp": 1720414742
    },
    {
        "content": "<p>I think the safe scripting idea would be an alternative version of basic CLI that can run any basic CLI script but will ask before running effects. Probably would be a feature flag on basic CLI that gets released. So it always has the exact same API and is easy to switch to. I don't think it relates to the repl.</p>\n<p>As for repl+ basic CLI....I have no idea how that would be driven or state would be stored, but theoretically, basic CLI could run in a repl mode where it compiles code as shared libraries and runs them.....but no idea how state would function. This is where a roc interpreter would be exceptionally helpful.</p>",
        "id": 449776760,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720415913
    },
    {
        "content": "<p>And we've talked about needing an interpreter using the dev backends anyway for comptime calculation of constants.</p>",
        "id": 449776836,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1720415979
    },
    {
        "content": "<p>I don't think it would use the dev backend. I think it would be a standalone think that walks one of the irs.</p>",
        "id": 449778088,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720416744
    },
    {
        "content": "<p>Maybe converts it once into a more execution friendly form</p>",
        "id": 449778109,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720416762
    },
    {
        "content": "<p>We talk about using the dev backend for this, but it has a lot of complication that an interpreter wouldn't</p>",
        "id": 449778148,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720416785
    },
    {
        "content": "<p>I think it would be nice to have a repl for the basic-webserver platform. Running the platform makes no sense without a main function. The only solution i see is platforms providing default implementation and an ability to swap it out with a new repl defined function.</p>",
        "id": 449883415,
        "sender_full_name": "Adrian",
        "timestamp": 1720448506
    },
    {
        "content": "<p>For basic webserver? I'm not sure I follow how that would be expected to work in general. Would it give you a request and expect you to write the handler directly in the repl?</p>",
        "id": 449906934,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720453072
    },
    {
        "content": "<p>at the start of the repl I would probably have to provide a main function to the platform</p>",
        "id": 449907215,
        "sender_full_name": "Adrian",
        "timestamp": 1720453149
    },
    {
        "content": "<p>Ok, but after that how do you interact with it?</p>",
        "id": 449907465,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720453234
    },
    {
        "content": "<p>Oh I see the problem. I imagined i could replace the current main function dynamically.</p>",
        "id": 449907586,
        "sender_full_name": "Adrian",
        "timestamp": 1720453295
    },
    {
        "content": "<p>Sounds more like hot code reloading than a repl</p>",
        "id": 449907703,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720453325
    },
    {
        "content": "<p>Which I assume basic webserver could support</p>",
        "id": 449907737,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720453341
    },
    {
        "content": "<p>I see... Perhaps i'm misusing repls. Could you please quickly point out the usage of basic-cli in a repl?</p>",
        "id": 449908082,
        "sender_full_name": "Adrian",
        "timestamp": 1720453463
    },
    {
        "content": "<p>With basic CLI (if we build a proper repl that can pause for it), it is generally a single flow of execution. So it would just interrupt after each roc command and wait for more code. It just needs to a way to store roc state and continue execution. I think that could make sense. You might do something totally one off with this (this would be like how most people use python repl or like an interactive terminal session)</p>\n<p>Basic webserver is different because it runs multithreaded and only maps a request to a response. I don't think it has a clean separation for repl work. On top of that, it doesn't really make sense to do something one off. Instead you may just want to play with various different request handlers. Probably actually want hot code reloading where when you would make a new request handler and save, then the webserver swaps any new requests over to that instead.</p>",
        "id": 449909849,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720453899
    },
    {
        "content": "<p>Oh I see. I was sort of trying to achieve dropping from a live system into a sort of debugger. Perhaps repl isn't the most appropriate place for this</p>",
        "id": 449910733,
        "sender_full_name": "Adrian",
        "timestamp": 1720454038
    },
    {
        "content": "<p>Ah</p>",
        "id": 449912353,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720454287
    },
    {
        "content": "<p>Yeah, I see.</p>",
        "id": 449912446,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720454304
    },
    {
        "content": "<p>You could use something like gdb, lldb, or any debugger that supports compiled languages like c/c++/rust. But our debug info is especially limited and I would not expect it to go well.</p>",
        "id": 449912852,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720454368
    },
    {
        "content": "<p>We don't have any sort of interactive experience for what you want to do.</p>",
        "id": 449913051,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720454399
    },
    {
        "content": "<p>I think the best way today is dbg statements and running through code</p>",
        "id": 449913435,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720454448
    },
    {
        "content": "<p>That was the workflow i adopted, perhaps it would work even better with hot reloading. Maybe I've gone too far off topic. So TLDR: Only some platforms can support the Repl.  Default implementations of platform provided functions not yet necessary.</p>",
        "id": 449916856,
        "sender_full_name": "Adrian",
        "timestamp": 1720455041
    }
]