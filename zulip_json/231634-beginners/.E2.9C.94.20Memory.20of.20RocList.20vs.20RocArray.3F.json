[
    {
        "content": "<p>I'm a bit confused about what a RocList is supposed to represent. A quick glance at the implementation seems to indicate it's a flat (heap) array. So with a <code>List U32</code> can I assume that I get a single contiguous chunk of memory? Or do I get a \"linked list\" with pointers to individual U32s? <br>\nWhat if I have a <code>List BigBooba</code>, do I get an array of pointers, or a linked list of Boobas or are all Boobas on the heap next to each other?<br>\nWould a RocArray guarantee memory adjacency or does RocList already come with such a guarantee ???<br>\nSorry for all the questions, I'm new to Roc!!</p>",
        "id": 406017916,
        "sender_full_name": "Shaiden Spreitzer",
        "timestamp": 1701770316
    },
    {
        "content": "<p>I find the zig builtin implementation easier to understand <a href=\"https://github.com/roc-lang/roc/blob/main/crates/compiler/builtins/bitcode/src/list.zig\">https://github.com/roc-lang/roc/blob/main/crates/compiler/builtins/bitcode/src/list.zig</a></p>",
        "id": 406019076,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701770550
    },
    {
        "content": "<p>Single contiguous chnk of memory I think is the answer.</p>",
        "id": 406019681,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701770679
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/231634-beginners/topic/Memory.20of.20RocList.20vs.20RocArray.3F/near/406019076\">said</a>:</p>\n<blockquote>\n<p>I find the zig builtin implementation easier to understand <a href=\"https://github.com/roc-lang/roc/blob/main/crates/compiler/builtins/bitcode/src/list.zig\">https://github.com/roc-lang/roc/blob/main/crates/compiler/builtins/bitcode/src/list.zig</a></p>\n</blockquote>\n<p>I also came across  this <a href=\"https://github.com/roc-lang/roc/blob/main/crates/roc_std/src/roc_list.rs\">https://github.com/roc-lang/roc/blob/main/crates/roc_std/src/roc_list.rs</a><br>\nAre these equivalent?</p>",
        "id": 406019982,
        "sender_full_name": "Shaiden Spreitzer",
        "timestamp": 1701770757
    },
    {
        "content": "<p>Presumably I guess. I'm not really familiar with this, but the compiler is in Rust using that crate, and the builtins are in Zig using the zig module. And the talk to each other no issue.</p>",
        "id": 406020387,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701770860
    },
    {
        "content": "<p>They should be equivalent, but the rust version is more likely to be buggy, out or date, or wrong in places. I also, think the zig version is a lot more direct and easy to understand</p>",
        "id": 406091599,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701792437
    },
    {
        "content": "<p>Anyway, yeah our <code>RocList</code> is really like a C++ vector or Java ArrayList.</p>",
        "id": 406091769,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701792477
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"671448\">Shaiden Spreitzer</span> has marked this topic as resolved.</p>",
        "id": 406094256,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701792927
    }
]