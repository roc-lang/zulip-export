[
    {
        "content": "<p>When I run <code>cargo test --all</code> in a nix dev shell on current main on my x86_64 Intel linuxbook, I get four failures in the REPL tests, like the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>---- tests::identity_lambda stdout ----\nthread &#39;tests::identity_lambda&#39; panicked at crates/repl_test/src/cli.rs:96:13:\nrepl exited unexpectedly before finishing evaluation. Exit status was ExitStatus(unix_wait_status(25856)) and stderr was &quot;&quot;\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>If I run the example test in the repl myself, I get:</p>\n<div class=\"codehilite\"><pre><span></span><code>[smores@smoresbook:~/dev/roc]$ RUST_BACKTRACE=1 cargo run --bin roc -- repl\n    Finished dev [unoptimized + debuginfo] target(s) in 0.40s\n     Running `target/debug/roc repl`\n\n  The rockin&#39; roc repl\n────────────────────────\n\nEnter an expression, or :help, or :q to quit.\n\n» \\x -&gt; x\nthread &#39;main&#39; panicked at crates/compiler/gen_dev/src/generic64/mod.rs:1085:9:\nassertion `left == right` failed\n  left: 0\n right: 1\nstack backtrace:\n...\n   4: build_fn_call&lt;roc_gen_dev::generic64::x86_64::X86_64GeneralReg, roc_gen_dev::generic64::x86_64::X86_64FloatReg, roc_gen_dev::generic64::x86_64::X86_64Assembler, roc_gen_dev::generic64::x86_64::X86_64SystemV&gt;\n             at ./crates/compiler/gen_dev/src/generic64/mod.rs:1085:9\n   5: build_expr&lt;roc_gen_dev::generic64::Backend64Bit&lt;roc_gen_dev::generic64::x86_64::X86_64GeneralReg, roc_gen_dev::generic64::x86_64::X86_64FloatReg, roc_gen_dev::generic64::x86_64::X86_64Assembler, roc_gen_dev::generic64::x86_64::X86_64SystemV&gt;&gt;\n             at ./crates/compiler/gen_dev/src/lib.rs:829:25\n   6: build_stmt&lt;roc_gen_dev::generic64::Backend64Bit&lt;roc_gen_dev::generic64::x86_64::X86_64GeneralReg, roc_gen_dev::generic64::x86_64::X86_64FloatReg, roc_gen_dev::generic64::x86_64::X86_64Assembler, roc_gen_dev::generic64::x86_64::X86_64SystemV&gt;&gt;\n             at ./crates/compiler/gen_dev/src/lib.rs:595:17\n...\n</code></pre></div>\n<p>I'm not seeing this in the CI tests, which are all passing for recent changes, but this is very consistent for me. Has anyone seen this issue before?</p>",
        "id": 455311886,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722412858
    },
    {
        "content": "<p>Do you get any failures with <code>cargo test --release</code>?</p>",
        "id": 455314333,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1722413593
    },
    {
        "content": "<p>I don't think all the tests are included in CI normally</p>",
        "id": 455314389,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1722413605
    },
    {
        "content": "<p>Let's try it</p>",
        "id": 455314411,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722413610
    },
    {
        "content": "<p>I confirmed that this happens on a clean clone of the repo</p>",
        "id": 455314517,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722413635
    },
    {
        "content": "<p>It may be that that test has regressed and it's not in CI. Maybe some of the more expensive tests aren't automatic, and have to be checked manually.</p>",
        "id": 455314711,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1722413683
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> will be able to tell us I'm sure</p>",
        "id": 455314829,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1722413711
    },
    {
        "content": "<p>The issue seems to be coming from returning a value in the REPL that is a lambda/function. When I debug print running <code>\\x -&gt; x</code> in the REPL, I get this:</p>\n<div class=\"codehilite\"><pre><span></span><code>[smores@smoresbook:~/dev/roc]$ cargo run --bin roc -- repl\n    Finished dev [unoptimized + debuginfo] target(s) in 0.23s\n     Running `target/debug/roc repl`\n\n  The rockin&#39; roc repl\n────────────────────────\n\nEnter an expression, or :help, or :q to quit.\n\n» \\x -&gt; x\n[crates/compiler/gen_dev/src/generic64/mod.rs:1085:9] (dst, &amp;fn_name, &amp;args, &amp;arg_layouts) = (\n    `#UserApp.setjmp`,\n    &quot;roc_setjmp&quot;,\n    [\n        `#UserApp.buffer`,\n    ],\n    [\n        InLayout(U64),\n    ],\n)\n[crates/compiler/gen_dev/src/generic64/mod.rs:1085:9] (dst, &amp;fn_name, &amp;args, &amp;arg_layouts) = (\n    `#UserApp.result`,\n    &quot;#UserApp_replOutput_13093313482219921989&quot;,\n    [],\n    [\n        InLayout(VOID),\n    ],\n)\nthread &#39;main&#39; panicked at crates/compiler/gen_dev/src/generic64/mod.rs:1086:9:\nassertion `left == right` failed\n  left: 0\n right: 1\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>Which shows that the <code>result</code> we try to store our REPL output into has zero args, but a single arg layout <code>InLayout(VOID)</code></p>",
        "id": 455315196,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722413797
    },
    {
        "content": "<p>I'm building the release tests now, but it may take a few minutes on this older laptop</p>",
        "id": 455315315,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722413824
    },
    {
        "content": "<p>The above issue is not the case for functions that are called, like <code>(\\x -&gt; x) 123</code>, or values, like <code>123</code></p>",
        "id": 455315492,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722413869
    },
    {
        "content": "<p>I'll look into it further while this builds, and also check if these tests run in the CI</p>",
        "id": 455315694,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722413922
    },
    {
        "content": "<p>Actually, we are successfully running this specific test <code>identity_lambda</code> in the CI tests successfully:  <a href=\"https://github.com/roc-lang/roc/actions/runs/10164028461/job/28108433906?pr=6941#step:8:357\">https://github.com/roc-lang/roc/actions/runs/10164028461/job/28108433906?pr=6941#step:8:357</a></p>",
        "id": 455316265,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722414058
    },
    {
        "content": "<p>However, they run successfully in <code>--release</code> mode in the CI (specifically --profile release-with-lto), which is also true on my local machine. So this error occurs in dev mode, but not release mode, probably because the failing assertion is debug only.</p>",
        "id": 455316806,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722414230
    },
    {
        "content": "<p>Also, the assertion fails with 0 args and 1 layout, which means even when we don't check the assertion in release mode, we won't fail because we iterate over the args, not the layouts</p>",
        "id": 455316975,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722414279
    },
    {
        "content": "<p>Now that you say it, I remember why I just always use <code>--release</code> and it was something like this. I always assumed it was just some tests failed if they didn't have an optimised build. I'm really not sure though.</p>",
        "id": 455317241,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1722414363
    },
    {
        "content": "<p>Sounds like we have a few places where we have failed assertions that point to issues, but don't cause failures in behavior</p>",
        "id": 455317320,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1722414394
    },
    {
        "content": "<p>Yeah, I'd really like to give these assertions and the issues they raise some love because they're early checks that may highlight a problem  that is much harder to debug without the assertion. I'll do tests with debug on CI and skip any that currently fail so we at least prevent future regressions.</p>",
        "id": 455375593,
        "sender_full_name": "Anton",
        "timestamp": 1722432569
    },
    {
        "content": "<p>Related issues: <a href=\"https://github.com/roc-lang/roc/issues/6946\">#6946</a> <a href=\"https://github.com/roc-lang/roc/issues/6947\">#6947</a><br>\nPR to run debug tests on CI: <a href=\"https://github.com/roc-lang/roc/pull/6948\">PR#6948</a></p>",
        "id": 455392497,
        "sender_full_name": "Anton",
        "timestamp": 1722437317
    }
]