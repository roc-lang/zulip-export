[
    {
        "content": "<p>If a closure captures a parameter and that closure is used in-place (not stored somewhere for later use), does it have to create copies of the captures?</p>\n<div class=\"codehilite\"><pre><span></span><code>doSomething = \\model -&gt;\n    doSomethingElse model.item (\\item -&gt;\n        {model &amp; item})\n</code></pre></div>\n<p>does this have to copy <code>model</code>?</p>",
        "id": 481357257,
        "sender_full_name": "Jared Cone",
        "timestamp": 1731086863
    },
    {
        "content": "<p>It will copy any non-refcounted captures.</p>",
        "id": 481381355,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731097462
    },
    {
        "content": "<p>For refcounted captures, it will increment the refcount and hold a reference</p>",
        "id": 481381391,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731097482
    },
    {
        "content": "<p>How can you know if it's a refcounted capture?</p>",
        "id": 481381898,
        "sender_full_name": "Jared Cone",
        "timestamp": 1731097747
    },
    {
        "content": "<p>simple fixed sized types like <code>i32</code>, <code>f32</code> or a record or tuple containing only these are not refcounted, while things like <code>Str</code> or <code>List a</code> or records or tuples containing these are</p>",
        "id": 481382796,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1731098185
    },
    {
        "content": "<p>Just depends on the data type. Anything on the heap is refcount: Box, Str, List, recursive tag...I think that's it in roc. Everything else is not</p>",
        "id": 481382813,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731098192
    },
    {
        "content": "<p>A record or tuple would be copied, but all of its refcounted fields would just be referenced.</p>",
        "id": 481382852,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731098221
    },
    {
        "content": "<p>So a gigantic record could be problematic.</p>",
        "id": 481382887,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731098239
    },
    {
        "content": "<p>So if it's a record it does make a copy, but if the record has a List field, that list points to the same memory as the thing it was copied from. Makes sense thanks!</p>",
        "id": 481383158,
        "sender_full_name": "Jared Cone",
        "timestamp": 1731098362
    },
    {
        "content": "<p>Yep</p>",
        "id": 481383198,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1731098385
    }
]