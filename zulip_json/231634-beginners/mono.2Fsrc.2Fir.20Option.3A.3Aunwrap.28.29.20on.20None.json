[
    {
        "content": "<p>hey y'all running into a compiler panic when trying to work with dicts. This is the error I'm getting</p>\n<div class=\"codehilite\" data-code-language=\"stderr\"><pre><span></span><code>thread '&lt;unnamed&gt;' panicked at crates/compiler/mono/src/ir.rs:6166:56:\ncalled `Option::unwrap()` on a `None` value\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>and  this is the code causing it</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>partOne = \\(rules, updates) -&gt;\n    rulesDict = List.walk rules (Dict.empty {}) \\dict, (k, r) -&gt;\n        Dict.update dict k \\res -&gt; when res is\n            Err Missing -&gt; Ok [r]\n            Ok rs -&gt; Ok (List.append rs r)\n    rulesDict\n</code></pre></div>\n<p>was hoping someone could point me to a workaround</p>",
        "id": 486265440,
        "sender_full_name": "Zenna",
        "timestamp": 1733392662
    },
    {
        "content": "<p>Does it help if you add a type annotation for <code>rulesDict</code> or the function?</p>",
        "id": 486266631,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733393034
    },
    {
        "content": "<p>I suspect the issue here might be that the compiler is having trouble inferring the type for the <code>Dict</code></p>",
        "id": 486266813,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733393093
    },
    {
        "content": "<p>it does! thank you :)</p>",
        "id": 486268202,
        "sender_full_name": "Zenna",
        "timestamp": 1733393578
    },
    {
        "content": "<p>Ideally the compiler shouldn't crash, and at least give a nice error message.</p>",
        "id": 486268353,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733393628
    },
    {
        "content": "<p>I've had a brief look at it, but mono is a bit of black magic to me and I'm not sure how we might thread an error back through the compiler from there.</p>",
        "id": 486268895,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733393799
    },
    {
        "content": "<p>Two things about mono errors:</p>\n<ul>\n<li>It's likely that whatever's causing this error is upstream from mono, so we probably have a bug somewhere else</li>\n<li>You're right that it's tricky to thread errors back up from mono, which is why we should just keep a list of mono errors and report them if any are found in mono. We might already be doing this, to be fair...</li>\n</ul>",
        "id": 486269750,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733394065
    }
]