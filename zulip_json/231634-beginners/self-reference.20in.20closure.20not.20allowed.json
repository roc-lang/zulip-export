[
    {
        "content": "<p>I'm a bit confused why</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">run2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">res</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">await</span><span class=\"w\"> </span><span class=\"nx\">Stdin</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"nx\">await</span><span class=\"w\"> </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"> </span><span class=\"nx\">res</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">run2</span><span class=\"w\"></span>\n</code></pre></div>\n<p>is not allowed. I know simple self-reference in eagerly evaluated languages doesn't work, but here the evaluation <em>should</em> only happen once the closure after <code>Stdin.line</code> gets called? This is resolvable by giving <code>run2</code> an empty argument, but feels kind of strange.</p>",
        "id": 303325839,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1665436145
    },
    {
        "content": "<p>Yeah, I think that might just be an oversight. We do a syntactic check to see if something looks like a function, and if not and it's self-recursive, you get that error</p>",
        "id": 303326515,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1665436563
    },
    {
        "content": "<p>But in this case this is fine</p>",
        "id": 303326562,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1665436573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"487580\">@Gabriel Pickl</span> can you open an issue for this?</p>",
        "id": 303327513,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665437135
    },
    {
        "content": "<p>sure</p>",
        "id": 303328014,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1665437466
    },
    {
        "content": "<p>as a detail though: writing this without the backpassing syntactic sugar seems to result in the same error</p>",
        "id": 303328050,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1665437503
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/4291\">https://github.com/roc-lang/roc/issues/4291</a></p>",
        "id": 303328585,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1665437857
    },
    {
        "content": "<p>yep, that makes sense! Backpassing is just syntax sugar, and this error happens after desugaring</p>",
        "id": 303328611,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1665437881
    }
]