[
    {
        "content": "<p>So I have discovered what appears to be a strange bug somewhere in either Stdout in basic-cli, or with list destructuring (it occurs when the two are used in combination).</p>\n<p>Below is a screenshot of the garbled output, along with a debug statement, which shows the string itself is intact:<br>\n<a href=\"/user_uploads/22008/uIu6mvH7IeO9nDYJs-D23wiY/Screenshot-2025-01-27-at-07.27.21.png\">Screenshot 2025-01-27 at 07.27.21.png</a><br>\nAnd here is the snippet of code which produced that garbled output.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/uIu6mvH7IeO9nDYJs-D23wiY/Screenshot-2025-01-27-at-07.27.21.png\" title=\"Screenshot 2025-01-27 at 07.27.21.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1560x158\" src=\"/user_uploads/thumbnail/22008/uIu6mvH7IeO9nDYJs-D23wiY/Screenshot-2025-01-27-at-07.27.21.png/840x560.webp\"></a></div><div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">dbg</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">messages</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"no\">List</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">)</span>\n<span class=\"k\">when</span><span class=\"w\"> </span><span class=\"n\">messages</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">    </span><span class=\"o\">[..</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"no\">Stdout</span><span class=\"o\">.</span><span class=\"n\">line!</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"no\">Ok</span><span class=\"p\">({})</span>\n</code></pre></div>",
        "id": 496146239,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737990836
    },
    {
        "content": "<p>This garbling is consistent and repeatable. Here are some interesting notes:</p>\n<ul>\n<li>The bug is found with list destructuring, but using <code>List.last</code> does not garble the output</li>\n<li>inserting a <code>dbg</code> statement inside the destructured when block prevents the bug</li>\n</ul>",
        "id": 496146733,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737990951
    },
    {
        "content": "<p>So the following does not produce the garbled output, but if the debug statement is removed, the output will consistently be garbled.</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"n\">messages</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">    </span><span class=\"o\">[..</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"n\">dbg</span><span class=\"w\"> </span><span class=\"n\">message</span>\n<span class=\"w\">        </span><span class=\"no\">Stdout</span><span class=\"o\">.</span><span class=\"n\">line!</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"no\">Ok</span><span class=\"p\">({})</span>\n</code></pre></div>",
        "id": 496147309,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737991098
    },
    {
        "content": "<p>I haven't been able to produce a true min-repro yet, but the following short program should produce it reliably: <a href=\"https://gist.github.com/imclerran/18464a2415d41b773f608d7ce2140fcf\">gist</a></p>",
        "id": 496150148,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737991822
    },
    {
        "content": "<p>Btw, on the newest builds of roc, the <code>Path</code> <a href=\"https://github.com/roc-lang/basic-cli/pull/319\">error</a> in basic-cli is encountered during build, but if you run with <code>roc run garble.roc</code>, the program runs just fine, and the garbling error can be observed.</p>",
        "id": 496164469,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737995367
    },
    {
        "content": "<p>I vote refcounting bug related to the data return from http or some why that data is processed....though a bit surprising it works with last but not the when....</p>",
        "id": 496164915,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1737995493
    },
    {
        "content": "<p>Hopefully you can find a repro that doesn't require hitting an open ai API endpoint.</p>",
        "id": 496165084,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1737995532
    },
    {
        "content": "<p>Lemme try and play around with this and see what I can do. Should be able to reproduce without a paywall endpoint by running LM studio (or Ollama, etc), and pointing the client there instead.</p>",
        "id": 496165606,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737995691
    },
    {
        "content": "<p>But i'll see if I can reproduce without any extra dependencies and a free endpoint</p>",
        "id": 496165690,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737995714
    },
    {
        "content": "<p>If you've got LM studio (or Ollama, etc) installed, set the api parameter like below:</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">api</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"no\">OpenAICompliant</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">url</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://127.0.0.1:1234/v1/chat/completions\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"n\">model</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"phi-3.1-mini-128k-instruct\"</span><span class=\"w\"> </span><span class=\"c1\"># nice small model, but any will do</span>\n<span class=\"n\">client</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"no\">Chat</span><span class=\"o\">.</span><span class=\"n\">new_client</span><span class=\"p\">({</span><span class=\"w\"> </span><span class=\"n\">api</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">model</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"ss\">api_key</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"\"</span><span class=\"w\"> </span><span class=\"p\">})</span>\n</code></pre></div>",
        "id": 496166427,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737995940
    },
    {
        "content": "<p>Okay, new reproduction. Just relies on on <code>roc-json</code>, but not <code>roc-ai</code>, and pings a free, unauthenticated endpoint. <a href=\"https://gist.github.com/imclerran/9bcc7f7a81bdad822d663427abd2dc52\">Gist here</a></p>",
        "id": 496176223,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737998794
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/QVRP_4fFA5EjtP3KlDVIqAmS/Screenshot-2025-01-27-at-11.35.53.png\">Screenshot 2025-01-27 at 11.35.53.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/QVRP_4fFA5EjtP3KlDVIqAmS/Screenshot-2025-01-27-at-11.35.53.png\" title=\"Screenshot 2025-01-27 at 11.35.53.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"974x368\" src=\"/user_uploads/thumbnail/22008/QVRP_4fFA5EjtP3KlDVIqAmS/Screenshot-2025-01-27-at-11.35.53.png/840x560.webp\"></a></div>",
        "id": 496176416,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737998856
    },
    {
        "content": "<p>Can you make an issue <span class=\"user-mention\" data-user-id=\"518883\">@Ian McLerran</span>?</p>",
        "id": 496178509,
        "sender_full_name": "Anton",
        "timestamp": 1737999483
    },
    {
        "content": "<p>Yep, sure can</p>",
        "id": 496178592,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1737999506
    },
    {
        "content": "<p>Okay, issue filed here: <a href=\"https://github.com/roc-lang/roc/issues/7554\">#7554</a></p>",
        "id": 496182735,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738000875
    },
    {
        "content": "<p>Thanks, I've labeled it high priority</p>",
        "id": 496185397,
        "sender_full_name": "Anton",
        "timestamp": 1738001809
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"518883\">@Ian McLerran</span> what os are you on?</p>",
        "id": 496592115,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738169043
    },
    {
        "content": "<p>MacOS / Aarch64</p>",
        "id": 496592187,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738169059
    },
    {
        "content": "<p>I just tried to take a look at this on mac (latest roc) and it seems to be working.</p>",
        "id": 496592198,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738169060
    },
    {
        "content": "<p>I wonder if it was a basic cli bug somehow and the new basic cli testing release fixed it</p>",
        "id": 496592298,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738169097
    },
    {
        "content": "<p>Can you test and see if you are still hitting it? update to latest main on roc and run latest basic cli test release</p>",
        "id": 496592393,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738169121
    },
    {
        "content": "<p>Let me try rebuilding roc and cli, and see if I can still reproduce...</p>",
        "id": 496592404,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738169127
    },
    {
        "content": "<p>new basic cli url: <code>https://github.com/roc-lang/basic-cli/releases/download/0.19.0/Hj-J_zxz7V9YurCSTFcFdu6cQJie4guzsPMUi5kBYUk.tar.br</code></p>",
        "id": 496592457,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738169147
    },
    {
        "content": "<p>Okay, fresh build of roc, and updated the min repro to the new url for basic-cli 0.19.0 (\"Hj-J_z...\").</p>\n<p>Still getting the same garbling:<br>\n<a href=\"/user_uploads/22008/jDj36pV3LmE5U1jKXCB94Hfh/Screenshot-2025-01-29-at-10.54.04.png\">Screenshot 2025-01-29 at 10.54.04.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/jDj36pV3LmE5U1jKXCB94Hfh/Screenshot-2025-01-29-at-10.54.04.png\" title=\"Screenshot 2025-01-29 at 10.54.04.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1408x708\" src=\"/user_uploads/thumbnail/22008/jDj36pV3LmE5U1jKXCB94Hfh/Screenshot-2025-01-29-at-10.54.04.png/840x560.webp\"></a></div>",
        "id": 496594535,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738169802
    },
    {
        "content": "<p>It looks like it might be specific to release builds of roc (that or rare and only happen at random coincidence)</p>",
        "id": 496596026,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738170230
    },
    {
        "content": "<p>Hmmm... It happens to me <em>every</em> time I run the example, and has for several builds of roc (from source).</p>",
        "id": 496596508,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738170364
    },
    {
        "content": "<p>Sometimes it just truncates the beginning of the str when printing, presumably because the memory location contains non-printing whitespace.</p>",
        "id": 496596595,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738170396
    },
    {
        "content": "<p>But the str acquired from the list destructuring in this example will never contain \"est rerum\" as it should.</p>",
        "id": 496596769,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738170457
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> were you able to reproduce?</p>",
        "id": 496597274,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738170616
    },
    {
        "content": "<p>I'll give it a try</p>",
        "id": 496597467,
        "sender_full_name": "Anton",
        "timestamp": 1738170686
    },
    {
        "content": "<p>No, all good on Ubuntu 22.04 with latest TESTING release</p>",
        "id": 496598356,
        "sender_full_name": "Anton",
        "timestamp": 1738170946
    },
    {
        "content": "<p>Hmmm... let me try with the TESTING release. I'm on the latest from main</p>",
        "id": 496598608,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738171012
    },
    {
        "content": "<p>Still getting the garbled result with the TESTING release. Wonder what is unique on my machine...</p>",
        "id": 496611927,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738173304
    },
    {
        "content": "<p>Its very consistent for me</p>",
        "id": 496611959,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738173320
    },
    {
        "content": "<p>Hmm.. it is consistently corrupting <em>exactly the first 10</em> bytes each time. I changed the json endpoint to use an endpoint with 3 strings instead of 2, where \"body\" is the 3rd field, thinking maybe the number of bytes corrupted might change if I changed the size of the record. No change. Still exactly 10 bytes corrupted.</p>",
        "id": 496613542,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738173808
    },
    {
        "content": "<p>I went back to my roc-ai reproduction, and that is also corrupting exactly 10 bytes.</p>",
        "id": 496615648,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738174458
    },
    {
        "content": "<p>Does it repo with a debug build of roc? <code>cargo run repro.roc</code></p>",
        "id": 496615750,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738174499
    },
    {
        "content": "<p>Thats the same as <code>roc run repro.roc</code>, right?</p>",
        "id": 496616119,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738174629
    },
    {
        "content": "<p>If so, then yes.</p>",
        "id": 496616158,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738174643
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/muNTaXx_TJNtDt--VOpb4OLP/Screenshot-2025-01-29-at-12.18.00.png\">Screenshot 2025-01-29 at 12.18.00.png</a><br>\n<a href=\"/user_uploads/22008/J8elimfBWmcLohCIu0Ou5JBf/Screenshot-2025-01-29-at-12.24.50.png\">Screenshot 2025-01-29 at 12.24.50.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/muNTaXx_TJNtDt--VOpb4OLP/Screenshot-2025-01-29-at-12.18.00.png\" title=\"Screenshot 2025-01-29 at 12.18.00.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1012x364\" src=\"/user_uploads/thumbnail/22008/muNTaXx_TJNtDt--VOpb4OLP/Screenshot-2025-01-29-at-12.18.00.png/840x560.webp\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/22008/J8elimfBWmcLohCIu0Ou5JBf/Screenshot-2025-01-29-at-12.24.50.png\" title=\"Screenshot 2025-01-29 at 12.24.50.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1030x136\" src=\"/user_uploads/thumbnail/22008/J8elimfBWmcLohCIu0Ou5JBf/Screenshot-2025-01-29-at-12.24.50.png/840x560.webp\"></a></div>",
        "id": 496617562,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738175128
    },
    {
        "content": "<p>A debug build is different, for roc releases we pass <code>--release</code> to cargo.</p>",
        "id": 496618308,
        "sender_full_name": "Anton",
        "timestamp": 1738175392
    },
    {
        "content": "<p>So <code>cargo run repro.roc</code> in the roc repo will make a debug build of the compiler</p>",
        "id": 496618516,
        "sender_full_name": "Anton",
        "timestamp": 1738175457
    },
    {
        "content": "<p>I'm doing a debug build of roc right now. Should be done any second.</p>",
        "id": 496618553,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738175466
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/sS37OkOHMm5nSN0SjcWVZAq8/Screenshot-2025-01-29-at-12.31.50.png\">Screenshot 2025-01-29 at 12.31.50.png</a><br>\nStill occurring</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/sS37OkOHMm5nSN0SjcWVZAq8/Screenshot-2025-01-29-at-12.31.50.png\" title=\"Screenshot 2025-01-29 at 12.31.50.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1054x498\" src=\"/user_uploads/thumbnail/22008/sS37OkOHMm5nSN0SjcWVZAq8/Screenshot-2025-01-29-at-12.31.50.png/840x560.webp\"></a></div>",
        "id": 496619120,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738175666
    },
    {
        "content": "<p>Intriguing</p>",
        "id": 496619265,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738175724
    },
    {
        "content": "<p>Thanks</p>",
        "id": 496619268,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738175725
    },
    {
        "content": "<p>One other interesting thing I am seeing here -- the dbg print dropped the opening quotation around the string (The quote at the end is inserted by dbg, and is not part of the actual string).</p>",
        "id": 496619728,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1738175877
    }
]