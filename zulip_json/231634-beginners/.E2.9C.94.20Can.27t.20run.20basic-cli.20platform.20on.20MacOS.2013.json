[
    {
        "content": "<p>Hi, I'm new here - just getting started with ROC &lt;3 </p>\n<p>I can't get ROC running on my MacOS 13.4.1 :/<br>\nI'm using \"roc nightly pre-release, built from commit ecf728a on Tue Jul 18 09:08:46 UTC 2023\"<br>\nAnd I'm trying to run examples from <a href=\"https://github.com/roc-lang/basic-cli\">https://github.com/roc-lang/basic-cli</a> </p>\n<div class=\"codehilite\"><pre><span></span><code>basic-cli on ÓÇ† main\n‚ùØ roc run examples/form.roc\nüî® Rebuilding platform...\n0  0x100154e8a  __assert_rtn + 64\n1  0x1000a9922  ___ZN2ld4pass3tlvERKNS_7OptionsERNS_20AtomFileConsolidatorE_block_invoke_2 + 2178\n2  0x1000a9bc2  void mapReduce&lt;ld::Atom const*, ld::pass::tlv(ld::Options const&amp;, ld::AtomFileConsolidator&amp;)::CollectedAtoms&gt;(std::__1::span&lt;ld::Atom const*, 18446744073709551615ul&gt;, unsigned long, void (unsigned long, ld::pass::tlv(ld::Options const&amp;, ld::AtomFileConsolidator&amp;)::CollectedAtoms&amp;, std::__1::span&lt;ld::Atom const*, 18446744073709551615ul&gt;) block_pointer, void (std::__1::span&lt;ld::pass::tlv(ld::Options const&amp;, ld::AtomFileConsolidator&amp;)::CollectedAtoms, 18446744073709551615ul&gt;) block_pointer) + 482\n3  0x1000a905f  ld::pass::tlv(ld::Options const&amp;, ld::AtomFileConsolidator&amp;) + 527\n4  0x100138664  ld::AtomFileConsolidator::resolve() + 18628\n5  0x1000a32ec  main + 12348\nld: Assertion failed: (fixups().size() == 2), function initFixup, file Atom.cpp, line 2005.\nthread &#39;main&#39; panicked at &#39;not yet implemented: gracefully handle `ld` (or `zig` in the case of wasm with --optimize) returning exit code Some(1)&#39;, crates/compiler/build/src/program.rs:1048:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>Not sure if I'm doing something wrong or if this even supposed to work.<br>\nI have rust:</p>\n<div class=\"codehilite\"><pre><span></span><code>rustup 1.26.0 (5af9b9484 2023-04-05)\ninfo: This is the version for the rustup toolchain manager, not the rustc compiler.\ninfo: The currently active `rustc` version is `rustc 1.71.0 (8ede3aae2 2023-07-12)`\n</code></pre></div>",
        "id": 376887142,
        "sender_full_name": "Artur Domurad",
        "timestamp": 1689841645
    },
    {
        "content": "<p>I have an Intel based Mac.<br>\nI was able to build the ROC compiler from source - but I'm still getting the same error with it...<br>\nI get the same error when trying to run with the pre-built platform:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span><span class=\"w\"> </span><span class=\"s\">\"hello\"</span>\n<span class=\"w\">    </span><span class=\"nv\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">pf</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.4.0/DI4lqn7LIZs8ZrCDUgLK-tHHpQmxGF1ZrlevRKq5LXk.tar.br\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"nv\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">pf</span><span class=\"nf\">.</span><span class=\"kt\">Stdout</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"nv\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">pf</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"w\"> </span><span class=\"s\">\"I'm a Roc application!\"</span>\n</code></pre></div>\n<p>I was able to run some examples from \"platform-switching\", like rocLovesRust.roc, rocLovesSwift.roc and rocLovesC.roc .<br>\nAnd I was able to run the \"gui\" example, and the \"webserver\" example... <br>\nSo it seems that I can't run the \"basic-cli\" platform... (or any cli platform).</p>",
        "id": 377047477,
        "sender_full_name": "Artur Domurad",
        "timestamp": 1689871301
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"634290\">Artur Domurad</span> has marked this topic as resolved.</p>",
        "id": 377047547,
        "sender_full_name": "Notification Bot",
        "timestamp": 1689871318
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"634290\">Artur Domurad</span> has marked this topic as unresolved.</p>",
        "id": 377047557,
        "sender_full_name": "Notification Bot",
        "timestamp": 1689871320
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"634290\">Artur Domurad</span> has marked this topic as resolved.</p>",
        "id": 377047592,
        "sender_full_name": "Notification Bot",
        "timestamp": 1689871323
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"634290\">@Artur Domurad</span>, can you share what fixed your problem?</p>",
        "id": 377565982,
        "sender_full_name": "Anton",
        "timestamp": 1690024825
    },
    {
        "content": "<p>Actually all the examples that use any rust-based \"cli\" platform still don't work.<br>\nFor now I'm happy that I can use other platforms (like the webserver) to play with the language :)<br>\nI do plan to debug the issue with the \"basic-cli\" platform after the weekend - maybe I will be able to figure it out.</p>",
        "id": 377576319,
        "sender_full_name": "Artur Domurad",
        "timestamp": 1690026914
    },
    {
        "content": "<p>For anyone with the same problem:</p>\n<p>This is an issue with the linker - macos 13 + Intel + xcode 15.<br>\nIf I want to be able to run any roc app using the basic-cli platform (precompiled or not) - I had to add the \"-ld64\" flag to the \"ld\" command.</p>\n<p>How to fix if you have the same problem:<br>\nGo to <code>crates/compiler/build/src/link.rs</code> <br>\nAnd in the function <code>link_macos</code> in the <code>ld_command.args</code> you need to add \"-ld\", like so:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"n\">ld_command</span>\n<span class=\"w\">        </span><span class=\"c1\">// NOTE: order of arguments to `ld` matters here!</span>\n<span class=\"w\">        </span><span class=\"c1\">// The `-l` flags should go after the `.o` arguments</span>\n<span class=\"w\">        </span><span class=\"c1\">// Don't allow LD_ env vars to affect this</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">env_clear</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">args</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">link_type_args</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">args</span><span class=\"p\">([</span>\n<span class=\"w\">            </span><span class=\"s\">\"-ld64\"</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"c1\">// &lt;------------------ HERE ----------------------------------------------------</span>\n<span class=\"w\">            </span><span class=\"c1\">// NOTE: we don't do --gc-sections on macOS because the default</span>\n<span class=\"w\">            </span><span class=\"c1\">// macOS linker doesn't support it, but it's a performance</span>\n<span class=\"w\">            </span><span class=\"c1\">// optimization, so if we ever switch to a different linker,</span>\n<span class=\"w\">            </span><span class=\"c1\">// we'd like to re-enable it on macOS!</span>\n<span class=\"w\">            </span><span class=\"c1\">// \"--gc-sections\",</span>\n<span class=\"w\">            </span><span class=\"s\">\"-arch\"</span><span class=\"p\">,</span>\n</code></pre></div>",
        "id": 385427074,
        "sender_full_name": "Artur Domurad",
        "timestamp": 1692179526
    },
    {
        "content": "<p>Thanks for reporting this <span class=\"user-mention\" data-user-id=\"634290\">@Artur Domurad</span>!<br>\nCan you share the original error message? That way I can write up an issue that is more search friendly.<br>\nGithub recently added support for CI on macos 13, I'll look into setting that up.</p>",
        "id": 385431317,
        "sender_full_name": "Anton",
        "timestamp": 1692181222
    },
    {
        "content": "<p>Example program:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span><span class=\"w\"> </span><span class=\"s\">\"helloWorld\"</span>\n<span class=\"w\">    </span><span class=\"nv\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">pf</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.5.0/Cufzl36_SnJ4QbOoEmiJ5dIpUxBvdB3NEySvuH82Wio.tar.br\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"nv\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">pf</span><span class=\"nf\">.</span><span class=\"kt\">Stdout</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"nv\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">pf</span>\n\n<span class=\"kr\">main </span><span class=\"nf\">=</span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"w\"> </span><span class=\"s\">\"Hello, World!\"</span>\n</code></pre></div>\n<p>I run:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>roc<span class=\"w\"> </span>dev<span class=\"w\"> </span>./helloWorld.roc\n</code></pre></div>\n<p>Output:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>‚ùØ<span class=\"w\"> </span>roc<span class=\"w\"> </span>dev<span class=\"w\"> </span>./helloWorld.roc\n<span class=\"m\">0</span><span class=\"w\">  </span>0x10298ae8a<span class=\"w\">  </span>__assert_rtn<span class=\"w\"> </span>+<span class=\"w\"> </span><span class=\"m\">64</span>\n<span class=\"m\">1</span><span class=\"w\">  </span>0x1028dfad2<span class=\"w\">  </span>___ZN2ld4pass3tlvERKNS_7OptionsERNS_20AtomFileConsolidatorE_block_invoke_2<span class=\"w\"> </span>+<span class=\"w\"> </span><span class=\"m\">2178</span>\n<span class=\"m\">2</span><span class=\"w\">  </span>0x1028dfd72<span class=\"w\">  </span>void<span class=\"w\"> </span>mapReduce&lt;ld::Atom<span class=\"w\"> </span>const*,<span class=\"w\"> </span>ld::pass::tlv<span class=\"o\">(</span>ld::Options<span class=\"w\"> </span>const<span class=\"p\">&amp;</span>,<span class=\"w\"> </span>ld::AtomFileConsolidator<span class=\"p\">&amp;</span><span class=\"o\">)</span>::CollectedAtoms&gt;<span class=\"o\">(</span>std::__1::span&lt;ld::Atom<span class=\"w\"> </span>const*,<span class=\"w\"> </span>18446744073709551615ul&gt;,<span class=\"w\"> </span>unsigned<span class=\"w\"> </span>long,<span class=\"w\"> </span>void<span class=\"w\"> </span><span class=\"o\">(</span>unsigned<span class=\"w\"> </span>long,<span class=\"w\"> </span>ld::pass::tlv<span class=\"o\">(</span>ld::Options<span class=\"w\"> </span>const<span class=\"p\">&amp;</span>,<span class=\"w\"> </span>ld::AtomFileConsolidator<span class=\"p\">&amp;</span><span class=\"o\">)</span>::CollectedAtoms<span class=\"p\">&amp;</span>,<span class=\"w\"> </span>std::__1::span&lt;ld::Atom<span class=\"w\"> </span>const*,<span class=\"w\"> </span>18446744073709551615ul&gt;<span class=\"o\">)</span><span class=\"w\"> </span>block_pointer,<span class=\"w\"> </span>void<span class=\"w\"> </span><span class=\"o\">(</span>std::__1::span&lt;ld::pass::tlv<span class=\"o\">(</span>ld::Options<span class=\"w\"> </span>const<span class=\"p\">&amp;</span>,<span class=\"w\"> </span>ld::AtomFileConsolidator<span class=\"p\">&amp;</span><span class=\"o\">)</span>::CollectedAtoms,<span class=\"w\"> </span>18446744073709551615ul&gt;<span class=\"o\">)</span><span class=\"w\"> </span>block_pointer<span class=\"o\">)</span><span class=\"w\"> </span>+<span class=\"w\"> </span><span class=\"m\">482</span>\n<span class=\"m\">3</span><span class=\"w\">  </span>0x1028df20f<span class=\"w\">  </span>ld::pass::tlv<span class=\"o\">(</span>ld::Options<span class=\"w\"> </span>const<span class=\"p\">&amp;</span>,<span class=\"w\"> </span>ld::AtomFileConsolidator<span class=\"p\">&amp;</span><span class=\"o\">)</span><span class=\"w\"> </span>+<span class=\"w\"> </span><span class=\"m\">527</span>\n<span class=\"m\">4</span><span class=\"w\">  </span>0x10296e664<span class=\"w\">  </span>ld::AtomFileConsolidator::resolve<span class=\"o\">()</span><span class=\"w\"> </span>+<span class=\"w\"> </span><span class=\"m\">18628</span>\n<span class=\"m\">5</span><span class=\"w\">  </span>0x1028d949c<span class=\"w\">  </span>main<span class=\"w\"> </span>+<span class=\"w\"> </span><span class=\"m\">12348</span>\nld:<span class=\"w\"> </span>Assertion<span class=\"w\"> </span>failed:<span class=\"w\"> </span><span class=\"o\">(</span>fixups<span class=\"o\">()</span>.size<span class=\"o\">()</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"o\">)</span>,<span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span>initFixup,<span class=\"w\"> </span>file<span class=\"w\"> </span>Atom.cpp,<span class=\"w\"> </span>line<span class=\"w\"> </span><span class=\"m\">2005</span>.\nthread<span class=\"w\"> </span><span class=\"s1\">'main'</span><span class=\"w\"> </span>panicked<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"s1\">'not yet implemented: gracefully handle `ld` (or `zig` in the case of wasm with --optimize) returning exit code Some(1)'</span>,<span class=\"w\"> </span>crates/compiler/build/src/program.rs:1048:17\nnote:<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span><span class=\"w\"> </span>environment<span class=\"w\"> </span>variable<span class=\"w\"> </span>to<span class=\"w\"> </span>display<span class=\"w\"> </span>a<span class=\"w\"> </span>backtrace\n</code></pre></div>",
        "id": 385431959,
        "sender_full_name": "Artur Domurad",
        "timestamp": 1692181463
    },
    {
        "content": "<p>Lovely, thanks <span class=\"user-mention\" data-user-id=\"634290\">@Artur Domurad</span> :)</p>",
        "id": 385432354,
        "sender_full_name": "Anton",
        "timestamp": 1692181622
    },
    {
        "content": "<p>I've logged this as issue <a href=\"https://github.com/roc-lang/roc/issues/5765\">#5765</a>. I'll try to fix it this week.</p>",
        "id": 385441337,
        "sender_full_name": "Anton",
        "timestamp": 1692185182
    },
    {
        "content": "<p>I was not able to reproduce this issue on the github ci machine with macos 13, can someone else on macos 13 try the above example?</p>",
        "id": 385951092,
        "sender_full_name": "Anton",
        "timestamp": 1692375955
    },
    {
        "content": "<p>Not sure, but it might be related to the xcode/ld version.<br>\nI have the xcode and ld in version 15:</p>\n<div class=\"codehilite\"><pre><span></span><code>‚ùØ ld -v\n@(#)PROGRAM:ld-classic  PROJECT:ld64-906.2\nBUILD 20:09:28 Jul  7 2023\nconfigured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em\nLTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)\nTAPI support using: Apple TAPI version 15.0.0 (tapi-1500.0.12.2)\n</code></pre></div>\n<p>When I was looking for a solution to my problem, I have found couple of threads on sites like \"stackoverflow\" that suggest that there is an issue with the new linker which is used by default when you migrate xcode from 14 to 15. (atleast it is how I understood it)</p>\n<p>In the link below people have the same error while linking a GO program, and there is suggestion that golang did add the \"-ld64\" flag as the default option:<br>\n<a href=\"https://github.com/golang/go/issues/61229#issuecomment-1669673723\">https://github.com/golang/go/issues/61229#issuecomment-1669673723</a></p>\n<p>I will try to find someone with xcode/clang in version 14.x and will test ROC, and then upgrade and test again.<br>\nAnd I will try to upgrade macos and xcode to the newest version - it seems that there was a fix to address this issue.</p>",
        "id": 386117721,
        "sender_full_name": "Artur Domurad",
        "timestamp": 1692459396
    },
    {
        "content": "<p>Thanks for looking into this <span class=\"user-mention\" data-user-id=\"634290\">@Artur Domurad</span>.<br>\nI've checked the github CI macos 13 image and it is on xcode 14.3.1</p>",
        "id": 386123544,
        "sender_full_name": "Anton",
        "timestamp": 1692462505
    },
    {
        "content": "<p>UPDATE:<br>\nafter upgrading macos to 13.5.1 and the newest xcode/ld (BUILD 17:43:49 Jul 30 2023)<br>\nwhen running roc compiler with the -ld64 flag I get a warning:</p>\n<div class=\"codehilite\"><pre><span></span><code>‚ùØ roc dev ./main.roc\nld: warning: -ld64 is deprecated, use -ld_classic instead\nI&#39;m a Roc application!\n</code></pre></div>\n<p>And now I am able to run the previous basic-cli example without the \"-ld64\" flag :) <br>\nIt seems that this was just a bug in \"ld\" 15 and now it is fixed.<br>\nSo there is no real need to add the \"-ld64\" flag to roc.</p>",
        "id": 386123712,
        "sender_full_name": "Artur Domurad",
        "timestamp": 1692462621
    },
    {
        "content": "<p>Awesome <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span><br>\nI'll update the issue</p>",
        "id": 386123777,
        "sender_full_name": "Anton",
        "timestamp": 1692462691
    },
    {
        "content": "<p>A note, on my list refcounting branch, I hit this a lot more, no idea why. Maybe the more complex generation creates more cases where the new macos ld fails. So it requires <code>-ld_classic</code> for me. That said, <code>-ld_classic</code> breaks ci (I assume it is on an older version?).</p>",
        "id": 451107636,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720833926
    },
    {
        "content": "<p>I'll check it out</p>",
        "id": 451147813,
        "sender_full_name": "Anton",
        "timestamp": 1720862281
    }
]