[
    {
        "content": "<p>Hi all,<br>\nI have a question regarding importing packages inside a module.<br>\nI have an app that requires CSV parsing and I want to separate this logic from my main app logic. I tried to put the logic in a module but I'm not sure if/how I can import the <a href=\"https://github.com/lukewilliamboswell/roc-parser\">roc-parser</a> package from within my module. is that possible? if not, whats the proper way of separating my code when it depends on external packages?<br>\nThanks!</p>",
        "id": 466922089,
        "sender_full_name": "Adam Bobrow",
        "timestamp": 1725277104
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"746008\">@Adam Bobrow</span>,<br>\nDeclaration of dependencies happens in the app file, like so:</p>\n<div class=\"codehilite\"><pre><span></span><code>app [main] {\n    cli: platform &quot;https://github.com/roc-lang/basic-cli/releases/download/0.15.0/SlwdbJ-3GR7uBWQo6zlmYWNYOxnvo8r6YABXD-45UOw.tar.br&quot;,\n    parser: &quot;https://github.com/Anton-4/roc-parser/releases/download/0.7.2/xcLMjkUXqAJoSsfKblZhVn3slAv3sdFcBxRbqBDoUJk.tar.br&quot;,\n}\n</code></pre></div>\n<p>And in your module you should then be able to import what you need:</p>\n<div class=\"codehilite\"><pre><span></span><code>import parser.Core exposing [Parser, many, oneOf, map]\nimport parser.String exposing [parseStr, codeunit, anyCodeunit]\n</code></pre></div>",
        "id": 466927447,
        "sender_full_name": "Anton",
        "timestamp": 1725278414
    },
    {
        "content": "<p>I'll put something together for <a href=\"http://www.roc-lang.org/examples\">www.roc-lang.org/examples</a></p>",
        "id": 466927985,
        "sender_full_name": "Anton",
        "timestamp": 1725278535
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> , thank you I'll try that!</p>",
        "id": 467011552,
        "sender_full_name": "Adam Bobrow",
        "timestamp": 1725299070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span> <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> can you clarify if the intention is for imports to work this way into the future? </p>\n<p>I thought I heard Agus mention that it was a work around until we have module params (which we do now), but it seems strange/unrealistic that you would have to thread something like this all the way through the application.</p>\n<p>Specifically, should you be able to import a package from within a random module?</p>",
        "id": 467063433,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725318511
    },
    {
        "content": "<p>For context I'm just looking at <a href=\"https://github.com/roc-lang/examples/pull/203\">https://github.com/roc-lang/examples/pull/203</a> and thought I'd seek clarification on this before we add an example on it.</p>",
        "id": 467063516,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725318562
    },
    {
        "content": "<p>No, this isn’t really a workaround. You should be able to import anything that’s available to the app from any of its modules.</p>",
        "id": 467063770,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1725318657
    },
    {
        "content": "<p>Thank you</p>",
        "id": 467064083,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725318777
    },
    {
        "content": "<p>And hence roc \"walks\" back up the tree until it finds a <code>main.roc</code> to see what those imports are.</p>",
        "id": 467064207,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725318825
    },
    {
        "content": "<p>Although this is still an issue or bug? we currently have. I am seeing \"UNRECOGNIZED PACKAGE\" errors from the LS.</p>\n<p><a href=\"/user_uploads/22008/zIoUIU29UcqnSB5-a2eSUPXx/Screenshot-2024-09-03-at-09.15.06.png\">Screenshot-2024-09-03-at-09.15.06.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/zIoUIU29UcqnSB5-a2eSUPXx/Screenshot-2024-09-03-at-09.15.06.png\" title=\"Screenshot-2024-09-03-at-09.15.06.png\"><img data-original-dimensions=\"1340x808\" src=\"/user_uploads/thumbnail/22008/zIoUIU29UcqnSB5-a2eSUPXx/Screenshot-2024-09-03-at-09.15.06.png/840x560.webp\"></a></div>",
        "id": 467064432,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725318913
    },
    {
        "content": "<p>We’re probably going to change how platforms expose effects to the app. Right now, you can import them from its modules directly, but ideally the platform would provide them to the app’s entry point and you’d then thread them using module params.</p>",
        "id": 467064474,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1725318927
    },
    {
        "content": "<p>I just realised that if I change my <code>app.roc</code> to <code>main.roc</code> it makes the language server happy. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> I just never actually read that error message all the way through to the hint part <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 467064732,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725319029
    },
    {
        "content": "<p>Yeah, at the moment the language server doesn’t haven’t a way to configure a different entry point.</p>",
        "id": 467064944,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1725319119
    },
    {
        "content": "<p>The CLI, however, accepts a <code>—main</code> flag to do so</p>",
        "id": 467065019,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1725319160
    }
]