[
    {
        "content": "<p>So, I've been going through the repo since I was invited yesterday and I <em>think</em> I am beginning to understand how platforms and Roc applications connect, but I just want to be clear, so I had a few questions.</p>\n<ul>\n<li>What is the bare minimum that I need to write to have a workable platform?</li>\n<li>Memory allocation for platform functions is handled on the platform's side, correct?</li>\n<li>Not a lot of examples seem to have Roc actually <em>using</em> \"platform\" (native?) functions, but, as I understand it, to make a function available in Roc, I would have to name it <code>roc_fx_myfunc</code>, then write an <code>Effect</code> module that is <code>hosted</code>, not an <code>interface</code> or <code>app</code>, that <code>exposes</code> those functions, and then declare the function's type signature, but not implementation, sans <code>roc_fx_</code>, correct? Does that work the same way for all platform languages or just Rust (I am basing this on the <code>cli</code> example)?</li>\n</ul>",
        "id": 271459747,
        "sender_full_name": "Ari Bellamy",
        "timestamp": 1644511971
    },
    {
        "content": "<p>from a roc perspective, it does not matter what language the platform is written in</p>",
        "id": 271459949,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1644512056
    },
    {
        "content": "<p>I think <code>hello-world</code> (or hello-zig/hello-rust) in the <code>examples</code> folder are good examples of a minimal platform</p>",
        "id": 271460078,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1644512111
    },
    {
        "content": "<p>it just has roc create a string and then print it out</p>",
        "id": 271460090,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1644512119
    },
    {
        "content": "<p>Then <code>cli</code> and <code>benchmarks</code> do some more stuff with the cli: reading numbers, printing strings from roc. This uses the hosted modules and <code>Effect</code> and <code>Task</code></p>",
        "id": 271460235,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1644512175
    },
    {
        "content": "<p>Finally, <code>tui</code> is the most interesting platform so far; it actually run an update loop allowing you to create an elm-like TEA or model-view-update application</p>",
        "id": 271460346,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1644512222
    },
    {
        "content": "<p>Okay, so, looking at <code>hello-zig</code> again, each platform has to implement its own allocation strategy and panic behavior? Is there a list of <code>roc_</code> functions that can/should be implemented in a platform somewhere?</p>",
        "id": 271460664,
        "sender_full_name": "Ari Bellamy",
        "timestamp": 1644512356
    },
    {
        "content": "<p>that platform has them all</p>",
        "id": 271465218,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1644514268
    }
]