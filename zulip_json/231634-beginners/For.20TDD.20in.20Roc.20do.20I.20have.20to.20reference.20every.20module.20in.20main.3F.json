[
    {
        "content": "<p>I've been doing TDD of my first Roc function.</p>\n<p>To get <code>roc test</code> to find my expectations I had to reference my new module from the main script.</p>\n<p>When I added the module I got a warning (when running my tests) saying the module isn't being used.</p>\n<p>It's not being used yet because I'm in the process of TDDing it.</p>\n<p>How do others approach TDD in Roc? Should <code>roc test</code> pick up all expectations even if they are for code that isn't being used yet? Or do I just have to add every module I'm testing to the main code file and suffer the warnings while I'm TDDing?</p>\n<p>Cheers<br>\nAsh</p>",
        "id": 445471555,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1718749129
    },
    {
        "content": "<p>Can you run roc test on just your new module?</p>",
        "id": 445471701,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1718749204
    },
    {
        "content": "<p>If it doesn't import anything then this should work ok</p>",
        "id": 445471726,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1718749222
    },
    {
        "content": "<p>Should something like this work:</p>\n<div class=\"codehilite\"><pre><span></span><code>roc test --linker legacy headings.roc\n</code></pre></div>",
        "id": 445471846,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1718749286
    },
    {
        "content": "<p>Yeah, that should work</p>",
        "id": 445471936,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1718749329
    },
    {
        "content": "<p>I'm getting a crash doing that:</p>\n<div class=\"codehilite\"><pre><span></span><code>&gt; roc test --linker legacy headings.roc\nthread &#39;main&#39; panicked at crates/compiler/load_internal/src/file.rs:364:85:\ncalled `Option::unwrap()` on a `None` value\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>Running under WSL2/Linux under Windows. It's a nightly build from a couple of days ago.</p>",
        "id": 445472208,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1718749542
    },
    {
        "content": "<p>Is there anyway to make <code>roc test</code> just pick up all tests in my project regardless of whether the code is actually used yet?</p>",
        "id": 445472326,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1718749588
    },
    {
        "content": "<p>Thatâ€™s interesting. Can you open an issue for it? It might be helpful to see the output of <code>roc check</code> too</p>",
        "id": 445472430,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1718749655
    },
    {
        "content": "<p>Nothing comes up from <code>roc check</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>0 errors and 0 warnings found in 875 ms\n</code></pre></div>",
        "id": 445472567,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1718749732
    },
    {
        "content": "<p>Is that for the module or the whole app?</p>",
        "id": 445472609,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1718749752
    },
    {
        "content": "<p>Just for reference, I have done tdd in roc before with this:</p>\n<p><code>find . -name \"*.roc\" | entr -ccr roc test /_</code></p>\n<p>Will run roc test on any roc file when it changes. That said, it won't automatically index new files. Just those that already exist.</p>",
        "id": 445472718,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1718749806
    },
    {
        "content": "<p>Whole app I guess.</p>",
        "id": 445472742,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1718749819
    },
    {
        "content": "<p>Try <code>roc check {YourModule}.roc</code></p>",
        "id": 445472817,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1718749855
    },
    {
        "content": "<p>Ok wow that's a bit different.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>&gt;<span class=\"w\"> </span>roc<span class=\"w\"> </span>check<span class=\"w\"> </span>headings.roc\nAn<span class=\"w\"> </span>internal<span class=\"w\"> </span>compiler<span class=\"w\"> </span>expectation<span class=\"w\"> </span>was<span class=\"w\"> </span>broken.\nThis<span class=\"w\"> </span>is<span class=\"w\"> </span>definitely<span class=\"w\"> </span>a<span class=\"w\"> </span>compiler<span class=\"w\"> </span>bug.\nPlease<span class=\"w\"> </span>file<span class=\"w\"> </span>an<span class=\"w\"> </span>issue<span class=\"w\"> </span>here:<span class=\"w\"> </span>https://github.com/roc-lang/roc/issues/new/choose\nthread<span class=\"w\"> </span><span class=\"s1\">'main'</span><span class=\"w\"> </span>panicked<span class=\"w\"> </span>at<span class=\"w\"> </span>crates/compiler/load_internal/src/file.rs:3556:29:\nOutstanding<span class=\"w\"> </span>references<span class=\"w\"> </span>to<span class=\"w\"> </span>the<span class=\"w\"> </span>derived<span class=\"w\"> </span>module\nnote:<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span><span class=\"w\"> </span>environment<span class=\"w\"> </span>variable<span class=\"w\"> </span>to<span class=\"w\"> </span>display<span class=\"w\"> </span>a<span class=\"w\"> </span>backtrace\n</code></pre></div>",
        "id": 445472895,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1718749898
    },
    {
        "content": "<p>I've pushed the code already. I'm working on a chapter of the Roc \"book of examples\": </p>\n<p><a href=\"https://github.com/ashleydavis/book-of-examples/tree/main/gallery/roc\">https://github.com/ashleydavis/book-of-examples/tree/main/gallery/roc</a></p>",
        "id": 445472974,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1718749929
    },
    {
        "content": "<p>In my next session I'll try an updated build and then maybe log an issue.</p>\n<p>Pls let me know if there's any resources already out to help me understand how to TDD in Roc.</p>",
        "id": 445473059,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1718750002
    },
    {
        "content": "<p><code>List.len(headingA)</code> looks like incorrect syntax. In roc we dont need brackets, so I think this should be <code>if List.len headingA == List.len headingB then</code></p>",
        "id": 445473574,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1718750267
    },
    {
        "content": "<p>Oh good catch thanks.</p>\n<p><code>roc check</code> still crashes though.</p>",
        "id": 445474204,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1718750628
    }
]