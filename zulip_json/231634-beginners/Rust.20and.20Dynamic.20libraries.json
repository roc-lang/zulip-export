[
    {
        "content": "<p>This is a bit of a strange question... but its not easy to find the relevant information I'm looking for. I'm doing some research and just wanting to know if I'm in the right direction. Am I thinking about this the right way? is it worth trying to build something like this or am I totally misunderstanding how roc, dynamic libraries and rust etc work.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// load the roc app</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">libloading</span>::<span class=\"p\">{</span><span class=\"n\">Library</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">library_filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Symbol</span><span class=\"p\">};</span>\n<span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// roc app built into a dylib using `roc build --lib color.roc`</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Library</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">library_filename</span><span class=\"p\">(</span><span class=\"s\">\"colors\"</span><span class=\"p\">)).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// I expect the following signature</span>\n<span class=\"w\">    </span><span class=\"c1\">// pub unsafe extern \"C\" fn roc__mainForHost_1_exposed_generic(*RocStr, *(u8,u8,u8,u8)) { ... etc }</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">func</span>: <span class=\"nc\">Symbol</span><span class=\"o\">&lt;</span><span class=\"k\">fn</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">b\"roc__mainForHost_1_exposed_generic\"</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// can I now simply call roc?? is it that easy</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">rgba</span><span class=\"w\"> </span>: <span class=\"o\">*</span><span class=\"p\">(</span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"kt\">u8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">RocStr</span><span class=\"p\">.</span><span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"Hello World\"</span><span class=\"p\">));</span>\n\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 408725222,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702951911
    },
    {
        "content": "<p>Yeah, something along those line should work just fine. We do it for glue</p>",
        "id": 408727228,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702952566
    },
    {
        "content": "<p>Probably need to put the right type in the symbol line though</p>",
        "id": 408728159,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702952841
    },
    {
        "content": "<p>You labeled it as a function that takes no args and returns nothing</p>",
        "id": 408728187,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702952854
    },
    {
        "content": "<p>Alright then, I'll make a minimal demo to test it out</p>",
        "id": 408730740,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702953664
    },
    {
        "content": "<p>Can see an example here: <a href=\"https://github.com/roc-lang/roc/blob/main/crates/glue/src/load.rs\">https://github.com/roc-lang/roc/blob/main/crates/glue/src/load.rs</a></p>",
        "id": 408731964,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702954022
    },
    {
        "content": "<p>Thank you for sharing that ‚ù§</p>",
        "id": 408732397,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702954157
    }
]