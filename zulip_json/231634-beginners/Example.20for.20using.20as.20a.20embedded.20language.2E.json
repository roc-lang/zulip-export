[
    {
        "content": "<p>I would like to use ROC as an embedded language in both web and desktop targets (wasmtime?) under sandbox environments. The scripting language has to export functions which will then be called by host. Is this possible? What is a good example to follow? (My host language is Rust). Or is this not a good usecase for roc?</p>",
        "id": 516017650,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746356348
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"907450\">@swoorup joshi</span>,<br>\nThis is our <a href=\"https://github.com/roc-lang/roc/tree/main/crates/cli/tests/platform-switching/web-assembly-platform\">wasm example</a>. Unfortunately we made a mistake in testing it, so it silently broke, see also <a href=\"https://github.com/roc-lang/roc/issues/7756\">#7756</a>. <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> do you know what happened to the glue.zig file required by <a href=\"https://github.com/roc-lang/roc/blob/main/crates/cli/tests/platform-switching/web-assembly-platform/host.zig\">web-assembly-platform/host.zig</a>?</p>",
        "id": 516147534,
        "sender_full_name": "Anton",
        "timestamp": 1746437024
    },
    {
        "content": "<p>This <a href=\"https://github.com/lukewilliamboswell/roc-wasm4\">roc wasm project</a> may still work though</p>",
        "id": 516150534,
        "sender_full_name": "Anton",
        "timestamp": 1746437976
    },
    {
        "content": "<p>hmm, is there an example for rust? I am not familiar with zig <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>. I am also wondering if it is somehow possible to embed the compiler into the host language.</p>",
        "id": 516150686,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746438010
    },
    {
        "content": "<p>I saw some old chats about using it with other host like bevy, but it was quite a while back. I am unsure if roc is still suitable for such embedded usecase?</p>",
        "id": 516150968,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746438114
    },
    {
        "content": "<blockquote>\n<p>hmm, is there an example for rust?<br>\nembed the compiler into the host language.</p>\n</blockquote>\n<p>The <a href=\"https://github.com/roc-lang/roc/tree/main/crates/repl_wasm\">wasm repl</a> may be the example you want, it's available for use <a href=\"https://www.roc-lang.org/repl\">here</a>. <a href=\"https://github.com/roc-lang/roc/blob/main/crates/repl_wasm/architecture.png\">This is a nice image</a> of how it works.</p>\n<div class=\"message_inline_image\"><a href=\"https://github.com/roc-lang/roc/blob/main/crates/repl_wasm/architecture.png\" title=\"This is a nice image\"><img src=\"https://uploads.zulipusercontent.net/4746c554050fab2035828de2de96f81040b72b6a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f726f632d6c616e672f726f632f6d61696e2f6372617465732f7265706c5f7761736d2f6172636869746563747572652e706e67\"></a></div>",
        "id": 516158424,
        "sender_full_name": "Anton",
        "timestamp": 1746440565
    },
    {
        "content": "<p>Interesting, I'll take a look.</p>",
        "id": 516168923,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746444354
    },
    {
        "content": "<p>Here's an example of using Roc for the front-end <a href=\"https://github.com/niclas-ahden/joy\">https://github.com/niclas-ahden/joy</a></p>",
        "id": 516311904,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1746485968
    },
    {
        "content": "<p>I believe <span class=\"user-mention\" data-user-id=\"524503\">@Niclas Ahden</span> is using this currently.</p>",
        "id": 516311936,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1746485991
    },
    {
        "content": "<p>The story will be much nicer in future with the new zig compiler I think, as there's a few workarounds and challenges to do this using the current rust compiler design.</p>",
        "id": 516312042,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1746486025
    },
    {
        "content": "<p>Oh interesting, I didn't know joy was using wasm.</p>",
        "id": 516389234,
        "sender_full_name": "Anton",
        "timestamp": 1746522224
    },
    {
        "content": "<p>I hope it will still be easier with Rust. <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span> </p>\n<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/231634-beginners/topic/Example.20for.20using.20as.20a.20embedded.20language.2E/near/516312042\">said</a>:</p>\n<blockquote>\n<p>The story will be much nicer in future with the new zig compiler I think, as there's a few workarounds and challenges to do this using the current rust compiler design.</p>\n</blockquote>",
        "id": 516458668,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746541402
    },
    {
        "content": "<p>Unrelated, does zig compile to C or is able to directly compile to native code or wasm. I see some reference to c code, not sure what they are meant for.</p>",
        "id": 516468059,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746543678
    },
    {
        "content": "<p>It can do all 3</p>",
        "id": 516469630,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1746544080
    },
    {
        "content": "<p>To c, native, and wasm</p>",
        "id": 516469703,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1746544090
    },
    {
        "content": "<p>To c is pretty rare, but is used as part of the zig compiler bootstrapping, so it is well tested.</p>",
        "id": 516469803,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1746544126
    },
    {
        "content": "<p>thanks, still playing around with examples, One thing isn't clear to me. Can roc compiler be itself be embedded as a wasm binary? So that it compiles roc files into other wasm files? So the compiler can be called from either browser directly or via wasmtime.</p>",
        "id": 516497619,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746552307
    },
    {
        "content": "<blockquote>\n<p>compiler be itself be embedded as a wasm binary? So that it compiles roc files into other wasm files?</p>\n</blockquote>\n<p>Yes, I believe that is how the wasm repl works.</p>",
        "id": 516498418,
        "sender_full_name": "Anton",
        "timestamp": 1746552595
    },
    {
        "content": "<p>Oh right, that makes sense. Somehow looking at the architecture image I was thinking it was compiled on the server. (Still lot to digest)</p>",
        "id": 516498712,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746552678
    },
    {
        "content": "<p>The wasm repl archive may be useful to clarify things:<br>\n<a href=\"/user_uploads/22008/Yc_q1n7vrjn7a4kjLSVSeyPH/roc_repl_wasm.tar.gz\">roc_repl_wasm.tar.gz</a></p>",
        "id": 516498728,
        "sender_full_name": "Anton",
        "timestamp": 1746552685
    },
    {
        "content": "<blockquote>\n<p>thinking it was compiled on the server.</p>\n</blockquote>\n<p>No, it's all wasm and a bit of js</p>",
        "id": 516498933,
        "sender_full_name": "Anton",
        "timestamp": 1746552747
    },
    {
        "content": "<p>I think I need a index.html file to load those wasm files as well?</p>",
        "id": 516500715,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746553326
    },
    {
        "content": "<p>Yes, that archive is not standalone, see:</p>\n<p><a href=\"https://github.com/roc-lang/roc/blob/main/www/public/site.js\">https://github.com/roc-lang/roc/blob/main/www/public/site.js</a><br>\nview-source:<a href=\"https://www.roc-lang.org/repl\">https://www.roc-lang.org/repl</a><br>\n<a href=\"https://github.com/roc-lang/roc/blob/c320a1bca567b5bcafa8f31f472120b6b5977e0b/www/content/repl/index.md\">https://github.com/roc-lang/roc/blob/c320a1bca567b5bcafa8f31f472120b6b5977e0b/www/content/repl/index.md</a></p>\n<p>The build procure is described in <a href=\"https://github.com/roc-lang/roc/blob/c320a1bca567b5bcafa8f31f472120b6b5977e0b/crates/repl_wasm/README.md\">https://github.com/roc-lang/roc/blob/c320a1bca567b5bcafa8f31f472120b6b5977e0b/crates/repl_wasm/README.md</a> and <a href=\"https://github.com/roc-lang/roc/blob/c320a1bca567b5bcafa8f31f472120b6b5977e0b/www/README.md\">https://github.com/roc-lang/roc/blob/c320a1bca567b5bcafa8f31f472120b6b5977e0b/www/README.md</a> (builds the full roc website).</p>",
        "id": 516501730,
        "sender_full_name": "Anton",
        "timestamp": 1746553653
    },
    {
        "content": "<p>Thank you, does roc has any guidelines for interoping with rust types like algebraic data types? enums?<br>\n<a href=\"https://flinect.com/blog/rust-wasm-with-typescript-serde\">https://flinect.com/blog/rust-wasm-with-typescript-serde</a></p>",
        "id": 516506130,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746554992
    },
    {
        "content": "<p>We commonly refer to that interop code as glue.<br>\nWe have a <a href=\"https://github.com/niclas-ahden/joy/blob/main/glue.sh\">command to generate it</a> but that generated code requires some manual fixing up. <a href=\"https://github.com/search?q=repo%3Aniclas-ahden%2Fjoy%20glue&amp;type=code\">joy</a> code probably provides the best guidance for you.</p>",
        "id": 516507290,
        "sender_full_name": "Anton",
        "timestamp": 1746555368
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"907450\">swoorup joshi</span> <a href=\"#narrow/channel/231634-beginners/topic/Example.20for.20using.20as.20a.20embedded.20language.2E/near/516458668\">said</a>:</p>\n<blockquote>\n<p>I hope it will still be easier with Rust. <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span> </p>\n<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/231634-beginners/topic/Example.20for.20using.20as.20a.20embedded.20language.2E/near/516312042\">said</a>:</p>\n<blockquote>\n<p>The story will be much nicer in future with the new zig compiler I think, as there's a few workarounds and challenges to do this using the current rust compiler design.<br>\n</p>\n</blockquote>\n</blockquote>\n<p>I don't mean building the platform in Rust (as compared to Zig) .. but the new compiler that is being re-written in Zig (as opposed to the current one that is written in Rust).</p>\n<p>:D</p>",
        "id": 516546150,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1746572322
    },
    {
        "content": "<p>Tried building repl_wasm from main branch. Got errors building :/</p>\n<div class=\"codehilite\"><pre><span></span><code>error: failed to run custom build command for `roc_bitcode v0.0.1 (/Users/swoorup.joshi/github/roc-programming/roc/crates/compiler/builtins/bitcode)`\n\nCaused by:\n  process didn&#39;t exit successfully: `/Users/swoorup.joshi/github/roc-programming/roc/target/release/build/roc_bitcode-1b9319928098b482/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n  Compiling zig object `object` to: /Users/swoorup.joshi/github/roc-programming/roc/crates/compiler/builtins/bitcode/zig-out/builtins-host.o\n\n  --- stderr\n  An internal compiler expectation was broken.\n  This is definitely a compiler bug.\n  Please file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\n  zig build object -Drelease=true failed 10 times in a row. The following error is unlikely to be a flaky error: object\n  +- install generated to builtins-host.o\n     +- zig build-obj builtins-host ReleaseFast native-macos 5 errors\n  src/main.zig:385:13: error: expected pointer type, found &#39;fn (dec.RocDec) callconv(.c) i128&#39;\n      @export(func, .{ .name = &quot;roc_builtins.&quot; ++ func_name, .linkage = .strong });\n              ^~~~\n  src/main.zig:400:20: note: called from here\n      exportBuiltinFn(func, &quot;dec.&quot; ++ func_name);\n</code></pre></div>",
        "id": 516714957,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746633585
    },
    {
        "content": "<p>Did you use <code>nix develop</code> to set up the dependencies?</p>",
        "id": 516717218,
        "sender_full_name": "Anton",
        "timestamp": 1746634139
    },
    {
        "content": "<p>Now trying to use nix develop, previously was using directly from system install zig and rust.</p>",
        "id": 516717432,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746634194
    },
    {
        "content": "<p>Yeah, your error seems to come from a wrong zig version. It's best to use nix develop because you need more than just zig and rust.</p>",
        "id": 516717715,
        "sender_full_name": "Anton",
        "timestamp": 1746634285
    },
    {
        "content": "<p>Looks like its compiling. </p>\n<p>Although Kinda prefer devenv to nix develop, because that's all I used before, and doesn't drop me to bash from my fish shell. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 516718137,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746634416
    },
    {
        "content": "<p>nvm, looks like I just use fish from the bash shell</p>",
        "id": 516718589,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746634547
    },
    {
        "content": "<p>This is actually the first time I heard about devenv, it looks interesting <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 516719960,
        "sender_full_name": "Anton",
        "timestamp": 1746634953
    },
    {
        "content": "<p>its built atop of nix, and think covers most of the develop use-cases with extra few bells and whistles.</p>",
        "id": 516720654,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746635171
    },
    {
        "content": "<p>Does roc support WIT <a href=\"https://component-model.bytecodealliance.org/design/wit.html#enums\">https://component-model.bytecodealliance.org/design/wit.html#enums</a>  by any chance?</p>",
        "id": 516736317,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746640374
    },
    {
        "content": "<p>I've never heard of WIT before, If anyone knows, it's <span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span></p>",
        "id": 516736985,
        "sender_full_name": "Anton",
        "timestamp": 1746640649
    },
    {
        "content": "<p>I was following along with how zed created their extension model in this blog <a href=\"https://zed.dev/blog/zed-decoded-extensions\">https://zed.dev/blog/zed-decoded-extensions</a> and came across it. Having a common IDL would make life so much easier.</p>",
        "id": 516737261,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746640737
    },
    {
        "content": "<p>Hey Anton! We never did anything for WIT and I'm not super familiar with it. Looking at the link, I think you could write a \"Roc glue\" plugin for it if you wanted to. That would make the most sense.</p>",
        "id": 516767367,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1746652574
    },
    {
        "content": "<p>By the way <span class=\"user-mention\" data-user-id=\"907450\">@swoorup joshi</span>, if you want to use your existing shell with a nix flake you can use <a href=\"https://direnv.net/\">direnv</a> and optionally add <a href=\"https://github.com/nix-community/nix-direnv\">nix-direnv</a>. Then, in the repo, run <code>direnv allow</code> and it'll add the devshell packages to your current shell.</p>",
        "id": 516781899,
        "sender_full_name": "Hannes",
        "timestamp": 1746660418
    },
    {
        "content": "<p>hello again, I am starting to get a feel and play with roc code, and trying to basically get the repl_wasm running using wasmtime instead of js</p>\n<p>But I am currently running into a crash, which I am not sure how to address.</p>",
        "id": 516936980,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746721827
    },
    {
        "content": "<p>I replace all js runner/functions with WastimeApp like so: <a href=\"https://github.com/Swoorup/roc-wasm-playground/blob/main/src/wasm_runner.rs\">https://github.com/Swoorup/roc-wasm-playground/blob/main/src/wasm_runner.rs</a></p>\n<p>Running it gives</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Enter<span class=\"w\"> </span>an<span class=\"w\"> </span>expression<span class=\"w\"> </span>to<span class=\"w\"> </span>evaluate,<span class=\"w\"> </span>or<span class=\"w\"> </span>a<span class=\"w\"> </span>definition<span class=\"w\"> </span><span class=\"o\">(</span>like<span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"o\">)</span><span class=\"w\"> </span>to<span class=\"w\"> </span>use<span class=\"w\"> </span>later.\n\n<span class=\"w\">  </span>-<span class=\"w\"> </span>ctrl-v<span class=\"w\"> </span>+<span class=\"w\"> </span>ctrl-j<span class=\"w\"> </span>makes<span class=\"w\"> </span>a<span class=\"w\"> </span>newline\n<span class=\"w\">  </span>-<span class=\"w\"> </span>:q<span class=\"w\"> </span>quits\n<span class=\"w\">  </span>-<span class=\"w\"> </span>:help<span class=\"w\"> </span>shows<span class=\"w\"> </span>this<span class=\"w\"> </span>text<span class=\"w\"> </span>again\n&gt;\nthread<span class=\"w\"> </span><span class=\"s1\">'main'</span><span class=\"w\"> </span>panicked<span class=\"w\"> </span>at<span class=\"w\"> </span>library/core/src/panicking.rs:226:5:\nunsafe<span class=\"w\"> </span>precondition<span class=\"o\">(</span>s<span class=\"o\">)</span><span class=\"w\"> </span>violated:<span class=\"w\"> </span>slice::from_raw_parts<span class=\"w\"> </span>requires<span class=\"w\"> </span>the<span class=\"w\"> </span>pointer<span class=\"w\"> </span>to<span class=\"w\"> </span>be<span class=\"w\"> </span>aligned<span class=\"w\"> </span>and<span class=\"w\"> </span>non-null,<span class=\"w\"> </span>and<span class=\"w\"> </span>the<span class=\"w\"> </span>total<span class=\"w\"> </span>size<span class=\"w\"> </span>of<span class=\"w\"> </span>the<span class=\"w\"> </span>slice<span class=\"w\"> </span>not<span class=\"w\"> </span>to<span class=\"w\"> </span>exceed<span class=\"w\"> </span><span class=\"sb\">`</span>isize::MAX<span class=\"sb\">`</span>\n\nThis<span class=\"w\"> </span>indicates<span class=\"w\"> </span>a<span class=\"w\"> </span>bug<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>program.<span class=\"w\"> </span>This<span class=\"w\"> </span>Undefined<span class=\"w\"> </span>Behavior<span class=\"w\"> </span>check<span class=\"w\"> </span>is<span class=\"w\"> </span>optional,<span class=\"w\"> </span>and<span class=\"w\"> </span>cannot<span class=\"w\"> </span>be<span class=\"w\"> </span>relied<span class=\"w\"> </span>on<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>safety.\nstack<span class=\"w\"> </span>backtrace:\n<span class=\"w\">   </span><span class=\"m\">0</span>:<span class=\"w\"> </span>__rustc::rust_begin_unwind\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/rustc/27d6200a70601f6fcf419bf2f9e37989f3624ca4/library/std/src/panicking.rs:697:5\n<span class=\"w\">   </span><span class=\"m\">1</span>:<span class=\"w\"> </span>core::panicking::panic_nounwind_fmt::runtime\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/rustc/27d6200a70601f6fcf419bf2f9e37989f3624ca4/library/core/src/panicking.rs:117:22\n<span class=\"w\">   </span><span class=\"m\">2</span>:<span class=\"w\"> </span>core::panicking::panic_nounwind_fmt\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/rustc/27d6200a70601f6fcf419bf2f9e37989f3624ca4/library/core/src/intrinsics/mod.rs:3196:9\n<span class=\"w\">   </span><span class=\"m\">3</span>:<span class=\"w\"> </span>core::panicking::panic_nounwind\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/rustc/27d6200a70601f6fcf419bf2f9e37989f3624ca4/library/core/src/panicking.rs:226:5\n<span class=\"w\">   </span><span class=\"m\">4</span>:<span class=\"w\"> </span>core::slice::raw::from_raw_parts::precondition_check\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ub_checks.rs:68:21\n<span class=\"w\">   </span><span class=\"m\">5</span>:<span class=\"w\"> </span>core::slice::raw::from_raw_parts\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ub_checks.rs:75:17\n<span class=\"w\">   </span><span class=\"m\">6</span>:<span class=\"w\"> </span>roc_serialize::bytes::deserialize_slice\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/git/checkouts/roc-5d067ed4e211e472/b552466/crates/compiler/serialize/src/bytes.rs:35:26\n<span class=\"w\">   </span><span class=\"m\">7</span>:<span class=\"w\"> </span>roc_can::abilities::serialize::deserialize_solved_implementations\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/git/checkouts/roc-5d067ed4e211e472/b552466/crates/compiler/can/src/abilities.rs:1197:35\n<span class=\"w\">   </span><span class=\"m\">8</span>:<span class=\"w\"> </span>roc_can::module::TypeState::deserialize\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/git/checkouts/roc-5d067ed4e211e472/b552466/crates/compiler/can/src/module.rs:1212:13\n<span class=\"w\">   </span><span class=\"m\">9</span>:<span class=\"w\"> </span>roc_load::deserialize_help\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/git/checkouts/roc-5d067ed4e211e472/b552466/crates/compiler/load/src/lib.rs:240:28\n<span class=\"w\">  </span><span class=\"m\">10</span>:<span class=\"w\"> </span>roc_load::read_cached_types\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/git/checkouts/roc-5d067ed4e211e472/b552466/crates/compiler/load/src/lib.rs:265:39\n<span class=\"w\">  </span><span class=\"m\">11</span>:<span class=\"w\"> </span>roc_load::load\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/git/checkouts/roc-5d067ed4e211e472/b552466/crates/compiler/load/src/lib.rs:37:24\n<span class=\"w\">  </span><span class=\"m\">12</span>:<span class=\"w\"> </span>roc_load::load_and_monomorphize_from_str\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/git/checkouts/roc-5d067ed4e211e472/b552466/crates/compiler/load/src/lib.rs:117:11\n<span class=\"w\">  </span><span class=\"m\">13</span>:<span class=\"w\"> </span>roc_repl_eval::gen::compile_to_mono\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/git/checkouts/roc-5d067ed4e211e472/b552466/crates/repl_eval/src/gen.rs:64:18\n<span class=\"w\">  </span><span class=\"m\">14</span>:<span class=\"w\"> </span>roc_repl_ui::repl_state::ReplState::step\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/git/checkouts/roc-5d067ed4e211e472/b552466/crates/repl_ui/src/repl_state.rs:260:36\n<span class=\"w\">  </span><span class=\"m\">15</span>:<span class=\"w\"> </span>test_roc_playground::repl::entrypoint_from_wasmtime::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>\n<span class=\"w\">             </span>at<span class=\"w\"> </span>./src/repl.rs:201:9\n<span class=\"w\">  </span><span class=\"m\">16</span>:<span class=\"w\"> </span>std::thread::local::LocalKey&lt;T&gt;::try_with\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/thread/local.rs:315:12\n<span class=\"w\">  </span><span class=\"m\">17</span>:<span class=\"w\"> </span>std::thread::local::LocalKey&lt;T&gt;::with\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/thread/local.rs:279:15\n<span class=\"w\">  </span><span class=\"m\">18</span>:<span class=\"w\"> </span>test_roc_playground::repl::entrypoint_from_wasmtime::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>\n<span class=\"w\">             </span>at<span class=\"w\"> </span>./src/repl.rs:199:18\n<span class=\"w\">  </span><span class=\"m\">19</span>:<span class=\"w\"> </span>test_roc_playground::stdin_runner::stdin_to_entrypoint::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>\n<span class=\"w\">             </span>at<span class=\"w\"> </span>./src/stdin_runner.rs:60:62\n<span class=\"w\">  </span><span class=\"m\">20</span>:<span class=\"w\"> </span>test_roc_playground::main::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>\n<span class=\"w\">             </span>at<span class=\"w\"> </span>./src/main.rs:44:65\n<span class=\"w\">  </span><span class=\"m\">21</span>:<span class=\"w\"> </span>&lt;core::pin::Pin&lt;P&gt;<span class=\"w\"> </span>as<span class=\"w\"> </span>core::future::future::Future&gt;::poll\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/future/future.rs:124:9\n<span class=\"w\">  </span><span class=\"m\">22</span>:<span class=\"w\"> </span>tokio::runtime::park::CachedParkThread::block_on::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.0/src/runtime/park.rs:284:60\n<span class=\"w\">  </span><span class=\"m\">23</span>:<span class=\"w\"> </span>tokio::task::coop::with_budget\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.0/src/task/coop/mod.rs:167:5\n<span class=\"w\">  </span><span class=\"m\">24</span>:<span class=\"w\"> </span>tokio::task::coop::budget\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.0/src/task/coop/mod.rs:133:5\n<span class=\"w\">  </span><span class=\"m\">25</span>:<span class=\"w\"> </span>tokio::runtime::park::CachedParkThread::block_on\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.0/src/runtime/park.rs:284:31\n<span class=\"w\">  </span><span class=\"m\">26</span>:<span class=\"w\"> </span>tokio::runtime::context::blocking::BlockingRegionGuard::block_on\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.0/src/runtime/context/blocking.rs:66:9\n<span class=\"w\">  </span><span class=\"m\">27</span>:<span class=\"w\"> </span>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.0/src/runtime/scheduler/multi_thread/mod.rs:87:13\n<span class=\"w\">  </span><span class=\"m\">28</span>:<span class=\"w\"> </span>tokio::runtime::context::runtime::enter_runtime\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.0/src/runtime/context/runtime.rs:65:16\n<span class=\"w\">  </span><span class=\"m\">29</span>:<span class=\"w\"> </span>tokio::runtime::scheduler::multi_thread::MultiThread::block_on\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.0/src/runtime/scheduler/multi_thread/mod.rs:86:9\n<span class=\"w\">  </span><span class=\"m\">30</span>:<span class=\"w\"> </span>tokio::runtime::runtime::Runtime::block_on_inner\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.0/src/runtime/runtime.rs:358:45\n<span class=\"w\">  </span><span class=\"m\">31</span>:<span class=\"w\"> </span>tokio::runtime::runtime::Runtime::block_on\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.0/src/runtime/runtime.rs:328:13\n<span class=\"w\">  </span><span class=\"m\">32</span>:<span class=\"w\"> </span>test_roc_playground::main\n<span class=\"w\">             </span>at<span class=\"w\"> </span>./src/main.rs:40:5\n<span class=\"w\">  </span><span class=\"m\">33</span>:<span class=\"w\"> </span>core::ops::function::FnOnce::call_once\n<span class=\"w\">             </span>at<span class=\"w\"> </span>/Users/swoorup.joshi/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs:250:5\nnote:<span class=\"w\"> </span>Some<span class=\"w\"> </span>details<span class=\"w\"> </span>are<span class=\"w\"> </span>omitted,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span>full<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>a<span class=\"w\"> </span>verbose<span class=\"w\"> </span>backtrace.\nthread<span class=\"w\"> </span>caused<span class=\"w\"> </span>non-unwinding<span class=\"w\"> </span>panic.<span class=\"w\"> </span>aborting.\nfish:<span class=\"w\"> </span>Job<span class=\"w\"> </span><span class=\"m\">1</span>,<span class=\"w\"> </span><span class=\"s1\">'echo 1 + 1 | RUST_BACKTRACE=1 c…'</span><span class=\"w\"> </span>terminated<span class=\"w\"> </span>by<span class=\"w\"> </span>signal<span class=\"w\"> </span>SIGABRT<span class=\"w\"> </span><span class=\"o\">(</span>Abort<span class=\"o\">)</span>\n</code></pre></div>",
        "id": 516937126,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746721886
    },
    {
        "content": "<p>Any ideas?</p>",
        "id": 516937164,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746721899
    },
    {
        "content": "<p>My only guess is that wasm has a different alignment to CPUs. As such, this fails. I would try just running without the undefined behaviour check (might just need to run in release build).</p>",
        "id": 516937982,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1746722173
    },
    {
        "content": "<p>But otherwise debugging probably means checking pointers and alignment.</p>",
        "id": 516938036,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1746722194
    },
    {
        "content": "<p>I wonder if wasmtime aligns differently from browsers</p>",
        "id": 516938089,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1746722214
    },
    {
        "content": "<p>Goodpoint, will try running in release. Trying to grok much information as I can, since i am new to using wasm in general xD</p>",
        "id": 516938394,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746722297
    },
    {
        "content": "<p>Damn that worked lol. Feels cool.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>test-roc-playground<span class=\"w\"> </span>on<span class=\"w\"> </span><span class=\"w\"> </span>main<span class=\"w\"> </span><span class=\"o\">[</span>!<span class=\"o\">]</span><span class=\"w\"> </span>is<span class=\"w\"> </span>📦<span class=\"w\"> </span>v0.1.0<span class=\"w\"> </span>via<span class=\"w\"> </span>🦀<span class=\"w\"> </span>v1.88.0-nightly<span class=\"w\"> </span>via<span class=\"w\"> </span>❄️<span class=\"w\">  </span>impure<span class=\"w\"> </span><span class=\"o\">(</span>devenv-shell-env<span class=\"o\">)</span><span class=\"w\"> </span>took<span class=\"w\"> </span>4s\n❯<span class=\"w\"> </span>./target/release/test-roc-playground<span class=\"w\"> </span>--stdin\n&gt;\n\nEnter<span class=\"w\"> </span>an<span class=\"w\"> </span>expression<span class=\"w\"> </span>to<span class=\"w\"> </span>evaluate,<span class=\"w\"> </span>or<span class=\"w\"> </span>a<span class=\"w\"> </span>definition<span class=\"w\"> </span><span class=\"o\">(</span>like<span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"o\">)</span><span class=\"w\"> </span>to<span class=\"w\"> </span>use<span class=\"w\"> </span>later.\n\n<span class=\"w\">  </span>-<span class=\"w\"> </span>ctrl-v<span class=\"w\"> </span>+<span class=\"w\"> </span>ctrl-j<span class=\"w\"> </span>makes<span class=\"w\"> </span>a<span class=\"w\"> </span>newline\n<span class=\"w\">  </span>-<span class=\"w\"> </span>:q<span class=\"w\"> </span>quits\n<span class=\"w\">  </span>-<span class=\"w\"> </span>:help<span class=\"w\"> </span>shows<span class=\"w\"> </span>this<span class=\"w\"> </span>text<span class=\"w\"> </span>again\n\n&gt;<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>+<span class=\"w\"> </span><span class=\"m\">1</span>\n\n<span class=\"m\">2</span>&lt;span<span class=\"w\"> </span><span class=\"nv\">class</span><span class=\"o\">=</span><span class=\"s1\">'color-green'</span>&gt;<span class=\"w\"> </span>:<span class=\"w\"> </span>&lt;/span&gt;Num<span class=\"w\"> </span>*\n&gt;\n</code></pre></div>",
        "id": 516939266,
        "sender_full_name": "swoorup joshi",
        "timestamp": 1746722623
    }
]