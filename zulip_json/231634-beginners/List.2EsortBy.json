[
    {
        "content": "<p>I'm looking into the possibility of making an Elm to Roc converter. One thing I noticed though was that, unless I'm missing something, it's not possible to implement Elm's <code>List.sortBy : (a -&gt; comparable) -&gt; List a -&gt; List a</code> due to <code>comparable</code> not thing a thing in Roc? Is there a way to work around this?</p>",
        "id": 448287044,
        "sender_full_name": "Martin Stewart",
        "timestamp": 1719829126
    },
    {
        "content": "<p>For now, there is <code>List.sortWith</code> which takes a list and a comparison function of type <code>a, a -&gt; [LT, EQ, GT]</code>. But I remember there being some discussion of adding a Compare ability or similar</p>",
        "id": 448293925,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1719830863
    },
    {
        "content": "<p><a href=\"#narrow/stream/304641-ideas/topic/ordering.2Fsorting.20ability\">https://roc.zulipchat.com/#narrow/stream/304641-ideas/topic/ordering.2Fsorting.20ability</a></p>",
        "id": 448294181,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1719830939
    },
    {
        "content": "<p>Here is the discussion</p>",
        "id": 448294206,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1719830947
    },
    {
        "content": "<p>Thanks, I'll have a look at that.</p>",
        "id": 448294300,
        "sender_full_name": "Martin Stewart",
        "timestamp": 1719830982
    },
    {
        "content": "<p>And <span class=\"user-mention\" data-user-id=\"477725\">@Jasper Woudenberg</span>'s WIP PR <a href=\"https://github.com/roc-lang/roc/pull/6615\">https://github.com/roc-lang/roc/pull/6615</a></p>",
        "id": 448294913,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719831162
    },
    {
        "content": "<p>Looking at the details I suspect this won't be exactly what I need. For example, if something like <code>(String, F64)</code> isn't automatically treated as comparable then I'm probably not going to get very far. My hope of just doing a syntax level conversion between Elm and Roc was probably too optimistic <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 448295513,
        "sender_full_name": "Martin Stewart",
        "timestamp": 1719831344
    },
    {
        "content": "<p>I think in that case it would have Sortable derived</p>",
        "id": 448299809,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719832626
    },
    {
        "content": "<p>Wouldn't it just be opaque types that need to be manually implemented</p>",
        "id": 448299911,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719832655
    },
    {
        "content": "<p>I thought <code>Str</code> wouldn't get the ability because of unicode messiness?</p>",
        "id": 448300138,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1719832713
    },
    {
        "content": "<p>Yeah, good point</p>",
        "id": 448300174,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719832723
    },
    {
        "content": "<p>What about instead of converting to a Roc Str type, make an opaque <code>ElmStr</code> and convert to that. Then give it behaviour that matches Elm.</p>",
        "id": 448301697,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719833114
    },
    {
        "content": "<p>That would work I think, if tuples and other non-opaque types all automatically derive it as well</p>",
        "id": 448307579,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1719834601
    },
    {
        "content": "<p>The plan is definitely that tuples/records/lists will be comparable to one-another!</p>",
        "id": 448383876,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1719852184
    }
]