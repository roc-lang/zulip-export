[
    {
        "content": "<p>Hi all, I'm learning roc by building an app. I just wrote our this code to get something working</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"nv\">https</span><span class=\"nf\">://</span><span class=\"nv\">github</span><span class=\"nf\">.</span><span class=\"nv\">com</span><span class=\"nf\">/</span><span class=\"nv\">roc</span><span class=\"nf\">-</span><span class=\"nv\">lang</span><span class=\"nf\">/</span><span class=\"nv\">basic</span><span class=\"nf\">-</span><span class=\"nv\">webserver</span><span class=\"nf\">/</span><span class=\"nv\">tree</span><span class=\"nf\">/</span><span class=\"nv\">main</span><span class=\"nf\">/</span><span class=\"nv\">examples</span>\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"nv\">https</span><span class=\"nf\">://</span><span class=\"nv\">roc</span><span class=\"nf\">-</span><span class=\"nv\">lang</span><span class=\"nf\">.</span><span class=\"nv\">github</span><span class=\"nf\">.</span><span class=\"nv\">io</span><span class=\"nf\">/</span><span class=\"nv\">basic</span><span class=\"nf\">-</span><span class=\"nv\">webserver</span><span class=\"nf\">/</span><span class=\"kt\">SQLite3</span><span class=\"nf\">/</span>\n<span class=\"kn\">module</span><span class=\"w\"> </span><span class=\"err\">[</span><span class=\"nc\">init</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Config</span><span class=\"p\">]</span>\n\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.Task</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">pf.SQLite3</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">KeyValueStore</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nc\">Logger</span><span class=\"w\"> </span><span class=\"nv\">exposing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">Logger</span><span class=\"p\">]</span>\n\n<span class=\"kt\">Config</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nv\">sqlitePath</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nv\">logger</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Logger</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Config</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Str</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"kt\">Task</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kt\">NotFound</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">Errored</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">])</span>\n<span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">config</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">key</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"nv\">executed</span><span class=\"w\"> </span><span class=\"nf\">&lt;-</span>\n<span class=\"w\">            </span><span class=\"kt\">SQLite3</span><span class=\"nf\">.</span><span class=\"nv\">execute</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"nv\">path</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">config</span><span class=\"nf\">.</span><span class=\"nv\">sqlitePath</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"nv\">query</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"s\">\"SELECT key, value FROM key_value WHERE key = :key;\"</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"nv\">bindings</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\"> </span><span class=\"nv\">name</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"s\">\":key\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">value</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">key</span><span class=\"w\"> </span><span class=\"p\">}],</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">attempt</span>\n\n<span class=\"w\">        </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">executed</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">            </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"nv\">err</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">err</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Errored</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">SQLite3</span><span class=\"nf\">.</span><span class=\"nv\">errToStr</span><span class=\"w\"> </span><span class=\"nv\">err</span><span class=\"p\">))</span>\n<span class=\"w\">            </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">rows</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                </span><span class=\"nv\">firstRow</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">first</span><span class=\"w\"> </span><span class=\"nv\">rows</span>\n<span class=\"w\">                </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">firstRow</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">                    </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">err</span><span class=\"w\"> </span><span class=\"kt\">NotFound</span>\n<span class=\"w\">                    </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">row</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                        </span><span class=\"nv\">firstColumn</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">first</span><span class=\"w\"> </span><span class=\"nv\">row</span>\n<span class=\"w\">                        </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">firstColumn</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">                            </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">err</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Errored</span><span class=\"w\"> </span><span class=\"s\">\"No value\"</span><span class=\"p\">)</span>\n<span class=\"w\">                            </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">columnValue</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                                </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">columnValue</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">                                    </span><span class=\"kt\">String</span><span class=\"w\"> </span><span class=\"nv\">columnValueStr</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">ok</span><span class=\"w\"> </span><span class=\"nv\">columnValueStr</span>\n<span class=\"w\">                                    </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">err</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Errored</span><span class=\"w\"> </span><span class=\"s\">\"No value\"</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>I'm now going to refactor this code to make it flat. I'm curious how any you guys would refactor this code? Is there a single right way or multiple right ways?</p>",
        "id": 457019866,
        "sender_full_name": "Chris Vouga",
        "timestamp": 1723011520
    },
    {
        "content": "<p>Maybe something like this... I haven't tested it as it's only a module.</p>\n<div class=\"codehilite\"><pre><span></span><code>get : Config -&gt; (Str -&gt; Task.Task Str [NotFound, Errored Str])\nget = \\config -&gt; \\key -&gt;\n    rows =\n        SQLite3.execute {\n            path: config.sqlitePath,\n            query: &quot;SELECT key, value FROM key_value WHERE key = :key;&quot;,\n            bindings: [{ name: &quot;:key&quot;, value: key }],\n        }\n        |&gt; Task.result!\n\n    when rows is\n        Ok [] -&gt; Task.err NotFound\n        Ok [[String _, String value]] -&gt; Task.ok value\n        Ok _ -&gt; Task.err (Errored &quot;unexpected values returned, expected key and value&quot;)\n        Err (SQLError _ msg) -&gt; Task.err (Errored msg)\n</code></pre></div>\n<p><em>edits</em>: some fixes</p>",
        "id": 457025174,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723013653
    },
    {
        "content": "<p>It's very similar to <a href=\"#narrow/stream/304902-show-and-tell/topic/simple.20text.20editor.20example/near/457009759\">the text editor example I just posted</a></p>",
        "id": 457025239,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723013680
    },
    {
        "content": "<p>Also, note the API for Sqlite will hopefully change soon with some awesome new improvements Brendan has made. If you're interested to see what that looks like <a href=\"https://github.com/lukewilliamboswell/roc-htmx-tailwindcss-demo/blob/sqlite-upgrade/src/Sql/User.roc\">here is the upgrade for the roc-htmx-tailwindcss-demo app</a> I've been using to test that upgrade.</p>",
        "id": 457025474,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723013775
    },
    {
        "content": "<p>It uses the new record builders to decode each row into a record, so you can can easily get a <code>List User</code> or whatever you're expecting.</p>",
        "id": 457025663,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723013859
    },
    {
        "content": "<p>That refactor is clean. I'm gonna use that. Thanks! The upcoming sqlite API looks very clean too. For the demo app, what are you guys using for db migrations? I've been using <a href=\"https://github.com/amacneil/dbmate\">https://github.com/amacneil/dbmate</a>.</p>",
        "id": 457186346,
        "sender_full_name": "Chris Vouga",
        "timestamp": 1723059346
    },
    {
        "content": "<p>One other change. Why select <code>key</code> when it isn't being used</p>",
        "id": 457204904,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723065868
    },
    {
        "content": "<p>Just drop it from the sql query</p>",
        "id": 457204930,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723065876
    },
    {
        "content": "<p>And in the new API will just be queryOne</p>",
        "id": 457204989,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723065901
    }
]