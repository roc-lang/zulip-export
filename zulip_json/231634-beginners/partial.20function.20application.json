[
    {
        "content": "<p>how to make partial application, it seems like essential functionality, yet compiler is complaining that I have to make it explicit. Unfortunately I don't know proper syntax</p>",
        "id": 313933690,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1670236901
    },
    {
        "content": "<p>I think this was a deliberate design decision. I can't find a written reference to point to, but I recall it was something to do with making things simpler and more performant. I think <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> mentioned it in a talk about Roc at one point.</p>",
        "id": 313934507,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1670237158
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/blob/main/FAQ.md#why-arent-roc-functions-curried-by-default\">https://github.com/roc-lang/roc/blob/main/FAQ.md#why-arent-roc-functions-curried-by-default</a></p>",
        "id": 313934606,
        "sender_full_name": "Anton",
        "timestamp": 1670237174
    },
    {
        "content": "<p>Currying is not exactly the same as partial function application but I think the reasoning for the choice is identical.</p>",
        "id": 313934677,
        "sender_full_name": "Anton",
        "timestamp": 1670237199
    },
    {
        "content": "<p>Yep, thanks <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span></p>",
        "id": 313934751,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1670237227
    },
    {
        "content": "<p>ok in my use case I encapsulated function in lambda.. not so much cumbersome</p>",
        "id": 313939088,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1670238621
    },
    {
        "content": "<p>btw  as a side note as  functional  programming beginner I would say that  roc language seems to have acceptable level of complexity in most part which I can't say for example about haskell, which  has way to steep learning  curve. I think it is important since if roc  community wants  to see some  wider adoption it has  to compete somehow with more established languages. After writing couple  of lines I want only  more of this  experience so it looks promising. It would be great  to replace  python as my secondary  language. Definitely it looks like  I could  use it  once in a while especially for some kind of parsing activity. Which I couldn't say about clojure or haskell, FP languages I looked so far. Even at this point of development I would  choose  roc  over  those  two. In my opinion clojure  has somehow  better calling  conventions for  functions hence  it is somehow  easier to stack them  together but it has  some  other  properties excluding it (java  driven, non-intuitive  build  system, syntax  which is just  to smart  at times  )</p>",
        "id": 313955681,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1670244550
    },
    {
        "content": "<p>Thanks for the feedback <span class=\"user-mention\" data-user-id=\"568088\">@Artur Swiderski</span> :)</p>",
        "id": 313956896,
        "sender_full_name": "Anton",
        "timestamp": 1670244923
    }
]