[
    {
        "content": "<p>If you're new to the Roc community &amp; codebase, welcome to this chatroom and welcome to this noobs-only thread! It's exciting to see so many friendly messages over in the \"introductions\" topic <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> </p>\n<p>I'm curious - after you first opened the repo, how is/was your initial Roc learning experience? How helpful/fun is the documentation? What is coolest, what is hardest, what is missing, and what is next for you?</p>",
        "id": 271925671,
        "sender_full_name": "jan kili",
        "timestamp": 1644899318
    },
    {
        "content": "<p>All perspectives are welcome! <span aria-label=\"purple heart\" class=\"emoji emoji-1f49c\" role=\"img\" title=\"purple heart\">:purple_heart:</span></p>",
        "id": 271925759,
        "sender_full_name": "jan kili",
        "timestamp": 1644899429
    },
    {
        "content": "<p>I hope I qualify, I joined a few months ago but haven't really programmed yet.</p>\n<p>The introduction and setup are great. You quickly learn the basics and Nim allows you to quickly run the examples. So that's a really nice experience.</p>\n<p>My roadblock right now is that I don't want to dabble in platforms, but I don't see a way of trying out Roc with an interesting platform. For example, I would like to do the Advent of Code, but I haven't seen a platform that is \"plug'n'play\". I feel like I need to build my own platform.</p>\n<p>So I guess from my perspective what would be amazing is some example platforms and a few challenges or ideas of what to do with them. Then after that I'd be interested in how to build your own platform.</p>\n<p>I hope this is the kind of feedback you were after. <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 271936608,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1644910972
    },
    {
        "content": "<p>My first impression is that the end result of this language will be _very user friendly_. (Both for platform and application devs.) Not sure I can quantify it, but it's certainly the vibe I get.</p>\n<p>Aside from that...</p>\n<p><strong>The setup is a lot.</strong> (Which, for a compiler, is reasonable, imo.) There are a lot of options for setup, and the end goal of <code>cargo run ETC</code> (or <code>cargo build</code> and <code>./target/debug/roc</code>) are currently unclear unless you recognize Rust projects and know how to run Cargo. The saving grace for me was the <code>nix-shell</code> setup that just did everything for me.</p>\n<p>Maybe I'll throw a PR up at some point as an attempt to organize the setup docs.</p>\n<p><strong>The editor confuses me.</strong> It seems like there's a missing top-level HOW_TO_EDITOR doc right now. It doesn't have vim bindings (yet?) and I couldn't make sense of editing by just being in the editor. I'm not sure I'll use it, but it's clearly a passion of Richard's so I suspect it will end up amazing at some point.</p>\n<p>I have a lot of experience with languages that bundle an editor and arguably do it pretty well. I've seen something like a spectrum that starts at \"fancy REPL\" to \"living document\" and some notable stops along the way might be Factor, Dr Racket, RStudio, MATLAB, Jupyter, Excel. While I'll still usually prefer some editor-of-choice, I find the extremes tend to be more useful (Factor and Excel) and the middle ones less interesting for \"programming\" and more interesting for hacking around.</p>",
        "id": 272078396,
        "sender_full_name": "J.R. 'hiljusti' Hill",
        "timestamp": 1644993356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> I'm not sure if we have this written anywhere in the repo, but maybe we should put a doc about state and expectations around the editor. How usable is it? How stable should it be? If you want alpha testers yet. Maybe even some rough timeline estimates.</p>",
        "id": 272081758,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1644996879
    },
    {
        "content": "<p>I have \"Work In Porgress\" mentions in multiple places but I'll elaborate and try to improve visibility <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> .</p>",
        "id": 272087510,
        "sender_full_name": "Anton",
        "timestamp": 1645001216
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> If you wish I can do that today</p>",
        "id": 272097625,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1645007260
    },
    {
        "content": "<p>Yeah sure, thanks <span class=\"user-mention\" data-user-id=\"341959\">@Zeljko Nesic</span> !</p>",
        "id": 272098711,
        "sender_full_name": "Anton",
        "timestamp": 1645007981
    },
    {
        "content": "<p><a href=\"https://github.com/rtfeldman/roc/wiki/Why-Editor%3F-Why-not-VSCode-Emacs-Vim-Notepad--%3F\">https://github.com/rtfeldman/roc/wiki/Why-Editor%3F-Why-not-VSCode-Emacs-Vim-Notepad--%3F</a></p>",
        "id": 272201832,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1645059909
    },
    {
        "content": "<p>Feedback welcome :)</p>",
        "id": 272201837,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1645059916
    },
    {
        "content": "<p>Would it be fitting to link to something like Brett Victor's demos in the doc? I totally get what you're aiming for with the editor, but I think to someone only used to textual programming seeing how non-textual interfaces can help you is much more convincing.</p>\n<p>Maybe there is a common pain that you already have a good idea of how to solve with the Editor. Telling that story can be really convincing too.</p>",
        "id": 272223007,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1645083559
    },
    {
        "content": "<p>Yeah I think it's focusing on the fact that things haven't changed in a long time, but it would be good to expand the parts about what might be possible. Good document!</p>",
        "id": 272224560,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1645084828
    },
    {
        "content": "<p>Thanks!<br>\nThis actually forces me to document all the ideas that I have collected and gathered during working on design too!  I've been so deep into them that it felt even redundant to communicate them. </p>\n<p>I will work on extending the document so it includes some tasty details :)</p>",
        "id": 272245927,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1645097378
    },
    {
        "content": "<p>I trimmed this down a lot to briefly answer the essence of the question and moved it to a new \"Frequently Asked Questions\" page on the wiki.<br>\nI saved the original text for future use: <a href=\"/user_uploads/22008/YEOFBErjoPHoWFW5Um3-iuCJ/zeljko-editor.txt\">zeljko-editor.txt</a></p>",
        "id": 272403522,
        "sender_full_name": "Anton",
        "timestamp": 1645192231
    },
    {
        "content": "<p>Let's also link to the wiki from the README, since I didn't know the wiki existed until this discussion</p>",
        "id": 272405757,
        "sender_full_name": "jan kili",
        "timestamp": 1645193393
    },
    {
        "content": "<p>I just finished going through the tutorial. I am pleasantly surprised how simple the language is and am excited to start digging into the nitty-gritty with platforms. I was able to pick up the language in about 1 hours, though this is mostly due to me coming from elm. Very happy to see pipe operators and the addition of back (I forgot the formal name, lol, this thing <code>_ &lt;- _</code>).</p>\n<p>I did run into a few issues, however, going through the tutorial, though this is expected at this stage. At the bottom of the tutorial, there's a table of operations, specifically there is one that does not work, as it seams to be superfluous? Perhaps it could be removed. That would be the mod operator <code>%%</code>. Trying to use it produces the error <code>module Num does not export mod</code>.</p>\n<p>Phantom data makes sense to me because I saw a talk from Richard about it for Elm in a preview for a course. I'm guessing it's the same thing here.</p>\n<p>I think the tutorial should link to the relevant documents guiding the user on how to install everything. I have yet to find a document mention the Roc Editor, but I'll keep digging to find it.</p>\n<p>The only other issue I had going through the tutorial was that I remember getting stuck on the first exapmle containing <code>Stdin.line</code> because some issue kept crashing the program. However, I recalled to use <code>roc check</code> before trying to run the script, which definitely halped.</p>\n<p>Overall, very pleased with the simplicity and power of the language constructs!</p>",
        "id": 272456460,
        "sender_full_name": "Jose Quesada",
        "timestamp": 1645217956
    }
]