[
    {
        "content": "<p>Hi.<br>\nI started playing with the platform bit and tried to copy the \"cli\" example to implement a new example where I pass arguments to the binary and they get reversed and printed. Here is my current codebase: <a href=\"https://github.com/matthiasbeyer/roc/tree/add-example-reverse/examples/reverse\">https://github.com/matthiasbeyer/roc/tree/add-example-reverse/examples/reverse</a> although it does not work yet and I don't see why. If HEAD is reverted, it works, but as soon as I introduce <code>List.reverse</code> to the roc code, it segfaults with <code>free(): invalid pointer</code>. How can I debug this or what am I doing wrong here?</p>\n<p>Sorry for hijacking this thread... <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 259488733,
        "sender_full_name": "Matthias Beyer",
        "timestamp": 1635490515
    },
    {
        "content": "<p>that link does not work for me</p>",
        "id": 259495593,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635496078
    },
    {
        "content": "<p>but most likely, something is freed by both rust and roc</p>",
        "id": 259495645,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635496099
    },
    {
        "content": "<p>The github repo you posted is invite only, and this is a bug since Roc shouldn't be able to segfault. I don't know how to debug it, things are still in pretty early stages here, my first non-trivial roc program also crashes the compiler.</p>",
        "id": 259557076,
        "sender_full_name": "Joseph Anthony Zullo",
        "timestamp": 1635528449
    },
    {
        "content": "<p>Doing <code>cargo run check &lt;your_project/SomeFile.roc&gt;</code> first can sometimes reveal errors in your program that cause the compiler to crash when doing just <code>cargo run  &lt;your_project/SomeFile.roc&gt;</code>.</p>",
        "id": 259557905,
        "sender_full_name": "Anton",
        "timestamp": 1635528794
    },
    {
        "content": "<blockquote>\n<p>this is a bug since Roc shouldn't be able to segfault</p>\n</blockquote>\n<p>of note, Roc application code should never segfault, but under the hood platforms can use languages that can segfault - so if you make a change to a platform and the result is a segfault, that's not necessarily a bug in Roc!</p>",
        "id": 259558254,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635528962
    },
    {
        "content": "<p>okay, I am wondering why the repo is invite-only if it is a clone of the original roc repo ... all members of the roc repo should have access by default, right? Strange.<br>\nThe platform is written in Rust (as I copied the <code>cli</code> example). I will see how I can debug it! Thanks so far.<br>\nBtw <code>check</code> does return zero</p>",
        "id": 259559966,
        "sender_full_name": "Matthias Beyer",
        "timestamp": 1635529731
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"453579\">@Matthias Beyer</span> feel free to just use a branch directly in this repo!</p>",
        "id": 259560788,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635530097
    },
    {
        "content": "<p>Yeah, I will try for myself for now, to learn to navigate the codebase and how things work internally. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> but thanks!</p>",
        "id": 259563718,
        "sender_full_name": "Matthias Beyer",
        "timestamp": 1635531315
    }
]