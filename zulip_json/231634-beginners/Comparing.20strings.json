[
    {
        "content": "<p>How do I compare strings in Roc? I am looking for something along the lines of <code>\"a\" &lt; \"b\"</code> returning <code>Bool.true</code>, or equivalently a <code>cmp</code> function.</p>\n<p>As a follow-up, if there is no builtin for this, how do I co-iterate two strings? I see <code>Str.walkUtf8</code>. Is there a zip function, an iterate ability, etc? Why is <code>walkUtf8</code> giving <code>U8</code> on each iteration instead of a codepoint (<code>U32</code>)?</p>",
        "id": 436997442,
        "sender_full_name": "Andy Ferris",
        "timestamp": 1714804477
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"714854\">@Andy Ferris</span>,<br>\nWe've made several deliberate decisions about how Strings work in Roc but they may seem annoying at first.</p>\n<blockquote>\n<p>How do I compare strings in Roc? I am looking for something along the lines of <code>\"a\" &lt; \"b\"</code> returning <code>Bool.true</code>, or equivalently a <code>cmp</code> function.</p>\n</blockquote>\n<p>We talk a bit about this in \"String equality and normalization\" <a href=\"https://www.roc-lang.org/builtins/Str\">here</a>.<br>\nWe really need to look at finishing up the <a href=\"http://github.com/roc-lang/unicode\">github.com/roc-lang/unicode</a> package.</p>\n<blockquote>\n<p>how do I co-iterate two strings? I see <code>Str.walkUtf8</code>. Is there a zip function, an iterate ability, etc?</p>\n</blockquote>\n<p>If possible we recommend going with <code>Str.toUtf8</code>, zip can be achieved with <a href=\"https://www.roc-lang.org/builtins/List#map2\"><code>List.map2</code></a>. If you can, working with <code>List U8</code> will yield superior performance.</p>\n<blockquote>\n<p>Why is <code>walkUtf8</code> giving <code>U8</code> on each iteration instead of a codepoint (<code>U32</code>)?</p>\n</blockquote>\n<p>I believe this was done because new unicode code points can be added in new versions of unicode and we didn't want to be required to make a new Roc release when this happens, so we chose to put codepoint stuff in roc-lang/unicode.<br>\nPerhaps also because we did not want to make it too easy to reach for, in several cases codepoints may not really be what you should use.</p>\n<p>There are a lot of gotchas in working with strings, so we wanted to encourage users to educate themselves.</p>\n<p>I'll make it a priority to get the unicode package ready for release.</p>\n<p>Feel free to ask additional questions.</p>",
        "id": 437006532,
        "sender_full_name": "Anton",
        "timestamp": 1714814326
    },
    {
        "content": "<p>an important question here is what you're looking to use the comparison for! There are <a href=\"#narrow/stream/304641-ideas/topic/ordering.2Fsorting.20ability/near/395539545\">a lot of considerations for string comparison</a> <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 437012999,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1714820919
    },
    {
        "content": "<p>for example, if you just want to compare the bytes as fast as possible but the actual ordering doesn't really matter (e.g. to put them into a tree data structure where the goal is a set of performance characteristics and not displaying to the user), the best comparison function for that is different from the best comparison function for sorting alphabetically (for user display)</p>",
        "id": 437013141,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1714821029
    },
    {
        "content": "<p>and correctly sorting alphabetically also requires giving the comparison function an extra argument because different locales have different rules for sorting the same string sequences, e.g. in Danish, the sequence \"aa\" is sorted as a single character, and it comes after \"z\"</p>",
        "id": 437013189,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1714821103
    },
    {
        "content": "<p>We should make a flowchart some time to help users figure out what they need for their string operations.</p>",
        "id": 437014099,
        "sender_full_name": "Anton",
        "timestamp": 1714822058
    },
    {
        "content": "<p>Also checkout <span class=\"user-mention\" data-user-id=\"508951\">@Hannes</span> new package <a href=\"https://github.com/Hasnep/roc-ascii\">https://github.com/Hasnep/roc-ascii</a></p>",
        "id": 437042070,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714847053
    },
    {
        "content": "<p>We dont have the Sortable ability, but I imagine we could implement it for ASCII and then be able to compare strings using that.</p>",
        "id": 437042114,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714847101
    },
    {
        "content": "<p>As in the Sortable Ability hasnt been implemented yet but is planned I think.</p>",
        "id": 437042138,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1714847122
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/231634-beginners/topic/Comparing.20strings/near/437042138\">said</a>:</p>\n<blockquote>\n<p>As in the Sortable Ability hasnt been implemented yet but is planned I think.</p>\n</blockquote>\n<p>I am working on it! (but slowly <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>).</p>",
        "id": 437044092,
        "sender_full_name": "Jasper Woudenberg",
        "timestamp": 1714849007
    },
    {
        "content": "<p>I've just released <a href=\"https://github.com/Hasnep/roc-ascii/releases/tag/v0.2.0\">v0.2.0 of roc-ascii</a> which adds the <a href=\"https://hasnep.github.io/roc-ascii/Ascii/#compare\">Ascii.compare</a> and <a href=\"https://hasnep.github.io/roc-ascii/Ascii/#sortAsc\">Ascii.sortAsc</a> functions for sorting strings in \"ASCIIbetical\" order, i.e. sorting by ASCII codepoints. It's essentially the same as alphabetical order, but with some quirks around case and punctuation.</p>\n<p>If all your strings are known to be ASCII, then that could be an option :)</p>",
        "id": 437175983,
        "sender_full_name": "Hannes",
        "timestamp": 1714957172
    },
    {
        "content": "<p>Nice!</p>\n<p>I have <a href=\"https://github.com/hristog/roc-tools/blob/9cbf1866066ff9761634d5bca78d07347dbd64a4/package/StrTools.roc#L8\"><code>StrTools.cmpU8Based</code></a> in <a href=\"https://github.com/hristog/roc-tools\">roc-tools</a>, but I haven't been mentioning <code>roc-tools</code> here (I did notice that it was captured in your package index, <span class=\"user-mention\" data-user-id=\"508951\">@Hannes</span>) because it's still severely lacking docstrings.</p>",
        "id": 437201071,
        "sender_full_name": "Hristo",
        "timestamp": 1714976658
    }
]