[
    {
        "content": "<p>Hi!</p>\n<p>I tried to debug some code, so I compiled with the <code>--debug</code> flag. The compiler then complained that it could not find <code>debugir</code> in the PATH, so I copied the derivation from <a href=\"https://github.com/roc-lang/roc/blob/main/flake.nix#L67-L88\">here</a>.</p>\n<p><code>llvmPkgs</code> was undefined, but I found it in <a href=\"https://github.com/roc-lang/roc/blob/main/nix/compile-deps.nix#L4\">compile-deps.nix</a> set to 16. Using this version however fails to build with this:</p>\n<div class=\"codehilite\"><pre><span></span><code>Could not find a configuration file for package &quot;LLVM&quot; that is compatible\nwith requested version &quot;13&quot;.\n\nThe following configuration files were considered but not accepted:\n/nix/store/waq6fnibkdvq7rmglm86yk95dfg87lj5-llvm-16.0.6-dev/lib/cmake/llvm/LLVMConfig.cmake, version: 16.0.6\n</code></pre></div>\n<p>So I also tried version 13, which actually built sucessfully!</p>\n<p>But when calling debugir on the outputted <code>main.ll</code> file, I get this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>debugir: main.ll:1025:84: error: &#39;%5&#39; defined with type &#39;%str.RocStr*&#39; but expected &#39;ptr&#39;\n  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %0, i64 24, i1 false)\n</code></pre></div>\n<p>is this because of the wrong LLVM versions? Is my approach doomed to fail and I should just build roc entirely from scratch? Does it even work right now?</p>\n<p>Thanks!</p>",
        "id": 405912103,
        "sender_full_name": "joshi",
        "timestamp": 1701724253
    },
    {
        "content": "<p>I also had this issue. You can ignore this error. It should still dump the llvm bitcode I think.</p>",
        "id": 405913384,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701724820
    },
    {
        "content": "<p>I'm not sure about actually using debugir, sorry I can't help you with that part</p>",
        "id": 405913476,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701724867
    },
    {
        "content": "<p>The problem is that the compiler then tries to call <code>llc</code> on the <code>main.dbg.ll</code> file, which was never generated <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <br>\nSo I tried to call it manually to see what happens, and it gave me this error</p>",
        "id": 405913643,
        "sender_full_name": "joshi",
        "timestamp": 1701724944
    },
    {
        "content": "<p>I think debugir doesn't support the newest version of llvm yet</p>",
        "id": 405913887,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701725064
    },
    {
        "content": "<p>So I think it is just broken</p>",
        "id": 405913897,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701725068
    },
    {
        "content": "<p>I have a pr up where I debated removing it, but left it in for now.</p>",
        "id": 405913959,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701725097
    },
    {
        "content": "<p>Ok thank you, then I'll stop trying <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 405913997,
        "sender_full_name": "joshi",
        "timestamp": 1701725125
    },
    {
        "content": "<p>We added it original cause we had no debug info, which can be painful when using a debugger. We still don't have good debug info, but in the pr at least we have working function debug info</p>",
        "id": 405914015,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701725131
    },
    {
        "content": "<p>so just having any debug info would probably help a lot, right now if I load the executable in gdb it just says no symbols</p>",
        "id": 405914153,
        "sender_full_name": "joshi",
        "timestamp": 1701725193
    },
    {
        "content": "<p>try with <code>--linker=legacy</code> should at least give you symbol names for functions that stayed around.</p>",
        "id": 405914234,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701725226
    },
    {
        "content": "<p>but yeah, it isn't a great state currently. Especially cause the surgical linker doesn't support debug info at all.</p>",
        "id": 405914297,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701725257
    },
    {
        "content": "<p>Thanks!<br>\nI think this is good enough, I still can't see variables, but I can set a breakpoint and then look at memory, that should already work</p>",
        "id": 405914648,
        "sender_full_name": "joshi",
        "timestamp": 1701725404
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"630752\">joshi</span> has marked this topic as resolved.</p>",
        "id": 405914658,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701725406
    }
]