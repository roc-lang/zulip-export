[
    {
        "content": "<p>Just curious has anyone else seen roc give the wrong panic message?</p>\n<p>Recently I saw a case of \"multiplication overflow\", but it came from an addition.</p>",
        "id": 406968718,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702153538
    },
    {
        "content": "<p>I've specifically seen reports of that one</p>",
        "id": 406968804,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702153616
    },
    {
        "content": "<p>of it saying multiplication overflow where it should have said something else (I heard about it in the case of subtraction instead of addition)</p>",
        "id": 406968825,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702153635
    },
    {
        "content": "<p>only kinda related, but I think we could make that error message a lot more helpful, especially for people not used to different number types - e.g. <code>U8 multiplication overflowed. U8s range from 0 to 255, and this multiplication resulted in a number outside those bounds. Converting to a larger number size (e.g. by calling Num.toU16 on both numbers) before multiplying would increase these bounds.</code></p>",
        "id": 406969017,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702153826
    },
    {
        "content": "<p>I would appreciate a more clarified error message. You could also suggest using signed int version if they attempt to go below zero.</p>",
        "id": 406970287,
        "sender_full_name": "Ryan Bates",
        "timestamp": 1702155320
    },
    {
        "content": "<p>Could also mention the saturating or wrapping versions of the functions</p>",
        "id": 406970988,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702155845
    },
    {
        "content": "<p>maybe just link to some docs on how to handle overflow</p>",
        "id": 406971031,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702155905
    },
    {
        "content": "<p>Wait, does Roc have the wrapping and saturating version of arithmetic infix operators, like Zig does? Or just the regular addWrap et. al. functions?</p>",
        "id": 406996887,
        "sender_full_name": "Declan Joseph Maguire",
        "timestamp": 1702174232
    },
    {
        "content": "<p>functions only</p>",
        "id": 406996914,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702174258
    },
    {
        "content": "<p>Damn, those infix versions are super nice in Zig. They basically solve all the ergonomic problems of always crashing on overflow, if you're trying to write something very numerical.</p>",
        "id": 406997054,
        "sender_full_name": "Declan Joseph Maguire",
        "timestamp": 1702174357
    }
]