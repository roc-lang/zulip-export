[
    {
        "content": "<p>Hi, I'm a bit confused about what I should write for the packages pf</p>\n<div class=\"codehilite\"><pre><span></span><code>packages { pf: ??? }\n</code></pre></div>",
        "id": 406569108,
        "sender_full_name": "Slazaa",
        "timestamp": 1701963618
    },
    {
        "content": "<p>If you are new to roc, I would advise starting with <a href=\"http://roc-lang.org/tutorial\">the tutorial</a> and using basic-cli.</p>\n<p>In general, roc is always built on top of a platform. More details on platforms here: <a href=\"https://www.roc-lang.org/platforms\">https://www.roc-lang.org/platforms</a></p>",
        "id": 406575435,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701965353
    },
    {
        "content": "<p>please ask more questions if that isn't what you are looking for</p>",
        "id": 406575522,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701965380
    },
    {
        "content": "<p>Curious how people feel about <code>pf</code> in general. I think it trips me up a bit every time I read it because \"platform\" is a single word so it feels weird to have a syllable level abbreviation.  For basic-cli I like <code>packages { cli: \"...\" }</code>, but I realize that might not feel natural for all platforms.</p>",
        "id": 406595966,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1701972628
    },
    {
        "content": "<p>When I saw you use <code>cli</code> I immediately wanted to change all of my code to use it as well. Reads so much nicer (though does kinda hide which package is the platform)</p>",
        "id": 406596876,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701973041
    },
    {
        "content": "<p>Oh I thought the field needed to be called <code>pf</code></p>",
        "id": 406597039,
        "sender_full_name": "Slazaa",
        "timestamp": 1701973104
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/packages.20pf/near/406596876\">said</a>:</p>\n<blockquote>\n<p>When I saw you use <code>cli</code> I immediately wanted to change all of my code to use it as well. Reads so much nicer (though does kinda hide which package is the platform)</p>\n</blockquote>\n<p>I agree. Also, the new app header I'll soon be working on will have a special <code>platform</code> keyword indicating which package is the platform:</p>\n<div class=\"codehilite\"><pre><span></span><code>app [main]\n    requires {\n        cli: platform &quot;https://…/basic-cli/…&quot;,\n        json: &quot;https://.../roc-json&quot;\n    }\n</code></pre></div>\n<p>So it should be clear even if you use a different name.</p>",
        "id": 406598345,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1701973592
    },
    {
        "content": "<p>Oh, so I don't need to finish my sentence. I've written so far that: \"Is there a way to disambiguate between a purly Roc package and a platform? I know there is no package manager right now, but is the syntax planned to be the same? Because ...\"</p>",
        "id": 406598515,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1701973665
    },
    {
        "content": "<p>oh that's cool, I never thought of <code>cli</code>!</p>",
        "id": 406599128,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701973893
    },
    {
        "content": "<p>what would it be for <code>basic-webserver</code>? <code>web</code>? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 406599173,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701973912
    },
    {
        "content": "<p><code>server</code>?</p>",
        "id": 406599213,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701973922
    },
    {
        "content": "<p><code>wserv</code> ?</p>",
        "id": 406599313,
        "sender_full_name": "Slazaa",
        "timestamp": 1701973950
    },
    {
        "content": "<p>so <code>imports [cli.File.{ readUtf8 }]</code> feels reasonable, although <code>imports [web.File.{ readUtf8 }]</code> feels weird <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 406600774,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701974515
    },
    {
        "content": "<p><code>imports [server.File.{ readUtf8 }]</code> feels more reasonable</p>",
        "id": 406600861,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701974541
    },
    {
        "content": "<p><code>web</code> sounds like it would run on the browser</p>",
        "id": 406601085,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1701974621
    },
    {
        "content": "<p>If you're using Nea it could be <code>nea</code> <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> </p>\n<p>This might partially depend on if the Roc community goes hard on the Elm philosophy that everything should have a very direct name, or if there are platforms with cute/colorful names.</p>\n<p>Like in elixir <code>Phoenix</code> is a namespace for all code related to the web server. In context that's fine.</p>",
        "id": 406601179,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1701974651
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"586417\">Elias Mulhall</span> <a href=\"#narrow/stream/231634-beginners/topic/packages.20pf/near/406601179\">said</a>:</p>\n<blockquote>\n<p>This might partially depend on if the Roc community goes hard on the Elm philosophy that everything should have a very direct name, or if there are platforms with cute/colorful names.</p>\n<p>Like in elixir <code>Phoenix</code> is a namespace for all code related to the web server. In context that's fine.</p>\n</blockquote>\n<p>I think in the context of platforms it's natural to have a variety of names because the main point of platforms is to provide a way to build applications for a particular use case in a particular way, and there will naturally be different approaches with different tradeoffs for the same (or similar) domains</p>",
        "id": 406601901,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701974945
    },
    {
        "content": "<p>and nea is a great example of that!</p>",
        "id": 406602032,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701974998
    }
]