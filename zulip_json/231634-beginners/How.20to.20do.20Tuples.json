[
    {
        "content": "<p>This might help... <a href=\"https://github.com/roc-lang/roc/blob/main/crates/compiler/test_gen/src/gen_tuples.rs\"><code>crates/compiler/test_gen/src/gen_tuples.rs</code></a></p>",
        "id": 341955638,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678853324
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>tuple = (&quot;One&quot;, 0xAB01, 15_000_000i64)\n\nthirdItem = tuple.2\n\nexpect thirdItem == 15_000_000i64\n</code></pre></div>",
        "id": 341955726,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678853413
    },
    {
        "content": "<p>Added an issue <a href=\"https://github.com/roc-lang/roc/issues/5141\">5141</a> for Tuples to be included in Tutorial</p>",
        "id": 341956463,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678854133
    },
    {
        "content": "<p>3 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/Opaque.20types.20perf.20question\">#beginners &gt; Opaque types perf question</a> by <span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span>.</p>",
        "id": 341957398,
        "sender_full_name": "Notification Bot",
        "timestamp": 1678855056
    },
    {
        "content": "<p>I added an Issue <a href=\"https://github.com/roc-lang/roc/issues/5143\">5143</a> for tracking <code>Eq</code> ability. Should tuples be comparable if all of the elements implement <code>Eq</code>?</p>",
        "id": 341957484,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678855110
    },
    {
        "content": "<p>Some draft notes below on Tuples... for the Tutorial. Please let me know if this is correct or if I'm missing something important.</p>\n<p>Tuples are an ordered collection of elements to group related data. Tuples are often used to represent fixed collections of related data, such as the coordinates of a point or the RGB values of a color. Here are some important things to know about using tuples:</p>\n<h2>Definition</h2>\n<p>A tuple is defined using parentheses and commas. For example, <code>myTuple: (1, \"two\", 3.0)</code> is a tuple with three elements.</p>\n<h2>Destructuring</h2>\n<div class=\"codehilite\"><pre><span></span><code>a = (2, 4)\nb = (5, 6)\n\nf : (I64, I64)a, (I64, I64)b -&gt; I64\nf = \\(x1, x2), (x3, x4) -&gt; x1 + x2 + x3 + x4\n\nexpect f a b == 17\n</code></pre></div>\n<h2>Indexing</h2>\n<p>You can access individual elements of a tuple using <code>.</code> to access values, starting at <code>0</code>. For example the expression <code>(1, \"two\", 3.0).1</code> evaluates to <code>\"two\" : Str</code>.</p>\n<h1>Size</h1>\n<p>Tuples can have any number of elements, except zero. Tuples can also be nested, meaning that they can contain other tuples as elements. For example;</p>\n<div class=\"codehilite\"><pre><span></span><code>nestedTuple = (2, (&quot;Roc&quot;, 0.0))\n\nexpect nestedTuple.1.0 == &quot;Roc&quot;\n</code></pre></div>\n<h1>Comparison</h1>\n<p><code>expect (0.0, 2, \"x\") == (0.0, 2, \"x\")</code> &lt;-- doesn't seem to be working correctly</p>",
        "id": 341957831,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678855344
    },
    {
        "content": "<p>Tuples can have any number of elements except zero _or one_, I think!</p>",
        "id": 341965448,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1678860572
    },
    {
        "content": "<p>I think we should have a section that describes when not to use them. There was quite a lot of debate about whether we should even have them in the language!</p>",
        "id": 341966246,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1678861007
    },
    {
        "content": "<p>The trouble with tuples is that the fields are anonymous. Records have named fields which is usually better. RGB is actually a great example of that! I would say always use records for RGB and usually for points!</p>",
        "id": 341966249,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1678861009
    },
    {
        "content": "<p>In other languages I'd normally use them to return more than one value from a function.</p>",
        "id": 341966436,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1678861097
    },
    {
        "content": "<p>Or in cases where there's no meaningful name</p>",
        "id": 341966546,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1678861151
    },
    {
        "content": "<p>I can't remember the motivating examples that finally led us to put tuples in Roc. I know SIMD support was one, but that's not a good example because I don't think we've implemented the rest of SIMD! I can't remember the other use cases.</p>",
        "id": 341966924,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1678861325
    },
    {
        "content": "<p>Ya I’d love to see some example of when to use each of records, tuples, and tags. They all seem to have a good amount of overlap and it seems like you could actually use all 3 for the same job sometimes which I’m sure will be a bit confusing to beginners.</p>",
        "id": 341967521,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1678861601
    }
]