[
    {
        "content": "<p>After importing <code>pf.Task</code> (using basic-cli as the platform - <code>\"https://github.com/roc-lang/basic-cli/releases/download/0.3.2/tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk.tar.br\"</code>), if I try to use <code>Task.ok</code> I get the following error:</p>\n<div class=\"codehilite\"><pre><span></span><code>── NOT EXPOSED ────────────────────────────────────────────────────── main.roc ─\n\nThe Task module does not expose `ok`:\n\n30│      Task.ok {}\n         ^^^^^^^\n\nDid you mean one of these?\n\n    Task.map\n    Task.loop\n    Task.fail\n    Task.await\n\n────────────────────────────────────────────────────────────────────────────────\n\n1 error and 0 warnings found in 12 ms.\n\nYou can run the program anyway with roc run\n</code></pre></div>\n<p>Running the program produces the following crash error:</p>\n<div class=\"codehilite\"><pre><span></span><code>Roc crashed with:\n\n    ValueNotExposed { module_name: ModuleName(IdentStr { string: &quot;Task&quot; }), ident: Ident(IdentStr { string: &quot;ok&quot; }), region: @567-574, exposed_values: [&#39;await&#39;, &#39;succeed&#39;, &#39;fail&#39;, &#39;map&#39;, &#39;mapFail&#39;, &#39;onFail&#39;, &#39;attempt&#39;, &#39;forever&#39;, &#39;loop&#39;, &#39;fromResult&#39;] }\n\nHere is the call stack that led to the crash:\n\n    shm.open\n        /home/runner/work/roc/roc/basic-cli/src/src/lib.rs\n\nOptimizations can make this list inaccurate! If it looks wrong, try running without `--optimize` and with `--linker=legacy`\n</code></pre></div>\n<p>After looking at <a href=\"https://github.com/roc-lang/basic-cli/blob/main/src/Task.roc\">the source code</a> I cannot see why <code>Task.ok</code> would not be exposed, unless the platform release is on a version that didn't use to expose it?</p>\n<p>If I try to do an unqualified import <code>pf.Task.{ ok }</code>, the error it produces is different:</p>\n<div class=\"codehilite\"><pre><span></span><code>── UNRECOGNIZED NAME ──────────────────────────────────────────────── main.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── DUPLICATE NAME ─ ....2/tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe ok name is first defined here:\n\n37│  succeed = \\ok -&gt; InternalTask.succeed ok\n                ^^\n\nBut then it&#39;s defined a second time here:\n\n48│                  Ok ok -&gt; transform (Ok ok) |&gt; InternalTask.toEffect\n                        ^^\n\nSince these variables have the same name, it&#39;s easy to use the wrong\none by accident. Give one of them a new name.\n\n\n── DUPLICATE NAME ─ ....2/tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe ok name is first defined here:\n\n37│  succeed = \\ok -&gt; InternalTask.succeed ok\n                ^^\n\nBut then it&#39;s defined a second time here:\n\n81│                  Ok ok -&gt; Task.succeed (transform ok) |&gt; InternalTask.toEffect\n                        ^^\n\nSince these variables have the same name, it&#39;s easy to use the wrong\none by accident. Give one of them a new name.\n\n\n── DUPLICATE NAME ─ ....2/tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe ok name is first defined here:\n\n37│  succeed = \\ok -&gt; InternalTask.succeed ok\n                ^^\n\nBut then it&#39;s defined a second time here:\n\n92│                  Ok ok -&gt; Task.succeed ok |&gt; InternalTask.toEffect\n                        ^^\n\nSince these variables have the same name, it&#39;s easy to use the wrong\none by accident. Give one of them a new name.\n\n\n── DUPLICATE NAME ─ ....2/tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe ok name is first defined here:\n\n37│  succeed = \\ok -&gt; InternalTask.succeed ok\n                ^^\n\nBut then it&#39;s defined a second time here:\n\n101│          Ok ok -&gt; succeed ok\n                 ^^\n\nSince these variables have the same name, it&#39;s easy to use the wrong\none by accident. Give one of them a new name.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n\n── UNRECOGNIZED NAME ─ ...tE4xS_zLdmmxmHwHih9kHWQ7fsXtJr7W7h3425-eZFk/Task.roc ─\n\nThe Task module does not expose anything by the name ok.\n\n────────────────────────────────────────────────────────────────────────────────\n\n16 errors and 0 warnings found in 15 ms.\n\nYou can run the program anyway with roc run\n</code></pre></div>",
        "id": 369500170,
        "sender_full_name": "Noa Vidović",
        "timestamp": 1687724850
    },
    {
        "content": "<p><code>Task.ok</code> was created after that release. It was renamed from <code>Task.succeed</code>, so using that should work. There is an unstable 4.0 release, or you could clone the repository and use a local platform as well with <code>pf: \"./path/to/basic-cli/src/main.roc</code></p>",
        "id": 369500687,
        "sender_full_name": "Kilian Vounckx",
        "timestamp": 1687725113
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 369502202,
        "sender_full_name": "Noa Vidović",
        "timestamp": 1687725851
    },
    {
        "content": "<p>It might be wise to have the <a href=\"https://www.roc-lang.org/packages/basic-cli/Task\">documentation</a> reflect the latest release, instead of the current git version</p>",
        "id": 369502609,
        "sender_full_name": "Noa Vidović",
        "timestamp": 1687726107
    },
    {
        "content": "<p>Oh wow, docs for basic-cli are back up and running, awesome. <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 369514896,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687734002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> is it easy enough to have docs build from the latest release? I guess if someone is using source they can generate docs locally.</p>",
        "id": 369515057,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687734107
    },
    {
        "content": "<p>I'll set up docs for 0.3.2, 0.4.0 and the latest git version</p>",
        "id": 369635034,
        "sender_full_name": "Anton",
        "timestamp": 1687773888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"627625\">@Noa Vidović</span> documentation for basic-cli 0.3.2 is available now: <a href=\"https://www.roc-lang.org/packages/basic-cli/0.3.2\">https://www.roc-lang.org/packages/basic-cli/0.3.2</a></p>",
        "id": 374214065,
        "sender_full_name": "Anton",
        "timestamp": 1689071535
    }
]