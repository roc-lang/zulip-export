[
    {
        "content": "<p>Hi I noticed  executable  produced on linux platform  are huge  like  100 MB  which  is crazy</p>",
        "id": 392871462,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695593341
    },
    {
        "content": "<p>which platform are you using? That will generally determine the size of the executable</p>",
        "id": 392873158,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695595422
    },
    {
        "content": "<p>ubuntu 20.04</p>",
        "id": 392873762,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695596157
    },
    {
        "content": "<p>both  C and  rust , roc  render  the  same  size</p>",
        "id": 392873850,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695596257
    },
    {
        "content": "<p>I mean what roc platform are you using</p>",
        "id": 392874291,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695596659
    },
    {
        "content": "<p><code>basic-cli</code>?</p>",
        "id": 392874295,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695596665
    },
    {
        "content": "<p>also, are you running <code>roc</code> with the <code>--optimize</code> flag?</p>",
        "id": 392874316,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695596704
    },
    {
        "content": "<p>I am  compiling this  with  recent  build (flag  does not  have impact whatsoever   roc build  --optimize  file.roc )</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;peek&quot;\n\npackages { pf: &quot;https://github.com/roc-lang/basic-cli/releases/download/0.5.0/Cufzl36_SnJ4QbOoEmiJ5dIpUxBvdB3NEySvuH82Wio.tar.br&quot;\n}\n\nimports [\n\npf.Stdin,\n\npf.Stdout,\n\npf.Stderr,\n\npf.File,\n\npf.Path,\n\npf.Task.{ Task\n}]\n\nprovides [main]\nto pf\n\n\n\n\n\ntokenize = \\ str\n-&gt;\n\nStr.split str &quot; &quot;\n\n|&gt; List.dropIf Str.isEmpty\n\n\n\n\n\nfilterInternal = \\ str, matches,\n inFlag -&gt;\n\nif List.isEmpty matches\n== Bool.true\nthen\n\nstr\n\nelse\n\nStr.split str &quot;\\n&quot;\n\n|&gt; List.walk\n&quot;&quot;\n( \\ state\n, elem\n-&gt;\n\ncheckResult = List.walk matches Bool.false\n( \\flag, pat\n-&gt;\n\nif flag\n== Bool.true\nthen\n\nBool.true\n\nelse\n\nwhen\n(Str.splitFirst elem pat\n)\nis\n\nOk _\n-&gt; Bool.true\n\nErr _\n-&gt; Bool.false)\n\nif\n(checkResult\n== inFlag)\n&amp;&amp;\n(Str.isEmpty\n(Str.trim elem\n)\n== Bool.false)\nthen\n\nStr.concat state elem\n\n|&gt; Str.concat\n&quot;\\n&quot;\n\nelse\n\nstate\n\n)\n\n\n\nfilterOut = \\ str, matches\n-&gt;\n\n\nworkedOut = List.walk matches\n{ whiteList\n:\n[], blackList\n: []\n}\n\n( \\ state\n, word\n-&gt;\n\nif Str.startsWith word\n&quot;@&quot;\n== Bool.true\nthen\n\n{ state &amp; blackList: List.append state.blackList\n(Str.replaceFirst word\n&quot;@&quot;\n&quot;&quot; )\n}\n\nelse\n\n{ state &amp; whiteList: List.append state.whiteList word\n}\n\n)\n\nfilterInternal str workedOut.whiteList Bool.true\n\n|&gt; filterInternal workedOut.blackList Bool.false\n\n\n\n\n\nmain =\n\nread =\n\npath = Path.fromStr\n&quot;log.txt&quot;\n\nout = Path.fromStr\n&quot;out.txt&quot;\n\nhien &lt;- File.readUtf8 path\n|&gt; Task.await\n\n\nloopTask =\n\n_\n&lt;- Stdout.line\n&quot;provide your filters: &quot;\n|&gt; Task.await\n\ntext &lt;- Task.await Stdin.line\n\nresult =\n(filterOut hien\n(tokenize text)\n)\n\n_\n&lt;- File.writeUtf8 out result\n|&gt; Task.await\n\n_\n&lt;- Stdout.line result\n|&gt; Task.await\n\n_\n&lt;- Stdout.line\n&quot;\\n\\nLast you used:\n\\(text)&quot;\n|&gt; Task.await\n\nStdout.line &quot;\\nload data to out.txt&quot;\n\n\n\nTask.loop {} \\_\n-&gt; Task.map loopTask Step\n\n\n\n\nTask.attempt read \\result -&gt;\n\nwhen result\nis\n\nOk {}\n-&gt; Stdout.line\n&quot;Successfully wrote a string to out.txt&quot;\n\nErr err -&gt;\n\nmsg =\n\nwhen err\nis\n\nFileWriteErr _ PermissionDenied\n-&gt;\n&quot;PermissionDenied&quot;\n\nFileWriteErr _ Unsupported\n-&gt;\n&quot;Unsupported&quot;\n\nFileWriteErr _\n(Unrecognized\n_ other)\n-&gt; other\n\nFileReadErr _\n_\n-&gt; &quot;Error reading file&quot;\n\n_\n-&gt;\n&quot;Uh oh, there was an error!&quot;\n\n\n\n{}\n&lt;- Stderr.line msg\n|&gt; Task.await\n\nTask.ok {}\n</code></pre></div>",
        "id": 392913861,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695620203
    },
    {
        "content": "<p>I am getting  like  109 mega bytes  executable  which is outrageous</p>",
        "id": 392914132,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695620304
    },
    {
        "content": "<p>Yeah, basic-cli is very bloated as a base. IIRC, we need to update some dead code elimination stuff on the rust side. This isn't exactly a roc issue. A much slimmer platform can be built, but especially with surgical linking, I think we have some changes that need to be done to get rust to slim down the platform binary.</p>",
        "id": 392916627,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695621278
    },
    {
        "content": "<p>Almost none of that bloat is from actually roc code.</p>",
        "id": 392916699,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695621311
    },
    {
        "content": "<p>Maybe in a bit, I double back to the dead code stuff and basic cli. See if I can get rust to stop including so much extra code and bloating the binary.</p>",
        "id": 392916838,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695621360
    },
    {
        "content": "<p>it happens  also  when I am using C based  platform</p>",
        "id": 392917756,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695621648
    },
    {
        "content": "<p>That doesn't make sense. Maybe there is some other bug. Any info on the C platform?</p>",
        "id": 392917969,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695621719
    },
    {
        "content": "<p>and it is not so insignificant yes hard drives are huge nowadays but 100 MB is crazy and unacceptable in  long run  for potential user, it just hurts eyes</p>",
        "id": 392918160,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695621776
    },
    {
        "content": "<p>when I do  ./roc examples/platform-switching/rocLovesC.roc   and  than  compile  resulting  binary  is more or less the  same</p>",
        "id": 392918396,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695621855
    },
    {
        "content": "<p>I am using  ubuntu  20.04  with normal C libraries  from  repository  just  generic  linux</p>",
        "id": 392918567,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695621929
    },
    {
        "content": "<p>I'll take a look. See if I can repro</p>",
        "id": 392920857,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695622665
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/Hf8b4cHF2PjDWLzmeeneilm2/size.png\">size.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/Hf8b4cHF2PjDWLzmeeneilm2/size.png\" title=\"size.png\"><img src=\"/user_uploads/22008/Hf8b4cHF2PjDWLzmeeneilm2/size.png\"></a></div>",
        "id": 392922803,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695623252
    },
    {
        "content": "<p>Hmmm. Yeah... not able to repro for the C platform. <code>du -hs rocLovesC</code> is reporting <code>32K</code></p>\n<p>That said, I am seeing this for anything built on <code>basic-cli</code>. Hello world is 105MB because of basic cli.</p>",
        "id": 392923257,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695623419
    },
    {
        "content": "<p>I assume peek is based on basic cli?</p>",
        "id": 392923315,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695623453
    },
    {
        "content": "<p>you can  se source code  above</p>",
        "id": 392923371,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695623479
    },
    {
        "content": "<p>Also, your screenshot does not show the size of rocLoveC (that or I am missing it)</p>",
        "id": 392923372,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695623479
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>app &quot;peek&quot;\n\npackages { pf: &quot;https://github.com/roc-lang/basic-cli/releases/download/0.5.0/Cufzl36_SnJ4QbOoEmiJ5dIpUxBvdB3NEySvuH82Wio.tar.br&quot;\n}\n\nimports [\n\npf.Stdin,\n\npf.Stdout,\n\npf.Stderr,\n\npf.File,\n\npf.Path,\n\npf.Task.{ Task\n}]\n\nprovides [main]\nto pf\n\n\n\n\n\ntokenize = \\ str\n-&gt;\n\nStr.split str &quot; &quot;\n\n|&gt; List.dropIf Str.isEmpty\n\n\n\n\n\nfilterInternal = \\ str, matches,\n inFlag -&gt;\n\nif List.isEmpty matches\n== Bool.true\nthen\n\nstr\n\nelse\n\nStr.split str &quot;\\n&quot;\n\n|&gt; List.walk\n&quot;&quot;\n( \\ state\n, elem\n-&gt;\n\ncheckResult = List.walk matches Bool.false\n( \\flag, pat\n-&gt;\n\nif flag\n== Bool.true\nthen\n\nBool.true\n\nelse\n\nwhen\n(Str.splitFirst elem pat\n)\nis\n\nOk _\n-&gt; Bool.true\n\nErr _\n-&gt; Bool.false)\n\nif\n(checkResult\n== inFlag)\n&amp;&amp;\n(Str.isEmpty\n(Str.trim elem\n)\n== Bool.false)\nthen\n\nStr.concat state elem\n\n|&gt; Str.concat\n&quot;\\n&quot;\n\nelse\n\nstate\n\n)\n\n\n\nfilterOut = \\ str, matches\n-&gt;\n\n\nworkedOut = List.walk matches\n{ whiteList\n:\n[], blackList\n: []\n}\n\n( \\ state\n, word\n-&gt;\n\nif Str.startsWith word\n&quot;@&quot;\n== Bool.true\nthen\n\n{ state &amp; blackList: List.append state.blackList\n(Str.replaceFirst word\n&quot;@&quot;\n&quot;&quot; )\n}\n\nelse\n\n{ state &amp; whiteList: List.append state.whiteList word\n}\n\n)\n\nfilterInternal str workedOut.whiteList Bool.true\n\n|&gt; filterInternal workedOut.blackList Bool.false\n\n\n\n\n\nmain =\n\nread =\n\npath = Path.fromStr\n&quot;log.txt&quot;\n\nout = Path.fromStr\n&quot;out.txt&quot;\n\nhien &lt;- File.readUtf8 path\n|&gt; Task.await\n\n\nloopTask =\n\n_\n&lt;- Stdout.line\n&quot;provide your filters: &quot;\n|&gt; Task.await\n\ntext &lt;- Task.await Stdin.line\n\nresult =\n(filterOut hien\n(tokenize text)\n)\n\n_\n&lt;- File.writeUtf8 out result\n|&gt; Task.await\n\n_\n&lt;- Stdout.line result\n|&gt; Task.await\n\n_\n&lt;- Stdout.line\n&quot;\\n\\nLast you used:\n\\(text)&quot;\n|&gt; Task.await\n\nStdout.line &quot;\\nload data to out.txt&quot;\n\n\n\nTask.loop {} \\_\n-&gt; Task.map loopTask Step\n\n\n\n\nTask.attempt read \\result -&gt;\n\nwhen result\nis\n\nOk {}\n-&gt; Stdout.line\n&quot;Successfully wrote a string to out.txt&quot;\n\nErr err -&gt;\n\nmsg =\n\nwhen err\nis\n\nFileWriteErr _ PermissionDenied\n-&gt;\n&quot;PermissionDenied&quot;\n\nFileWriteErr _ Unsupported\n-&gt;\n&quot;Unsupported&quot;\n\nFileWriteErr _\n(Unrecognized\n_ other)\n-&gt; other\n\nFileReadErr _\n_\n-&gt; &quot;Error reading file&quot;\n\n_\n-&gt;\n&quot;Uh oh, there was an error!&quot;\n\n\n\n{}\n&lt;- Stderr.line msg\n|&gt; Task.await\n</code></pre></div>",
        "id": 392923480,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695623524
    },
    {
        "content": "<p>Yeah, peek is built on basic CLI which is why it is giant. I'll take a look at that. See if I can fix the platform to properly do dead code elimination and remove bloat.</p>",
        "id": 392923649,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695623583
    },
    {
        "content": "<p>I  checked  size  of rocLoveC  is 32k bytes but is sits in different location</p>",
        "id": 392924079,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695623755
    },
    {
        "content": "<p>Ok. Good. So a base c platform has a fine size</p>",
        "id": 392924257,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695623812
    },
    {
        "content": "<p>Yeah, so definitely a basic CLI issue leading to the giant binary size.</p>",
        "id": 392924343,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695623841
    },
    {
        "content": "<p>Thanks for the report</p>",
        "id": 392924367,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695623851
    },
    {
        "content": "<p>just  a thought, I know  that  from perspective of language creators, things like this do not matter much , but for me as an user they are  vital. I wanted to share this  simple app with my collage,   to make   process of  analyzing logs  a bit more pleasant (I could  do the same with grep but still I like this approach more) and right away he pointed out horrendous size of the file with suspicion. He would be no potential user  or Roc under any circumstances anyway (because he has different interests) but still .. It is not good  advertisement</p>",
        "id": 392964209,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695635916
    },
    {
        "content": "<p>We care deeply about the Roc user experience, including the produced file size. It's important to realize that as an open source project we have very little financial resources which unfortunately results in a user experience that currently falls short of our goals. We easily have enough work to employ 30 engineers full-time but we try to make it work with what we have.</p>",
        "id": 392974024,
        "sender_full_name": "Anton",
        "timestamp": 1695638771
    },
    {
        "content": "<p>ok I got  that</p>",
        "id": 392989572,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1695642961
    },
    {
        "content": "<p>I almost forgot; the <code>--opt-size</code> flag can reduce the size of the produced executable a lot:</p>\n<div class=\"codehilite\"><pre><span></span><code>roc build your-program.roc --opt-size\n</code></pre></div>\n<p>Still larger than what we want it to be, but a nice improvement nonetheless.</p>",
        "id": 393062022,
        "sender_full_name": "Anton",
        "timestamp": 1695660049
    },
    {
        "content": "<p>That won't affect the platform, which is the problem here.</p>",
        "id": 393063025,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695660413
    },
    {
        "content": "<p>It worked for me</p>\n<div class=\"codehilite\"><pre><span></span><code>basic-cli on  main [!?] via ❄  impure (nix-shell-env)\n❯ ls -lh examples/command\n-rwxr-xr-x 1 username users 104M sep 25 18:37 examples/command\n\nbasic-cli on  main [!?] via ❄  impure (nix-shell-env)\n❯ ./roc_nightly/roc build examples/command.roc --opt-size\n🔨 Rebuilding platform...\n0 errors and 0 warnings found in 9239 ms while successfully building:\n\n    examples/command\n\nbasic-cli on  main [!?] via ❄  impure (nix-shell-env) took 9s\n❯ ls -lh examples/command\n-rwxr-xr-x 1 username users 21M sep 25 18:38 examples/command\n</code></pre></div>",
        "id": 393063257,
        "sender_full_name": "Anton",
        "timestamp": 1695660491
    },
    {
        "content": "<p>Oh, you are rebuilding the platform and running the version of command.roc in the basic-cli repo? This would have no affect on the downloaded basic-cli platform.</p>",
        "id": 393064172,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695660773
    },
    {
        "content": "<p>Oh riiight, makes sense <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 393067154,
        "sender_full_name": "Anton",
        "timestamp": 1695661662
    },
    {
        "content": "<p>I think I have a solution that should drop it to about 15MB. (that said, I am not sure if it will run into some linker issues depending on platform)</p>",
        "id": 393073708,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695663707
    },
    {
        "content": "<p>Are the required changes isolated or spread out? I'm asking that to determine if it would be easy to revert if we run into trouble say 3 months from now.</p>",
        "id": 393080581,
        "sender_full_name": "Anton",
        "timestamp": 1695665878
    },
    {
        "content": "<p>Very isolated: <a href=\"https://github.com/roc-lang/roc/pull/5855\">https://github.com/roc-lang/roc/pull/5855</a></p>",
        "id": 393083171,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695666795
    },
    {
        "content": "<p>Then just need to rebuild basic-cli and other rust platforms and publish a new version.</p>",
        "id": 393083225,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695666824
    },
    {
        "content": "<p>Nice, then it's good for me! I will wait to merge to give others time to object</p>",
        "id": 393083599,
        "sender_full_name": "Anton",
        "timestamp": 1695666966
    },
    {
        "content": "<p>merged <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 393192849,
        "sender_full_name": "Anton",
        "timestamp": 1695719296
    },
    {
        "content": "<p>I took recent build but after  compilation  I am still getting  109 MB  executable, basically the same  code as mentioned earlier</p>",
        "id": 394107352,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1696101189
    },
    {
        "content": "<p>The basic cli platform hash not been updated yet. So it still has a cached 100MB exe that is being built off of.</p>",
        "id": 394111152,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1696105686
    },
    {
        "content": "<p>Sorry for the delay. basic-cli just releases separately from the compiler.</p>",
        "id": 394111163,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1696105704
    },
    {
        "content": "<p>Looping back to this <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span>, can you cut a new release of basic CLI?</p>",
        "id": 395061522,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1696517710
    },
    {
        "content": "<p>Yes, I'll try to get it done today</p>",
        "id": 395211419,
        "sender_full_name": "Anton",
        "timestamp": 1696582501
    },
    {
        "content": "<p>I'm hitting this issue only with the musl target:</p>\n<div class=\"codehilite\"><pre><span></span><code>❯ export CARGO_BUILD_TARGET=x86_64-unknown-linux-musl\n\nusername in 🌐 ubu-22-04 in Downloads/temp2/roc_nightly\n❯ ./roc build ../basic-cli/examples/countdown.roc\n🔨 Rebuilding platform...\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: https://github.com/roc-lang/roc/issues/new/choose\nthread &#39;main&#39; panicked at &#39;Undefined Symbol in relocation, (+a29, Relocation { kind: PltRelative, encoding: Generic, size: +20, target: Symbol(SymbolIndex(+70)), addend: +fffffffffffffffc, implicit_addend: false }): Ok(Symbol { name: &quot;roc_alloc&quot;, address: +0, size: +0, kind: Label, section: Undefined, scope: Unknown, weak: false, flags: Elf { st_info: +10, st_other: +0 } })&#39;, crates/linker/src/elf.rs:1486:25\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>I do test basic-cli with the latest nightly once a day, but not with a musl target, so I did not catch it before.<br>\nI'll bisect it tomorrow.</p>",
        "id": 395306841,
        "sender_full_name": "Anton",
        "timestamp": 1696615357
    },
    {
        "content": "<p>That could be cause by this, but would be surprising if musl refuses to expose symbols, but others dont</p>",
        "id": 395322585,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1696623141
    },
    {
        "content": "<p>Oh.....wait....musl is fully static? If so, I wonder if rust is ignoring that it should be exposing dynamic symbols......hmm</p>",
        "id": 395322641,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1696623177
    },
    {
        "content": "<p>Changing <code>-C link-args=-rdynamic</code> back to <code>-C link-dead-code</code> indeed fixes the issue</p>",
        "id": 395403781,
        "sender_full_name": "Anton",
        "timestamp": 1696675935
    },
    {
        "content": "<p>I'll do some testing</p>",
        "id": 395425028,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1696688868
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span>, any tips or setup for building with musl? I am getting weird issues like: <code>cannot find function, tuple struct or tuple variant </code>Some<code> in this scope</code> when building dependencies.</p>",
        "id": 395728282,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1696867070
    },
    {
        "content": "<p>Hmm, perhaps you need to install <code>musl-tools</code>?<br>\nYou can find the exact build steps I use on ubuntu-20.04 github CI <a href=\"https://github.com/roc-lang/roc/blob/48d1429b75d9662dbfd5c50fe5126cec98ccd6ac/.github/workflows/basic_cli_build_release.yml#L39\">here</a> and <a href=\"https://github.com/roc-lang/roc/blob/48d1429b75d9662dbfd5c50fe5126cec98ccd6ac/ci/build_basic_cli.sh\">here</a>.</p>",
        "id": 395739072,
        "sender_full_name": "Anton",
        "timestamp": 1696871631
    },
    {
        "content": "<p>I know this is super delayed, but I think this pr should enable you to cut a release of basic cli: <a href=\"https://github.com/roc-lang/basic-cli/pull/113\">https://github.com/roc-lang/basic-cli/pull/113</a></p>",
        "id": 397869961,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1697913376
    },
    {
        "content": "<p>An extra bonus once the new basic cli is released. Mac linking for basic cli based apps gets about 8x faster</p>",
        "id": 397994941,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1698027982
    }
]