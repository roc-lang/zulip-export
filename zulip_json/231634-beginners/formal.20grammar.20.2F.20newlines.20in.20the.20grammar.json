[
    {
        "content": "<p>is there a formal grammar written out for Roc? If not, can someone give me a quick overview of how newlines function in the grammar? E.g. it seems newlines are an important part of backpassing.</p>",
        "id": 392828959,
        "sender_full_name": "John Colvin",
        "timestamp": 1695560231
    },
    {
        "content": "<p>Can you provide the specific example that's not working?</p>",
        "id": 392856115,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1695579204
    },
    {
        "content": "<p>I don't have a problem with something not working, I'm more asking from a language design point of view, I'm interested to know what role newlines play in the grammar. I guess i can just keep playing with the language and find out, but I imagine that it's been thought through and wondered if someone could share some insight or explanation. E.g. (these are me working it out otoh so forgive mistakes) for <code>D</code> you can say \"newlines play no role in the grammar beyond being whitespace, with the exception of <code>// comments</code> and shebangs. For ANSI <code>C</code> you can say \"after pre-processing, newlines play no role in the grammar beyond being whitespace\". That sort of thing</p>",
        "id": 392856734,
        "sender_full_name": "John Colvin",
        "timestamp": 1695579808
    },
    {
        "content": "<p>we don't have a formal grammar...off the top of my head, the places where newlines are currently significant is:</p>\n<ul>\n<li>a type annotation followed on the next line by a definition (that is, an assignment using <code>=</code>) at the same indentation level is applied to that def (same as in Elm and Haskell)</li>\n<li>defs, type annotations, ability declarations,  <code>when</code> branches, backpassing, type alias declarations, and opaque type declarations must all begin after a newline (optionally indented)</li>\n<li>any sequence of defs at the same indentation level must end with an expression at that indentation level</li>\n</ul>",
        "id": 392874115,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695596503
    },
    {
        "content": "<p>I think that's it, but there might be more I'm not thinking of. Also we've talked about introducing a simplifying/unifying concept of \"blocks\" based on indentation level, which wouldn't affect any current code I've seen written in practice, but which might simplify explaining the rules (among other potential benefits)</p>",
        "id": 392874242,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695596641
    }
]