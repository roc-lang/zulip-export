[
    {
        "content": "<p>I've been working on a tutorial for building Roc applications - I've written maybe like 30% of it, but I wanted to share what I have so far in case it's already useful to people in its current WIP form!</p>\n<p><a href=\"https://gist.github.com/rtfeldman/b5cd8d8876bfcd70cb82caaa55875285\">https://gist.github.com/rtfeldman/b5cd8d8876bfcd70cb82caaa55875285</a></p>",
        "id": 262273028,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1637546604
    },
    {
        "content": "<p>also if anyone has any feedback or questions about the sections that are written, please feel free to ask/share here!</p>",
        "id": 262273032,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1637546626
    },
    {
        "content": "<p>Looking good so far :)<br>\nSome corrections:</p>\n<ul>\n<li>becuase &gt; because</li>\n<li>using pf: \"examples/tutorial\" instead of pf: \"examples/cli/platform\"</li>\n<li>Stin.line &gt; Stdin.line</li>\n</ul>",
        "id": 262314371,
        "sender_full_name": "Anton",
        "timestamp": 1637585630
    },
    {
        "content": "<p>nice, looks good</p>",
        "id": 262343769,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1637598881
    },
    {
        "content": "<p>I'm trying out this tutorial, and I have my first error:</p>\n<div class=\"codehilite\"><pre><span></span><code>Num.toStr 4\n\n── NOT EXPOSED ─────────────────────────────────────────────────────────────────\n\nThe Num module does not expose `toStr`:\n\n4│      Num.toStr 4\n        ^^^^^^^^^\n</code></pre></div>\n<p>Am I missing something?</p>",
        "id": 263028157,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638201788
    },
    {
        "content": "<p>that builtin may be unimplemented, not sure tho, I haven't checked</p>",
        "id": 263030122,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638202559
    },
    {
        "content": "<p>I think you can use Str.fromInt if you'd like</p>",
        "id": 263032058,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638203292
    },
    {
        "content": "<p>Thanks, <code>Str.fromInt</code> works.</p>",
        "id": 263032673,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638203574
    },
    {
        "content": "<p>Should I open a PR to change that? Or will <code>Num.toStr</code> be available soon?</p>",
        "id": 263033755,
        "sender_full_name": "Yann Simon",
        "timestamp": 1638204017
    },
    {
        "content": "<p>hey  I'm new to rust and roc, and just installed my Win 10 WSL, since native windows isn't supported yet. couldnt run any of the rust/zig/c examples with a brand-new WSL Ubuntu install. </p>\n<p>idk how many people this would help but to get the zig and C examples to compile (couldnt get rust yet), I made sure the windows Hyper-V Platform was enabled (or at least clicked once):<br>\n<a href=\"/user_uploads/22008/iVWZtX6b3EH36mzFRPWxiiXu/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/iVWZtX6b3EH36mzFRPWxiiXu/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/iVWZtX6b3EH36mzFRPWxiiXu/image.png\"></a></div><p>I had to enable SVM on my AMD Mobo via BIOS to allow this at all.</p>\n<p>then hit <code>wsl</code> at the powershell cli, to open the store prompt to install Ubuntu  <a href=\"https://www.microsoft.com/store/productId/9NBLGGH4MSV6\">https://www.microsoft.com/store/productId/9NBLGGH4MSV6</a></p>\n<p>then followed the ubuntu instructions (setting username etc)</p>\n<p>then I needed to </p>\n<div class=\"codehilite\"><pre><span></span><code>sudo apt update\nsudo apt upgrade\nsudo apt install build-essentials\n</code></pre></div>\n<p>because otherwise I couldn't get clang installed without those three things</p>\n<div class=\"codehilite\"><pre><span></span><code>tar -xf /mnt/c/Users/WINDOWSUSERNAME/Downloads/roc_nightly-linux_x86_64-20211129-673215.tar.gz //downloaded roc through the GH releases\ncurl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh //to install roc\n</code></pre></div>\n<p>The rust example doesn't compile (but ill paste the errors in a bit), but the zig and C ones do:</p>\n<div class=\"codehilite\"><pre><span></span><code>wget https://ziglang.org/download/0.8.1/zig-linux-x86_64-0.8.1.tar.xz\ntar -xf zig-linux-x86_64-0.8.1.tar.xz\nsudo ln -s  $(pwd)/zig-linux-x86_64-0.8.1/zig /usr/local/bin/zig\n</code></pre></div>\n<p>for zig as per docs</p>\n<div class=\"codehilite\"><pre><span></span><code>sudo apt install clang\n</code></pre></div>\n<p>for C, as per docs</p>",
        "id": 263038409,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638206082
    },
    {
        "content": "<p>my rust example doesn't compile though (the duplication is part of the output):</p>\n<div class=\"codehilite\"><pre><span></span><code>RUST_BACKTRACE=1 ./roc examples/hello-rust/Hello.roc\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }&#39;, compiler/build/src/link.rs:471:39\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/panicking.rs:517:5\n   1: core::panicking::panic_fmt\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/panicking.rs:101:14\n   2: core::result::unwrap_failed\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/result.rs:1617:5\n   3: roc_build::link::rebuild_host\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\nthread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Any { .. }&#39;, cli/src/build.rs:223:50\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/std/src/panicking.rs:517:5\n   1: core::panicking::panic_fmt\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/panicking.rs:101:14\n   2: core::result::unwrap_failed\n             at /rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/result.rs:1617:5\n   3: roc_cli::build::build_file\n   4: roc_cli::build\n   5: roc::main\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.```\n</code></pre></div>",
        "id": 263038626,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638206175
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"460656\">@Tankor Smash</span>,<br>\nThanks for the detailed report! The rust error is because it could not find cargo. If you installed rust in the same terminal you need to create a new one. Try <code>cargo --version</code> to see if you have it in path.</p>",
        "id": 263039498,
        "sender_full_name": "Anton",
        "timestamp": 1638206515
    },
    {
        "content": "<p>I'll update the README to prevent this issue.</p>",
        "id": 263039864,
        "sender_full_name": "Anton",
        "timestamp": 1638206664
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"460663\">Yann Simon</span> <a href=\"#narrow/stream/231634-beginners/topic/tutorial/near/263033755\">said</a>:</p>\n<blockquote>\n<p>Should I open a PR to change that? Or will <code>Num.toStr</code> be available soon?</p>\n</blockquote>\n<p>so we would need a new builtin for this but I think we can just map the name Num.toStr to Str.fromInt</p>",
        "id": 263040422,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638206914
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> thanks,  restarting wsl and running <code>cargo --version</code> displays something, and it compiles (it took about 30s to compile compared to c and zig's 1s, I thought it had broken). thanks!</p>",
        "id": 263040672,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638207003
    },
    {
        "content": "<p>I can add it later, there isn't much of a learning opportunity with that one otherwise I would suggest we pair on it and I walk you through it. There's other builtins that would have more learning value <span class=\"user-mention\" data-user-id=\"460663\">@Yann Simon</span></p>",
        "id": 263040794,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638207041
    },
    {
        "content": "<p>you can leave the tutorial as is and we'll just make sure to add this builtin</p>",
        "id": 263040830,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638207059
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"460656\">@Tankor Smash</span> nice to have it working :) 30 seconds is a lot indeed, I have not encountered that myself. Perhaps some extra things are done when you build the first rust project on your OS.</p>",
        "id": 263041281,
        "sender_full_name": "Anton",
        "timestamp": 1638207236
    },
    {
        "content": "<p>It's possible that was caused by slow internet or bad wifi.</p>",
        "id": 263042023,
        "sender_full_name": "Anton",
        "timestamp": 1638207487
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/231634-beginners/topic/tutorial/near/263042023\">said</a>:</p>\n<blockquote>\n<p>It's possible that was caused by slow internet or bad wifi.</p>\n</blockquote>\n<p>yeah it could be. I'm on a gigabit connection, having to download a bunch of crates for the first compile makes sense I guess!</p>",
        "id": 263042346,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638207647
    },
    {
        "content": "<p>Make sure that you are storing files on the linux filesystem and not windows. I know that caused extremely slow builds of roc itself on WSL. So it wouldn't be surprising if it affected all rust projects on WSL.</p>",
        "id": 263043109,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638207966
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"357305\">Lucas Rosa</span> <a href=\"#narrow/stream/231634-beginners/topic/tutorial/near/263030122\">said</a>:</p>\n<blockquote>\n<p>that builtin may be unimplemented, not sure tho, I haven't checked</p>\n</blockquote>\n<p><a href=\"https://github.com/rtfeldman/roc/blob/trunk/TUTORIAL.md#functions-and-if\">https://github.com/rtfeldman/roc/blob/trunk/TUTORIAL.md#functions-and-if</a> I just got caught on that too lol, I assumed it was a function because of the tutorial too.</p>",
        "id": 263043131,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638207979
    },
    {
        "content": "<p>in <code>roc repl</code>, how do you submit a line? </p>\n<div class=\"codehilite\"><pre><span></span><code>»addXY = \\x, y -&gt; x + y\n…\n…\n…\n…``` can&#39;t hit enter to submit this. Ctrl+Enter and Shift+Enter doesn&#39;t  let me submit either\n</code></pre></div>",
        "id": 263048506,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638210277
    },
    {
        "content": "<p>I can type <code>:help</code> and it'll show the help message, but not define functions it doesnt seem like</p>",
        "id": 263048555,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638210306
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"460656\">@Tankor Smash</span> WSL itself is also slow when files need to be moved between windows and linux file systems, and the rust compiler seems to move a lot of files around. My compilation (linux) compilation got way faster with a better SSD. <span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span>  may have more details on how to best set up our compiler</p>",
        "id": 263049288,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1638210647
    },
    {
        "content": "<p>on wsl</p>",
        "id": 263049292,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1638210650
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"460656\">Tankor Smash</span> <a href=\"#narrow/stream/231634-beginners/topic/tutorial/near/263048506\">said</a>:</p>\n<blockquote>\n<p>in <code>roc repl</code>, how do you submit a line? </p>\n<p>»addXY = \\x, y -&gt; x + y<br>\n…<br>\n…<br>\n…<br>\n…</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"460656\">@Tankor Smash</span> the repl only works with expressions for now and expressions have to return something.<br>\nSo entering <code>addXY  1 2</code> after your definition would work.<br>\nIt is also not yet possible to keep values in scope between REPL entries, so every entry starts with a clean scope.</p>",
        "id": 263050770,
        "sender_full_name": "Anton",
        "timestamp": 1638211361
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/231634-beginners/topic/tutorial/near/263050770\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"460656\">Tankor Smash</span> <a href=\"#narrow/stream/231634-beginners/topic/tutorial/near/263048506\">said</a>:</p>\n<blockquote>\n<p>in <code>roc repl</code>, how do you submit a line? </p>\n<p>»addXY = \\x, y -&gt; x + y<br>\n…<br>\n…<br>\n…<br>\n…</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"460656\">Tankor Smash</span> the repl only works with expressions for now and expressions have to return something.<br>\nSo entering <code>addXY  1 2</code> after your definition would work.<br>\nIt is also not yet possible to keep values in scope between REPL entries, so every entry starts with a clean scope.</p>\n</blockquote>\n<p>ah my mistake, thank you!</p>",
        "id": 263051222,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638211586
    },
    {
        "content": "<p>ok I'm back, I'm about to add Num.toStr</p>",
        "id": 263058810,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638215193
    },
    {
        "content": "<p>Is there a way to read a file from disk, maybe using a Task or something? I see stdin in the tutorial, but I'm not sure what else</p>",
        "id": 263081935,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638228245
    },
    {
        "content": "<p>that is something the platform needs to provide</p>",
        "id": 263081973,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1638228292
    },
    {
        "content": "<p>I think there are some experiments with it somewhere, but for now a platform could just read the file as a string/bytes as needed</p>",
        "id": 263082028,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1638228339
    },
    {
        "content": "<p>at some point we'd want file handlers so the whole thing is not loaded into memory</p>",
        "id": 263082048,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1638228357
    },
    {
        "content": "<p>I quickly looked through the zig and rust platforms to try and find one, but I'll keep looking. I think <code>examples/hello-world/</code> is what the tutorials <code>examples/cli</code> became right?</p>",
        "id": 263082281,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638228514
    },
    {
        "content": "<p>ah found a trove of them, <a href=\"https://github.com/rtfeldman/roc/tree/c4f6697536db203fecda1ad17a32773d61652e51/examples\">https://github.com/rtfeldman/roc/tree/c4f6697536db203fecda1ad17a32773d61652e51/examples</a>, these aren't present in the roc the guide had me install, but I'm sure there'll be something here!</p>",
        "id": 263082514,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638228698
    },
    {
        "content": "<p>The <code>false-interpretter</code> example reads from a file. We should probably make a simple file io platform to help people along.</p>",
        "id": 263082743,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638228851
    },
    {
        "content": "<p>That being said, it reads in small chunks instead of just dumping everything to memory.</p>",
        "id": 263082842,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638228920
    },
    {
        "content": "<p>The talk I gave on zig showtime walks you through adding a platform function that writes to a file, you could do the same but for reading a file</p>",
        "id": 263084053,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638229893
    },
    {
        "content": "<p>depends if you want to use zig for the platform or not but in general the concept is the same across Rust, C, or Zig</p>",
        "id": 263084140,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638229946
    },
    {
        "content": "<p><a href=\"https://www.youtube.com/watch?v=FMyyYdFSOHA\">https://www.youtube.com/watch?v=FMyyYdFSOHA</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"FMyyYdFSOHA\" href=\"https://www.youtube.com/watch?v=FMyyYdFSOHA\"><img src=\"https://uploads.zulipusercontent.net/0a006e2aeb4d3b8abd5f8528e6b563d1125bb043/68747470733a2f2f692e7974696d672e636f6d2f76692f464d7979596446534f48412f64656661756c742e6a7067\"></a></div>",
        "id": 263084334,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638230137
    },
    {
        "content": "<p>yea that one. you can skip to the demo</p>",
        "id": 263085098,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638230654
    },
    {
        "content": "<p>yeah we should add file I/O to <code>examples/cli</code> for sure!</p>",
        "id": 263085841,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1638231203
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"####\"><pre><span></span><code>1. Expose callback from platform's Package-Config.roc\n    * Defines the Roc signature in the `effects` record\n2. Write the native function in the zig/rust/C\n    * prefix function name with `roc_fx_`\n        * zig example: `pub export fn roc_fx_funcnamehere(name: RocStr) callconv(.C) void {}\n3. Wrap the platform's exported native function with a Roc function\n    * since it's exposed as `fx.Effect`, it can be accessed within the platform's Roc\n    * the platform can then export a function that wraps `fx.Effect`\n4. Use in app:\n    * In the Roc app, add `imports` the platform's wrapped function\n</code></pre></div>\n<p>something like this? haven't tried it yet but that seems like the gist from your talk <span class=\"user-mention\" data-user-id=\"357305\">@Lucas Rosa</span></p>",
        "id": 263094261,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638238374
    },
    {
        "content": "<p>seems like its no longer Pkgconfig.roc</p>",
        "id": 263094281,
        "sender_full_name": "Tankor Smash",
        "timestamp": 1638238399
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"460656\">@Tankor Smash</span> yep that’s it</p>",
        "id": 263094519,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638238656
    },
    {
        "content": "<p>Going through the tutorial (on macOS 12/M1) I couldn't get <code>Stdout.line</code> to print anything. I put a couple of debug outputs in the platform code and found out that the <code>str</code> it was getting was empty. Eventually, cribbing notes from the echo example, I got some output with this code:</p>\n<div class=\"codehilite\"><pre><span></span><code>main =\n    {} &lt;- await (Stdout.line &quot;I&#39;m a Roc application!&quot;)\n\n    Stdout.line &quot;&quot;\n</code></pre></div>\n<p>I'm not sure why the await makes it work, but I've tried every permutation possible and this is the only way I got any output <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 263096067,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638240487
    },
    {
        "content": "<p>Another note: After the first await, <code>Stdout.line</code> works without await - so the final <code>line</code> call in there could have any text and it will get printed.</p>",
        "id": 263096093,
        "sender_full_name": "Shrikanth Upadhayaya",
        "timestamp": 1638240558
    },
    {
        "content": "<p>You are probably hitting this issue in some form: <a href=\"https://github.com/rtfeldman/roc/issues/2028\">https://github.com/rtfeldman/roc/issues/2028</a></p>",
        "id": 263096892,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638241378
    },
    {
        "content": "<p>Num.toStr -&gt; <a href=\"https://github.com/rtfeldman/roc/pull/2108\">https://github.com/rtfeldman/roc/pull/2108</a></p>",
        "id": 263200357,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1638302460
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> One suggestion for the tutorial. In this section <a href=\"https://gist.github.com/rtfeldman/b5cd8d8876bfcd70cb82caaa55875285#the-app-module-header\">https://gist.github.com/rtfeldman/b5cd8d8876bfcd70cb82caaa55875285#the-app-module-header</a> it's not quite clear to me if every file defines the packages it needs or if only the file containing a main function does that? And if every file defines its own packages, what happens if two files use conflicting package versions?</p>",
        "id": 263457943,
        "sender_full_name": "Martin Stewart",
        "timestamp": 1638460429
    },
    {
        "content": "<p>gotcha, thanks! I can clear this up when I write the part about other modules, but the short answer is that you only define that in one module.</p>",
        "id": 263481305,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1638469933
    },
    {
        "content": "<p>This tutorial is well-written.</p>",
        "id": 263722037,
        "sender_full_name": "jan kili",
        "timestamp": 1638640414
    },
    {
        "content": "<p>thank you! <span aria-label=\"hearts\" class=\"emoji emoji-2665\" role=\"img\" title=\"hearts\">:hearts:</span>️</p>",
        "id": 263722062,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1638640443
    },
    {
        "content": "<p>I listened to the first half of it via text-to-speech on a walk this morning, and I was surprised at how many code examples joked about toasters... Now I see that the voice app was just attempting to pronounce <code>Num.toStr</code>.</p>",
        "id": 263744964,
        "sender_full_name": "jan kili",
        "timestamp": 1638671851
    },
    {
        "content": "<p>Is there a way to split a large Roc module into multiple files?</p>",
        "id": 263746662,
        "sender_full_name": "jan kili",
        "timestamp": 1638674829
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">Jan Van Bruggen</span> <a href=\"#narrow/stream/231634-beginners/topic/tutorial/near/263746662\">said</a>:</p>\n<blockquote>\n<p>Is there a way to split a large Roc module into multiple files?</p>\n</blockquote>\n<p>Nevermind, I think I found my answer in an example: <a href=\"https://github.com/rtfeldman/roc/blob/e872d00b1329b69851ba9cc2aa158d1bba96b959/examples/benchmarks/QuicksortApp.roc#L3\">https://github.com/rtfeldman/roc/blob/e872d00b1329b69851ba9cc2aa158d1bba96b959/examples/benchmarks/QuicksortApp.roc#L3</a></p>\n<p>importer:</p>\n<div class=\"codehilite\"><pre><span></span><code># /.../project/SomeRocFile.roc\n...\nimport [AdjacentRocFile]\n...\nAdjacentRocFile.someFunction ...\n...\n</code></pre></div>\n<p>importee:</p>\n<div class=\"codehilite\"><pre><span></span><code># /.../project/AdjacentRocFile.roc\ninterface AdjacentRocFile exposes [someFunction] imports []\n...\nsomeFunction = ...\n...\n</code></pre></div>",
        "id": 263747981,
        "sender_full_name": "jan kili",
        "timestamp": 1638677054
    },
    {
        "content": "<p>I assume that the trailing asterisk in this: <code>[ A, B ] : List [ A, B ]*</code> ...</p>\n<ol>\n<li>is the same as the mysterious asterisk at 21:28 of the A Taste Of Roc video on YouTube, and</li>\n<li>represents something about the tag union being \"open\".</li>\n</ol>\n<p>Is that correct?<br>\nIs there any documentation on the distinction between \"open\"/\"closed\" tag unions? The only references I see to them are not descriptive - <a href=\"https://github.com/rtfeldman/roc/blob/trunk/TUTORIAL.md#open-and-closed-tag-unions\">once in the tutorial</a> and <a href=\"#narrow/stream/231634-beginners/topic/where.20are.20cycles.20allowed.3F/near/259327687\">once in this chatroom</a>.</p>",
        "id": 263753743,
        "sender_full_name": "jan kili",
        "timestamp": 1638687399
    },
    {
        "content": "<p>I think what you're looking for is explained in <a href=\"https://github.com/rtfeldman/roc/blob/trunk/roc-for-elm-programmers.md\">https://github.com/rtfeldman/roc/blob/trunk/roc-for-elm-programmers.md</a>. Search for \"unbound\".</p>",
        "id": 263756885,
        "sender_full_name": "Johannes Maas",
        "timestamp": 1638692991
    },
    {
        "content": "<p>yeah I'm working on adding both to the tutorial! (Other modules and open unions)</p>",
        "id": 263769954,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1638712952
    },
    {
        "content": "<p>I have a question about how <code>Task</code> and <code>await</code> work in the example CLI platform: <a href=\"https://github.com/rtfeldman/roc/issues/2151\">https://github.com/rtfeldman/roc/issues/2151</a><br>\nAny insight appreciated! :)</p>",
        "id": 264165597,
        "sender_full_name": "jan kili",
        "timestamp": 1638975182
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span> It's probably a bug, I think you're right it should work.</p>",
        "id": 264166351,
        "sender_full_name": "Matthias Devlamynck",
        "timestamp": 1638975510
    },
    {
        "content": "<p>Thanks, that's validating :)</p>",
        "id": 264169098,
        "sender_full_name": "jan kili",
        "timestamp": 1638976560
    },
    {
        "content": "<p>I believe this is indeed a bug caused by #2028</p>",
        "id": 264176334,
        "sender_full_name": "Anton",
        "timestamp": 1638979141
    },
    {
        "content": "<p>Ah, so it's a compiler bug, not an examples/cli/platform bug?</p>",
        "id": 264184278,
        "sender_full_name": "jan kili",
        "timestamp": 1638982341
    },
    {
        "content": "<p>In that case, I'll just start all of my mains with <code>{} &lt;- await once_upon_a_time</code> <span aria-label=\"yum\" class=\"emoji emoji-1f60b\" role=\"img\" title=\"yum\">:yum:</span></p>",
        "id": 264184564,
        "sender_full_name": "jan kili",
        "timestamp": 1638982455
    },
    {
        "content": "<p>I think it has to be <code>_ &lt;- await once_upon_a_time</code>.</p>",
        "id": 264186835,
        "sender_full_name": "Anton",
        "timestamp": 1638983288
    },
    {
        "content": "<p>I think both work. I always use <code>{}</code> with await and no arg. I think <code>_</code> is an unnamed variable and <code>{}</code> is destructuring an empty struct</p>",
        "id": 264191347,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1638985100
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461347\">Emiliano Bovetti</span> has marked this topic as resolved.</p>",
        "id": 264193377,
        "sender_full_name": "Notification Bot",
        "timestamp": 1638985958
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461347\">Emiliano Bovetti</span> has marked this topic as unresolved.</p>",
        "id": 264193478,
        "sender_full_name": "Notification Bot",
        "timestamp": 1638986008
    },
    {
        "content": "<p>Hi all,<br>\nI'm running the tutorial code:</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;hello&quot;\n    packages { pf: &quot;examples/cli/platform&quot; }\n    imports [ pf.Stdout ]\n    provides [ main ] to pf\n\nmain = Stdout.line &quot;I&#39;m a Roc application!&quot;\n</code></pre></div>\n<p>with <code>./target/debug/roc Hello.roc</code> and I get</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; }&#39;, compiler/build/src/link.rs:312:22\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nthread &#39;main&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: Any { .. }&#39;, cli/src/build.rs:223:50\n🔨 Rebuilding host... %\n</code></pre></div>\n<p>What am I doing wrong?</p>",
        "id": 264533746,
        "sender_full_name": "Maxwell Bernstein",
        "timestamp": 1639187411
    },
    {
        "content": "<p>Do you have <code>clang</code> installed?</p>",
        "id": 264533947,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1639187738
    },
    {
        "content": "<p>I think this is the current bug where <code>main</code> can't be a single <code>Stdout.line</code> statement. Maybe try out the solution in <a href=\"https://github.com/rtfeldman/roc/issues/2151#issue-1074495482\">#2151</a> to get main to work?</p>\n<p>Edit: I read too fast, it's not that bug. But you'll run into it right afterwards <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 264534115,
        "sender_full_name": "Erwin Kuhn",
        "timestamp": 1639187919
    },
    {
        "content": "<p>Yes but apparently only as clang-12. I will update-alternatives as I did for llvm-as</p>",
        "id": 264537213,
        "sender_full_name": "Maxwell Bernstein",
        "timestamp": 1639191765
    },
    {
        "content": "<p>After doing that, it worked! Neat. That is not a very helpful error message :) Let me look at the #2151 now...</p>",
        "id": 264537235,
        "sender_full_name": "Maxwell Bernstein",
        "timestamp": 1639191835
    },
    {
        "content": "<p>If I do</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;hello&quot;\n    packages { pf: &quot;examples/cli/platform&quot; }\n    imports [ pf.Stdout ]\n    provides [ main ] to pf\n\nmain =\n    {} &lt;- await (Stdout.line &quot;hi&quot;)\n    Stdout.line &quot;yep&quot;\n</code></pre></div>\n<p>but forget to import <code>Task</code>, I get:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, compiler/mono/src/ir.rs:8228:35\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 264537287,
        "sender_full_name": "Maxwell Bernstein",
        "timestamp": 1639191904
    },
    {
        "content": "<p>Why is it that I have to do one awaited Stdout.line and also one other Stdout.line beneath?</p>",
        "id": 264537361,
        "sender_full_name": "Maxwell Bernstein",
        "timestamp": 1639192019
    },
    {
        "content": "<p>Broken effects in Roc. They generally work as expected but they are definitely not running and working as expected under the hood.</p>",
        "id": 264537540,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1639192319
    },
    {
        "content": "<p>The tutorial is very well written! However it is good it is still private, because a lot of code snippets don't work yet. I think this should be mentioned at the top of the document. There is of course issue #2028 about Tasks, but I have encountered quite a few other problems, on today's version of the compiler. Is it worthwhile to make issues for them? (of course I will make sure that they are not yet  reported) <br>\n.</p>",
        "id": 264991253,
        "sender_full_name": "Ivo Balbaert",
        "timestamp": 1639565261
    },
    {
        "content": "<p>yes, definitely please make issues for them! Also, don't worry about checking if they're reported or not already - it's easy to sort out duplicates, and it can be useful to get more data when we get different reports from running on different machines!</p>",
        "id": 264996653,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1639568105
    },
    {
        "content": "<p>Hey all. I'm at this spot in the tutorial: <a href=\"https://github.com/rtfeldman/roc/blob/trunk/TUTORIAL.md#building-an-application\">https://github.com/rtfeldman/roc/blob/trunk/TUTORIAL.md#building-an-application</a></p>",
        "id": 266760738,
        "sender_full_name": "drew",
        "timestamp": 1641261070
    },
    {
        "content": "<p>i've got what looks to be the correct code in <code>Hello.roc</code>:</p>",
        "id": 266760745,
        "sender_full_name": "drew",
        "timestamp": 1641261083
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ cat Hello.roc\napp &quot;hello&quot;\n    packages { pf: &quot;examples/cli/platform&quot; }\n    imports [ pf.Stdout ]\n    provides [ main ] to pf\n\nmain = Stdout.line &quot;I&#39;m a Roc application!&quot;\n</code></pre></div>",
        "id": 266760752,
        "sender_full_name": "drew",
        "timestamp": 1641261092
    },
    {
        "content": "<p>this is at the source of the Roc tree</p>",
        "id": 266760759,
        "sender_full_name": "drew",
        "timestamp": 1641261100
    },
    {
        "content": "<p>however when i run it, i don't get any output!</p>",
        "id": 266760772,
        "sender_full_name": "drew",
        "timestamp": 1641261118
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ cargo run Hello.roc\n    Finished dev [unoptimized + debuginfo] target(s) in 0.11s\n     Running `target/debug/roc Hello.roc`\n🔨 Rebuilding host... Done!\n</code></pre></div>",
        "id": 266760817,
        "sender_full_name": "drew",
        "timestamp": 1641261133
    },
    {
        "content": "<p>What am I doing wrong?</p>",
        "id": 266760825,
        "sender_full_name": "drew",
        "timestamp": 1641261141
    },
    {
        "content": "<p>It's a compiler bug</p>",
        "id": 266763067,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1641263838
    },
    {
        "content": "<p>Tasks have some issues currently</p>",
        "id": 266763071,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1641263854
    },
    {
        "content": "<p><a href=\"https://github.com/rtfeldman/roc/issues/2151\">https://github.com/rtfeldman/roc/issues/2151</a></p>",
        "id": 266763072,
        "sender_full_name": "jan kili",
        "timestamp": 1641263857
    },
    {
        "content": "<p>The work around is to await the task</p>",
        "id": 266763076,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1641263865
    },
    {
        "content": "<p>Yup, like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>main =\n    _ &lt;- await Stdout.line &quot;Once upon a time...&quot;\n    Stdout.line &quot;I&#39;m a Roc application!&quot;\n</code></pre></div>",
        "id": 266763127,
        "sender_full_name": "jan kili",
        "timestamp": 1641263918
    },
    {
        "content": "<p>(it is currently bugged so that <code>main</code> needs at least one awaited Task to run at all)</p>",
        "id": 266763149,
        "sender_full_name": "jan kili",
        "timestamp": 1641263965
    },
    {
        "content": "<p>(in practice, I use an empty string for the first await, and then I have an actually-helpful newline prefix for my output!)</p>",
        "id": 266763228,
        "sender_full_name": "jan kili",
        "timestamp": 1641264050
    },
    {
        "content": "<p>Got it, thanks</p>",
        "id": 266766878,
        "sender_full_name": "drew",
        "timestamp": 1641268681
    },
    {
        "content": "<p>so I now have this:</p>",
        "id": 266766955,
        "sender_full_name": "drew",
        "timestamp": 1641268794
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>app &quot;hello&quot;\n    packages { pf: &quot;examples/cli/platform&quot; }\n    imports [ pf.Stdout, pf.Task.{ await } ]\n    provides [ main ] to pf\n\nmain =\n  _ &lt;- await Stdout.line &quot;I&#39;m a Roc application!&quot;\n</code></pre></div>",
        "id": 266766958,
        "sender_full_name": "drew",
        "timestamp": 1641268798
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>$ cargo run Hello.roc\n    Finished dev [unoptimized + debuginfo] target(s) in 0.11s\n     Running `target/debug/roc Hello.roc`\nthread &#39;main&#39; panicked at &#39;not yet implemented: unhandled parse error: IndentEnd(@187)&#39;, reporting/src/error/parse.rs:545:14\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 266767021,
        "sender_full_name": "drew",
        "timestamp": 1641268808
    },
    {
        "content": "<p>ah, my indents are off i think</p>",
        "id": 266767063,
        "sender_full_name": "drew",
        "timestamp": 1641268823
    },
    {
        "content": "<p>hm, still failing</p>",
        "id": 266767081,
        "sender_full_name": "drew",
        "timestamp": 1641268853
    },
    {
        "content": "<p>No, it's not that. Your main function doesn't return anything.</p>",
        "id": 266767084,
        "sender_full_name": "jan kili",
        "timestamp": 1641268858
    },
    {
        "content": "<p>An await is never the last step of a function</p>",
        "id": 266767091,
        "sender_full_name": "jan kili",
        "timestamp": 1641268872
    },
    {
        "content": "<p>ah, i see. what is roc's unit type?</p>",
        "id": 266767103,
        "sender_full_name": "drew",
        "timestamp": 1641268903
    },
    {
        "content": "<p>(This is unfortunately a more advanced concept than you may be at in the tutorial, but it's a result of the current bug)</p>",
        "id": 266767105,
        "sender_full_name": "jan kili",
        "timestamp": 1641268907
    },
    {
        "content": "<p>this makes sense, i'm a haskell user so i think i can see the parallel</p>",
        "id": 266767153,
        "sender_full_name": "drew",
        "timestamp": 1641268925
    },
    {
        "content": "<p>In my example above, I await one stdout task and then return another</p>",
        "id": 266767154,
        "sender_full_name": "jan kili",
        "timestamp": 1641268926
    },
    {
        "content": "<p>await is syntax sugar for a callback function, so you now need to add that callback function's body on the next line</p>",
        "id": 266767165,
        "sender_full_name": "jan kili",
        "timestamp": 1641268965
    },
    {
        "content": "<p>does roc have a unit type?</p>",
        "id": 266767192,
        "sender_full_name": "drew",
        "timestamp": 1641268974
    },
    {
        "content": "<p>akin to haskell's <code>()</code></p>",
        "id": 266767197,
        "sender_full_name": "drew",
        "timestamp": 1641268979
    },
    {
        "content": "<p>I'm not a Haskeller and idk what a unit type is, but it might be {}</p>",
        "id": 266767220,
        "sender_full_name": "jan kili",
        "timestamp": 1641269002
    },
    {
        "content": "<p>(the empty record singleton)</p>",
        "id": 266767226,
        "sender_full_name": "jan kili",
        "timestamp": 1641269010
    },
    {
        "content": "<p>hmm this still fails</p>",
        "id": 266767258,
        "sender_full_name": "drew",
        "timestamp": 1641269043
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>app &quot;hello&quot;\n  packages { pf: &quot;examples/cli/platform&quot; }\n  imports [ pf.Stdout, pf.Task.{ await } ]\n  provides [ main ] to pf\n\nmain =\n  _ &lt;- await Stdout.line &quot;I&#39;m a Roc application!&quot;\n  {}\n</code></pre></div>",
        "id": 266767270,
        "sender_full_name": "drew",
        "timestamp": 1641269046
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Mismatch in compiler/unify/src/unify.rs Line 1173 Column 13\nTrying to unify two flat types that are incompatible: Func([218, 228], 216, 197) ~ Func([102, 103, 109], 111, 112)\n\nthread &#39;&lt;unnamed&gt;&#39; panicked at &#39;index out of bounds: the len is 0 but the index is 0&#39;, compiler/mono/src/ir.rs:8266:35\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 266767277,
        "sender_full_name": "drew",
        "timestamp": 1641269072
    },
    {
        "content": "<p>Yes, as your <code>pf</code> of choice wants a <code>main</code> that returns a <code>Task</code></p>",
        "id": 266767280,
        "sender_full_name": "jan kili",
        "timestamp": 1641269082
    },
    {
        "content": "<p>ah, i see, thanks</p>",
        "id": 266767283,
        "sender_full_name": "drew",
        "timestamp": 1641269090
    },
    {
        "content": "<p>Running <code>cargo check Hello.roc</code> might yield a better error message with the current compiler</p>",
        "id": 266767289,
        "sender_full_name": "jan kili",
        "timestamp": 1641269107
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>── TOO MANY ARGS ───────────────────────────────────────────────────────────────\n\nThe await function expects 2 arguments, but it got 3 instead:\n\n6│  main =\n                                             ^^^^^\n\nAre there any missing commas? Or missing parentheses?\n\n────────────────────────────────────────────────────────────────────────────────\n</code></pre></div>",
        "id": 266767375,
        "sender_full_name": "drew",
        "timestamp": 1641269233
    },
    {
        "content": "<p>Gah, that's my mistake</p>",
        "id": 266767389,
        "sender_full_name": "jan kili",
        "timestamp": 1641269255
    },
    {
        "content": "<p>I forgot to put parens around my example's await arg</p>",
        "id": 266767394,
        "sender_full_name": "jan kili",
        "timestamp": 1641269268
    },
    {
        "content": "<p><code>await (foo bar)</code></p>",
        "id": 266767405,
        "sender_full_name": "jan kili",
        "timestamp": 1641269282
    },
    {
        "content": "<p>ah, right! it's working now, thanks</p>",
        "id": 266767439,
        "sender_full_name": "drew",
        "timestamp": 1641269289
    },
    {
        "content": "<p>so the current bug is that you _must_ have at least one <code>await</code> in main?</p>",
        "id": 266767446,
        "sender_full_name": "drew",
        "timestamp": 1641269327
    },
    {
        "content": "<p>It's actually a lot bigger behind the scenes, but from the view of most users/applications that is a common manifestation of the bug. A mix of details here: <a href=\"https://github.com/rtfeldman/roc/issues/2028\">https://github.com/rtfeldman/roc/issues/2028</a></p>",
        "id": 266767542,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1641269481
    },
    {
        "content": "<p>thanks, reading now</p>",
        "id": 266767589,
        "sender_full_name": "drew",
        "timestamp": 1641269531
    },
    {
        "content": "<p>And welcome to Roc! :) Happy to have you. Baptism by fire.</p>",
        "id": 266767604,
        "sender_full_name": "jan kili",
        "timestamp": 1641269585
    },
    {
        "content": "<p>yeah, it feels like Tasks need to be closures only, with execution deferred to the runtime. but hey, maybe i'm biased from haskell</p>",
        "id": 266767609,
        "sender_full_name": "drew",
        "timestamp": 1641269588
    },
    {
        "content": "<p>thanks :)</p>",
        "id": 266767611,
        "sender_full_name": "drew",
        "timestamp": 1641269593
    },
    {
        "content": "<p>i'm fairly sure that purescript implements <code>Effect</code> as a thunk</p>",
        "id": 266767625,
        "sender_full_name": "drew",
        "timestamp": 1641269618
    },
    {
        "content": "<p>indeed <a href=\"https://github.com/purescript/purescript-effect/blob/master/src/Effect.js\">https://github.com/purescript/purescript-effect/blob/master/src/Effect.js</a></p>",
        "id": 266767678,
        "sender_full_name": "drew",
        "timestamp": 1641269667
    },
    {
        "content": "<p>check out that bind <a href=\"https://github.com/purescript/purescript-effect/blob/985d97bd5721ddcc41304c55a7ca2bb0c0bfdc2a/src/Effect.js#L9-L15\">https://github.com/purescript/purescript-effect/blob/985d97bd5721ddcc41304c55a7ca2bb0c0bfdc2a/src/Effect.js#L9-L15</a></p>",
        "id": 266767685,
        "sender_full_name": "drew",
        "timestamp": 1641269677
    },
    {
        "content": "<p>Yeah, they should be closures that get returned and then run as a chain. Though can potentially be inlined in some cases.</p>",
        "id": 266767771,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1641269781
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"463085\">drew</span> <a href=\"#narrow/stream/231634-beginners/topic/Tutorial/near/266767685\">said</a>:</p>\n<blockquote>\n<p>check out that bind <a href=\"https://github.com/purescript/purescript-effect/blob/985d97bd5721ddcc41304c55a7ca2bb0c0bfdc2a/src/Effect.js#L9-L15\">https://github.com/purescript/purescript-effect/blob/985d97bd5721ddcc41304c55a7ca2bb0c0bfdc2a/src/Effect.js#L9-L15</a></p>\n</blockquote>\n<p>Arrow notation makes it even better! :D </p>\n<p><code>bindE = (a) =&gt; (f) =&gt; () =&gt; f(a())()</code></p>",
        "id": 266814678,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1641307033
    },
    {
        "content": "<blockquote>\n<p>it feels like Tasks need to be closures only, with execution deferred to the runtime.</p>\n</blockquote>\n<p>yeah, that's what they ought to be; the bug is that sometimes they aren't, even though we want them to be!</p>\n<p>There's a WIP fix here: <a href=\"https://github.com/rtfeldman/roc/pull/2226\">https://github.com/rtfeldman/roc/pull/2226</a> - but it currently causes regressions in other places.</p>\n<p>It's proven to be one of those bugs that's conceptually simple but annoyingly tricky to fix in practice.</p>",
        "id": 266844284,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1641320193
    },
    {
        "content": "<p>I have a PR to add a bunch of stuff to the tutorial. Any feedback welcome! <a href=\"https://github.com/rtfeldman/roc/pull/2327\">https://github.com/rtfeldman/roc/pull/2327</a></p>",
        "id": 267267267,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1641606657
    },
    {
        "content": "<p>Taking my first steps in Roc by following the tutorial. Some feedback:<br>\nSection \"Installation\" should refer to the installation guide at <a href=\"https://github.com/roc-lang/roc/tree/main/getting_started\">https://github.com/roc-lang/roc/tree/main/getting_started</a></p>\n<p>The Install link at the top of the page (in the header bar) points to <a href=\"https://www.roc-lang.org/install\">https://www.roc-lang.org/install</a> which does not exist.</p>\n<p><a href=\"https://github.com/roc-lang/roc/tree/main/getting_started\">https://github.com/roc-lang/roc/tree/main/getting_started</a> says:<br>\nYou can run examples as follows:<br>\ncd examples<br>\nroc run helloWorld.roc</p>\n<p>but the tutorial says: run main.roc by using roc dev.<br>\nUnclear to me what this means. Should this be \"roc main.roc dev\"? And why use the dev subcommand here?</p>",
        "id": 317811989,
        "sender_full_name": "Michael",
        "timestamp": 1671961181
    },
    {
        "content": "<p><code>roc dev myRocAppFile.roc</code> will run your app including expectations and I think other debugging helpful things, it won't run if there are any errors or warnings. I think <code>roc run mayAppMainFile.roc</code> will let you run even if you have warnings.</p>",
        "id": 317818120,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1671964918
    },
    {
        "content": "<p>Thanks for bringing this to our attention <span class=\"user-mention\" data-user-id=\"557863\">@Michael</span>, I'll fix those issues.</p>",
        "id": 317923766,
        "sender_full_name": "Anton",
        "timestamp": 1672044482
    },
    {
        "content": "<p>I'm trying to wrap my brain around how I can go about splitting up a large roc file into multiple modules, and there doesn't seem to be an existing section in the tutorial about how this works. Is that in the works?</p>",
        "id": 317986322,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1672075721
    },
    {
        "content": "<p>In the latest version of the tutorial, which is not live yet, there is a subsection for modules with the text: \"[This part of the tutorial has not been written yet. Coming soon!]\". I don't think anyone is planning on writing that in the short term though.</p>",
        "id": 317988277,
        "sender_full_name": "Anton",
        "timestamp": 1672077016
    },
    {
        "content": "<p>You can make <code>interface</code> modules and import them into your <code>app</code> module. See how <code>examples/virtual-dom-wip/example-client.roc</code> imports <code>ExampleApp.roc</code></p>",
        "id": 317993319,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1672080264
    },
    {
        "content": "<p>Often the best way to split a big file is to find a type that has some associated functions and pull them out into an interface. If you haven't seen it, search on YouTube for \"The Life of a File\" by Evan Czaplicki. It's about Elm but it applies to Roc too.</p>",
        "id": 317993541,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1672080454
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 317997155,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1672082944
    },
    {
        "content": "<p>There is a few things like this I'm eyeing to add into the tutorial. I'm away for a few days, but keen to get to this soon. Added an <a href=\"https://github.com/roc-lang/roc/issues/4810#issue-1511212076\">issue</a> to track this.</p>",
        "id": 318000981,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1672085606
    },
    {
        "content": "<p>I noticed that in <a href=\"https://www.roc-lang.org/tutorial\">https://www.roc-lang.org/tutorial</a> is written in the Records section:<br>\ntotal = addAndStringify { birds, 5, iguanas, 7 }<br>\nI guess this should read total = addAndStringify { birds: 5, iguanas: 7 }</p>",
        "id": 328027652,
        "sender_full_name": "Andreas Pehnack",
        "timestamp": 1676472298
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"589193\">@Andreas Pehnack</span>,<br>\nYes indeed, I'll fix that right now. Thanks :)</p>",
        "id": 328028132,
        "sender_full_name": "Anton",
        "timestamp": 1676472412
    },
    {
        "content": "<p>hey there, I noticed that the inline <code>code</code> tags can sometimes be cut across two lines, which makes it harder to read. Do you think it would make sense to make them <code>white-space: nowrap</code>? <a href=\"/user_uploads/22008/_FdZVdkx0dZhjVPn50qHkHn9/Screenshot-2023-02-18-at-13.24.40.png\">Screenshot-2023-02-18-at-13.24.40.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/_FdZVdkx0dZhjVPn50qHkHn9/Screenshot-2023-02-18-at-13.24.40.png\" title=\"Screenshot-2023-02-18-at-13.24.40.png\"><img src=\"/user_uploads/22008/_FdZVdkx0dZhjVPn50qHkHn9/Screenshot-2023-02-18-at-13.24.40.png\"></a></div>",
        "id": 328667585,
        "sender_full_name": "Ju Liu",
        "timestamp": 1676726732
    },
    {
        "content": "<p>Sounds good <span class=\"user-mention\" data-user-id=\"400753\">@Ju Liu</span>! Feel free to go ahead with a PR if you want, if not; could you write up an issue for it?</p>",
        "id": 328675025,
        "sender_full_name": "Anton",
        "timestamp": 1676729527
    },
    {
        "content": "<p>sweet, PR here: <a href=\"https://github.com/roc-lang/roc/pull/5047\">https://github.com/roc-lang/roc/pull/5047</a></p>",
        "id": 328687824,
        "sender_full_name": "Ju Liu",
        "timestamp": 1676734149
    },
    {
        "content": "<p>aha, it took me a while to figure out that <code>pf</code> stands for <code>platform</code> :)</p>",
        "id": 328716914,
        "sender_full_name": "Ju Liu",
        "timestamp": 1676748257
    },
    {
        "content": "<p>Hah; I didn't even consider that that stood for anything.</p>",
        "id": 328717338,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1676748586
    },
    {
        "content": "<p>oh yeah, it used to be <code>plat</code> at one point I think haha</p>",
        "id": 328720540,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1676750697
    },
    {
        "content": "<p>I finished the tutorial yesterday, I'm very impressed by the design choices you've made. <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>\n<p>Some random things I enjoyed:</p>\n<ul>\n<li>no syntax for defs</li>\n<li>no syntax for type aliases</li>\n<li>accepting records with extra fields (feels typescript-like, which is going to be familiar for lot of people)</li>\n<li>no Maybes</li>\n<li>numbers that feel very Rusty</li>\n<li>tasks that allow you to write terse monadic code in a Haskellish way</li>\n</ul>\n<p>Some things I found a bit strange:</p>\n<ul>\n<li>there is quite a bit of delay in the REPL from when I press enter to when I see the result</li>\n<li>bools represented using Bool.true and Bool.false seem as if we are chastising people for using booleans. I agree with the choice when writing data structures, but it's such a common thing that I  feel the friction is not worth it. I've found a couple places in the tutorial where <code>true</code> is used instead of <code>Bool.true</code>, which convinced me it's hard for Roc maintainers as well. also people love to grab this sort of minor things to say \"look you can't even write true\".</li>\n<li>when I read the sections about open/closed records and open/closed tag unions it made me think that it spawns a lot of conditional branches in my head when I'm reading code, and I have to be extra careful about the <code>*</code>. Maybe in practice this is not a problem because the compiler will help you a lot. </li>\n</ul>\n<p>All in all, had lots of fun :)</p>",
        "id": 328787209,
        "sender_full_name": "Ju Liu",
        "timestamp": 1676803549
    },
    {
        "content": "<p>For <code>True</code> being in the tutorial, that is probably just legacy. It used to be <code>True</code> and <code>False</code> before it became <code>Bool.true</code> and <code>Bool.false</code>. also, given it is free to describe a more specific enum instead of using a bool, it probably is advised to not use a bool a lot of the time. When searching a list, for example, use <code>Found</code> and <code>NotFound</code> instead of true and false. Etc.</p>",
        "id": 328832229,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1676823937
    },
    {
        "content": "<p>Also, if you want to just use <code>true</code> instead of <code>Bool.true</code>, you should just need to add the line <code>true = Bool.true</code>.</p>",
        "id": 328832405,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1676824019
    },
    {
        "content": "<blockquote>\n<p>when I read the sections about open/closed records and open/closed tag unions it made me think that it spawns a lot of conditional branches in my head when I'm reading code, and I have to be extra careful about the <code>*</code>. Maybe in practice this is not a problem because the compiler will help you a lot. </p>\n</blockquote>\n<p>For me at least, I rarely think about it when writing code. Not sure what it would be like if i had to read a big project from someone else.</p>",
        "id": 328833113,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1676824349
    },
    {
        "content": "<p>awesome, thanks for the feedback Ju! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> </p>\n<p><span class=\"user-mention silent\" data-user-id=\"400753\">Ju Liu</span> <a href=\"#narrow/stream/231634-beginners/topic/Tutorial/near/328787209\">said</a>:</p>\n<blockquote>\n<p>there is quite a bit of delay in the REPL from when I press enter to when I see the result</p>\n</blockquote>\n<p>this is because the repl isn't yet using our development backend or surgical linker, because they aren't feature-complete enough for it yet. If you check out <a href=\"https://www.roc-lang.org/repl\">https://www.roc-lang.org/repl</a> you can see it giving responses instantly because <span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span> made the linking and development backend for WASM super fast, and we haven't caught up outside wasm yet <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 328888317,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1676864070
    },
    {
        "content": "<p>although shout-out to <span class=\"user-mention\" data-user-id=\"580606\">@Ahmad Sattar</span> for making a bunch of progress on the dev backend recently!</p>",
        "id": 328888372,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1676864143
    },
    {
        "content": "<p>it will be a wonderful day when it's far enough along that we can switch <code>roc repl</code> over to use it <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 328888424,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1676864166
    },
    {
        "content": "<p>I think the tutorial got messed up somehow. This is what it looks like for me on mobile right now<br>\n<a href=\"/user_uploads/22008/wPqyiCuxi6jioCTo8a1ZnCs3/84920F56-ACC1-43DE-B92A-5D8054EDCA5A.png\">84920F56-ACC1-43DE-B92A-5D8054EDCA5A.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/wPqyiCuxi6jioCTo8a1ZnCs3/84920F56-ACC1-43DE-B92A-5D8054EDCA5A.png\" title=\"84920F56-ACC1-43DE-B92A-5D8054EDCA5A.png\"><img src=\"/user_uploads/22008/wPqyiCuxi6jioCTo8a1ZnCs3/84920F56-ACC1-43DE-B92A-5D8054EDCA5A.png\"></a></div>",
        "id": 329053677,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1676921117
    },
    {
        "content": "<p>Thanks for reporting this <span class=\"user-mention\" data-user-id=\"580063\">@Nick Hallstrom</span>, I know <a href=\"https://github.com/roc-lang/roc/commit/859cccf62c6e71a7d6c9be94e415e6a01850a99f\">this</a> was a recent change, that might have caused it. Someone can try to delete that line with the inspection tools in the browser, I'm done for today. I can take a look tomorrow if it's still unsolved.</p>",
        "id": 329055085,
        "sender_full_name": "Anton",
        "timestamp": 1676921788
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span>  I quickly inspected it in the browser and the <code>nowrap</code> seems to be the cause of the problem. There is a quite long code line in the bullet point list of the <a href=\"https://www.roc-lang.org/tutorial#open-records-and-closed-records\">Open Records and Closed Records section</a> that doesn't get wrapped. Changing the whitespace wrapping back to <code>normal</code> seems to solve the problem</p>",
        "id": 329060790,
        "sender_full_name": "Giacomo Cavalieri",
        "timestamp": 1676924278
    },
    {
        "content": "<p>I agree with Ju Liu that the <code>nowrap</code> helps making the tutorial more readable, though. Maybe we could enable the normal wrapping just in the mobile friendly media query?</p>",
        "id": 329061243,
        "sender_full_name": "Giacomo Cavalieri",
        "timestamp": 1676924462
    },
    {
        "content": "<p>So I made a quick pull request with a fix for that problem on mobile devices. I hope I didn't mess up since it's my first time making a PR on an open source project <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <br>\n<a href=\"https://github.com/roc-lang/roc/pull/5053\">https://github.com/roc-lang/roc/pull/5053</a></p>",
        "id": 329065178,
        "sender_full_name": "Giacomo Cavalieri",
        "timestamp": 1676926348
    },
    {
        "content": "<p>Looks good <span class=\"user-mention\" data-user-id=\"575657\">@Giacomo Cavalieri</span>! Thank you and congratulations on your first open source PR :)</p>",
        "id": 329128101,
        "sender_full_name": "Anton",
        "timestamp": 1676967596
    },
    {
        "content": "<p>Thanks! I hope I’ll be able to contribute more in the future :)</p>",
        "id": 329128479,
        "sender_full_name": "Giacomo Cavalieri",
        "timestamp": 1676967724
    },
    {
        "content": "<p>What would you guys think about putting an example in the tutorial of backpassing with multiple parameters? It really confused me the first time I saw it, even though it makes perfect sense now. I mean this syntax: <code>a, b &lt;- someFunc “abc”</code></p>",
        "id": 329329197,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1677032083
    },
    {
        "content": "<p>seems reasonable!</p>",
        "id": 329334922,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1677036354
    },
    {
        "content": "<p>So I was going through the tutorial and accidentally misnamed the greeting variable to greetings, and so when I tried to do the string interpolation it failed and <em>killed the repl</em> <br>\nIs that the expected behaviour? Shouldn't the repl be more resilient?</p>\n<div class=\"codehilite\"><pre><span></span><code>» &quot;\\(greeting) there, \\(audience)!&quot;\n&quot;\\xc8\\x9d\\&quot;\\x04\\x01&quot;\nthread &#39;main&#39; panicked at &#39;Roc hit an error&#39;, crates/repl_cli/src/cli_gen.rs:134:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 379641540,
        "sender_full_name": "joaogui1",
        "timestamp": 1690580254
    },
    {
        "content": "<p>it should, yes. What operating system was this on?</p>",
        "id": 379645151,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1690581719
    },
    {
        "content": "<p>also that line number is different from the <code>main</code> branch at least. How recent is your build of roc?</p>",
        "id": 379645458,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1690581798
    },
    {
        "content": "<p>it was on a M1 mac<br>\nI think my build is at most 1 month old</p>",
        "id": 379649627,
        "sender_full_name": "joaogui1",
        "timestamp": 1690583665
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>» &quot;\\(greeting) there, \\(audience)!&quot;\n&quot;\\xe8\\x9d\\t\\x05\\x01&quot;\nthread &#39;main&#39; panicked at &#39;Roc hit an error&#39;, crates/repl_cli/src/cli_gen.rs:142:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>\n<p>This is what I get on latest main using M2 mac</p>",
        "id": 379683901,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1690601605
    },
    {
        "content": "<p>I made issue <a href=\"https://github.com/roc-lang/roc/issues/5708\">#5708</a> for this.</p>",
        "id": 379967194,
        "sender_full_name": "Anton",
        "timestamp": 1690707138
    }
]