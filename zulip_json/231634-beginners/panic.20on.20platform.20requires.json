[
    {
        "content": "<p>in platforms, having more than one required function panics with <code>\"thread 'main' panicked at 'There were still outstanding Arc references to module_ids', crates/compiler/load_internal/src/file.rs:1842:37\"</code></p>\n<div class=\"codehilite\"><pre><span></span><code>platform &quot;hello world&quot;\n    requires {} { first : arg -&gt; ret, second : arg -&gt; ret}\n</code></pre></div>\n<p>removing second solves it<br>\nam i.. not supposed to have two decls there?</p>",
        "id": 342073132,
        "sender_full_name": "dank",
        "timestamp": 1678890421
    },
    {
        "content": "<p>Just not supported yet. The apps with multiple declarations use a record of declarations. Kinda hacky and not always done correctly. I wonder if we have a tracking bug for this, super old issue.</p>",
        "id": 342074164,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678890628
    },
    {
        "content": "<p>oof i wanted it so i could have multiple methods as interop examples</p>\n<p>is this a big deal to implement? perhaps i could take a look</p>",
        "id": 342074863,
        "sender_full_name": "dank",
        "timestamp": 1678890781
    },
    {
        "content": "<p>I mean you can have multiple method currently, just via a workaround.</p>",
        "id": 342077525,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678891367
    },
    {
        "content": "<p>and no idea on difficulty</p>",
        "id": 342077637,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678891388
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/blob/2023770ce77756d01b63e67b13846f24fa95879c/examples/gui/breakout/platform/main.roc#L9\">https://github.com/roc-lang/roc/blob/2023770ce77756d01b63e67b13846f24fa95879c/examples/gui/breakout/platform/main.roc#L9</a></p>",
        "id": 342078008,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678891454
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/panic.20on.20platform.20requires/near/342078008\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/roc-lang/roc/blob/2023770ce77756d01b63e67b13846f24fa95879c/examples/gui/breakout/platform/main.roc#L9\">https://github.com/roc-lang/roc/blob/2023770ce77756d01b63e67b13846f24fa95879c/examples/gui/breakout/platform/main.roc#L9</a></p>\n</blockquote>\n<p>ohhh now i see what u mean</p>",
        "id": 342078100,
        "sender_full_name": "dank",
        "timestamp": 1678891474
    },
    {
        "content": "<p>nice that's not even that bad</p>",
        "id": 342078150,
        "sender_full_name": "dank",
        "timestamp": 1678891483
    },
    {
        "content": "<p>There are gotcha on the platform side around implementation depending if those return functions are closures or pure functions with no extra data. If you can make sure they are pure with no extra data it will avoid issues.</p>",
        "id": 342078480,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678891554
    },
    {
        "content": "<p>As in this may  cause you problems depending on how you implement the host:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">someDat</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">         </span><span class=\"nv\">getDataForHost</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">someData</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>vs the below shouldn't have any gotchas:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nv\">getDataForHost</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">            </span><span class=\"nv\">someDat</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"w\">            </span><span class=\"nx\">someData</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 342079342,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678891710
    },
    {
        "content": "<p>oh yea i think i ran into something like that in another code<br>\nill be careful of that then<br>\ntnx</p>",
        "id": 342082149,
        "sender_full_name": "dank",
        "timestamp": 1678892307
    },
    {
        "content": "<p>uhhh the <code>program</code> trick makes it much harder to work with <a href=\"/user_uploads/22008/IZQAEg1Qu8SJyvS_eyCxF1nl/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/IZQAEg1Qu8SJyvS_eyCxF1nl/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/IZQAEg1Qu8SJyvS_eyCxF1nl/image.png\"></a></div>",
        "id": 342169506,
        "sender_full_name": "dank",
        "timestamp": 1678915466
    },
    {
        "content": "<p>now im actually not sure what extern function to expect in the host code</p>",
        "id": 342169641,
        "sender_full_name": "dank",
        "timestamp": 1678915523
    },
    {
        "content": "<p>Did you use <code>as</code> to name each function in the record?</p>",
        "id": 342169850,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678915605
    },
    {
        "content": "<p>oh no i forgot<br>\nhold up ill see if it makes it better</p>",
        "id": 342170035,
        "sender_full_name": "dank",
        "timestamp": 1678915684
    },
    {
        "content": "<p>Basically do that. They each function will be exposed the same way mainForHost normally is.</p>",
        "id": 342170098,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678915712
    },
    {
        "content": "<p>As long as they are implement without capture data. They can be called the same way as mainForHost</p>",
        "id": 342170144,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678915734
    },
    {
        "content": "<p>Of course with their own arguments and return type.</p>",
        "id": 342170182,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678915753
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/panic.20on.20platform.20requires/near/342170144\">said</a>:</p>\n<blockquote>\n<p>As long as they are implement without capture data. They can be called the same way as mainForHost</p>\n</blockquote>\n<p>capture data in what way?</p>",
        "id": 342170209,
        "sender_full_name": "dank",
        "timestamp": 1678915763
    },
    {
        "content": "<p>the functions you expose should be top-level functions</p>",
        "id": 342170257,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1678915791
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/panic.20on.20platform.20requires/near/342170098\">said</a>:</p>\n<blockquote>\n<p>Basically do that. They each function will be exposed the same way mainForHost normally is.</p>\n</blockquote>\n<p>um i see now the names i defined<br>\ngot some <code>_result_size</code> suffix now</p>",
        "id": 342170259,
        "sender_full_name": "dank",
        "timestamp": 1678915792
    },
    {
        "content": "<p>Like i showed above with <code>someData</code></p>",
        "id": 342170261,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678915793
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/231634-beginners/topic/panic.20on.20platform.20requires/near/342170257\">said</a>:</p>\n<blockquote>\n<p>the functions you expose should be top-level functions</p>\n</blockquote>\n<p>ohh yea no closures here so we're good</p>",
        "id": 342170357,
        "sender_full_name": "dank",
        "timestamp": 1678915819
    },
    {
        "content": "<p>um why actually do they get a result_size suffix?</p>",
        "id": 342170429,
        "sender_full_name": "dank",
        "timestamp": 1678915854
    },
    {
        "content": "<p>maybe it's something else</p>",
        "id": 342170565,
        "sender_full_name": "dank",
        "timestamp": 1678915921
    },
    {
        "content": "<p>I think you should be able to ignore those and just use the same equivalent functions as with mainForHost.</p>",
        "id": 342170587,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678915923
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/MpHe5wZy9VxQJlGtwlDivwO5/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/MpHe5wZy9VxQJlGtwlDivwO5/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/MpHe5wZy9VxQJlGtwlDivwO5/image.png\"></a></div>",
        "id": 342170625,
        "sender_full_name": "dank",
        "timestamp": 1678915931
    },
    {
        "content": "<p>It just returns the number of bytes the result is</p>",
        "id": 342170639,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678915936
    },
    {
        "content": "<p>no they're not the same</p>",
        "id": 342170644,
        "sender_full_name": "dank",
        "timestamp": 1678915938
    },
    {
        "content": "<p>Which you probably already know</p>",
        "id": 342170655,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678915943
    },
    {
        "content": "<p>at least not named the same</p>",
        "id": 342170669,
        "sender_full_name": "dank",
        "timestamp": 1678915948
    },
    {
        "content": "<p><code>_1_exposed_generic</code> suffix is only on the program now, see?</p>",
        "id": 342170726,
        "sender_full_name": "dank",
        "timestamp": 1678915972
    },
    {
        "content": "<p>Can you share your current code</p>",
        "id": 342170733,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678915975
    },
    {
        "content": "<p>Just the platform def</p>",
        "id": 342170757,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678915985
    },
    {
        "content": "<p>Like programForHost type and definition</p>",
        "id": 342170809,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916004
    },
    {
        "content": "<p>sure</p>\n<div class=\"codehilite\"><pre><span></span><code>platform &quot;jvm-interop&quot;\n    requires {} { program : _ }\n    exposes []\n    packages {}\n    imports []\n    provides [programForHost]\n\nprogramForHost : {\n    interpolateString : Str -&gt; Str as InterpolateString,\n    mulArrByScalar : List I32 -&gt; List I32 as MulArrByScalar,\n}\nprogramForHost = program\n</code></pre></div>",
        "id": 342170826,
        "sender_full_name": "dank",
        "timestamp": 1678916010
    },
    {
        "content": "<p>Put parens around the function types and try again.</p>",
        "id": 342170877,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916033
    },
    {
        "content": "<p>yes the <code>as</code> here binds only to the return type</p>",
        "id": 342171229,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1678916163
    },
    {
        "content": "<p>(put parens not including the <code>as</code> right?)<br>\ndoes look a bit different<br>\n<a href=\"/user_uploads/22008/aYC6u9t2hLB37mPl2pSyg-4T/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/aYC6u9t2hLB37mPl2pSyg-4T/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/aYC6u9t2hLB37mPl2pSyg-4T/image.png\"></a></div>",
        "id": 342171304,
        "sender_full_name": "dank",
        "timestamp": 1678916180
    },
    {
        "content": "<p>it needs to apply to the whole function type, so <code>(Foo -&gt; Bar) as Fx</code></p>",
        "id": 342171313,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1678916185
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/231634-beginners/topic/panic.20on.20platform.20requires/near/342171313\">said</a>:</p>\n<blockquote>\n<p>it needs to apply to the whole function type, so <code>(Foo -&gt; Bar) as Fx</code></p>\n</blockquote>\n<p>yea that's what i did</p>",
        "id": 342171340,
        "sender_full_name": "dank",
        "timestamp": 1678916198
    },
    {
        "content": "<p>is <code>_caller</code> what im after now?</p>",
        "id": 342171422,
        "sender_full_name": "dank",
        "timestamp": 1678916230
    },
    {
        "content": "<p>yep</p>",
        "id": 342171498,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916268
    },
    {
        "content": "<p>nicee thanks guys</p>",
        "id": 342171526,
        "sender_full_name": "dank",
        "timestamp": 1678916278
    },
    {
        "content": "<p>If this helps at all: <a href=\"https://github.com/roc-lang/roc/blob/main/examples/gui/breakout/platform/src/roc.rs\">https://github.com/roc-lang/roc/blob/main/examples/gui/breakout/platform/src/roc.rs</a></p>",
        "id": 342171667,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916322
    },
    {
        "content": "<p>Example of use in rust.</p>",
        "id": 342171686,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916329
    },
    {
        "content": "<p>You can see how the multiple functions all look the same more or less in how they get called. Which is very similar to <code>mainForHost</code> in other apps.</p>",
        "id": 342171761,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916363
    },
    {
        "content": "<p>Actual call example: <a href=\"https://github.com/roc-lang/roc/blob/main/examples/gui/breakout/platform/src/roc.rs#L358-L370\">https://github.com/roc-lang/roc/blob/main/examples/gui/breakout/platform/src/roc.rs#L358-L370</a></p>",
        "id": 342171924,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916417
    },
    {
        "content": "<p>Though if you have a static result_size, I don't think you need to call that function.</p>",
        "id": 342171992,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916437
    },
    {
        "content": "<p>so is <code>_1_exposed_generic</code> just for unnamed scenarios?</p>",
        "id": 342172070,
        "sender_full_name": "dank",
        "timestamp": 1678916474
    },
    {
        "content": "<p>essentially. Thouhgh it can never have closure capture data.</p>",
        "id": 342172147,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916505
    },
    {
        "content": "<p>These technically could.</p>",
        "id": 342172166,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916511
    },
    {
        "content": "<p>Then you would have to call them in a slightly more complex way.</p>",
        "id": 342172254,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916531
    },
    {
        "content": "<p>is that implemented?<br>\nwonder how you'd do that</p>",
        "id": 342172335,
        "sender_full_name": "dank",
        "timestamp": 1678916562
    },
    {
        "content": "<p>You call <code>programForHost</code> Then take the closure data that it returns and split it up into the closure data for each function and make sure to give that to each function.</p>",
        "id": 342172419,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916599
    },
    {
        "content": "<p>If the methods are called more than once, you may also need to deal with refcounts updating, not sure though.</p>",
        "id": 342172557,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916644
    },
    {
        "content": "<p>This is all of the stuff where fully working glue will be amazing</p>",
        "id": 342172782,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916722
    },
    {
        "content": "<p>Should all be generated correctly for you without needing to know all these details and byte offsets.</p>",
        "id": 342172837,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678916742
    },
    {
        "content": "<p>seems that the _caller symbol offset is.. off<br>\ni keep crashing the jvm now</p>\n<div class=\"codehilite\"><pre><span></span><code>munmap_chunk(): invalid pointer\nfish: Job 1, &#39;java javaSource.Greeter&#39; terminated by signal SIGABRT (Abort)\n</code></pre></div>\n<p>though actually what happened before (and worked) is that i wrapped the required functions in new functions (because you cant re-export, at least that's what the compiler said) and exposed those<br>\nnow that we turn over the same, it can't find the functions, ig</p>",
        "id": 342181083,
        "sender_full_name": "dank",
        "timestamp": 1678920309
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"583319\">dank</span> <a href=\"#narrow/stream/231634-beginners/topic/panic.20on.20platform.20requires/near/342170826\">said</a>:</p>\n<blockquote>\n<p>sure</p>\n<p><div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">platform</span><span class=\"w\"> </span><span class=\"s\">\"jvm-interop\"</span>\n<span class=\"w\">    </span><span class=\"nv\">requires</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">program</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"nv\">exposes</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"nv\">packages</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"nv\">imports</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"nv\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">programForHost</span><span class=\"p\">]</span>\n\n<span class=\"nv\">programForHost</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nv\">interpolateString</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Str</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kr\">as</span><span class=\"w\"> </span><span class=\"kt\">InterpolateString</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"nv\">programForHost</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">program</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>to make stuff clear, this ^ doesn't work<br>\nbut this V does</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">platform</span><span class=\"w\"> </span><span class=\"s\">\"jvm-interop\"</span>\n<span class=\"w\">    </span><span class=\"nv\">requires</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">interpolateString</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">arg</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">ret</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"nv\">exposes</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"nv\">packages</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"nv\">imports</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"nv\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">interpolateStringy</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">y</span><span class=\"w\"> </span><span class=\"nv\">suffix</span><span class=\"w\"> </span><span class=\"nv\">name</span><span class=\"w\"> </span><span class=\"nv\">change</span><span class=\"w\"> </span><span class=\"nv\">for</span><span class=\"w\"> </span><span class=\"nv\">convenience</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">updated</span><span class=\"w\"> </span><span class=\"nv\">accordingly</span><span class=\"w\"> </span><span class=\"kr\">in</span><span class=\"w\"> </span><span class=\"nv\">host</span><span class=\"w\"> </span><span class=\"nv\">while</span><span class=\"w\"> </span><span class=\"nv\">testing</span><span class=\"w\"> </span><span class=\"nv\">so</span><span class=\"w\"> </span><span class=\"nv\">it</span><span class=\"w\"> </span><span class=\"nv\">doesnt</span><span class=\"w\"> </span><span class=\"nv\">matter</span><span class=\"p\">)</span>\n\n<span class=\"nv\">interpolateStringy</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">arg</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">interpolateString</span><span class=\"w\"> </span><span class=\"nv\">arg</span>\n</code></pre></div>",
        "id": 342181287,
        "sender_full_name": "dank",
        "timestamp": 1678920390
    },
    {
        "content": "<p>interesting bug</p>",
        "id": 342181400,
        "sender_full_name": "dank",
        "timestamp": 1678920456
    },
    {
        "content": "<p>It would surprise me if the symbol offsets are wrong. Probably a different root cause</p>",
        "id": 342187472,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678923229
    },
    {
        "content": "<p>well idk. ill call it a night for now but look at it some more tomorrow</p>\n<p>at least i found 6 (mostly parser) issues! also learned a shitton on platforms, so that's nice</p>",
        "id": 342188208,
        "sender_full_name": "dank",
        "timestamp": 1678923710
    },
    {
        "content": "<p>am i mad or does using a record in requires causes a different memory layout<br>\n<a href=\"/user_uploads/22008/iV91D3aryJcojEwl4w_T_gcx/image.png\">image.png</a><br>\n<a href=\"/user_uploads/22008/QhWKKDdeqI51r7pdzN5LR28B/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/iV91D3aryJcojEwl4w_T_gcx/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/iV91D3aryJcojEwl4w_T_gcx/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/22008/QhWKKDdeqI51r7pdzN5LR28B/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/QhWKKDdeqI51r7pdzN5LR28B/image.png\"></a></div>",
        "id": 342397675,
        "sender_full_name": "dank",
        "timestamp": 1678992652
    },
    {
        "content": "<p>Best way to tell would be to use <code>--debug</code> and look at the llvm ir.</p>",
        "id": 342401278,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678993717
    }
]