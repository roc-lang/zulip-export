[
    {
        "content": "<p>This isn't a serious blocker. I'm just writing to report that I've run into it and to flag it as a possible bug. If confirmed as a bug by the maintainers' team, I'd be happy to file a GitHub issue, if that'd be the preferred course of action,</p>\n<p>Roc online <a href=\"https://www.roc-lang.org/repl\">REPL</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"err\">»</span><span class=\"w\"> </span><span class=\"nv\">f</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">n</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">p</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">pow</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">e</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">div</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">log</span><span class=\"w\"> </span><span class=\"nv\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nv\">p</span><span class=\"p\">)</span>\n<span class=\"nv\">panicked</span><span class=\"w\"> </span><span class=\"nv\">at</span><span class=\"w\"> </span><span class=\"nf\">'</span><span class=\"kt\">Invalid</span><span class=\"w\"> </span><span class=\"nv\">return</span><span class=\"w\"> </span><span class=\"nv\">layout</span><span class=\"w\"> </span><span class=\"nv\">for</span><span class=\"w\"> </span><span class=\"kt\">NumLogUnchecked</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">InLayout</span><span class=\"p\">(</span><span class=\"kt\">DEC</span><span class=\"p\">)</span><span class=\"nf\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">crates</span><span class=\"nf\">/</span><span class=\"nv\">compiler</span><span class=\"nf\">/</span><span class=\"nv\">gen_wasm</span><span class=\"nf\">/</span><span class=\"nv\">src</span><span class=\"nf\">/</span><span class=\"nv\">low_level</span><span class=\"nf\">.</span><span class=\"nv\">rs</span><span class=\"nf\">:</span><span class=\"mi\">178</span><span class=\"nf\">:</span><span class=\"mi\">13</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"err\">»</span><span class=\"w\"> </span><span class=\"nv\">f</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">n</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">p</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">pow</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">e</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">div</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">logChecked</span><span class=\"w\"> </span><span class=\"nv\">n</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Result</span><span class=\"nf\">.</span><span class=\"nv\">withDefault</span><span class=\"w\"> </span><span class=\"mf\">0.</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nv\">p</span><span class=\"p\">)</span>\n<span class=\"nv\">panicked</span><span class=\"w\"> </span><span class=\"nv\">at</span><span class=\"w\"> </span><span class=\"nf\">'</span><span class=\"kt\">Invalid</span><span class=\"w\"> </span><span class=\"nv\">return</span><span class=\"w\"> </span><span class=\"nv\">layout</span><span class=\"w\"> </span><span class=\"nv\">for</span><span class=\"w\"> </span><span class=\"kt\">NumLogUnchecked</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">InLayout</span><span class=\"p\">(</span><span class=\"kt\">DEC</span><span class=\"p\">)</span><span class=\"nf\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">crates</span><span class=\"nf\">/</span><span class=\"nv\">compiler</span><span class=\"nf\">/</span><span class=\"nv\">gen_wasm</span><span class=\"nf\">/</span><span class=\"nv\">src</span><span class=\"nf\">/</span><span class=\"nv\">low_level</span><span class=\"nf\">.</span><span class=\"nv\">rs</span><span class=\"nf\">:</span><span class=\"mi\">178</span><span class=\"nf\">:</span><span class=\"mi\">13</span>\n</code></pre></div>\n<p>Locally (not in REPL, but via <code>roc test</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>thread<span class=\"w\"> </span><span class=\"s1\">'main'</span><span class=\"w\"> </span>panicked<span class=\"w\"> </span>at<span class=\"w\"> </span><span class=\"s1\">'internal error: entered unreachable code: Unrecognized dec unary operation: NumLogUnchecked'</span>,<span class=\"w\"> </span>crates/compiler/gen_llvm/src/llvm/lowlevel.rs:2209:13\n</code></pre></div>\n<p>Thanks!</p>",
        "id": 428405144,
        "sender_full_name": "Hristo",
        "timestamp": 1711139403
    },
    {
        "content": "<p>Ah, we are missing some wiring in the wasm backend to newer builtins. Yeah, definitely a bug</p>",
        "id": 428407516,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1711140590
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span>, thanks for looking into this!</p>\n<p>Given that this is also reproducible locally, in a non-REPL context, wouldn't it be considered a more general than just WASM? I've run into a similar bug when attempting other <code>Num.log</code>-based calculations.</p>\n<p>This time around I've accompanied my reproducible example with output from the online REPL, because in my previous reports (unrelated to this thread), I wasn't really sure how much was due to my local environment.</p>",
        "id": 428409171,
        "sender_full_name": "Hristo",
        "timestamp": 1711141391
    },
    {
        "content": "<p>Ah yeah error is hit in llvm backend too. Yeah probably all backend would hit it.</p>",
        "id": 428412615,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1711143230
    },
    {
        "content": "<p>I guess that means we have it wired up for floats but not dec</p>",
        "id": 428412685,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1711143247
    },
    {
        "content": "<blockquote>\n<p>I guess that means we have it wired up for floats but not dec</p>\n</blockquote>\n<p>Yes, the error messages suggest something like that might've happened indeed <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 428415489,
        "sender_full_name": "Hristo",
        "timestamp": 1711144845
    }
]