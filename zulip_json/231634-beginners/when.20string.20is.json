[
    {
        "content": "<p>If I write a when over strings, will it use a tree for smart matching?</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"nx\">str</span><span class=\"w\"> </span><span class=\"o\">is</span>\n<span class=\"w\">  </span><span class=\"s\">\"aaa\"</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">...</span>\n<span class=\"w\">  </span><span class=\"s\">\"aab\"</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">...</span>\n<span class=\"w\">  </span><span class=\"s\">\"ac\"</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">...</span>\n<span class=\"w\">  </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">...</span>\n</code></pre></div>\n<p>Essentially would be above code generate a character by character tree based match. So if the first character isn't <code>a</code>, it will just go straight to the  <code>_</code> case.</p>",
        "id": 359749999,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1684524129
    },
    {
        "content": "<p>by default the compiler does not do so; optimizations might turn this into a tree comparison though.</p>",
        "id": 359751938,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1684524751
    },
    {
        "content": "<p>What do we do for lists of bytes?<br>\nSo the same function as above, but <code>['a', 'a', 'a', ..]</code> or similar?</p>",
        "id": 359987513,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1684640218
    },
    {
        "content": "<p>lists compile to prefix trees</p>",
        "id": 359991226,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1684643450
    }
]