[
    {
        "content": "<p>I'm trying to pattern match on a a type aliased tag union, where one tag in the union may have a payload, and one may not.<br>\nWhat is the correct way to do this? This is my current implementation, but I receive <code>TYPE MISMATCH: this pattern is being used in an unexpected way</code> errors when I try to run the code.</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">Node</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">Val</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">Null</span><span class=\"p\">]</span>\n\n<span class=\"nv\">hasLhs</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">Node</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"nx\">Nat</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Bool</span>\n<span class=\"nv\">hasLhs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">tree</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">node</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"w\"> </span><span class=\"nx\">tree</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">node</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"nx\">res</span><span class=\"w\"> </span><span class=\"o\">is</span>\n<span class=\"w\">        </span><span class=\"nx\">Ok</span><span class=\"w\"> </span><span class=\"nx\">Val</span><span class=\"w\"> </span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Bool</span><span class=\"p\">.</span><span class=\"nx\">true</span>\n<span class=\"w\">        </span><span class=\"nx\">Ok</span><span class=\"w\"> </span><span class=\"nx\">Null</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Bool</span><span class=\"p\">.</span><span class=\"nx\">false</span>\n<span class=\"w\">        </span><span class=\"nx\">Err</span><span class=\"w\"> </span><span class=\"nx\">OutOfBounds</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Bool</span><span class=\"p\">.</span><span class=\"nx\">false</span>\n</code></pre></div>\n<p>Error:</p>\n<div class=\"codehilite\"><pre><span></span><code>── TYPE MISMATCH ──────────────────────────────────────── BinaryTreeOnList.roc ─\n\nThis pattern is being used in an unexpected way:\n\n12│          Ok Null -&gt; Bool.false\n             ^^^^^^^\n\nIt is a Ok tag of type:\n\n    [Ok …]\n\nBut it needs to match:\n\n    [Ok … *]\n</code></pre></div>",
        "id": 412372621,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1704988585
    },
    {
        "content": "<p>Try <code>Ok (Val _)</code></p>",
        "id": 412373333,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704988828
    },
    {
        "content": "<p>Man is that an error message we should fix. We know the type of <code>res</code> so we really should say the first branch is the wrong type, not the second.</p>",
        "id": 412373467,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704988870
    },
    {
        "content": "<p>But yeah, either way that message should probably note parens might be needed.</p>",
        "id": 412373582,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704988911
    },
    {
        "content": "<p>Nice, that did it. Yeah, error message was not very helpful in trouble shooting that.</p>",
        "id": 412373845,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1704988989
    },
    {
        "content": "<p>wow yeah I've never seen that one before <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 412376208,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1704989666
    }
]