[
    {
        "content": "<p>So I've been out of the Roc loop for a couple months, and the language is progressing a lot. I feel like I've missed quite a bit, so I'm hoping folks can fill me in a bit on what's been happening. A few of the changes or new features I'm aware of are:</p>\n<ul>\n<li>Result.try <code>?</code> operator</li>\n<li>Task as built in</li>\n<li>New record builder syntax</li>\n<li>Module params?</li>\n<li>&amp;foo record updates</li>\n<li>deprecated backpassing</li>\n</ul>\n<p>I think I remember seeing someone offhandedly mention another major feature/change in some thread (\"...now that X is in the language...\"). Any thoughts on updates I should be aware of in the language?</p>",
        "id": 470019329,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726248464
    },
    {
        "content": "<p>I'm about to take off on a plane ride, so I can't help at the moment, but I'd recommend searching the closed PR names in the past few months if you don't get an answer</p>\n<p><a href=\"https://github.com/roc-lang/roc/pulls\">https://github.com/roc-lang/roc/pulls</a></p>",
        "id": 470020204,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1726248808
    },
    {
        "content": "<p>Thanks Sam, I have indeed been browsing through the PRs. Thought I'd try to short circuit that process as there are a LOT of PRs... and for example, thought someone mentioned module params being in the language, but all I've found is a PR for adding syntax parsing for module params, but not anything indicating its functional yet.</p>",
        "id": 470021458,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726249320
    },
    {
        "content": "<p>PS: have a safe flight!</p>",
        "id": 470021969,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726249525
    },
    {
        "content": "<p>Yeah, I haven't used module params yet, but they are functional to my understanding</p>",
        "id": 470023321,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726250015
    },
    {
        "content": "<p>Was just able to get module params working in a proof of concept. Looks like the name of the exposed value in the importing module (IE main.roc) has to match the name of the value in the imported module.</p>\n<p>So if Module.roc looks like:</p>\n<div class=\"codehilite\"><pre><span></span><code>module { echo } -&gt; [leftPadPrint]\n</code></pre></div>\n<p>Then to import, main.roc should look like:</p>\n<div class=\"codehilite\"><pre><span></span><code>import cli.Stdout\necho = Stdout.line\nimport Module { echo }\n</code></pre></div>",
        "id": 470024456,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726250420
    },
    {
        "content": "<p>Maybe I should rephrase my question, as I think the list of updates is too long to recount. I'm really just curious what folks think are the major highlights of the language evolution in the last couple months.</p>",
        "id": 470025295,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726250730
    },
    {
        "content": "<p>Your list looks pretty good to me. </p>\n<p>Are you tracking Brendans refcounted upgrade, basically for Lists of anything refcounted they go way fast now. Like 2500x or something crazy.</p>\n<p>On the basic-cli and basic-webserver side there's also been a heap of nice upgrades. The TCP and FileHeap so roc can automatically close close and cleanup when dropped. Super nice Sqlite API upgrade, multipart/formdata support and others I'm sure.</p>",
        "id": 470043350,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1726258742
    },
    {
        "content": "<p>Wow, that’s a huge improvement for refcounted lists. I have been vaguely aware of that as a WIP. Those are some great improvements to the platforms as well.</p>\n<p>I’m super excited to start playing with module params… seems like that should open up a lot of possibilities.</p>",
        "id": 470389126,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1726435528
    },
    {
        "content": "<p>Oh also, we fixed our alloca generation in llvm leading to:</p>\n<ol>\n<li>Recursive functions shouldn't sometime mutate values.</li>\n<li>Llvm optimizes much better</li>\n</ol>",
        "id": 470401203,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726443469
    },
    {
        "content": "<p>Wow, I didn't realize module params had landed, that's awesome!</p>",
        "id": 471137910,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1726623272
    }
]