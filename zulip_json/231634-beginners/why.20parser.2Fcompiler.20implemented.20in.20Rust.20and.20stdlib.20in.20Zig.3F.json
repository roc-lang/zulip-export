[
    {
        "content": "<p>Hi, it is been a while I haven’t connected to the Zulip, but I come back with a question that popped.</p>\n<p>What were the reasons that led to choosing Rust to develop the compiler, and Zig to implement stdlib?</p>\n<p>Why not choose the same language for both? At the first glance, it would make sense because the entry for new Roc contributors would be cheaper.</p>\n<p>And same but different question (as I am currently getting more and more interested in Zig): could Zig have been chosen for the development of the compiler? And if not, what is lacking in Zig for that purpose?</p>\n<p>Trying to understand the context and the history here :-)<br>\nThanks a lot</p>",
        "id": 276873779,
        "sender_full_name": "Loric Brevet",
        "timestamp": 1648474550
    },
    {
        "content": "<p>at the time we 1) did not really know zig well and 2) it wasn't ready. Even now, it's not actually meant to be used in production. The reason zig entered the project because it has many different backends (wasm, various assembly formats, llvm IR) and can create code with minimal dependencies</p>",
        "id": 276874544,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648474885
    },
    {
        "content": "<p>Rust has much more overhead in terms of code size. It's objectively not a lot, but zig is more minimal</p>",
        "id": 276874609,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648474905
    },
    {
        "content": "<p>but, we think rust is a nicer language to work in for a project of this size. It has  a type system that we're more familiar with, it has a package ecosystem, excellent tooling</p>",
        "id": 276874713,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648474941
    },
    {
        "content": "<p>I'll add this question to the faq.</p>",
        "id": 276875318,
        "sender_full_name": "Anton",
        "timestamp": 1648475223
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> for the quick answer and yes <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> that’s a great idea.</p>\n<p>When comparing Zig and Rust, one aspect that often comes up is that Rust has safety as a first concern and this makes Rust \"safer\" than Zig. Do you agree with that statement?</p>\n<p>And if so, was this also considered in the choice (as I guess safety matters quite a lot for a programming language such as Roc)?</p>",
        "id": 276876534,
        "sender_full_name": "Loric Brevet",
        "timestamp": 1648475788
    },
    {
        "content": "<p>it matters for the end product, but less for a compiler. Compilers should be fast and give good error messages. If they leak some memory, that's not the end of the world really</p>",
        "id": 276876697,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648475865
    },
    {
        "content": "<p>so, roc programs should be memory safe, but does the roc compiler have to be? maybe not if it allows us to be faster</p>",
        "id": 276876787,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648475892
    },
    {
        "content": "<p>the next version of zig will be self-hosted, showing that you can build a compiler in zig, and a very fast one at that</p>",
        "id": 276876827,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648475924
    },
    {
        "content": "<p>btw yes rust is safer than zig</p>",
        "id": 276876886,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648475958
    },
    {
        "content": "<p>but also zig is safer than C, in practice</p>",
        "id": 276876950,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648475984
    },
    {
        "content": "<blockquote>\n<p>it matters for the end product, but less for a compiler.</p>\n</blockquote>\n<p>This makes sense effectively.</p>\n<p>Really looking forward to the self-hosted version of Zig. This seems to be a huge milestone for the project. It will be interesting to see the speed difference of the compiler after the rewrite. And having finished that will release some workforce to stabilize/improve stdlib, and maybe add some more runtime safety checks to the allocators before v1.0.0 (to try to catch up a bit with Rust in that regard)!</p>\n<p>The future is promising, and this will profit downstream projects such as Roc..</p>",
        "id": 276878190,
        "sender_full_name": "Loric Brevet",
        "timestamp": 1648476502
    },
    {
        "content": "<p>absolutely, and even if perhaps we don't use zig code as much, zig really has inspired our compiler work and goals</p>",
        "id": 276878827,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648476767
    },
    {
        "content": "<p>e.g. data-oriented design in practice, demonstrating in-place binary patching, writing your own linker</p>",
        "id": 276878922,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648476817
    },
    {
        "content": "<p>It still seems like there's still some open questions, at least that I have:</p>\n<p>If runtime safety is more important than the safety of the compiler code, why then use Zig for the parts that will directly end up being used by Roc at runtime, while using Rust for the parts that won't end up being used by Roc at runtime (why not the reverse)?</p>\n<p>If Zig will be getting safer, does that mean we will potentially explore using Zig in the compiler?</p>\n<p>Are the benefits of using both, at the expense of more build requirements, and as <span class=\"user-mention\" data-user-id=\"479004\">@Loric Brevet</span> mentioned, more languages for contributors to learn, worth keeping two languages involved in the core of the implementation?</p>",
        "id": 276893633,
        "sender_full_name": "Kevin Gillette",
        "timestamp": 1648482794
    },
    {
        "content": "<p>the Roc stdlib implementation is unavoidably unsafe</p>",
        "id": 276893877,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1648482904
    },
    {
        "content": "<p>we originally started out writing it in Rust, and it needed <code>unsafe</code> all over the place</p>",
        "id": 276893926,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1648482926
    },
    {
        "content": "<p>so Rust's safety guarantees don't apply to it regardless</p>",
        "id": 276893950,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1648482944
    },
    {
        "content": "<p>basically because the way it needs to interface with the compiled Roc application is using raw pointers</p>",
        "id": 276894018,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1648482968
    },
    {
        "content": "<p>and dereferencing arbitrary pointers is innately memory-unsafe</p>",
        "id": 276894067,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1648482995
    },
    {
        "content": "<p>so when we were having a bad experience using Rust for the stdlib, the thinking was \"since we're not getting any benefit out of Rust for this, maybe we should write it in C?\" and then \"at that point, why settle for C when we could use Zig?\"</p>",
        "id": 276894203,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1648483071
    },
    {
        "content": "<p>Ah, gotcha. That makes a lot of sense, thanks!</p>",
        "id": 276898348,
        "sender_full_name": "Kevin Gillette",
        "timestamp": 1648484874
    },
    {
        "content": "<p>Zig is actually a super nice language. I'd say its best language for the platform</p>",
        "id": 278305304,
        "sender_full_name": "Airbus5717",
        "timestamp": 1649425303
    }
]