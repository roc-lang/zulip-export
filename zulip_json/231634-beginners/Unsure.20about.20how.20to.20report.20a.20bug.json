[
    {
        "content": "<p>I believe I have found a bug in List.concat (or adjacent code).<br>\nWhile programming the 5th day of advent of code I ended up in a situation where <br>\n<code>List.concat a b</code><br>\nand<br>\n<code>List.walk b a List.append</code><br>\nwere giving me different result, which is nonsense since it is pretty trivial to observe that they are the same.</p>\n<p>However, my reproduction is complex, it's 135 lines of code, and I don't really know how to simplify it without the bug disappearing. This also makes me think that maybe the bug is not the actual implementation of concat, but maybe Roc assuming that some shared object is actually unique and can be mutated, or some other optimization. I am not sure of what the best way of reporting this bug would be.</p>",
        "id": 314234389,
        "sender_full_name": "Asier Elorz (he/him)",
        "timestamp": 1670332454
    },
    {
        "content": "<p>can you put it in a gist? I think it depends a bit on what the code looks like and if the problem is obvious (with e.g. valgrind)</p>",
        "id": 314234820,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1670332604
    },
    {
        "content": "<p><a href=\"https://gist.github.com/asielorz/a5128af84d254cce9c999c66257f37b7\">https://gist.github.com/asielorz/a5128af84d254cce9c999c66257f37b7</a></p>\n<p>I hope it helps</p>",
        "id": 314238837,
        "sender_full_name": "Asier Elorz (he/him)",
        "timestamp": 1670333858
    },
    {
        "content": "<p>hmm, the program fails on the input file for me</p>",
        "id": 314241370,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1670334683
    },
    {
        "content": "<p>is that bit at the top supposed to be there?</p>",
        "id": 314241397,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1670334691
    },
    {
        "content": "<p>Well, yes. Sorry for the bad bug report <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>\n<p>I have updated it to a new version that does not need an external input file and still has the bug. The code is much shorter and much less noisy, and all file IO has been removed. I hope it helps.</p>",
        "id": 314247958,
        "sender_full_name": "Asier Elorz (he/him)",
        "timestamp": 1670336839
    },
    {
        "content": "<p>I think this is possibly a similar issue to <a href=\"https://github.com/roc-lang/roc/issues/4697\">https://github.com/roc-lang/roc/issues/4697</a> where I managed to get a somewhat small reproduction. Interesting how many people are running into this considering it's not exactly trivial to reproduce!</p>",
        "id": 314253123,
        "sender_full_name": "Tommy Graves",
        "timestamp": 1670338330
    },
    {
        "content": "<p>allright, I'll have to look in more detail, it's not (clearly, anyway) a memory corruption bug</p>",
        "id": 314253377,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1670338412
    },
    {
        "content": "<p>so it could indeed be an incorrect in-place mutation</p>",
        "id": 314253410,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1670338428
    },
    {
        "content": "<p>thanks for reporting!</p>",
        "id": 314253443,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1670338441
    },
    {
        "content": "<p>I talked to <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> about it this morning too though I'm not sure if he was looking into it yet. Thanks Folkert and <span class=\"user-mention\" data-user-id=\"479448\">@Asier Elorz (he/him)</span> !</p>",
        "id": 314253555,
        "sender_full_name": "Tommy Graves",
        "timestamp": 1670338478
    },
    {
        "content": "<p>This should be fixed in tomorrow's nightly release of roc!</p>",
        "id": 314331962,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1670363030
    }
]