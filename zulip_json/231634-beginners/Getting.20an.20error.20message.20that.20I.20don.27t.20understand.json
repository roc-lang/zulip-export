[
    {
        "content": "<p>I'm extracting a the first record from a list and then trying to use use a field from it:</p>\n<div class=\"codehilite\"><pre><span></span><code>        item = List.first items\n        aspectRatio = item.width / item.height\n</code></pre></div>\n<p>And getting this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>── TYPE MISMATCH in Layout.roc ─────────────────────────────────────────────────\n\nThis expression is used in an unexpected way:\n\n37│          aspectRatio = (Num.toFrac item.width) / (Num.toFrac item.height)\n                                       ^^^^^^^^^^\n\nThis item value is a:\n\n    Result GalleryItem [ListWasEmpty]\n\nBut you are trying to use it as:\n\n    { width : * }b\n\n────────────────────────────────────────────────────────────────────────────────\n\n1 error and 3 warnings found in 849 ms\n</code></pre></div>\n<p>Does anyone know what this means?</p>\n<p>Full code: <a href=\"https://github.com/ashleydavis/book-of-examples/blob/main/gallery/roc/layout.roc\">https://github.com/ashleydavis/book-of-examples/blob/main/gallery/roc/layout.roc</a></p>",
        "id": 452201985,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721254260
    },
    {
        "content": "<p>Also note that I'm checking prior if the list is empty:</p>\n<div class=\"codehilite\"><pre><span></span><code>    if List.len items == 0 then {\n        row: {\n            items: List.map currentRowItems \\galleryItem -&gt; {}, # Produces layout items from gallery items.\n            offsetY: 0,\n            height: targetRowHeight,\n            width,\n            headings\n        },\n        removedItems,\n        remainingItems: []\n    }\n    else\n        item = List.first items\n        aspectRatio = item.width / item.height\n        ...\n  }\n</code></pre></div>",
        "id": 452202172,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721254338
    },
    {
        "content": "<p><code>List.first</code> will always return a result.</p>",
        "id": 452202552,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721254538
    },
    {
        "content": "<p>So you should just use <code>when List.first ... is</code> directly</p>",
        "id": 452202588,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721254559
    },
    {
        "content": "<p>That will check if the list is empty and return an error if so.</p>",
        "id": 452202721,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721254591
    },
    {
        "content": "<p>Then you can move your empty list logic there.</p>",
        "id": 452202801,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721254611
    },
    {
        "content": "<p>So I can't just capture the first item in the list then use it?</p>",
        "id": 452202844,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721254637
    },
    {
        "content": "<p>Do I have to unpack it from the \"result\" somehow?</p>",
        "id": 452202887,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721254663
    },
    {
        "content": "<p>I haven't used Result yet.</p>",
        "id": 452203000,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721254716
    },
    {
        "content": "<p>Roc will always do a bounds check and return a result.</p>\n<p>You could match on the result and <code>crash</code> in the error case if you know it is impossible, but it is definitely advised to use <code>List.first</code> as your \"is empty\" check instead.</p>",
        "id": 452203024,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721254726
    },
    {
        "content": "<p>So the suggested way to write your code above would be something like:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">first</span><span class=\"w\"> </span><span class=\"nv\">items</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">    </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">item</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"nv\">aspectRatio</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">item</span><span class=\"nf\">.</span><span class=\"nv\">width</span><span class=\"w\"> </span><span class=\"nf\">/</span><span class=\"w\"> </span><span class=\"nv\">item</span><span class=\"nf\">.</span><span class=\"nv\">height</span>\n<span class=\"w\">        </span><span class=\"nf\">...</span>\n<span class=\"w\">    </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">ListWasEmpty</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nv\">row</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"nv\">items</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">map</span><span class=\"w\"> </span><span class=\"nv\">currentRowItems</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">galleryItem</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">{},</span><span class=\"w\"> </span><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"kt\">Produces</span><span class=\"w\"> </span><span class=\"nv\">layout</span><span class=\"w\"> </span><span class=\"nv\">items</span><span class=\"w\"> </span><span class=\"nv\">from</span><span class=\"w\"> </span><span class=\"nv\">gallery</span><span class=\"w\"> </span><span class=\"nv\">items</span><span class=\"nf\">.</span>\n<span class=\"w\">                </span><span class=\"nv\">offsetY</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"nv\">height</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"nv\">targetRowHeight</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"nv\">width</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"nv\">headings</span>\n<span class=\"w\">            </span><span class=\"p\">},</span>\n<span class=\"w\">            </span><span class=\"nv\">removedItems</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nv\">remainingItems</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 452203490,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721254945
    },
    {
        "content": "<p>Thanks so much.</p>",
        "id": 452203822,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721255160
    }
]