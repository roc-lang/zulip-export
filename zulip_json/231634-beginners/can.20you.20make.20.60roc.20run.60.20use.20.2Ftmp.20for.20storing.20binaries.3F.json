[
    {
        "content": "<p>I'm not a fan of using the disk in a case like this</p>",
        "id": 451420404,
        "sender_full_name": "Daniele Parisi",
        "timestamp": 1721025029
    },
    {
        "content": "<p>I think we have a few options:</p>\n<ol>\n<li><code>.roc_cache</code> (either global or local)</li>\n<li>Somewhere in <code>/tmp</code></li>\n<li>Keep it totally in memory and never write to disk.</li>\n</ol>\n<p>But yeah, run probably shouldn't make a visible artifact if it still does.</p>",
        "id": 451423118,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721026296
    },
    {
        "content": "<p>Yeah, Richard just <a href=\"#narrow/stream/304641-ideas/topic/Roc.20cli.20workflow/near/451025086\">proposed</a> to change this to \"This builds the foo.roc application into a binary in a tempdir (or in memory on Linux) and runs it.\"</p>",
        "id": 451470405,
        "sender_full_name": "Anton",
        "timestamp": 1721041342
    },
    {
        "content": "<p>yeah I think we should:</p>\n<ul>\n<li>on Linux, run it from memory (Linux is the only OS with reasonable support for this)</li>\n<li>on macOS and Windows, build it to an os tempdir and run it from there</li>\n</ul>",
        "id": 451473519,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1721042394
    },
    {
        "content": "<p>on macOS we probably have to keep the file descriptor to the executable open and then unlink it before running it, because if we're doing <code>execvp</code> to have the running program take over the <code>roc</code> process, then we won't have a chance to clean it up afterwards ourselves</p>",
        "id": 451473839,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1721042489
    }
]