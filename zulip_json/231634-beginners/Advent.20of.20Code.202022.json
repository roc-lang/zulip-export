[
    {
        "content": "<p>hello, I'm new here but I'm around for a while now, I was looking to find a good and new function programming language that give the possiblity to me to give a shoit with functional languages aftet the bad experience in College.</p>\n<p>I found Roc, and I said why not contribute in a functional programming language? <span aria-label=\"smug cat\" class=\"emoji emoji-1f63c\" role=\"img\" title=\"smug cat\">:smug_cat:</span> shoudl be fun, but before I would like to use for a bit the language</p>\n<p>So I was thinking to start the Advent of Code 2022 with roc and build a reall appp that take the command line input and run the problem by loading the file with the input.</p>\n<p>There is some suggestion on what kind of resource start to make my onborading less painfull?</p>\n<p>Thanks!</p>",
        "id": 312272202,
        "sender_full_name": "Vincenzo Palazzo (vincenzopalazzo)",
        "timestamp": 1669420174
    },
    {
        "content": "<p>Have you been through the new <a href=\"https://www.roc-lang.org/tutorial\">tutorial</a> yet? I found that really helpful. Also looking at the examples, and the docs for the <a href=\"https://www.roc-lang.org/builtins/List\">builtins</a> which is basically the std library. <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span></p>",
        "id": 312277913,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1669422840
    },
    {
        "content": "<p>another Roc beginner (but Elm veteran) here thinking about AoC 2022</p>",
        "id": 313204020,
        "sender_full_name": "cmart",
        "timestamp": 1669870433
    },
    {
        "content": "<p>Welcome <span class=\"user-mention\" data-user-id=\"569397\">@cmart</span>, if your open to sharing your work I would be keen to borroe any ideas you have. I'm new to Roc too. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 313208897,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1669874133
    },
    {
        "content": "<p>happy to share <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span>, I'll prob get started on each day 2-3 hours before the next day.. midnight EST is 10 PM here but still bedtime</p>",
        "id": 313319918,
        "sender_full_name": "cmart",
        "timestamp": 1669912345
    },
    {
        "content": "<p>Anyone made progress on the str to int parsing? I keep getting seg faults or compiler crashes, but I feel like I'm super close.</p>",
        "id": 313325261,
        "sender_full_name": "JesterXL",
        "timestamp": 1669913793
    },
    {
        "content": "<p>Oh wait, I think I got it. You just ... have to be careful, lol</p>",
        "id": 313326852,
        "sender_full_name": "JesterXL",
        "timestamp": 1669914213
    },
    {
        "content": "<p>\"careful\" === try various ways</p>",
        "id": 313326886,
        "sender_full_name": "JesterXL",
        "timestamp": 1669914222
    },
    {
        "content": "<p>BOOYA, right answer on first try, with NO type annotations... go Roc!</p>",
        "id": 313328705,
        "sender_full_name": "JesterXL",
        "timestamp": 1669914638
    },
    {
        "content": "<p>(I know, I know... I shouldn't brag about no annotations, but that's just rad, man...)</p>",
        "id": 313328752,
        "sender_full_name": "JesterXL",
        "timestamp": 1669914660
    },
    {
        "content": "<p>BOOOOYAA X2, correct answer 1st try on Day 1 Challenge 2. Roc makes this so dang easy. (famous last words from a guy who never makes it past day 7)</p>",
        "id": 313330892,
        "sender_full_name": "JesterXL",
        "timestamp": 1669915210
    },
    {
        "content": "<p>Code if y'all interested, and yes, please judge harshly, I'm learning this, coming from Elm:</p>",
        "id": 313330964,
        "sender_full_name": "JesterXL",
        "timestamp": 1669915232
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">app</span><span class=\"w\"> </span><span class=\"s\">\"AoC Day 1\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nv\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">pf</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.1.1/zAoiC9xtQPHywYk350_b7ust04BmWLW00sjb9ZPtSQk.tar.br\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nv\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">pf</span><span class=\"nf\">.</span><span class=\"kt\">Stdout</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nv\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nv\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">pf</span><span class=\"w\"></span>\n\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"kt\">Attempt</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"mi\">70374</span><span class=\"w\"> </span><span class=\"c1\">-- right answer!</span><span class=\"w\"></span>\n\n\n<span class=\"kr\">main </span><span class=\"nf\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nv\">dbg</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">inputLarge</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"nv\">part2</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"w\"> </span><span class=\"s\">\"yay\"</span><span class=\"w\"></span>\n\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"nv\">part1</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">input</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"err\">#</span><span class=\"w\">     </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">split</span><span class=\"w\"> </span><span class=\"nv\">input</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"w\"></span>\n<span class=\"err\">#</span><span class=\"w\">     </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"nv\">groupCalories</span><span class=\"w\"></span>\n<span class=\"err\">#</span><span class=\"w\">     </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">map</span><span class=\"w\"> </span><span class=\"nv\">sumCalorieStrings</span><span class=\"w\"></span>\n<span class=\"err\">#</span><span class=\"w\">     </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">max</span><span class=\"w\"></span>\n\n<span class=\"nv\">part2</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">input</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">split</span><span class=\"w\"> </span><span class=\"nv\">input</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"nv\">groupCalories</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">map</span><span class=\"w\"> </span><span class=\"nv\">sumCalorieStrings</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">sortDesc</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">sublist</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">start</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">len</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">sum</span><span class=\"w\"></span>\n\n<span class=\"nv\">sumCalorieStrings</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">listOfStr</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">walk</span><span class=\"w\"> </span><span class=\"nv\">listOfStr</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">state</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">elem</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">toNat</span><span class=\"w\"> </span><span class=\"nv\">elem</span><span class=\"w\"> </span><span class=\"nv\">is</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">value</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"nv\">value</span><span class=\"w\"> </span><span class=\"nf\">+</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"nv\">state</span><span class=\"w\"></span>\n\n<span class=\"nv\">groupCalories</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">calories</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">walk</span><span class=\"w\"> </span><span class=\"nv\">calories</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">elves</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nv\">staging</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">state</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">elem</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"nv\">elem</span><span class=\"w\"> </span><span class=\"nf\">==</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"w\"> </span><span class=\"kr\">then</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"w\"> </span><span class=\"err\">&amp;</span><span class=\"w\"> </span><span class=\"nv\">elves</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">append</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"nf\">.</span><span class=\"nv\">elves</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"nf\">.</span><span class=\"nv\">staging</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">staging</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kr\">else</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"w\"> </span><span class=\"err\">&amp;</span><span class=\"w\"> </span><span class=\"nv\">staging</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">append</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"nf\">.</span><span class=\"nv\">staging</span><span class=\"w\"> </span><span class=\"nv\">elem</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">state</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"w\"> </span><span class=\"err\">&amp;</span><span class=\"w\"> </span><span class=\"nv\">elves</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">append</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"nf\">.</span><span class=\"nv\">elves</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"nf\">.</span><span class=\"nv\">staging</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">staging</span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"nf\">.</span><span class=\"nv\">elves</span><span class=\"w\"></span>\n\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"nv\">inputSmall</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"w\"></span>\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"nv\">inputSmall</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"></span>\n<span class=\"err\">#</span><span class=\"w\">     </span><span class=\"s\">\"\"\"6750</span>\n<span class=\"s\">#     6538</span>\n<span class=\"s\">#     5292</span>\n<span class=\"s\">#     4635</span>\n<span class=\"s\">#     6855</span>\n<span class=\"s\">#     4137</span>\n<span class=\"s\">#     3840</span>\n<span class=\"s\">#     4691</span>\n<span class=\"s\">#     1633</span>\n<span class=\"s\">#     6008</span>\n<span class=\"s\">#     2447</span>\n<span class=\"s\">#     1448</span>\n<span class=\"s\">#     4061</span>\n\n<span class=\"s\">#     4261</span>\n<span class=\"s\">#     6778</span>\n<span class=\"s\">#     1531</span>\n<span class=\"s\">#     2914</span>\n<span class=\"s\">#     2102</span>\n<span class=\"s\">#     4098</span>\n<span class=\"s\">#     2451</span>\n<span class=\"s\">#     1219</span>\n<span class=\"s\">#     6488</span>\n<span class=\"s\">#     3941</span>\n<span class=\"s\">#     2158</span>\n\n<span class=\"s\">#     9058</span>\n<span class=\"s\">#     3441</span>\n<span class=\"s\">#     9318</span>\n<span class=\"s\">#     1976</span>\n<span class=\"s\">#     6115</span>\n<span class=\"s\">#     9451</span>\n<span class=\"s\">#     10090</span>\n<span class=\"s\">#     5850\"\"\"</span><span class=\"w\"></span>\n\n<span class=\"nv\">inputLarge</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"w\"></span>\n<span class=\"nv\">inputLarge</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s\">\"\"\"6750</span>\n<span class=\"s\">    6538</span>\n<span class=\"s\">    5292</span>\n<span class=\"s\">    4635</span>\n<span class=\"s\">    6855</span>\n<span class=\"s\">    4137</span>\n<span class=\"s\">    3840</span>\n<span class=\"s\">    4691</span>\n<span class=\"s\">    1633</span>\n<span class=\"s\">    6008</span>\n<span class=\"s\">    2447</span>\n<span class=\"s\">    1448</span>\n<span class=\"s\">    4061</span>\n\n<span class=\"s\">    4261</span>\n<span class=\"s\">    6778</span>\n<span class=\"s\">    1531</span>\n<span class=\"s\">    2914</span>\n<span class=\"s\">    2102</span>\n<span class=\"s\">    4098</span>\n<span class=\"s\">    2451</span>\n<span class=\"s\">    1219</span>\n<span class=\"s\">    6488</span>\n<span class=\"s\">    ...\"\"\"</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 313331154,
        "sender_full_name": "JesterXL",
        "timestamp": 1669915299
    },
    {
        "content": "<p>Just a note for anyone interested in advent of code. There is a dedicated <a class=\"stream\" data-stream-id=\"358903\" href=\"/#narrow/stream/358903-Advent-of-Code\">#Advent of Code</a> stream. Especially for answers, it is probably the better place to post them. And general discuss there is a good idea as well.</p>",
        "id": 313332792,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1669915733
    },
    {
        "content": "<p>7 years of typing \\state elem and Roc's all like \"Don't you mean \\state, elem?\"<br>\nYes Roc... just... give me a bit to adjust, geez.</p>",
        "id": 313819116,
        "sender_full_name": "JesterXL",
        "timestamp": 1670165489
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"529266\">Vincenzo Palazzo (vincenzopalazzo)</span> has marked this topic as resolved.</p>",
        "id": 313837483,
        "sender_full_name": "Notification Bot",
        "timestamp": 1670175378
    },
    {
        "content": "<p>I think I found a kind of weird crashing behavior in my bad version of part 2 of day 3. Gist here <a href=\"https://gist.github.com/perkee/424743527fe41adb7ea39eb6f4b06cfc\">https://gist.github.com/perkee/424743527fe41adb7ea39eb6f4b06cfc</a> in a few words: I use a pattern match to get the head of a list or crash on empty. Some patterns make the program succeed when it ought not to.</p>",
        "id": 313856065,
        "sender_full_name": "Alex Perkins",
        "timestamp": 1670188361
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"570066\">Alex Perkins</span> has marked this topic as unresolved.</p>",
        "id": 313856074,
        "sender_full_name": "Notification Bot",
        "timestamp": 1670188370
    },
    {
        "content": "<p>Thanks for the report! I can reproduce the first bug - with</p>\n<div class=\"codehilite\"><pre><span></span><code>gimme : List a -&gt; a\ngimme = \\l -&gt;\n    when l is\n        [x] -&gt; x\n        [_, ..] -&gt; crash &quot;gimme can fail with many?&quot; # somewhat redundant with [x] I realize\n</code></pre></div>\n<p>if you pass a list with more than one element it will return the value of the first element when it should crash</p>\n<p>I can't reproduce the other two though, they either succeed with one-element lists or panic with &gt;=2 element lists. Are you sure you are passing one-element lists in the second two cases?</p>",
        "id": 313860229,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1670191991
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"454654\">Ayaz Hafiz</span> <a href=\"#narrow/stream/231634-beginners/topic/Advent.20of.20Code.202022/near/313860229\">said</a>:</p>\n<blockquote>\n<p>I can't reproduce the other two though, they either succeed with one-element lists or panic with &gt;=2 element lists. Are you sure you are passing one-element lists in the second two cases?</p>\n</blockquote>\n<p>I'm not actually sure what I'm passing is the problem, sorry. Obviously it's not a list with one element or I'd be getting the right answer for the question (which I got a while  back in Javascript). I'm going to try to peel this back a little bit and see if I can't figure out  what I do have in that value. I provided the second two examples of <code>gimme</code> because they work as expected, and it seems like the first should throw but does not.</p>",
        "id": 313867669,
        "sender_full_name": "Alex Perkins",
        "timestamp": 1670198390
    },
    {
        "content": "<p>Thanks for all of your hard work on this language <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> this is a lot of fun!! Also sorry if I'm posting in the wrong spot; I'll try to familiarize myself with Zulip a bit more, just figured I should get the example in here quickly. Also for what it's worth I was able to solve AoC Day 3 in Roc by instead passing three sets in a record rather than in a list.</p>",
        "id": 313867899,
        "sender_full_name": "Alex Perkins",
        "timestamp": 1670198518
    },
    {
        "content": "<p>Thank you for reporting the bug, please let is know if you see any others! I'll try to get to addressing it tomorrow.</p>",
        "id": 313868286,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1670198857
    },
    {
        "content": "<p>tiny update: it was definitely a list of many Int Unsigned32. Odd. Turns out my implementation of a function intersecting all the sets in a list was bad.</p>",
        "id": 313882519,
        "sender_full_name": "Alex Perkins",
        "timestamp": 1670211893
    }
]