[
    {
        "content": "<p>Hey Y'all, I'm just getting started with Roc and thought that implementing some classic sorting algorithms would be an interesting exercise.</p>\n<p>Here's my code: <a href=\"https://gist.github.com/mulias/c8920302f5bb63dbc922e8914420dfc8\">https://gist.github.com/mulias/c8920302f5bb63dbc922e8914420dfc8</a></p>\n<p><code>slowQuicksort</code> is working fine, it partitions the list into sublists then joins them back up recursively. </p>\n<p><code>fastQuicksort</code> (quickersort?) passing around the full list and operates on sublists by index, under the theory that the compiler will optimize the<code>List.swap</code>s and get similar performance to an imperative solution.</p>\n<p>In practice I can't get the code to compile on my machine. It seems to hang and eats up a bunch of memory. If I comment out the <code>fastQuicksort</code> code it works again.</p>\n<p>How do I start debugging this kind of issue?</p>",
        "id": 369042347,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1687563331
    },
    {
        "content": "<p>I think you hit a compiler bug, not sure how exactly, but it seems related to the <code>List.walkFromUntil</code> in partition.</p>",
        "id": 369046341,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687565748
    },
    {
        "content": "<p>At least that gives us a relatively small repro</p>",
        "id": 369046435,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687565779
    },
    {
        "content": "<p>So definitely a roc bug that we don't give you an error and just hang, but the root cause of the issue is the function passed to <code>List.walkFromUntil</code>.</p>",
        "id": 369047886,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687566536
    },
    {
        "content": "<p>The value returned from <code>Break</code> needs to match the value used in <code>Continue</code></p>",
        "id": 369047922,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687566555
    },
    {
        "content": "<p>they both have the same type variable, namely <code>state</code></p>",
        "id": 369047939,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687566571
    },
    {
        "content": "<p>This is because <code>Break</code> is not guaranteed to get hit. If you use of the entire list and never hit a <code>Break</code>, the last state from <code>Continue</code> will be returned.</p>",
        "id": 369048088,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687566644
    },
    {
        "content": "<p>So, not saying this is correct at all, but it compiles:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nx\">outI</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">outList</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">                </span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">walkFromUntil</span><span class=\"w\"> </span><span class=\"nx\">list</span><span class=\"w\"> </span><span class=\"nx\">start</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">firstPivotIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">firstIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">list</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"p\">(</span><span class=\"nx\">pivotIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">index</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">listAcc</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"nx\">elem</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">                    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"nx\">index</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"nx\">end</span><span class=\"w\"> </span><span class=\"k\">then</span>\n<span class=\"w\">                        </span><span class=\"nv\">finalPivotIndex</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">pivotIndex</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"w\">                        </span><span class=\"nx\">Break</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">firstPivotIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">index</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">swap</span><span class=\"w\"> </span><span class=\"nx\">listAcc</span><span class=\"w\"> </span><span class=\"nx\">start</span><span class=\"w\"> </span><span class=\"nx\">firstPivotIndex</span><span class=\"p\">)</span>\n<span class=\"w\">                    </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"nx\">compare</span><span class=\"w\"> </span><span class=\"nx\">elem</span><span class=\"w\"> </span><span class=\"nx\">pivot</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nx\">LT</span><span class=\"w\"> </span><span class=\"k\">then</span>\n<span class=\"w\">                        </span><span class=\"nx\">Continue</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">pivotIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">index</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">listAcc</span><span class=\"p\">)</span>\n<span class=\"w\">                    </span><span class=\"k\">else</span>\n<span class=\"w\">                        </span><span class=\"nx\">Continue</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">pivotIndex</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">index</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">swap</span><span class=\"w\"> </span><span class=\"nx\">listAcc</span><span class=\"w\"> </span><span class=\"nx\">pivotIndex</span><span class=\"w\"> </span><span class=\"nx\">index</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"nx\">outI</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">outList</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 369048166,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687566693
    },
    {
        "content": "<p>Hopefully that unblocks you.</p>",
        "id": 369048179,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687566705
    },
    {
        "content": "<p>I'll file an issue for the hang since it is easy to repro.</p>",
        "id": 369048200,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687566718
    },
    {
        "content": "<p>filed <a href=\"https://github.com/roc-lang/roc/issues/5595\">#5595</a></p>",
        "id": 369048597,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687566904
    },
    {
        "content": "<p>That makes sense, thank you! I'm also not confident it's correct, but being able to compile will definitely help.</p>",
        "id": 369052017,
        "sender_full_name": "Elias Mulhall",
        "timestamp": 1687568196
    }
]