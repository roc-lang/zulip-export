[
    {
        "content": "<p>Do we have anything written down about how Roc stores tags and records in memory? I'm debugging some Rust platform structs, unions, and enums, and I'm starting to get lost in a guess-and-check approach to which bytes store what. I could post snippets and errors, but I want to start by making sure I've read everything I need to know.</p>",
        "id": 486617833,
        "sender_full_name": "jan kili",
        "timestamp": 1733533553
    },
    {
        "content": "<p>For example, I'm refactoring some code I copied from someone else that does a lot of</p>\n<div class=\"codehilite\"><pre><span></span><code>unsafe {\n    let bytes = core::mem::transmute::&lt;&amp;Self, &amp;[u8; core::mem::size_of::&lt;Self&gt;()]&gt;(self);\n    core::mem::transmute::&lt;u8, FooTagRepresentationDiscriminant&gt;(*bytes.as_ptr().add(2));\n}\n</code></pre></div>\n<p>and my <code>main</code>'s return value is sometimes filled with random bits (seemingly leftover from other programs), sometimes requesting exabytes of storage.</p>",
        "id": 486618264,
        "sender_full_name": "jan kili",
        "timestamp": 1733533912
    },
    {
        "content": "<p>I'm also curious if it's considered best practice to represent a Roc tag with a Rust struct+union instead of a Rust enum, since enum seems simpler if I could find a way to map the memory properly.</p>",
        "id": 486618391,
        "sender_full_name": "jan kili",
        "timestamp": 1733534012
    },
    {
        "content": "<p>I highly recommend using <code>RustGlue.roc</code> and generating any glue you need to interface with roc</p>",
        "id": 486618671,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733534258
    },
    {
        "content": "<p>Ooh, what's that and how do I use it?</p>",
        "id": 486618761,
        "sender_full_name": "jan kili",
        "timestamp": 1733534307
    },
    {
        "content": "<p>So far I've been refactoring that copied Rust code by hand.</p>",
        "id": 486618797,
        "sender_full_name": "jan kili",
        "timestamp": 1733534346
    },
    {
        "content": "<p>If you run </p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc glue ../roc/crates/glue/src/RustGlue.roc generated platform/main.roc\n</code></pre></div>\n<p>In the roc-on-simple repo you will see it generates all the glue rust code for the platform in the <code>generated/</code> folder</p>",
        "id": 486618886,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733534407
    },
    {
        "content": "<p>I used that, and copy pasted bits and then cleaned it up by hand (for aesthetic reasons mostly and removing unneeded stuff) for the example</p>",
        "id": 486618935,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733534453
    },
    {
        "content": "<p>Ah, so it's a script that lives in the roc-lang/roc repo?</p>",
        "id": 486618941,
        "sender_full_name": "jan kili",
        "timestamp": 1733534464
    },
    {
        "content": "<p>I've never run the <code>roc glue</code> subcommand before - I'll read the docs for that too.</p>",
        "id": 486618959,
        "sender_full_name": "jan kili",
        "timestamp": 1733534491
    },
    {
        "content": "<p>Yeah, a plugin that the roc compiler uses to generate code. You give the script to the subcommand <code>roc glue</code>, the compiler will parse the platform and provide the types to the script which it then uses to generate the rust code. </p>\n<p>In future we'll have a script that generated C, Zig, Go etc... but they are being worked on in various states of development</p>",
        "id": 486619042,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733534553
    },
    {
        "content": "<p>Is this considered a key toolkit for platform developers? Where in the docs should this recommendation live? Control+F yields no results for \"glue\" in the tutorial or platform dev doc webpages.</p>",
        "id": 486619062,
        "sender_full_name": "jan kili",
        "timestamp": 1733534579
    },
    {
        "content": "<p>It should probably live here I think <a href=\"https://www.roc-lang.org/docs#language-reference\">https://www.roc-lang.org/docs#language-reference</a> in some kind of guide</p>",
        "id": 486619095,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733534615
    },
    {
        "content": "<p>But, the platform dev stuff is still heavily in flux, so it's not something we have prioritised</p>",
        "id": 486619153,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733534643
    },
    {
        "content": "<p>Sweet, I'll open an issue to document it, if that issue doesn't already exist.</p>",
        "id": 486619183,
        "sender_full_name": "jan kili",
        "timestamp": 1733534665
    },
    {
        "content": "<p>I created <a href=\"https://github.com/roc-lang/roc/issues/7315\">https://github.com/roc-lang/roc/issues/7315</a></p>",
        "id": 486619311,
        "sender_full_name": "jan kili",
        "timestamp": 1733534775
    },
    {
        "content": "<p>Some important things off the top of my head </p>\n<ol>\n<li>modernise <code>expect</code> to use a host provided function</li>\n<li>remove shared memory infrastructure</li>\n<li>passed in allocators</li>\n<li>keep <code>dbg</code>'s and <code>expect</code>'s in with <code>build --no-link</code></li>\n<li>effect interpreters</li>\n<li>reliable RustGlue.roc generation for entrypoints</li>\n</ol>",
        "id": 486619327,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733534792
    },
    {
        "content": "<p>These are higher priorities? Or things I should add to the issue? Or steps I should follow?</p>",
        "id": 486619371,
        "sender_full_name": "jan kili",
        "timestamp": 1733534850
    },
    {
        "content": "<p>I think the next big upgrade will be landing the LLVM / Zig upgrade.</p>",
        "id": 486619387,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733534878
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> <a href=\"#narrow/channel/231634-beginners/topic/Memory.20layout.20for.20tags.20.26.20records/near/486619371\">said</a>:</p>\n<blockquote>\n<p>These are higher priorities? Or things I should add to the issue? Or steps I should follow?</p>\n</blockquote>\n<p>Just things in the pipeline, on the road to having a sensible platform development experience</p>",
        "id": 486619441,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733534902
    },
    {
        "content": "<p>At the moment platform authors have to do some strange things to workaround these issues.</p>",
        "id": 486619463,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733534927
    },
    {
        "content": "<p>I'm hoping that once I get one complex nested return value working, I can live in .roc land again.</p>",
        "id": 486619559,
        "sender_full_name": "jan kili",
        "timestamp": 1733535003
    },
    {
        "content": "<p>I wouldn't encourage people to build platforms at the moment unless they are comfortable working with things that are WIP and in flux</p>",
        "id": 486619568,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733535005
    },
    {
        "content": "<p>If I don't want to do more than day or two of development around memory management, would you recommend pivoting from a \"nested return value\" approach to a \".json files on disk are my Roc-Rust communication protocol\" approach?</p>",
        "id": 486619750,
        "sender_full_name": "jan kili",
        "timestamp": 1733535149
    },
    {
        "content": "<p>First thought after running <code>roc glue</code> ohhh I wonder if I've been refactoring code that was generated for a different system architecture than my laptop...</p>",
        "id": 486620632,
        "sender_full_name": "jan kili",
        "timestamp": 1733535748
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/231634-beginners/topic/Memory.20layout.20for.20tags.20.26.20records/near/486619327\">said</a>:</p>\n<blockquote>\n<ol start=\"5\">\n<li>effect interpreters</li>\n</ol>\n</blockquote>\n<p>I'd say this one is off the priority list and on the \"open design question as to whether we should still do it\" list <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 486620969,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1733535995
    },
    {
        "content": "<p>Okay. Since I'm okay with flux but still a Rustling, does that mean y'all do recommend I use JSON files as my Roc-Rust interface?</p>",
        "id": 486622181,
        "sender_full_name": "jan kili",
        "timestamp": 1733537044
    },
    {
        "content": "<p>Btw <code>roc glue</code> seems to be working well so far - now debugging why <code>const _SIZE_CHECK_union_Timing: () = assert!(core::mem::size_of::&lt;union_Timing&gt;() == 4);</code> is erroring.</p>",
        "id": 486622227,
        "sender_full_name": "jan kili",
        "timestamp": 1733537123
    },
    {
        "content": "<p>I feel like my primary obstacle at the point is not knowing what I don't know, for which I don't see a clear unblocker that doesn't include calling for help in Zulip every day :/</p>",
        "id": 486622375,
        "sender_full_name": "jan kili",
        "timestamp": 1733537252
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> <a href=\"#narrow/channel/231634-beginners/topic/Memory.20layout.20for.20tags.20.26.20records/near/486622227\">said</a>:</p>\n<blockquote>\n<p>Btw <code>roc glue</code> seems to be working well so far - now debugging why <code>const _SIZE_CHECK_union_Timing: () = assert!(core::mem::size_of::&lt;union_Timing&gt;() == 4);</code> is erroring.</p>\n</blockquote>\n<p>This is a known issue. The generated code is just wrong. See <a href=\"https://github.com/roc-lang/roc/issues/6012\">https://github.com/roc-lang/roc/issues/6012</a></p>",
        "id": 486622379,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733537256
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> <a href=\"#narrow/channel/231634-beginners/topic/Memory.20layout.20for.20tags.20.26.20records/near/486622181\">said</a>:</p>\n<blockquote>\n<p>Okay. Since I'm okay with flux but still a Rustling, does that mean y'all do recommend I use JSON files as my Roc-Rust interface?</p>\n</blockquote>\n<p>To be clear, I'm asking this question earnestly - it seems like a sad but viable alternate path.</p>",
        "id": 486622596,
        "sender_full_name": "jan kili",
        "timestamp": 1733537437
    },
    {
        "content": "<p>Is the roc-on simple not what you needed?</p>",
        "id": 486622634,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733537471
    },
    {
        "content": "<p>I wouldn't recommend JSON, we have nice things. I'm happy to help you get the API right</p>",
        "id": 486622645,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733537489
    },
    {
        "content": "<p>It looks like exactly what I need, I'm just getting what seems like random memory access lol</p>",
        "id": 486622717,
        "sender_full_name": "jan kili",
        "timestamp": 1733537527
    },
    {
        "content": "<p>Once we have the glue and entrypoints sorted, that's all the messy unsafe and FFI stuff out of the way and Rust is pretty nice and high level to work with</p>",
        "id": 486622722,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733537530
    },
    {
        "content": "<p>Sweet, want me to DM you for a synchronous session?</p>",
        "id": 486622760,
        "sender_full_name": "jan kili",
        "timestamp": 1733537586
    },
    {
        "content": "<blockquote>\n<p>I'm just getting what seems like random memory access </p>\n</blockquote>\n<p>Can you share a commit?</p>",
        "id": 486622761,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733537588
    },
    {
        "content": "<p>Happily!</p>",
        "id": 486622766,
        "sender_full_name": "jan kili",
        "timestamp": 1733537593
    },
    {
        "content": "<p>Also, was that glue code you sent me arch-agnostic?</p>",
        "id": 486622796,
        "sender_full_name": "jan kili",
        "timestamp": 1733537636
    },
    {
        "content": "<p>With this script <a href=\"https://gitlab.com/JanCVanB/roc-on/-/blob/5ee69ed8b24b7ef2311bdd3519fa7dbb042ab140/examples/memory_testing.roc\">https://gitlab.com/JanCVanB/roc-on/-/blob/5ee69ed8b24b7ef2311bdd3519fa7dbb042ab140/examples/memory_testing.roc</a><br>\nand some injected <code>println</code>s, I get inconsistent output like this</p>\n<div class=\"codehilite\"><pre><span></span><code>[jan@framey roc-on]$ roc examples/memory_testing.roc\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\nroc  format = Format::SingleTrack\nTiming size_of = 4\nTiming bytes   = [243, 56, 123, 85]\nTiming as_ptr  = 243\nTiming as_ptr  = 243\nTiming .add(2) = 123\nTimingDiscrimi = discriminant_Timing::Timecode\nroc  t d    = discriminant_Timing::Timecode\nroc  t pl m = 21883\nroc  t pl t = TimingTimecode { f0: upgradeupgrade-i, f1: 85 }\nrust format = Parallel\nrust timing = Timecode(Selec, 86)\n[jan@framey roc-on]$\n[jan@framey roc-on]$\n[jan@framey roc-on]$\n[jan@framey roc-on]$ roc examples/memory_testing.roc\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\nroc  format = Format::SingleTrack\nTiming size_of = 4\nTiming bytes   = [35, 125, 183, 85]\nTiming as_ptr  = 35\nTiming as_ptr  = 35\nTiming .add(2) = 183\nTimingDiscrimi = discriminant_Timing::Timecode\nroc  t d    = discriminant_Timing::Timecode\nroc  t pl m = 21943\nroc  t pl t = TimingTimecode { f0: SelectedDifferen, f1: 85 }\nrust format = Parallel\nrust timing = Timecode(Unkno, 85)\n[jan@framey roc-on]$\n</code></pre></div>\n<p>In particular, I'm looking at the mis-mapping of</p>\n<div class=\"codehilite\"><pre><span></span><code>roc  format = Format::SingleTrack\n...\nrust format = Parallel\n</code></pre></div>\n<p>and the flakiness of</p>\n<div class=\"codehilite\"><pre><span></span><code>rust timing = Timecode(Selec, 86)\nrust timing = Timecode(Unkno, 85)\n</code></pre></div>",
        "id": 486622996,
        "sender_full_name": "jan kili",
        "timestamp": 1733537773
    },
    {
        "content": "<p>My refactoring included renaming things, reordering struct field order, and other housekeeping things like that. I'm happy to revert any of that, if the glue code really doesn't like being touched.</p>",
        "id": 486623153,
        "sender_full_name": "jan kili",
        "timestamp": 1733537910
    },
    {
        "content": "<p>Even with original struct field order, though, it seemed to have random noise.</p>",
        "id": 486623172,
        "sender_full_name": "jan kili",
        "timestamp": 1733537935
    },
    {
        "content": "<p>At a higher level, though, I'm still curious why we use struct+union instead of enum to represent a tag - enum seems safer.</p>",
        "id": 486623200,
        "sender_full_name": "jan kili",
        "timestamp": 1733537969
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> <a href=\"#narrow/channel/231634-beginners/topic/Memory.20layout.20for.20tags.20.26.20records/near/486622796\">said</a>:</p>\n<blockquote>\n<p>Also, was that glue code you sent me arch-agnostic?</p>\n</blockquote>\n<p>Should be I think</p>",
        "id": 486623302,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538041
    },
    {
        "content": "<p>Maybe not WASM ... <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 486623334,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538073
    },
    {
        "content": "<blockquote>\n<p>reordering struct field order</p>\n</blockquote>\n<p>You can't change the structs like this as the ordering has to match what Roc uses</p>",
        "id": 486623417,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538141
    },
    {
        "content": "<p>If it would make it easier to keep up with glue pattern updates, I'm happy to have a script generate (and patch with grep/sed) the glue code and just leave it as-is.</p>",
        "id": 486623429,
        "sender_full_name": "jan kili",
        "timestamp": 1733538158
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/231634-beginners/topic/Memory.20layout.20for.20tags.20.26.20records/near/486623417\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>reordering struct field order</p>\n</blockquote>\n<p>You can't change the structs like this as the ordering has to match what Roc uses</p>\n</blockquote>\n<p>Heard. Is Roc's ordering written down somewhere?</p>",
        "id": 486623444,
        "sender_full_name": "jan kili",
        "timestamp": 1733538178
    },
    {
        "content": "<p>It's alignment, then alphabetical.</p>",
        "id": 486623461,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538192
    },
    {
        "content": "<p>Best just to use RustGlue and not change the order or size of things</p>",
        "id": 486623471,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538205
    },
    {
        "content": "<p><code>alpha_sort(\"alignment\") &lt; alpha_sort(\"alphabetical\") == true</code> <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span></p>",
        "id": 486623540,
        "sender_full_name": "jan kili",
        "timestamp": 1733538251
    },
    {
        "content": "<p>Sweet. I'll continue down the path of regenerating all of this with <code>roc glue ...</code> and hopefully finding sed-based fixes for every error that pops up.</p>",
        "id": 486623575,
        "sender_full_name": "jan kili",
        "timestamp": 1733538305
    },
    {
        "content": "<p>for hashtag declarative programming</p>",
        "id": 486623595,
        "sender_full_name": "jan kili",
        "timestamp": 1733538329
    },
    {
        "content": "<p>I don't understand why you're not just using roc-on-simple?</p>",
        "id": 486623605,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538339
    },
    {
        "content": "<p>That was a working foundation, and then you can extend it</p>",
        "id": 486623612,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538349
    },
    {
        "content": "<p>Adding effects as you need them etc</p>",
        "id": 486623658,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538365
    },
    {
        "content": "<p>In what way, like subrepo? Copy/paste/donttouch?</p>",
        "id": 486623661,
        "sender_full_name": "jan kili",
        "timestamp": 1733538367
    },
    {
        "content": "<p>Copy-paste the whole thing</p>",
        "id": 486623666,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538376
    },
    {
        "content": "<p>I have to minimally adapt it for non-PI</p>",
        "id": 486623685,
        "sender_full_name": "jan kili",
        "timestamp": 1733538404
    },
    {
        "content": "<p>for compatibility with basic-cli foundation</p>",
        "id": 486623691,
        "sender_full_name": "jan kili",
        "timestamp": 1733538413
    },
    {
        "content": "<p>but I don't have to refactor as much as my first instinct was to</p>",
        "id": 486623708,
        "sender_full_name": "jan kili",
        "timestamp": 1733538424
    },
    {
        "content": "<p>I'll see if it works with only PI removal</p>",
        "id": 486623729,
        "sender_full_name": "jan kili",
        "timestamp": 1733538440
    },
    {
        "content": "<p>What do you need from basic-cli?</p>",
        "id": 486623750,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538471
    },
    {
        "content": "<p>It would be much easier to add that into roc-on-simple than to add the midi glue types into basic-cli. I specifically set up roc-on-simple in a way that avoids a lot of unneeded complexity around building the host. -- and gives you Windows, WASI support out of the box etc</p>",
        "id": 486623832,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538537
    },
    {
        "content": "<p>File IO, soon HTTP</p>",
        "id": 486623833,
        "sender_full_name": "jan kili",
        "timestamp": 1733538538
    },
    {
        "content": "<p>Ohhh I didn't realize you offered that code as a rebase target</p>",
        "id": 486623934,
        "sender_full_name": "jan kili",
        "timestamp": 1733538612
    },
    {
        "content": "<p>Ahk... I'll add a file <code>read!</code> and HTTP <code>send!</code> effect in for you as an example.</p>",
        "id": 486623936,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538613
    },
    {
        "content": "<p>Hmmm I'd rather base on something community-maintained</p>",
        "id": 486623961,
        "sender_full_name": "jan kili",
        "timestamp": 1733538630
    },
    {
        "content": "<p>I'm not sure what you mean about community maintained. Are you concerned about rust http library or reading files? That's mostly rust std library stuff</p>",
        "id": 486624121,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733538749
    },
    {
        "content": "<p>I basically just want to use basic-cli but also pass a complex value from Roc to Rust, so it doesn't make sense to me to start from scratch.</p>",
        "id": 486624268,
        "sender_full_name": "jan kili",
        "timestamp": 1733538886
    },
    {
        "content": "<p>If basic-cli supported an arbitrary return value, I'd never have thought to make my own platform in the first place.</p>",
        "id": 486624304,
        "sender_full_name": "jan kili",
        "timestamp": 1733538922
    },
    {
        "content": "<p>Well, maybe not true - I might've still decided to extend basic-cli to use the return value for the next steps.</p>",
        "id": 486624488,
        "sender_full_name": "jan kili",
        "timestamp": 1733539078
    },
    {
        "content": "<p>Regardless, I see platforms as large and complex, and it'd be nice to only have to edit my own little corner of one, while merging in features from the upstream foundation.</p>",
        "id": 486624586,
        "sender_full_name": "jan kili",
        "timestamp": 1733539141
    },
    {
        "content": "<p>I guess the challenge here is that basic-cli start up, calls into roc which runs through to completion and then exits.</p>",
        "id": 486624630,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733539186
    },
    {
        "content": "<p>Roc does various effects along the way.</p>",
        "id": 486624692,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733539208
    },
    {
        "content": "<p>Is that the same pattern you want for this? what API are you thinking of? </p>\n<div class=\"codehilite\"><pre><span></span><code>main : Task Smf [SomeErrors]\n\n# with PI\nmain! : {} =&gt; Result Smf [SomeErrors]\n</code></pre></div>\n<p>or similar?</p>",
        "id": 486624723,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733539245
    },
    {
        "content": "<p>Yeah, for now pretty much!</p>",
        "id": 486624771,
        "sender_full_name": "jan kili",
        "timestamp": 1733539319
    },
    {
        "content": "<p>Or maybe, you are thinking of adding a new custom effect to basic-cli, like <code>MIDI.send : Smf -&gt; Task {} {}</code>?</p>",
        "id": 486624818,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733539328
    },
    {
        "content": "<p>In the future, I hope for something long-running and interacting, receiving input streams and processing them into output streams</p>",
        "id": 486624848,
        "sender_full_name": "jan kili",
        "timestamp": 1733539375
    },
    {
        "content": "<p>What happens with the <code>Smf</code> thing once rust gets it?</p>",
        "id": 486624849,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733539376
    },
    {
        "content": "<p>but for now just Roc writes a MIDI file in memory, Rust receives that and both performs it and writes it to disk</p>",
        "id": 486624874,
        "sender_full_name": "jan kili",
        "timestamp": 1733539404
    },
    {
        "content": "<blockquote>\n<p>for now just Roc writes a MIDI file in memory, Rust receives that and both performs it and writes it to disk</p>\n</blockquote>\n<p>For this, I'd just fork basic-cli make a branch and add a single effect like <code>MIDI.doThing : Smf -&gt; Task {} {}</code>.</p>\n<blockquote>\n<p>In the future, I hope for something long-running and interacting, receiving input streams and processing them into output streams</p>\n</blockquote>\n<p>For this, you will want a custom platform like roc-on-simple</p>",
        "id": 486624983,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733539503
    },
    {
        "content": "<p>Oh, are you saying that it's easier to pass a complex data type in memory from Roc to Rust during an effect instead of at return time?</p>",
        "id": 486625101,
        "sender_full_name": "jan kili",
        "timestamp": 1733539593
    },
    {
        "content": "<p>Yes it's much easier. Your just writing a single function in rust <code>roc__fx_doThing(...)</code> instead of messing around with entrypoints and all that</p>",
        "id": 486625235,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733539692
    },
    {
        "content": "<p>The rust glue we wrote for <code>Smf</code> in roc-on-simple can be copied and pasted across and everything should just work <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>",
        "id": 486625280,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733539735
    },
    {
        "content": "<p>1sec I'll make a branch for you</p>",
        "id": 486625319,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733539780
    },
    {
        "content": "<p>Working on it right now, wait one min :)</p>",
        "id": 486625557,
        "sender_full_name": "jan kili",
        "timestamp": 1733539969
    },
    {
        "content": "<p>I've been alt tabbing for the last ten min</p>",
        "id": 486625563,
        "sender_full_name": "jan kili",
        "timestamp": 1733539976
    },
    {
        "content": "<p>Oh wait, nvm, for a return value copy/paste, not an effect</p>",
        "id": 486625583,
        "sender_full_name": "jan kili",
        "timestamp": 1733540006
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/231634-beginners/topic/Memory.20layout.20for.20tags.20.26.20records/near/486625235\">said</a>:</p>\n<blockquote>\n<p>Yes it's much easier. Your just writing a single function in rust <code>roc__fx_doThing(...)</code> instead of messing around with entrypoints and all that</p>\n</blockquote>\n<p>This is surprising and wonderful news!!!</p>",
        "id": 486625592,
        "sender_full_name": "jan kili",
        "timestamp": 1733540020
    },
    {
        "content": "<p>I expect the memory errors will be the same situation, though, so I shouldn't touch glue code.</p>",
        "id": 486625648,
        "sender_full_name": "jan kili",
        "timestamp": 1733540050
    },
    {
        "content": "<p>Alright, here's my minimal repro of some kinda memory bug:<br>\n<a href=\"https://gitlab.com/JanCVanB/roc-on/-/tree/return_smf_2\">https://gitlab.com/JanCVanB/roc-on/-/tree/return_smf_2</a></p>\n<div class=\"codehilite\"><pre><span></span><code>app [main] { rocOn: platform &quot;../platform/main.roc&quot; }\n\nmain =\n    Task.ok {\n        format: Parallel,\n        timing: Metrical 10,\n    }\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>[jan@framey roc-on]$ ./run_memory_test.sh\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\nINFO: Checking provided roc; executing `roc version`:\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\nroc nightly pre-release, built from commit d782542 on Mi 04 Dez 2024 09:02:14 UTC\nINFO: Getting the native operating system and architecture ...\nINFO: Building stubbed app shared library ...\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\n0 errors and 0 warnings found in 258 ms\n while successfully building:\n\n    platform/libapp.so\nINFO: Building rust host ...\nwarning: skipping duplicate package `host` found at `/home/jan/.cargo/git/checkouts/roc-f2007fde281427d6/8c73786/examples/cli/false-interpreter/platform`\nwarning: skipping duplicate package `host` found at `/home/jan/.cargo/git/checkouts/roc-f2007fde281427d6/8c73786/examples/glue/rust-platform`\nwarning: skipping duplicate package `host` found at `/home/jan/.cargo/git/checkouts/roc-f2007fde281427d6/8c73786/examples/platform-switching/rust-platform`\n    Finished `release` profile [optimized] target(s) in 0.08s\nINFO: Failed to get env var CARGO_BUILD_TARGET with error VarNotFound. Assuming default CARGO_BUILD_TARGET (native)...\nINFO: Moving the prebuilt binary from target/release/libhost.a to platform/linux-x64.a ...\nINFO: Preprocessing surgical host ...\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\nINFO: Successfully built platform files!\n\n\n\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\nroc  format   = Format::SingleTrack\nroc  timing m = 35456\nroc  timing t = TimingTimecode { f0: www-authenticate, f1: 138 }\nrust format   = Parallel\nrust timing   = Metrical(u15(2688))\n[jan@framey roc-on]$\n</code></pre></div>",
        "id": 486625980,
        "sender_full_name": "jan kili",
        "timestamp": 1733540361
    },
    {
        "content": "<p>This shouldn't have any refactoring nonsense in it, just minimal integration of roc-on-simple with roc-on. I'll double check that's correct...</p>",
        "id": 486626002,
        "sender_full_name": "jan kili",
        "timestamp": 1733540392
    },
    {
        "content": "<p>Confirmed - no struct field reordering or anything that seems memory-messy</p>",
        "id": 486626141,
        "sender_full_name": "jan kili",
        "timestamp": 1733540479
    },
    {
        "content": "<p><code>www-authenticate</code> seems like random memory access</p>",
        "id": 486626159,
        "sender_full_name": "jan kili",
        "timestamp": 1733540501
    },
    {
        "content": "<p>(though I've seen it appear many times, so maybe it's a consistently-adjacent piece of memory)</p>",
        "id": 486626243,
        "sender_full_name": "jan kili",
        "timestamp": 1733540531
    },
    {
        "content": "<p>I can return to the new work of generating my own glue instead of copying it from roc-on-simple, though</p>",
        "id": 486626288,
        "sender_full_name": "jan kili",
        "timestamp": 1733540575
    },
    {
        "content": "<p>If you're working on an example of adding an effect being easier than adding a return value, I'm very interested.</p>",
        "id": 486626412,
        "sender_full_name": "jan kili",
        "timestamp": 1733540679
    },
    {
        "content": "<p>Here you go <a href=\"https://github.com/lukewilliamboswell/basic-cli/tree/roc-on\">https://github.com/lukewilliamboswell/basic-cli/tree/roc-on</a></p>",
        "id": 486626712,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733540937
    },
    {
        "content": "<p>You should be able to check that out then, </p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc build.roc # to build the host\n$ roc examples/midi.roc\n</code></pre></div>",
        "id": 486626886,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733540970
    },
    {
        "content": "<p>It's not fully working for me either... so we've got a bug somewhere in the glue, which is what you were pointing out above I think. </p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc examples/midi.roc\n[crates/roc_host/src/lib.rs:1407:5] smf = Smf {\n    tracks: [\n        [],\n        [],\n        [\n            TrackEvent {\n                kind: TrackEventKind {\n                    payload: UnionTrackEventKind,\n                    discriminant: %                                                                                    14:10:36 ~/Documents/GitHub/basic-cli roc-on $\n</code></pre></div>",
        "id": 486627066,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733541073
    },
    {
        "content": "<p>The challenge here is that <code>Smf</code> is a really large struct with nested things... so we might want to modify the effect to take the smaller parts and test them one by one, working up to the aggregate <code>Smf</code> type</p>",
        "id": 486627164,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733541147
    },
    {
        "content": "<p>That's what I've done in my example above, just using <code>Header</code> - does that also bug out for you?</p>",
        "id": 486627282,
        "sender_full_name": "jan kili",
        "timestamp": 1733541276
    },
    {
        "content": "<p>The other options to find the issue here are probably running in a debugger like <code>lldb</code>, running with valgrind on linux, generating the LLVM IR from the app and then inspecting that.</p>",
        "id": 486627289,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733541285
    },
    {
        "content": "<p>It seems to be something about struct+union/discriminant, because <code>Format</code> and I think <code>Timecode</code> worked fine for me</p>",
        "id": 486627323,
        "sender_full_name": "jan kili",
        "timestamp": 1733541325
    },
    {
        "content": "<p>I'm so so relieved to hear you say there may be a glue bug, cause I've been inferring that I've been holding it wrong lol (and I have, but that's not the full story)</p>",
        "id": 486627348,
        "sender_full_name": "jan kili",
        "timestamp": 1733541360
    },
    {
        "content": "<p>Yeah, it dies for just a header... I'll dig a little</p>",
        "id": 486627406,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733541389
    },
    {
        "content": "<p>Ooh fun</p>\n<div class=\"codehilite\"><pre><span></span><code>[jan@framey basic-cli]$ git status\nOn branch roc-on\nYour branch is up to date with &#39;lukewilliamboswell/roc-on&#39;.\n\nChanges to be committed:\n  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)\n        renamed:    platform/InternalMIDI.roc -&gt; platform/InternalMidi.roc\n        modified:   platform/PlatformTasks.roc\n\n[jan@framey basic-cli]$ roc examples/midi.roc\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nUndefined Symbol in relocation, (+8107, Relocation { kind: PltRelative, encoding: Generic, size: +20, target: Symbol(SymbolIndex(+87)), addend: +fffffffffffffffc, implicit_addend: false }): Ok(Symbol { name: &quot;roc_fx_sendMidi&quot;, address: +0, size: +0, kind: Unknown, section: Undefined, scope: Unknown, weak: false, flags: Elf { st_info: +10, st_other: +0 } })\nLocation: crates/linker/src/elf.rs:1452:25\n[jan@framey basic-cli]$\n</code></pre></div>",
        "id": 486628044,
        "sender_full_name": "jan kili",
        "timestamp": 1733541955
    },
    {
        "content": "<p>I remember in 2022 my standard operating procedure for any time I saw <code>This is definitely a compiler bug. Please file an issue here:</code> was to ping Brendan and sometimes create the issue. <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> what's the latest SOP for seeing that message?<br>\nNote: This message went away when using the legacy linker, but I'm still curious what the SOP in general is.</p>",
        "id": 486628234,
        "sender_full_name": "jan kili",
        "timestamp": 1733542092
    },
    {
        "content": "<p>You need to build the platform first <code>roc build.roc</code></p>",
        "id": 486628250,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733542113
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>resolved</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>[jan@framey basic-cli]$ roc build.roc<br>\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)<br>\nINFO: Checking provided roc; executing <code>roc version</code>:<br>\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)<br>\nroc nightly pre-release, built from commit d782542 on Mi 04 Dez 2024 09:02:14 UTC<br>\nINFO: Getting the native operating system and architecture ...<br>\nINFO: Building stubbed app shared library ...<br>\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)<br>\n0 errors and 0 warnings found in 252 ms<br>\n while successfully building:</p>\n<div class=\"codehilite\"><pre><span></span><code>platform/libapp.so\n</code></pre></div>\n\n<p>INFO: Building rust host ...<br>\nwarning: skipping duplicate package <code>host</code> found at <code>/home/jan/.cargo/git/checkouts/roc-f2007fde281427d6/8c73786/examples/cli/false-interpreter/platform</code><br>\nwarning: skipping duplicate package <code>host</code> found at <code>/home/jan/.cargo/git/checkouts/roc-f2007fde281427d6/8c73786/examples/glue/rust-platform</code><br>\nwarning: skipping duplicate package <code>host</code> found at <code>/home/jan/.cargo/git/checkouts/roc-f2007fde281427d6/8c73786/examples/platform-switching/rust-platform</code><br>\n    Finished <code>release</code> profile [optimized] target(s) in 0.07s<br>\nINFO: Failed to get env var CARGO_BUILD_TARGET with error VarNotFound. Assuming default CARGO_BUILD_TARGET (native)...<br>\nINFO: Moving the prebuilt binary from target/release/libhost.a to platform/linux-x64.a ...<br>\nINFO: Preprocessing surgical host ...<br>\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)<br>\nINFO: Successfully built platform files!<br>\n[jan@framey basic-cli]$ roc examples/midi.roc <br>\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)<br>\nAn internal compiler expectation was broken.<br>\nThis is definitely a compiler bug.<br>\nPlease file an issue here: &lt;<a href=\"https://github.com/roc-lang/roc/issues/new/choose\">https://github.com/roc-lang/roc/issues/new/choose</a>&gt;<br>\nUndefined Symbol in relocation, (+8107, Relocation { kind: PltRelative, encoding: Generic, size: +20, target: Symbol(SymbolIndex(+87)), addend: +fffffffffffffffc, implicit_addend: false }): Ok(Symbol { name: \"roc_fx_sendMidi\", address: +0, size: +0, kind: Unknown, section: Undefined, scope: Unknown, weak: false, flags: Elf { st_info: +10, st_other: +0 } })<br>\nLocation: crates/linker/src/elf.rs:1452:25<br>\n[jan@framey basic-cli]$ </p>\n</div></div>",
        "id": 486628267,
        "sender_full_name": "jan kili",
        "timestamp": 1733542140
    },
    {
        "content": "<p>You also need to use the legacy linker <code>--linker legacy</code></p>",
        "id": 486628286,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733542158
    },
    {
        "content": "<p>I think... what does <code>ls platform/</code> say?</p>",
        "id": 486628308,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733542179
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>resolved</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>[jan@framey basic-cli]$ roc build.roc --linker=legacy<br>\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)<br>\nINFO: Checking provided roc; executing <code>roc version</code>:<br>\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)<br>\nroc nightly pre-release, built from commit d782542 on Mi 04 Dez 2024 09:02:14 UTC<br>\nINFO: Getting the native operating system and architecture ...<br>\nINFO: Building stubbed app shared library ...<br>\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)<br>\n0 errors and 0 warnings found in 249 ms<br>\n while successfully building:</p>\n<div class=\"codehilite\"><pre><span></span><code>platform/libapp.so\n</code></pre></div>\n\n<p>INFO: Building rust host ...<br>\nwarning: skipping duplicate package <code>host</code> found at <code>/home/jan/.cargo/git/checkouts/roc-f2007fde281427d6/8c73786/examples/cli/false-interpreter/platform</code><br>\nwarning: skipping duplicate package <code>host</code> found at <code>/home/jan/.cargo/git/checkouts/roc-f2007fde281427d6/8c73786/examples/glue/rust-platform</code><br>\nwarning: skipping duplicate package <code>host</code> found at <code>/home/jan/.cargo/git/checkouts/roc-f2007fde281427d6/8c73786/examples/platform-switching/rust-platform</code><br>\n    Finished <code>release</code> profile [optimized] target(s) in 0.06s<br>\nINFO: Failed to get env var CARGO_BUILD_TARGET with error VarNotFound. Assuming default CARGO_BUILD_TARGET (native)...<br>\nINFO: Moving the prebuilt binary from target/release/libhost.a to platform/linux-x64.a ...<br>\nINFO: Preprocessing surgical host ...<br>\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)<br>\nINFO: Successfully built platform files!<br>\n[jan@framey basic-cli]$ roc examples/midi.roc <br>\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)<br>\nAn internal compiler expectation was broken.<br>\nThis is definitely a compiler bug.<br>\nPlease file an issue here: &lt;<a href=\"https://github.com/roc-lang/roc/issues/new/choose\">https://github.com/roc-lang/roc/issues/new/choose</a>&gt;<br>\nUndefined Symbol in relocation, (+8107, Relocation { kind: PltRelative, encoding: Generic, size: +20, target: Symbol(SymbolIndex(+87)), addend: +fffffffffffffffc, implicit_addend: false }): Ok(Symbol { name: \"roc_fx_sendMidi\", address: +0, size: +0, kind: Unknown, section: Undefined, scope: Unknown, weak: false, flags: Elf { st_info: +10, st_other: +0 } })<br>\nLocation: crates/linker/src/elf.rs:1452:25<br>\n[jan@framey basic-cli]$ ls platform/<br>\nArg      Dir.roc          FileMetadata.roc  Http.roc             InternalHttp.roc  libapp.roc  linux-x64.a   main.roc               Path.roc           Stderr.roc  Tcp.roc  Utc.roc<br>\nArg.roc  EnvDecoding.roc  File.roc          InternalCommand.roc  InternalMidi.roc  <a href=\"http://libapp.so\">libapp.so</a>   linux-x64.rh  metadata_linux-x64.rm  PlatformTasks.roc  Stdin.roc   Tty.roc<br>\nCmd.roc  Env.roc          glue.roc          InternalFile.roc     InternalPath.roc  libhost.a   Locale.roc    MIDI.roc               Sleep.roc          Stdout.roc  Url.roc<br>\n[jan@framey basic-cli]$ </p>\n</div></div>\n<p>I mean these large snippets with no sassy tone, btw - just info dumping</p>",
        "id": 486628380,
        "sender_full_name": "jan kili",
        "timestamp": 1733542217
    },
    {
        "content": "<p>Yeah, I never landed that <a href=\"https://github.com/roc-lang/roc/pull/7282\">PR to fallback to legacy linker</a> <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 486628393,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733542228
    },
    {
        "content": "<p>It's all good. </p>\n<p>I meant this step <code>$ roc --linker legacy examples/midi.roc</code></p>",
        "id": 486628417,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733542262
    },
    {
        "content": "<p>ayyy now that's the bug I wanna see</p>\n<div class=\"codehilite\"><pre><span></span><code>[jan@framey basic-cli]$ roc --linker legacy examples/midi.roc\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\n[crates/roc_host/src/lib.rs:1407:5] smf = Smf {\n    tracks: [\n        [],\n        [\n            TrackEvent {\n                kind: TrackEventKind {\n                    payload: UnionTrackEventKind,\n                    discriminant: [jan@framey basic-cli]$\n</code></pre></div>",
        "id": 486628442,
        "sender_full_name": "jan kili",
        "timestamp": 1733542292
    },
    {
        "content": "<p>Fixed the segfault on smf dbg impl</p>",
        "id": 486628790,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733542631
    },
    {
        "content": "<p>Just pushed a commit <code>6ee50a005</code></p>",
        "id": 486628805,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733542660
    },
    {
        "content": "<p>I wonder if our <code>InternalMidi.roc</code> vs. <code>InternalMIDI.roc</code> conflict is due to OS - lemme guess, you're on Mac?</p>",
        "id": 486628984,
        "sender_full_name": "jan kili",
        "timestamp": 1733542823
    },
    {
        "content": "<p>Yes I'm on a mac</p>",
        "id": 486628997,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733542844
    },
    {
        "content": "<p>Okay we're aligned:</p>\n<div class=\"codehilite\"><pre><span></span><code>[jan@framey basic-cli]$ git rev-parse --short HEAD\n6ee50a0\n[jan@framey basic-cli]$ git status\nOn branch roc-on\nYour branch is up to date with &#39;lukewilliamboswell/roc-on&#39;.\n\nChanges to be committed:\n  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)\n        renamed:    platform/InternalMIDI.roc -&gt; platform/InternalMidi.roc\n        modified:   platform/PlatformTasks.roc\n\n[jan@framey basic-cli]$ roc --linker legacy examples/midi.roc\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\n[crates/roc_host/src/lib.rs:1407:5] smf = Smf {\n    header: Header {\n        timing: Timing {\n            payload: UnionTiming,\n            discriminant: discriminant_Timing::Timecode,\n        },\n        format: Format::Parallel,\n    },\n    track_count: 3,\n}\nHello, World!\n[jan@framey basic-cli]$\n</code></pre></div>",
        "id": 486629121,
        "sender_full_name": "jan kili",
        "timestamp": 1733542941
    },
    {
        "content": "<p>We're not quite out of the woods yet, this is breaking...</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[no_mangle]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">roc_fx_sendMidi</span><span class=\"p\">(</span><span class=\"n\">smf</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">roc_on</span><span class=\"p\">::</span><span class=\"n\">smf</span><span class=\"p\">::</span><span class=\"n\">Smf</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">RocResult</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">smf</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"converting to Midly\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">midi</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">midly</span><span class=\"p\">::</span><span class=\"n\">Smf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">smf</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">midi</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">RocResult</span><span class=\"p\">::</span><span class=\"n\">ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Looks like another segfault</p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc examples/midi.roc\n[crates/roc_host/src/lib.rs:1407:5] &amp;smf = Smf {\n    header: Header {\n        timing: Timing {\n            payload: UnionTiming,\n            discriminant: discriminant_Timing::Metrical,\n        },\n        format: Format::Parallel,\n    },\n    track_count: 3,\n}\nconverting to Midly\n</code></pre></div>",
        "id": 486629185,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733543039
    },
    {
        "content": "<p>I swear I had this working over in roc-on-simple... <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 486629233,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733543062
    },
    {
        "content": "<p>Ok, it's something in the tracks...</p>",
        "id": 486629294,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733543140
    },
    {
        "content": "<p>Is your previous hypothesis of a bug in RustGlue.roc still active?</p>",
        "id": 486629307,
        "sender_full_name": "jan kili",
        "timestamp": 1733543152
    },
    {
        "content": "<p>This is huge news already, that Header is working... my instinct is to diff this against my minimal repro above to see why this memory is behaving.</p>",
        "id": 486629412,
        "sender_full_name": "jan kili",
        "timestamp": 1733543241
    },
    {
        "content": "<p>Not in RustGlue.roc per se (it may have originated there), but definitely in our handcrafted glue for <code>Smf</code> and friends</p>",
        "id": 486629422,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733543259
    },
    {
        "content": "<p>If Header is already working and Tracks aren't, I wonder if this is a second bug beyond what I was hitting.</p>",
        "id": 486629498,
        "sender_full_name": "jan kili",
        "timestamp": 1733543321
    },
    {
        "content": "<p>I've pushed some more debugging stuff... I'm guessing the sensible thing to do is go through each of the Smf types, one by one and test them end to end, getting from roc, converting into midly, using with midly. And building up to an <code>Smf</code>, figure out what/where the glue issue is, and also make nice <code>Debug</code> and <code>Display</code> impls along the way.</p>",
        "id": 486630222,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733544054
    },
    {
        "content": "<p>I kind of slapped it together... and I I'm not sure that was the best approach because now we're in this situation. But at least we have an 80% solution... and hopefully there's only 1 or two issues in here.</p>",
        "id": 486630323,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733544108
    },
    {
        "content": "<p>I found that hard coding the <code>let tracks = Vec::new();</code> the issue went away... so we can probably isolate it to the code that converts the RocList of tracks into midly types.</p>",
        "id": 486630490,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733544242
    },
    {
        "content": "<p>I'm going to take a break from this for now. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 486630555,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733544292
    },
    {
        "content": "<p>Thank you very much!</p>",
        "id": 486630646,
        "sender_full_name": "jan kili",
        "timestamp": 1733544364
    },
    {
        "content": "<p>Sounds good. I'll start poking through.</p>",
        "id": 486630658,
        "sender_full_name": "jan kili",
        "timestamp": 1733544370
    },
    {
        "content": "<p>While you were doing that, I also...</p>",
        "id": 486630661,
        "sender_full_name": "jan kili",
        "timestamp": 1733544375
    },
    {
        "content": "<p>adapted your basic-cli/roc-on branch into my roc-on repo: <a href=\"https://gitlab.com/JanCVanB/roc-on/-/tree/return_smf_3\">https://gitlab.com/JanCVanB/roc-on/-/tree/return_smf_3</a><br>\nwith this result</p>\n<div class=\"codehilite\"><pre><span></span><code>#[no_mangle]\npub extern &quot;C&quot; fn roc_fx_sendMidi(header: &amp;thanks_luke::header::Header) -&gt; RocResult&lt;(), RocStr&gt; {\n    dbg!(&quot;party time&quot;);\n    let midly_header : midly::Header = (*header).into();\n    dbg!(&quot;party over&quot;);\n    dbg!(&quot;midly::Header = {:?}&quot;, midly_header);\n    RocResult::ok(())\n}\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>[jan@framey roc-on]$ roc examples/memory_test_2.roc --linker=legacy\nroc: /lib64/libtinfo.so.6: no version information available (required by roc)\n[crates/roc_host/src/lib.rs:1419:5] &quot;party time&quot; = &quot;party time&quot;\n[jan@framey roc-on]$\n</code></pre></div>",
        "id": 486630757,
        "sender_full_name": "jan kili",
        "timestamp": 1733544478
    },
    {
        "content": "<p>I expect it's something trivial that you figured out and I haven't adapted from your later commits yet (this was just based on your first commit)</p>",
        "id": 486630832,
        "sender_full_name": "jan kili",
        "timestamp": 1733544529
    },
    {
        "content": "<p>but I'll keep exploring the question of how you got Header working and it has always crashed for me</p>",
        "id": 486630853,
        "sender_full_name": "jan kili",
        "timestamp": 1733544549
    },
    {
        "content": "<p>well, in the past not crashed, just never had the right values</p>",
        "id": 486630860,
        "sender_full_name": "jan kili",
        "timestamp": 1733544562
    },
    {
        "content": "<p>Before you go, any tips for how to Debug these struct+union types? From what I read online, it seems unions can't be debugged</p>",
        "id": 486630951,
        "sender_full_name": "jan kili",
        "timestamp": 1733544624
    },
    {
        "content": "<p>(if that's in your recent commits, nvm)</p>",
        "id": 486630966,
        "sender_full_name": "jan kili",
        "timestamp": 1733544642
    },
    {
        "content": "<p>For <code>header::Header</code>specifically, it will be passed by value not reference, so adding the <code>&amp;</code> here is what is causing this issue.</p>",
        "id": 486631192,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733544857
    },
    {
        "content": "<p>So you would be trying to dereference a header value instead of a pointer to a header value</p>",
        "id": 486631240,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733544925
    },
    {
        "content": "<p>Confirmed. <span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span> </p>\n<div class=\"codehilite\"><pre><span></span><code>[crates/roc_host/src/lib.rs:1419:5] &quot;party time&quot; = &quot;party time&quot;\n[crates/roc_host/src/lib.rs:1421:5] &quot;party over&quot; = &quot;party over&quot;\n[crates/roc_host/src/lib.rs:1422:5] &quot;midly::Header = {:?}&quot; = &quot;midly::Header = {:?}&quot;\n[crates/roc_host/src/lib.rs:1422:5] midly_header = Header {\n    format: Parallel,\n    timing: Metrical(\n        u15(\n            10,\n        ),\n    ),\n}\nIt worked?!\n[jan@framey roc-on]$\n</code></pre></div>",
        "id": 486631242,
        "sender_full_name": "jan kili",
        "timestamp": 1733544926
    },
    {
        "content": "<p>Now you're cooking</p>",
        "id": 486631270,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733544957
    },
    {
        "content": "<p>Thanks! Any tips on that debug union question above?</p>",
        "id": 486631323,
        "sender_full_name": "jan kili",
        "timestamp": 1733544975
    },
    {
        "content": "<blockquote>\n<p>Before you go, any tips for how to Debug these struct+union types? From what I read online, it seems unions can't be debugged</p>\n</blockquote>\n<p>generating the LLVM and sharing with Claude is really helpful <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 486631372,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733545043
    },
    {
        "content": "<p>Aside from that... and <code>lldb</code> and <code>valgrind</code> I'm not sure what else there is</p>",
        "id": 486631460,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733545109
    },
    {
        "content": "<p>OOF okie dokie, just get em into Midly then</p>",
        "id": 486631472,
        "sender_full_name": "jan kili",
        "timestamp": 1733545130
    },
    {
        "content": "<p><span aria-label=\"salute\" class=\"emoji emoji-1fae1\" role=\"img\" title=\"salute\">:salute:</span> goodnight friend</p>",
        "id": 486631505,
        "sender_full_name": "jan kili",
        "timestamp": 1733545166
    },
    {
        "content": "<p>We're operating beyond the envelope here... in the future, when people walk this path, they'll just generate the glue using <code>RustGlue.roc</code> and never even think about LLVM IR, FFI or C ABIs</p>",
        "id": 486631584,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733545203
    },
    {
        "content": "<p>For anyone in the future, it seems way more well-defined to pass a value from Roc to Rust via an effect than via a return value!</p>",
        "id": 486631713,
        "sender_full_name": "jan kili",
        "timestamp": 1733545265
    },
    {
        "content": "<p>I'm glad to learn that my mental model of platform extension was flawed.</p>",
        "id": 486631763,
        "sender_full_name": "jan kili",
        "timestamp": 1733545295
    },
    {
        "content": "<p>Not sure it is still relevant, but your error above probably is technically a platform issue rather than a compiler bug. The platform is probably garbage collecting a function that roc needs. So the surgical linker can't find it.</p>",
        "id": 486639463,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733551889
    },
    {
        "content": "<p>Ooh... Ok I'll keep an eye out for that if it reappears without linker mis-selection. Thanks!</p>",
        "id": 486641066,
        "sender_full_name": "jan kili",
        "timestamp": 1733553437
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> Today I started creating a bug reproduction within basic-cli for a memory weirdness I'm seeing in roc-on, but as I started creating it I noticed that yesterday you merged purity inference into basic-cli@main! Congrats! Since I'm grappling with glue/memory/active issues, would I have an easier time debugging and contributing to the ecosystem by updating my platform to rebase onto basic-cli@main and start using PI?</p>",
        "id": 488157897,
        "sender_full_name": "jan kili",
        "timestamp": 1733940631
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> Since AoC is still going strong with <a href=\"mailto:basic-cli@0.17\">basic-cli@0.17</a>, do you see much value in me continuing to grapple with these glue/memory issues in the pre-PI world?</p>",
        "id": 488158054,
        "sender_full_name": "jan kili",
        "timestamp": 1733940686
    },
    {
        "content": "<p>Context: I'm setting up a platform for music production that's basically a fork of basic-cli, and my added effect that contains MIDI message payloads is having trouble getting the right bits to Rust.</p>",
        "id": 488158436,
        "sender_full_name": "jan kili",
        "timestamp": 1733940817
    },
    {
        "content": "<p>I would switch to PI</p>",
        "id": 488158987,
        "sender_full_name": "Anton",
        "timestamp": 1733941005
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/rLEbNN_nX1zHBDUxyQ1Qh2Rm/is_it_time.gif\">is_it_time.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/rLEbNN_nX1zHBDUxyQ1Qh2Rm/is_it_time.gif\" title=\"is_it_time.gif\"><img data-animated=\"true\" data-original-dimensions=\"498x229\" src=\"/user_uploads/thumbnail/22008/rLEbNN_nX1zHBDUxyQ1Qh2Rm/is_it_time.gif/840x560-anim.webp\"></a></div>",
        "id": 488164140,
        "sender_full_name": "jan kili",
        "timestamp": 1733942869
    },
    {
        "content": "<p>We definitely fixed a few bugs with the upgrade to purity inference</p>",
        "id": 488164463,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733942990
    },
    {
        "content": "<p>(may have introduced some to, but we don't know about those yet, so I'm not counting them)</p>",
        "id": 488164563,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733943012
    },
    {
        "content": "<p>Here I goooooo!</p>",
        "id": 488165695,
        "sender_full_name": "jan kili",
        "timestamp": 1733943392
    },
    {
        "content": "<p>Woohoooooo! PI was super smooth yesterday. Today I refactored to <a href=\"https://gitlab.com/JanCVanB/roc-on/-/blob/send_midi/scripts/regenerate_glue.sh\">fully automate glue code generation</a> (including the adding of things like <code>derive(Copy)</code> and <code>pub field:</code>) and extended my test script to have Rust echo the custom structs back to Roc (powered by simply adding mirrored <code>From</code> implementations). Tomorrow I'll revisit the memory zeroing bug (barely shown below with the SingleTrack--&gt;Parallel mis-mapping at the Roc-to-Rust interface), but for now, glory: <a href=\"https://gitlab.com/JanCVanB/roc-on/-/blob/send_midi/examples/echo_midi.test.roc?ref_type=heads\">https://gitlab.com/JanCVanB/roc-on/-/blob/send_midi/examples/echo_midi.test.roc?ref_type=heads</a><br>\nCC <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> </p>\n<div class=\"codehilite\"><pre><span></span><code>jan@framey:~/_code/JanCVanB/roc-on$ roc --linker=legacy examples/echo_midi.test.roc\n🦀😶 Rust is running Roc...\n\n🦅😶 Roc is running...\n\n🦅😶 main is sending custom MIDI: SingleTrack\n🦀😶 roc_fx_echoMidiSmall received custom MIDI: Format::SingleTrack\n🦀😊 roc_fx_echoMidiSmall casted that to Midly: SingleTrack\n🦀😊 roc_fx_echoMidiSmall casted that back too: Format::SingleTrack\n🦅😶 main received an echo back: SingleTrack\n🦅😊 main sees no difference!\n\n🦅😶 main is sending custom MIDI: {format: SingleTrack, timing: (Metrical 100)}\n🦀😶 roc_fx_echoMidiSmallish received custom MIDI: Header { timing: Timing::Metrical(100), format: Format::Parallel }\n🦀😊 roc_fx_echoMidiSmallish casted that to Midly: Header { format: Parallel, timing: Metrical(u15(100)) }\n🦀😊 roc_fx_echoMidiSmallish casted that back too: Header { timing: Timing::Metrical(100), format: Format::Parallel }\n🦅😶 main received an echo back: {format: Parallel, timing: (Metrical 100)}\n🦅😡 main sees a difference!\n\n🦅😞 main can&#39;t yet call Midi.echoMidiFull! without a Segmentation fault...\n\n🦅🥳 Roc finished testing MIDI echoes.\n\n🦀🥳 Rust finished running Roc.\njan@framey:~/_code/JanCVanB/roc-on$\n</code></pre></div>",
        "id": 488774885,
        "sender_full_name": "jan kili",
        "timestamp": 1734071817
    },
    {
        "content": "<p>So awesome!!! <span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span> <span aria-label=\"juggling\" class=\"emoji emoji-1f939\" role=\"img\" title=\"juggling\">:juggling:</span> <span aria-label=\"musical notes\" class=\"emoji emoji-1f3b6\" role=\"img\" title=\"musical notes\">:musical_notes:</span></p>",
        "id": 488776073,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734072512
    },
    {
        "content": "<p>Bug thread created: <a class=\"stream-topic\" data-stream-id=\"463736\" href=\"/#narrow/channel/463736-bugs/topic/Struct.20memory.20partially.20zeroed.20between.20Roc.20and.20Rust\">#bugs &gt; Struct memory partially zeroed between Roc and Rust</a></p>",
        "id": 488911912,
        "sender_full_name": "jan kili",
        "timestamp": 1734120267
    },
    {
        "content": "<p>LET'S</p>\n<p>GOOOOOOOOOOOOOOOOOO</p>\n<div class=\"codehilite\"><pre><span></span><code>🦅😶 main is sending custom MIDI: {format: SingleTrack, timing: (Metrical 100 0 0 0 0)}\n🦀😶 roc_fx_echoMidiSmallish received custom MIDI: Header { timing: Timing::Metrical(Timing_Metrical { f1: 0, f2: 0, f3: 0, f4: 0, f0: 100 }), format: Format::SingleTrack }\n🦀😊 roc_fx_echoMidiSmallish casted that to Midly: Header { format: SingleTrack, timing: Metrical(u15(100)) }\n🦀😊 roc_fx_echoMidiSmallish casted that back too: Header { timing: Timing::Metrical(Timing_Metrical { f1: 0, f2: 0, f3: 0, f4: 0, f0: 100 }), format: Format::SingleTrack }\n🦅😶 main received an echo back: {format: SingleTrack, timing: (Metrical 100 0 0 0 0)}\n🦅😊 main sees no difference!\n</code></pre></div>",
        "id": 488927886,
        "sender_full_name": "jan kili",
        "timestamp": 1734127246
    },
    {
        "content": "<p>Tomorrow I'll see if fluffing every tag and record prevents those full-midi-file segfaults (I doubt it, but it can't hurt).</p>",
        "id": 488929501,
        "sender_full_name": "jan kili",
        "timestamp": 1734128033
    },
    {
        "content": "<p>Do we intend to support using tag unions as effect parameters? (The top-level data container, where structs already work.)</p>",
        "id": 489038532,
        "sender_full_name": "jan kili",
        "timestamp": 1734222397
    },
    {
        "content": "<p>See new bug thread: <a class=\"stream-topic\" data-stream-id=\"463736\" href=\"/#narrow/channel/463736-bugs/topic/Fluffing.20doesn.27t.20naively.20work.20for.20tags\">#bugs &gt; Fluffing doesn't naively work for tags</a></p>",
        "id": 489039184,
        "sender_full_name": "jan kili",
        "timestamp": 1734223088
    },
    {
        "content": "<blockquote>\n<p>Do we intend to support using tag unions as effect parameters?</p>\n</blockquote>\n<p>yes</p>",
        "id": 489039768,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734223703
    },
    {
        "content": "<p><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span></p>\n<div class=\"codehilite\"><pre><span></span><code>🦀😶 Rust is running Roc...\n\n🦅😶 Roc is running...\n\n🦅😶 main is sending custom MIDI: SingleTrack\n🦀😶 roc_fx_echoMidiSmall received custom MIDI: Format::SingleTrack\n🦀😊 roc_fx_echoMidiSmall casted that to Midly: SingleTrack\n🦀😊 roc_fx_echoMidiSmall casted that back too: Format::SingleTrack\n🦅😶 main received an echo back: SingleTrack\n🦅😊 main sees no difference!\n\n🦅😶 main is sending custom MIDI: {format: SingleTrack, o: {a: 0, b: 0, c: 0, d: 0}, timing: (Metrical 100)}\n🦀😶 roc_fx_echoMidiSmallish received custom MIDI: Header { o: FluffZeroes { a: 0, b: 0, c: 0, d: 0 }, timing: Timing::Metrical(100), format: Format::SingleTrack }\n🦀😊 roc_fx_echoMidiSmallish casted that to Midly: Header { format: SingleTrack, timing: Metrical(u15(100)) }\n🦀😊 roc_fx_echoMidiSmallish casted that back too: Header { o: FluffZeroes { a: 0, b: 0, c: 0, d: 0 }, timing: Timing::Metrical(100), format: Format::SingleTrack }\n🦅😶 main received an echo back: {format: SingleTrack, o: {a: 0, b: 0, c: 0, d: 0}, timing: (Metrical 100)}\n🦅😊 main sees no difference!\n\n🦅😶 main is sending custom MIDI: {delta: 2, kind: (Midi {channel: 1, message: (NoteOn {key: 1, vel: 2})}), o: {a: 0, b: 0, c: 0, d: 0}}\n🦀😶 roc_fx_echoMidiMedium received custom MIDI: TrackEvent { kind: TrackEventKind::Midi(TrackEventKindMidi { message: MidiMessage::NoteOn(R1 { key: 1, vel: 2 }), channel: 1 }), o: FluffZeroes { a: 0, b: 0, c: 0, d: 0 }, delta: 2 }\n🦀😊 roc_fx_echoMidiMedium casted that to Midly: TrackEvent { delta: u28(2), kind: Midi { channel: u4(1), message: NoteOn { key: u7(1), vel: u7(2) } } }\n🦀😊 roc_fx_echoMidiMedium casted that back too: TrackEvent { kind: TrackEventKind::Midi(TrackEventKindMidi { message: MidiMessage::NoteOn(R1 { key: 1, vel: 2 }), channel: 1 }), o: FluffZeroes { a: 0, b: 0, c: 0, d: 0 }, delta: 2 }\n🦅😶 main received an echo back: {delta: 2, kind: (Midi {channel: 1, message: (NoteOn {key: 1, vel: 2})}), o: {a: 0, b: 0, c: 0, d: 0}}\n🦅😊 main sees no difference!\n\n🦅😶 main is sending custom MIDI: {header: {format: SingleTrack, o: {a: 0, b: 0, c: 0, d: 0}, timing: (Metrical 100)}, tracks: [[{delta: 1, kind: (Escape []), o: {a: 0, b: 0, c: 0, d: 0}}, {delta: 2, kind: (Midi {channel: 1, message: (NoteOn {key: 1, vel: 2})}), o: {a: 0, b: 0, c: 0, d: 0}}, {delta: 3, kind: (Meta EndOfTrack), o: {a: 0, b: 0, c: 0, d: 0}}]]}\n🦀😶 roc_fx_echoMidiFull received custom MIDI: Smf { header: Header { o: FluffZeroes { a: 0, b: 0, c: 0, d: 0 }, timing: Timing::Metrical(100), format: Format::SingleTrack }, tracks: [[TrackEvent { kind: TrackEventKind::Escape([]), o: FluffZeroes { a: 0, b: 0, c: 0, d: 0 }, delta: 1 }, TrackEvent { kind: TrackEventKind::Midi(TrackEventKindMidi { message: MidiMessage::NoteOn(R1 { key: 1, vel: 2 }), channel: 1 }), o: FluffZeroes { a: 0, b: 0, c: 0, d: 0 }, delta: 2 }, TrackEvent { kind: TrackEventKind::Meta(MetaMessage::EndOfTrack(())), o: FluffZeroes { a: 0, b: 0, c: 0, d: 0 }, delta: 3 }]] }\n🦀😊 roc_fx_echoMidiFull casted that to Midly: Smf { header: Header { format: SingleTrack, timing: Metrical(u15(100)) }, tracks: [[TrackEvent { delta: u28(1), kind: Escape([]) }, TrackEvent { delta: u28(2), kind: Midi { channel: u4(1), message: NoteOn { key: u7(1), vel: u7(2) } } }, TrackEvent { delta: u28(3), kind: Meta(EndOfTrack) }]] }\n🦅😶 main received an echo back: {header: {format: SingleTrack, o: {a: 0, b: 0, c: 0, d: 0}, timing: (Metrical 100)}, tracks: [[{delta: 1, kind: (Escape []), o: {a: 0, b: 0, c: 0, d: 0}}, {delta: 2, kind: (Midi {channel: 1, message: (NoteOn {key: 1, vel: 2})}), o: {a: 0, b: 0, c: 0, d: 0}}, {delta: 3, kind: (Meta EndOfTrack), o: {a: 0, b: 0, c: 0, d: 0}}]]}\n🦅😊 main sees no difference!\n\n🦅🥳 Roc finished testing MIDI echoes.\n\n🦀🥳 Rust finished running Roc.\n</code></pre></div>\n<p><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span><br>\nI just noticed I forgot to restore the \"I casted that back too\" println! for Full, but it did do that here.</p>",
        "id": 489357170,
        "sender_full_name": "jan kili",
        "timestamp": 1734387949
    },
    {
        "content": "<p>TODO: See how much fluffing I can remove without breaking the effects I want in the medium term.</p>",
        "id": 489357331,
        "sender_full_name": "jan kili",
        "timestamp": 1734388002
    },
    {
        "content": "<p>Hopefully in the medium term I can fix this in general</p>",
        "id": 489360506,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734389148
    },
    {
        "content": "<p>Yay, I removed so much fluffing and isolated it from any business logic.<br>\n<a href=\"https://gitlab.com/JanCVanB/roc-on/-/merge_requests/5/diffs\">https://gitlab.com/JanCVanB/roc-on/-/merge_requests/5/diffs</a></p>\n<h1>platform/PlatformTasksFluff.roc</h1>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">[</span>\n<span class=\"w\">    </span><span class=\"no\">Zeroes</span><span class=\"p\">,</span>\n<span class=\"o\">]</span>\n\n<span class=\"c1\"># This is to help avoid hitting a known C ABI bug</span>\n<span class=\"c1\"># by ensuring small values are passed by pointer.</span>\n<span class=\"c1\"># See https://roc.zulipchat.com/#narrow/channel/463736-bugs/topic/Struct.20memory.20partially.20zeroed.20between.20Roc.20and.20Rust/near/488928494</span>\n<span class=\"no\">Zeroes</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">U64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">U64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">U64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">U64</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<h1>platform/PlatformTasks.roc</h1>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"o\">...</span>\n<span class=\"n\">receiveMidiFile!</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"w\"> </span><span class=\"no\">InternalMidi</span><span class=\"o\">.</span><span class=\"n\">FluffedFileContent</span><span class=\"w\"> </span><span class=\"no\">Str</span>\n<span class=\"n\">receiveMidiMessage!</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"w\"> </span><span class=\"no\">InternalMidi</span><span class=\"o\">.</span><span class=\"n\">FluffedMidiMessage</span><span class=\"w\"> </span><span class=\"no\">Str</span>\n<span class=\"n\">sendMidiFile!</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">InternalMidi</span><span class=\"o\">.</span><span class=\"n\">FluffedFileContent</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"no\">Str</span>\n<span class=\"n\">sendMidiMessage!</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">InternalMidi</span><span class=\"o\">.</span><span class=\"n\">FluffedMidiMessage</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"no\">Str</span>\n</code></pre></div>\n<h1>platform/InternalMidi.roc</h1>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"o\">...</span>\n<span class=\"no\">FluffedFileContent</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">FileContent</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">PlatformTasksFluff</span><span class=\"o\">.</span><span class=\"n\">Zeroes</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"no\">FluffedMidiMessage</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">MidiMessage</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">PlatformTasksFluff</span><span class=\"o\">.</span><span class=\"n\">Zeroes</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h1>platform/Midi.roc</h1>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"o\">...</span>\n\n<span class=\"n\">o</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">PlatformTasksFluff</span><span class=\"o\">.</span><span class=\"n\">Zeroes</span>\n<span class=\"n\">o</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">b</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">d</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"n\">receiveMidiFile!</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"w\"> </span><span class=\"no\">InternalMidi</span><span class=\"o\">.</span><span class=\"n\">FileContent</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"no\">MidiErr</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"o\">]</span>\n<span class=\"n\">receiveMidiFile!</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">\\{}</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"no\">PlatformTasks</span><span class=\"o\">.</span><span class=\"n\">receiveMidiFile!</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"o\">.</span><span class=\"n\">file</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"o\">.</span><span class=\"n\">mapErr</span><span class=\"w\"> </span><span class=\"no\">MidiErr</span>\n\n<span class=\"n\">receiveMidiMessage!</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"w\"> </span><span class=\"no\">InternalMidi</span><span class=\"o\">.</span><span class=\"n\">MidiMessage</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"no\">MidiErr</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"o\">]</span>\n<span class=\"n\">receiveMidiMessage!</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">\\{}</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"no\">PlatformTasks</span><span class=\"o\">.</span><span class=\"n\">receiveMidiMessage!</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"o\">.</span><span class=\"n\">message</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"o\">.</span><span class=\"n\">mapErr</span><span class=\"w\"> </span><span class=\"no\">MidiErr</span>\n\n<span class=\"n\">sendMidiFile!</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">InternalMidi</span><span class=\"o\">.</span><span class=\"n\">FileContent</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"no\">MidiErr</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"o\">]</span>\n<span class=\"n\">sendMidiFile!</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">\\</span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"no\">PlatformTasks</span><span class=\"o\">.</span><span class=\"n\">sendMidiFile!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"o\">.</span><span class=\"n\">mapErr</span><span class=\"w\"> </span><span class=\"no\">MidiErr</span>\n\n<span class=\"n\">sendMidiMessage!</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"no\">InternalMidi</span><span class=\"o\">.</span><span class=\"n\">MidiMessage</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"no\">MidiErr</span><span class=\"w\"> </span><span class=\"no\">Str</span><span class=\"o\">]</span>\n<span class=\"n\">sendMidiMessage!</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">\\</span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"no\">PlatformTasks</span><span class=\"o\">.</span><span class=\"n\">sendMidiMessage!</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"no\">Result</span><span class=\"o\">.</span><span class=\"n\">mapErr</span><span class=\"w\"> </span><span class=\"no\">MidiErr</span>\n</code></pre></div>\n<h1>crates/roc_host/src/midi_effects.rs</h1>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">..</span><span class=\"p\">.</span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">super</span><span class=\"p\">::</span><span class=\"n\">glue</span><span class=\"p\">::</span><span class=\"n\">midi_generated</span><span class=\"p\">::</span><span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">O</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Zeroes</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Zeroes</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">b</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">d</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n\n\n<span class=\"cp\">#[no_mangle]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">roc_fx_receiveMidiFile</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">RocResult</span><span class=\"o\">&lt;</span><span class=\"n\">FluffedFileContent</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// TODO: Read MIDI files from disk!</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">hardcoded_midi_file</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">midly</span><span class=\"p\">::</span><span class=\"n\">Smf</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"n\">RocResult</span><span class=\"p\">::</span><span class=\"n\">ok</span><span class=\"p\">(</span><span class=\"n\">FluffedFileContent</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">file</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">hardcoded_midi_file</span><span class=\"p\">).</span><span class=\"n\">into</span><span class=\"p\">(),</span>\n<span class=\"w\">        </span><span class=\"n\">o</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">O</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">})</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[no_mangle]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">roc_fx_receiveMidiMessage</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">RocResult</span><span class=\"o\">&lt;</span><span class=\"n\">FluffedMidiMessage</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// TODO: Stream MIDI messages from devices!</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">hardcoded_midi_message</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">midly</span><span class=\"p\">::</span><span class=\"n\">MidiMessage</span><span class=\"p\">::</span><span class=\"n\">NoteOn</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"n\">RocResult</span><span class=\"p\">::</span><span class=\"n\">ok</span><span class=\"p\">(</span><span class=\"n\">FluffedMidiMessage</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">message</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">hardcoded_midi_message</span><span class=\"p\">).</span><span class=\"n\">into</span><span class=\"p\">(),</span>\n<span class=\"w\">        </span><span class=\"n\">o</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">O</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">})</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[no_mangle]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">roc_fx_sendMidiFile</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"n\">FluffedFileContent</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">FluffedFileContent</span><span class=\"p\">,</span>\n<span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">RocResult</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">validated_midi_file</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">midly</span><span class=\"p\">::</span><span class=\"n\">Smf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">).</span><span class=\"n\">into</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"c1\">// TODO: Write MIDI file to disk.</span>\n<span class=\"w\">    </span><span class=\"n\">fundsp_sequence_example</span><span class=\"p\">::</span><span class=\"n\">perform</span><span class=\"p\">(</span><span class=\"n\">validated_midi_file</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">RocResult</span><span class=\"p\">::</span><span class=\"n\">ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[no_mangle]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">roc_fx_sendMidiMessage</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"n\">FluffedMidiMessage</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">FluffedMidiMessage</span><span class=\"p\">,</span>\n<span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">RocResult</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">RocStr</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_validated_midi_message</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">midly</span><span class=\"p\">::</span><span class=\"n\">MidiMessage</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">message</span><span class=\"p\">).</span><span class=\"n\">into</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"c1\">// TODO: Stream MIDI messages to devices!</span>\n<span class=\"w\">    </span><span class=\"n\">RocResult</span><span class=\"p\">::</span><span class=\"n\">ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p><span aria-label=\"smiling face with hearts\" class=\"emoji emoji-1f970\" role=\"img\" title=\"smiling face with hearts\">:smiling_face_with_hearts:</span></p>",
        "id": 490022528,
        "sender_full_name": "jan kili",
        "timestamp": 1734631739
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462053\">JanCVanB</span> has marked this topic as resolved.</p>",
        "id": 490022547,
        "sender_full_name": "Notification Bot",
        "timestamp": 1734631749
    },
    {
        "content": "<p>Epilogue: I simplified+isolated it further by just absorbing PlatformTasksFluff.roc (and <code>o = ...</code>) into PlatformTasks.roc</p>",
        "id": 490066777,
        "sender_full_name": "jan kili",
        "timestamp": 1734651474
    }
]