[
    {
        "content": "<p>I'm working towards adding the next test for my <code>getNextRow</code> function.</p>\n<p>The code I need to add next means adding some fields to my record type. Previously it was just an empty record type:</p>\n<div class=\"codehilite\"><pre><span></span><code>GalleryItem : {\n}\n</code></pre></div>\n<p>Now I've added the fields I need:</p>\n<div class=\"codehilite\"><pre><span></span><code>GalleryItem : {\n    width : Int U32,\n    height : Int U32,\n    headings : List Str,\n}\n</code></pre></div>\n<p>I created a helper function that I can use in my tests to produce a default gallery item (not sure if my syntax is quite right here):</p>\n<div class=\"codehilite\"><pre><span></span><code># Makes a gallery item for testing.\nmakeDefaultItem : _ -&gt; GalleryItem\nmakeDefaultItem = \\_ -&gt; {\n    width: 10,\n    height: 20,\n    headings: []\n}\n</code></pre></div>\n<p>Now I use that function to create some lists to pass into my function for testing:</p>\n<div class=\"codehilite\"><pre><span></span><code># No items left returns current row.\nexpect\n    currentRowItems = [makeDefaultItem, makeDefaultItem, makeDefaultItem]\n    removedItems = [makeDefaultItem, makeDefaultItem]\n    headings = [&quot;a&quot;, &quot;b&quot;]\n    out = getNextRow [] 10 21 currentRowItems 12 removedItems headings\n    out == {\n        row: {\n            items: [{}, {}],\n            offsetY: 0,\n            width: 12,\n            height: 21,\n            headings,\n        },\n        removedItems,\n        remainingItems: []\n    }\n</code></pre></div>\n<p>My updated code results in multiple type mismatches, but I'm stuck on the first one:</p>\n<div class=\"codehilite\"><pre><span></span><code>── TYPE MISMATCH in Layout.roc ─────────────────────────────────────────────────\n\nThis 4th argument to getNextRow has an unexpected type:\n\n73│      out = getNextRow [] 10 21 currentRowItems 12 removedItems headings\n                                   ^^^^^^^^^^^^^^^\n\nThis currentRowItems value is a:\n\n    List (* -&gt; GalleryItem)\n\nBut getNextRow needs its 4th argument to be:\n\n    List {\n        headings : List Str,\n        height : Int U32,\n        width : Int U32,\n    }\n</code></pre></div>\n<p>My feeling is that I have supplied what it needs, but the error tells me that the types are somehow wrong.</p>\n<p>This is the type signature of <code>getNextRow</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>getNextRow : List GalleryItem,  Int U32,        Int U32,         List GalleryItem,  Int U32,    List GalleryItem,   List Str -&gt; { row : LayoutRow, removedItems: List GalleryItem, remainingItems : List GalleryItem }\ngetNextRow = \\items,            galleryWidth,   targetRowHeight, currentRowItems,   width,      removedItems,       headings -&gt;\n</code></pre></div>\n<p>Anyone know what's wrong here?</p>\n<p>I've pushed full code with all the errors here: <a href=\"https://github.com/ashleydavis/book-of-examples/blob/main/gallery/roc/layout.roc\">https://github.com/ashleydavis/book-of-examples/blob/main/gallery/roc/layout.roc</a></p>",
        "id": 450822224,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1720735789
    },
    {
        "content": "<p><code>Int U32</code> should just be <code>U32</code></p>",
        "id": 450824264,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720736559
    },
    {
        "content": "<p>Cause <code>U32</code> is something like: <code>U32 : Int Unsigned32</code></p>",
        "id": 450824279,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720736576
    },
    {
        "content": "<p>I think we should consider special-casing that one</p>",
        "id": 450825084,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1720737007
    },
    {
        "content": "<p>things like <code>Int I32</code></p>",
        "id": 450825126,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1720737027
    },
    {
        "content": "<p>I don't think that is it.</p>\n<p>I'd already been using <code>Int U32</code> in multiple places without a problem yet.</p>\n<p>But I replaced \"Int U32\" with \"U32\" across the file and I still get the same error.</p>\n<div class=\"codehilite\"><pre><span></span><code>── TYPE MISMATCH in Layout.roc ─────────────────────────────────────────────────\n\nThis 4th argument to getNextRow has an unexpected type:\n\n73│      out = getNextRow [] 10 21 currentRowItems 12 removedItems headings\n                                   ^^^^^^^^^^^^^^^\n\nThis currentRowItems value is a:\n\n    List (* -&gt; GalleryItem)\n\nBut getNextRow needs its 4th argument to be:\n\n    List {\n        headings : List Str,\n        height : U32,\n        width : U32,\n    }\n</code></pre></div>",
        "id": 450825407,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1720737128
    },
    {
        "content": "<p>Oh, wow, surprised that works. Let me look deeper</p>",
        "id": 450826612,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720737541
    },
    {
        "content": "<p>I think you need to be calling <code>makeDefaultItem</code> in lines like <code>[makeDefaultItem, makeDefaultItem, makeDefaultItem]</code></p>",
        "id": 450826842,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720737604
    },
    {
        "content": "<p><code>[makeDefaultItem {}, makeDefaultItem {}, makeDefaultItem {}]</code></p>",
        "id": 450826880,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720737615
    },
    {
        "content": "<p>That or you need <code>getNextRow</code> to take a list of functions that generate <code>GalleryItem</code></p>",
        "id": 450826942,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720737640
    },
    {
        "content": "<p>Though in this case, I would probably just change <code>makeDefaultItem</code> to <code>defaultItem</code> and make it not a function at all</p>",
        "id": 450827111,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720737681
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>defaultItem : GalleryItem\ndefaultItem = {\n    width: 10,\n    height: 20,\n    headings: []\n}\n</code></pre></div>",
        "id": 450827162,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720737699
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"651556\">Ashley Davis</span> <a href=\"#narrow/stream/231634-beginners/topic/My.20next.20newbie.20issue.3A.20Type.20mismatch/near/450825407\">said</a>:</p>\n<blockquote>\n<p>I'd already been using <code>Int U32</code> in multiple places without a problem yet.</p>\n</blockquote>\n<p>that's very surprising! It shouldn't work <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 450836763,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1720742260
    },
    {
        "content": "<p>do you happen to have a code example which uses <code>Int 32</code> and works? I'd like to figure out what's going on with that haha</p>",
        "id": 450836836,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1720742299
    },
    {
        "content": "<p>Well I wasn 't doing any calculations with \"Int U32\" yet but it did compile and I was able to pass them into and out of a function.</p>",
        "id": 451635587,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721079678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/My.20next.20newbie.20issue.3A.20Type.20mismatch/near/450826612\">said</a>:</p>\n<blockquote>\n<p>Oh, wow, surprised that works. Let me look deeper</p>\n</blockquote>\n<p>Hi <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> I tried making the change you suggested. What does it mean to add empty curly brackets onto a  function call?</p>\n<p>It does compile now which is good, but trying to figure out why latest test started failing:</p>\n<div class=\"codehilite\"><pre><span></span><code>── EXPECT FAILED in Layout.roc ─────────────────────────────────────────────────\n\nThis expectation failed:\n\n68│&gt;  # No items left returns current row.\n69│&gt;  expect\n70│&gt;      currentRowItems = [makeDefaultItem {}, makeDefaultItem {}, makeDefaultItem {}]\n71│&gt;      removedItems = [makeDefaultItem {}, makeDefaultItem {}]\n72│&gt;      headings = [&quot;a&quot;, &quot;b&quot;]\n73│&gt;      out = getNextRow [] 10 21 currentRowItems 12 removedItems headings\n74│&gt;      out == {\n75│&gt;          row: {\n76│&gt;              items: [{}, {}],\n77│&gt;              offsetY: 0,\n78│&gt;              width: 12,\n79│&gt;              height: 21,\n80│&gt;              headings,\n81│&gt;          },\n82│&gt;          removedItems,\n83│&gt;          remainingItems: []\n84│&gt;      }\n\nWhen it failed, these variables had these values:\n\ncurrentRowItems : List GalleryItem\ncurrentRowItems = [{ headings: [], height: 20, width: 10 }, { headings: [], height: 20, width: 10 }, { headings: [], height: 20, width: 10 }]\n\nremovedItems : List GalleryItem\nremovedItems = [{ headings: [], height: 20, width: 10 }, { headings: [], height: 20, width: 10 }]\n\nheadings : List Str\nheadings = [&quot;a&quot;, &quot;b&quot;]\n\nout : {\n    remainingItems : List GalleryItem,\n    removedItems : List GalleryItem,\n    row : {\n        headings : List Str,\n        height : Int Unsigned32,\n        items : List {},\n        offsetY : Int Unsigned32,\n        width : Int Unsigned32,\n    },\n}\nout = { remainingItems: [], removedItems: [{ headings: [], height: 20, width: 10 }, { headings: [], height: 20, width: 10 }], row: { headings: [&quot;a&quot;, &quot;b&quot;], height: 21, items: [{}, {}, {}], offsetY: 0, width: 12 } }\n</code></pre></div>",
        "id": 451636249,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721079969
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> I actually need <code>makeDefaultItem</code> to be a function because soon I want to add optional parameters to it configure it differently for different tests. It needs be a kind of constructor that gives you standard defaults when you don't supply them.</p>",
        "id": 451636525,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721080088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> the message for the failing test doesn't seem to compare actual results vs expected. I think it just prints out the actual results.</p>",
        "id": 451637113,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721080352
    },
    {
        "content": "<p>I got it working (yay), but would have been easier if the failing test message shows the diff between actual and expected.</p>",
        "id": 451637389,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721080486
    },
    {
        "content": "<p>There is no such thing as a zero arg function in roc.</p>\n<p>In fact, you can see the one arg for <code>makeDefault</code>, <code>\\_</code>. In Roc, <code>_</code> is a placeholder for ignored values.</p>",
        "id": 451638108,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721080805
    },
    {
        "content": "<p>You technically could pass anything into <code>makeDefault</code> since the value is ignored, but the standard ignored arg in roc is an empty record <code>{}</code></p>",
        "id": 451638215,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721080849
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"651556\">Ashley Davis</span> <a href=\"#narrow/stream/231634-beginners/topic/My.20next.20newbie.20issue.3A.20Type.20mismatch/near/451637389\">said</a>:</p>\n<blockquote>\n<p>I got it working (yay), but would have been easier if the failing test message shows the diff between actual and expected.</p>\n</blockquote>\n<p>yeah I'd like to do this! It's a project that nobody is working on at the moment, but if anyone is interested, I can give pointers on where to get started <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 451638830,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1721081105
    },
    {
        "content": "<p>Before we forget, we should make an issue an link to that zulip chat. Didn't we talk about the diff somewhere recently?</p>",
        "id": 451639240,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721081293
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/231634-beginners/topic/My.20next.20newbie.20issue.3A.20Type.20mismatch/near/451639240\">said</a>:</p>\n<blockquote>\n<p>Before we forget, we should make an issue an link to that zulip chat. Didn't we talk about the diff somewhere recently?</p>\n</blockquote>\n<p>I think this one: <a href=\"#narrow/stream/231634-beginners/topic/Type.20mismatch.3A.20Do.20I.20need.20explicit.20typing.20here.3F\">https://roc.zulipchat.com/#narrow/stream/231634-beginners/topic/Type.20mismatch.3A.20Do.20I.20need.20explicit.20typing.20here.3F</a></p>",
        "id": 451640654,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1721081979
    },
    {
        "content": "<p>I thought there was one where Richard posted with a diff view he proposed</p>",
        "id": 451645377,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721084324
    },
    {
        "content": "<p>Yeah this one <a href=\"#narrow/stream/304641-ideas/topic/diffs.20in.20error.20messages/near/450008154\">https://roc.zulipchat.com/#narrow/stream/304641-ideas/topic/diffs.20in.20error.20messages/near/450008154</a></p>",
        "id": 451645489,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721084380
    }
]