[
    {
        "content": "<p>there seems to be a nixos issue when testing code in a path that differs from the roc compiler directory<br>\n<a href=\"https://gist.githubusercontent.com/dankeyy/6497117f3f1550df6340733ed5de74d0/raw/39678d9d8133e11ce149fec6cc005bd93d6b545b/patherr.txt\">https://gist.githubusercontent.com/dankeyy/6497117f3f1550df6340733ed5de74d0/raw/39678d9d8133e11ce149fec6cc005bd93d6b545b/patherr.txt</a></p>\n<p>I guess this is more of a nixos error than roc error? but still perhaps we could come to a solution for it</p>",
        "id": 329299483,
        "sender_full_name": "dank",
        "timestamp": 1677016435
    },
    {
        "content": "<p>is it planned for the roc compiler itself to ever statically link with musl?<br>\nthat would be so convenient</p>",
        "id": 329356316,
        "sender_full_name": "dank",
        "timestamp": 1677051070
    },
    {
        "content": "<p>I think we've talked about it before but I don't remember what we concluded.</p>",
        "id": 329365702,
        "sender_full_name": "Anton",
        "timestamp": 1677054744
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"583319\">dank</span> <a href=\"#narrow/stream/231634-beginners/topic/roc.20test.20broken.20in.20nixos/near/329299483\">said</a>:</p>\n<blockquote>\n<p>there seems to be a nixos issue when testing code in a path that differs from the roc compiler directory<br>\n<a href=\"https://gist.githubusercontent.com/dankeyy/6497117f3f1550df6340733ed5de74d0/raw/39678d9d8133e11ce149fec6cc005bd93d6b545b/patherr.txt\">https://gist.githubusercontent.com/dankeyy/6497117f3f1550df6340733ed5de74d0/raw/39678d9d8133e11ce149fec6cc005bd93d6b545b/patherr.txt</a></p>\n<p>I guess this is more of a nixos error than roc error? but still perhaps we could come to a solution for it</p>\n</blockquote>\n<p>Can you make an issue for this to improve the error message?<br>\nFor now I think we should recommend using nix-build (using the default.nix). For a nicer long-term fix I expect we can patch the binary with the path we set in NIX_GLIBC_PATH but that may not be straightforward.</p>",
        "id": 329367837,
        "sender_full_name": "Anton",
        "timestamp": 1677055534
    },
    {
        "content": "<p>sure</p>",
        "id": 329368476,
        "sender_full_name": "dank",
        "timestamp": 1677055755
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> is there any reason we shouldn't statically link it with musl?</p>",
        "id": 329469471,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1677082510
    },
    {
        "content": "<p>my immediate thought is \"yeah let's do it!\" but maybe there's a reason not to which I'm missing <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 329469549,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1677082531
    },
    {
        "content": "<p>we should consider a different default allocator then. and probably measure the perf</p>",
        "id": 329469859,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1677082601
    },
    {
        "content": "<p>I thought we already switched to a nonstandard one awhile ago</p>",
        "id": 329471385,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1677082934
    },
    {
        "content": "<p>could be misremembering</p>",
        "id": 329471403,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1677082936
    },
    {
        "content": "<p>We use mimalloc currently</p>",
        "id": 329485053,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1677086293
    },
    {
        "content": "<p>Also tested tcmalloc and jemalloc.</p>",
        "id": 329485104,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1677086307
    },
    {
        "content": "<p>Tcmalloc was the fastest for me, but Linux only and more of a pain to get working, so mimalloc was chosen in the end.</p>",
        "id": 329485188,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1677086329
    },
    {
        "content": "<p>nice! So is there any reason we shouldn't switch to musl on Linux?</p>",
        "id": 329492797,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1677088253
    },
    {
        "content": "<p>not that I know of.</p>",
        "id": 329500734,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1677090573
    },
    {
        "content": "<p>I was actually excited about <a href=\"https://github.com/thiagokokada/nix-alien\">https://github.com/thiagokokada/nix-alien</a><br>\nbut it doesn't seem to work on the Roc binary (fails with an exception that originates from ldd's corrupted output)</p>\n<p>maybe the roc binary depends on some stuff other than libgcc/glibc (for example who provides __snprintf_chk? one would've guessed glibc, but I have it installed..), I do not know</p>",
        "id": 329506982,
        "sender_full_name": "dank",
        "timestamp": 1677092464
    },
    {
        "content": "<p>could be useful to just write up somewhere the total roc dependencies</p>\n<p>right now it's kinda confusing at least to me which are  roc compiler (as in building roc) dependencies and which are roc binary (dynamic) dependencies</p>",
        "id": 329701146,
        "sender_full_name": "dank",
        "timestamp": 1677154162
    },
    {
        "content": "<p>it would also help avoiding issues like the <code>rodio</code>/ <code>alsa</code> dep in the future</p>",
        "id": 329701619,
        "sender_full_name": "dank",
        "timestamp": 1677154300
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> I wonder if we could have CI run <code>ldd</code> on the executable and then if the output isn't exactly what we expect, fail the test - so that you couldn't accidentally introduce a new dynamic dep, you'd have to explicitly change that test</p>",
        "id": 329721364,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1677159570
    },
    {
        "content": "<p>I've made <a href=\"https://github.com/roc-lang/roc/issues/5067\">#5067</a> for this</p>",
        "id": 336419251,
        "sender_full_name": "Anton",
        "timestamp": 1677227086
    }
]