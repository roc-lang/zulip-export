[
    {
        "content": "<p>Looking closer at Dict and I noticed <code>Dict.update</code> has a different signature than what I was expecting. Can someone help me understand why it takes a function that checks if something is present? </p>\n<div class=\"codehilite\" data-code-language=\"Elixir\"><pre><span></span><code><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Dict</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">([</span><span class=\"nc\">Present</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nc\">Missing</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">Present</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nc\">Missing</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Dict</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"nc\">Eq</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I thought the <code>Dict.update</code> would mean something similar to \"update this dictionary so it now has X value, I don't care what was there before\". </p>\n<p>From what I can tell the use case for this might be if you decide something is already there and don't want to update it, but I feel like that is two separate actions so would be find to just use a <code>Dict.get</code>. The other option doesn't seem all that useful, when there is nothing there then leave it as is.</p>\n<p>Maybe this is something to do with the Eq Ability?  </p>\n<p>So I guess what I was expecting was.</p>\n<div class=\"codehilite\" data-code-language=\"Elixir\"><pre><span></span><code><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Dict</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Dict</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"nc\">Eq</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 305776871,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666602921
    },
    {
        "content": "<p>The following function already exists:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">insert</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"w\"> </span><span class=\"nv\">k</span><span class=\"w\"> </span><span class=\"nv\">v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">k</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">v</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"w\"> </span><span class=\"nv\">k</span><span class=\"w\"> </span><span class=\"nv\">v</span><span class=\"w\"> </span><span class=\"nf\">|</span><span class=\"w\"> </span><span class=\"nv\">k</span><span class=\"w\"> </span><span class=\"nv\">has</span><span class=\"w\"> </span><span class=\"kt\">Eq</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 305777801,
        "sender_full_name": "Chris Duncan",
        "timestamp": 1666603294
    },
    {
        "content": "<p>Thank you, that makes more sense. That would also overwrite any value that is already there.</p>",
        "id": 305778254,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666603446
    },
    {
        "content": "<p>the real use-case for <code>update</code> is performance. A combination of <code>get</code> and <code>insert</code> would have to find the correct spot twice, which is unfortunate</p>",
        "id": 305778335,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666603476
    },
    {
        "content": "<p>in rust we have a bunch of uses of <code>entry(key).or_default()</code> and <code>entry(key).or_insert(default_value)</code></p>",
        "id": 305778483,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666603531
    },
    {
        "content": "<p>so you can provide a default value for a missing key, and then continue \"piping\"</p>",
        "id": 305778612,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666603567
    },
    {
        "content": "<p>Great, that makes sense. I'll add that in the doc comments.</p>",
        "id": 305778834,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666603672
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> <code>missing key</code>, just to confirm you meant <code>missing value</code>?</p>",
        "id": 305779270,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1666603821
    },
    {
        "content": "<p>both?</p>",
        "id": 305780700,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666604376
    },
    {
        "content": "<p>of the key is missing, you'd insert the key with a default value</p>",
        "id": 305780727,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1666604394
    },
    {
        "content": "<p>I came across this func on the website docs and I see that this func is recommended for performance over doing a <code>get</code> and an <code>insert</code> separately. However I'm having trouble understanding the func signature and what I need to use the update func.</p>\n<p>I have a Dict Str (List F32) and I need to just append to the list of floats in case I already have a key there. If its a new key just make a new list. Something like the following:</p>\n<div class=\"codehilite\" data-code-language=\"Elixir\"><pre><span></span><code><span class=\"ow\">when</span><span class=\"w\"> </span><span class=\"nc\">Dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"n\">dict</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">    </span><span class=\"c1\"># existing k v in the map</span>\n<span class=\"w\">    </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"n\">values</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Dict</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"w\"> </span><span class=\"n\">dict</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"w\"> </span><span class=\"n\">values</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"c1\"># new key so make new list</span>\n<span class=\"w\">    </span><span class=\"nc\">Err</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Dict</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"w\"> </span><span class=\"n\">dict</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">single</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>I can't figure out how I can achieve this using the <code>Dict.update</code>. </p>\n<p>Update: I think I got it. This is my current attempt (though I'd be lying if I said I completely understand it)</p>\n<div class=\"codehilite\" data-code-language=\"Elixir\"><pre><span></span><code><span class=\"nc\">Dict</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"w\"> </span><span class=\"n\">dict</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">addReading</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">)</span>\n\n<span class=\"n\">addReading</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">F32</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">([</span><span class=\"nc\">Present</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">List</span><span class=\"w\"> </span><span class=\"nc\">F32</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"nc\">Missing</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">Present</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">List</span><span class=\"w\"> </span><span class=\"nc\">F32</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"nc\">Missing</span><span class=\"p\">])</span>\n<span class=\"n\">addReading</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"n\">val</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"n\">possibleValue</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span>\n<span class=\"w\">        </span><span class=\"ow\">when</span><span class=\"w\"> </span><span class=\"n\">possibleValue</span><span class=\"w\"> </span><span class=\"n\">is</span>\n<span class=\"w\">            </span><span class=\"nc\">Missing</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Present</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">single</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"nc\">Present</span><span class=\"w\"> </span><span class=\"n\">readings</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Present</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"w\"> </span><span class=\"n\">readings</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>Shoutout to <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span>  and his <a href=\"https://github.com/lukewilliamboswell/aoc/blob/843129bf4cd8fa034f26785910e07065f7030767/aoc-2022/11/main.roc#L94\">AOC repo</a>. I found some example uses</p>",
        "id": 439948046,
        "sender_full_name": "Musab Nazir",
        "timestamp": 1716347199
    }
]