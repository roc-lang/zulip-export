[
    {
        "content": "<p>So I was wondering if others had ideas on how to improve a functions like this:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">popAddr</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Emulator</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">T</span><span class=\"w\"> </span><span class=\"nx\">Emulator</span><span class=\"w\"> </span><span class=\"nx\">Addr</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"nv\">popAddr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">emu0</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">T</span><span class=\"w\"> </span><span class=\"nx\">emu1</span><span class=\"w\"> </span><span class=\"nv\">lo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">pop</span><span class=\"w\"> </span><span class=\"nx\">emu0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">T</span><span class=\"w\"> </span><span class=\"nx\">emu2</span><span class=\"w\"> </span><span class=\"nv\">hi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">pop</span><span class=\"w\"> </span><span class=\"nx\">emu1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">T</span><span class=\"w\"> </span><span class=\"nx\">emu2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">toAddr</span><span class=\"w\"> </span><span class=\"nx\">lo</span><span class=\"w\"> </span><span class=\"nx\">hi</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>It seems pretty poorly suited for pipelining due to the first 2 functions returning more results than the next function takes. That being said, I feel like there has to be a way to make this better than having <code>emu0</code>, <code>emu1</code>, <code>emu2</code>. Any thoughts?</p>",
        "id": 288680799,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1657118596
    },
    {
        "content": "<p>if <code>pop</code> returns a record like <code>{ emu : Emulator, addr : Addr }</code> then you could go:</p>\n<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"nf\">popAddr</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Emulator</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">emu</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Emulator</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">addr</span><span class=\"w\"> </span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"kt\">Addr</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"nf\">popAddr</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"n\">emu</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">lo</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"n\">pop</span><span class=\"w\"> </span><span class=\"n\">emu</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">hi</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"n\">pop</span><span class=\"w\"> </span><span class=\"n\">lo</span><span class=\"o\">.</span><span class=\"n\">emu</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">emu</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"n\">hi</span><span class=\"o\">.</span><span class=\"n\">emu</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">addr</span><span class=\"kt\">:</span><span class=\"w\"> </span><span class=\"n\">toAddr</span><span class=\"w\"> </span><span class=\"n\">lo</span><span class=\"o\">.</span><span class=\"n\">addr</span><span class=\"w\"> </span><span class=\"n\">hi</span><span class=\"o\">.</span><span class=\"n\">addr</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 288683040,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1657119496
    },
    {
        "content": "<p>Would that end up duplicating the underlying emulator? Or should roc clean that up correctly recognizing that even though <code>lo.addr</code> is used later, <code>lo.emu</code> is not and can allow in place mutation.</p>",
        "id": 288684277,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1657119948
    },
    {
        "content": "<p>interesting - I'm not sure!</p>",
        "id": 288684430,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1657120002
    },
    {
        "content": "<p>This becomes very important when updating memory. Otherwise any random operation can suddenly be copying a 64KB list.</p>",
        "id": 288684646,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1657120092
    },
    {
        "content": "<p>I guess I will give that a test and count the allocations.</p>",
        "id": 288684665,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1657120104
    },
    {
        "content": "<p>I hope someday the editor visualizes memory performance per line :)</p>",
        "id": 288685637,
        "sender_full_name": "jan kili",
        "timestamp": 1657120536
    },
    {
        "content": "<p>That would be nice. Though you have a slight problem that a line might be performant 95% of the time until you call it with a list that isn't unique. This is part of the reason I really want to be able to write <code>expect (unique myList)</code></p>\n<p>But also, having the editor track that would be great. Have it tell you. This list was copied because back on line 52 it became shared. We theoretically should be able to do that analysis.</p>",
        "id": 288691243,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1657122758
    },
    {
        "content": "<p>Exactly! Show the risky call stacks that a line is involved in :D</p>",
        "id": 288692083,
        "sender_full_name": "jan kili",
        "timestamp": 1657123158
    }
]