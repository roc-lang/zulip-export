[
    {
        "content": "<p>It's been a long time since I last used Roc. How's effects managed in Roc?</p>",
        "id": 294679085,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1661176035
    },
    {
        "content": "<p>I designed my own language, and discovered that effects can be entangled with each other.</p>\n<p>&lt;A~B&gt;; &lt;A, B&gt;; &lt;A, A, B&gt; are have different meanings</p>",
        "id": 294679680,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1661176268
    },
    {
        "content": "<p>This allows the compiler more freedom to reorder your code. It's unfriendly towards text-based languages though.</p>",
        "id": 294680014,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1661176371
    },
    {
        "content": "<p>In this, are you asking about how dependencies between effects are handled?</p>\n<p>Just not used to the <code>&lt;A~B&gt;; &lt;A,B&gt;</code> notation?</p>",
        "id": 294684412,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1661177464
    },
    {
        "content": "<p>The entire syntax of my language:  <a href=\"/user_uploads/22008/5psW_EXySap031C6bsaKeBTg/1.jpg\">1.jpg</a>  <a href=\"/user_uploads/22008/oAjVn2hpvpVIEgFemdObVFq_/2.jpg\">2.jpg</a> <a href=\"/user_uploads/22008/p-YgUdGpVXTvIZ8FuM_687El/3.jpg\">3.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/5psW_EXySap031C6bsaKeBTg/1.jpg\" title=\"1.jpg\"><img src=\"/user_uploads/22008/5psW_EXySap031C6bsaKeBTg/1.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/22008/oAjVn2hpvpVIEgFemdObVFq_/2.jpg\" title=\"2.jpg\"><img src=\"/user_uploads/22008/oAjVn2hpvpVIEgFemdObVFq_/2.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/22008/p-YgUdGpVXTvIZ8FuM_687El/3.jpg\" title=\"3.jpg\"><img src=\"/user_uploads/22008/p-YgUdGpVXTvIZ8FuM_687El/3.jpg\"></a></div>",
        "id": 294696258,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1661178184
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/Uow_8OeNhr3bFOCZc72PN5Ev/effect.jpg\">explanation</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/Uow_8OeNhr3bFOCZc72PN5Ev/effect.jpg\" title=\"explanation\"><img src=\"/user_uploads/22008/Uow_8OeNhr3bFOCZc72PN5Ev/effect.jpg\"></a></div>",
        "id": 294696870,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1661178338
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/231634-beginners/topic/How's.20Effects.20in.20Roc/near/294684412\">said</a>:</p>\n<blockquote>\n<p>In this, are you asking about how dependencies between effects are handled?</p>\n<p>Just not used to the <code>&lt;A~B&gt;; &lt;A,B&gt;</code> notation?</p>\n</blockquote>\n<p>Forget about the notation. It's hard to express non-linearity in text.</p>",
        "id": 294696973,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1661178370
    },
    {
        "content": "<p>I think I'm the first to propose this. All current literature and programming languages based on lambda calculus is bound by linearity of text.</p>",
        "id": 294698183,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1661178476
    },
    {
        "content": "<p>I'll have to read through this more later when I have more time, but i think the common answer is that effects in roc will be explicitly specified in a sequential ordering. That being said, platforms can expose primitives and semantics that enable more complex orderings.</p>",
        "id": 294701515,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1661179300
    },
    {
        "content": "<p>I understand \"effects\" as holes. Like negative space in art.</p>",
        "id": 294710075,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1661181879
    },
    {
        "content": "<p>Roc effects are managed in their types, similar to the the monadic construction of effects. dependencies are embedded in the types, which means, as Brendan said, that the runtime can reordered layered effects at-will (i.e. the \"multiplication\" operation of monadic effects). It sounds like your approach may be more in-line with algebraic effects and effect handlers.</p>",
        "id": 294717962,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1661183887
    }
]