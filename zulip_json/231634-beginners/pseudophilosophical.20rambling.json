[
    {
        "content": "<p>Level 1: I like how some parts of Roc currently exist as an indefinite consensus between semi-strangers. Very few usage patterns are \"solved\" enough to be considered \"best practice\" yet, and even some primary language/ecosystem features that have strong high-level design consensus are still basically <code># TODO: This.</code> in implementation.<br>\nLevel 2: Hmm... even after Roc v1.0 releases, that will still be true! The roadmap is basically just a shared vision.<br>\nLevel 3: That's true for a lot of software, actually - bugs are usually seen as deviations from intended/designed behavior (the consensus), instead of the implementation (the code).<br>\nLevel 4: That's true for many things in life...<br>\nLevel 5: Dang, now I have to post this comment semi-ironically <span aria-label=\"expressionless\" class=\"emoji emoji-1f611\" role=\"img\" title=\"expressionless\">:expressionless:</span></p>",
        "id": 276407616,
        "sender_full_name": "jan kili",
        "timestamp": 1648073327
    },
    {
        "content": "<p>if you're not from the pure FP tradition there are also a bunch of implicit assumptions</p>",
        "id": 276407788,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648073418
    },
    {
        "content": "<p>where the plan is just to do it like elm is doing it, but if you're not aware of that, then that is not obvious</p>",
        "id": 276407831,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648073447
    },
    {
        "content": "<p>or haskell or ocaml/lean/koka/whatever</p>",
        "id": 276407851,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648073460
    },
    {
        "content": "<p>Yeah, I wasn't thinking about that FP/assumptions angle, but that's true. Those assumptions are especially significant for Roc, since we're marketing it as \"FP for systems programming\", which reads to me as \"FP for people who don't trust FP\", which I think leads to \"FP for people who don't know FP\" (like me!)</p>",
        "id": 276408464,
        "sender_full_name": "jan kili",
        "timestamp": 1648073790
    },
    {
        "content": "<p>absolutely, the aim is to appeal to an audience that doesn't currently use a language with roc's type system and other features/restrictions</p>",
        "id": 276408580,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648073873
    },
    {
        "content": "<p>but, well, it takes time to put things in place</p>",
        "id": 276408634,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648073886
    },
    {
        "content": "<p>and then also, a new language does mean you need to find new patterns</p>",
        "id": 276408650,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648073896
    },
    {
        "content": "<p>rust code does not look like c++, even though the feature sets are similar</p>",
        "id": 276408675,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1648073919
    }
]