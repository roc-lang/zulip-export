[
    {
        "content": "<p>Hey folks, hello!<br>\nI recently started to play with Roc and got amazed about the Platform concept. </p>\n<p>I was thinking about doing something really similar for .NET, kind of creating a purely functional language and use .NET to interact with the outside world(just for fun, not a real project tho). </p>\n<p>But then, I found the Roc language and figured that if I wanted to do that, the language was already \"ready to use\" I would \"just\" have to write the .NET platform binding for it.</p>\n<p>I started a <a href=\"https://github.com/iuribrindeiro/roc-dotnet-platform\">git repo</a> with it, and if I'm able to get anything working, I will open a PR on the roc examples repo with my basic experimentations.</p>",
        "id": 425943736,
        "sender_full_name": "Iuri Brindeiro",
        "timestamp": 1710173220
    },
    {
        "content": "<p>Sounds awesome :)</p>",
        "id": 425944222,
        "sender_full_name": "Anton",
        "timestamp": 1710173352
    },
    {
        "content": "<p>nice, welcome! <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span></p>",
        "id": 425946252,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710173892
    },
    {
        "content": "<p>we have some <a href=\"https://github.com/roc-lang/roc/tree/main/examples\">examples of interop to other platforms</a>, including JVM - they're basically all Hello World levels of completeness, but they might be helpful to get up and running!</p>",
        "id": 425946349,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710173921
    },
    {
        "content": "<p>fair warning, the tooling for generating bindings to different low-level targets is better than it used to be, but the ergonomics are not great yet <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 425946504,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710173964
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281383\">Richard Feldman</span> <a href=\"#narrow/stream/231634-beginners/topic/.2ENET.20Platform/near/425946349\">said</a>:</p>\n<blockquote>\n<p>we have some <a href=\"https://github.com/roc-lang/roc/tree/main/examples\">examples of interop to other platforms</a>, including JVM - they're basically all Hello World levels of completeness, but they might be helpful to get up and running!</p>\n</blockquote>\n<p>Yep! I'm using it as example while also using the simpler version from the <a href=\"https://github.com/roc-lang/examples/blob/main/examples/GoPlatform/platform/main.go\">examples repo</a>.</p>\n<p>So much to learn about C ABI, but luckily I will have at least an example  to share :)</p>",
        "id": 425948832,
        "sender_full_name": "Iuri Brindeiro",
        "timestamp": 1710174607
    },
    {
        "content": "<p>awesome, feel free to ask on Zulip if you have any questions! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 425966815,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710175617
    },
    {
        "content": "<p>So, one thing that is really bugging me:</p>\n<p>If my .NET platform has the ability to, lets say, send http requests, is there any pattern from Roc that I can follow so I can implement it?</p>\n<p>For example: <br>\nI noticed that the <a href=\"https://github.com/agu-z/roc-pg\">roc-pg</a> requires the platform to implement the TCP effect.<br>\nBut how do I know, in my platform, the \"correct way\" of implementing the TCP effect?</p>\n<p>My concern is that if I implement the <code>Tcp.withConnect</code> with a different name like <code>Tcp.usingConnection</code> or something similar, the package won't work in my platform?</p>\n<p><strong>Edit:</strong> I actually just found the <code>hosted</code> module type, but in the docs it says that it is <em>\"likely to be deprecated soon\"</em>.<br>\nProbably this is the thing that I'm looking for?</p>",
        "id": 425989038,
        "sender_full_name": "Iuri Brindeiro",
        "timestamp": 1710183299
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span>  is currently working on implementing the <a href=\"https://docs.google.com/document/d/110MwQi7Dpo1Y69ECFXyyvDWzF4OYv1BLojIm08qDTvg/edit?usp=sharing\">Module Params</a> proposal. I think this is relevant as in the near future platform will actually pass effects into the modules, so all modules will be platfrom-independent by design.</p>",
        "id": 425989337,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1710183428
    },
    {
        "content": "<p>In this way the specific name is not important, moreso the type signature and behaviour. You can always wrap the effect before passing it into the module if you want to customise the behaviour somehow.</p>",
        "id": 425989471,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1710183482
    },
    {
        "content": "<p>lovely. Thx <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> !</p>",
        "id": 425989523,
        "sender_full_name": "Iuri Brindeiro",
        "timestamp": 1710183494
    },
    {
        "content": "<p>So the idea is that platforms will only need to implement the lowest level primitives, and the roc library ecosystem will sit nicely on top of that (across all the platforms).</p>",
        "id": 425989668,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1710183553
    },
    {
        "content": "<p>Yeah, roc-pg being a package, is not supposed to be able to import from the platform like it does. It’s kind of exploiting a bug right now <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>\n<p>As Luke said, module params is how we are going to solve this problem. The app explicitly provides the effects to the package, which allows it to adapt them if they don’t quite match the types provided by the platform or even mock them for testing purposes.</p>",
        "id": 426012488,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1710192871
    },
    {
        "content": "<p>I did it \\o/</p>\n<p>I was able to the same as we have in the go examples <a href=\"https://github.com/roc-lang/examples/blob/main/examples/GoPlatform/README.md\">https://github.com/roc-lang/examples/blob/main/examples/GoPlatform/README.md</a><br>\nBut with .NET <a href=\"https://github.com/iuribrindeiro/roc-dotnet-platform\">https://github.com/iuribrindeiro/roc-dotnet-platform</a></p>\n<p>Took me a few days and I still don't understand too much about what is going on there regarding the C functions interop since I'm still learning this. 0 C experience here.</p>\n<p>But it is working and I'll open a PR to a new .NET example and still playing around it :)</p>",
        "id": 426638460,
        "sender_full_name": "Iuri Brindeiro",
        "timestamp": 1710454411
    },
    {
        "content": "<p>yooooo congratulations, that's awesome!!! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 426647634,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1710459321
    },
    {
        "content": "<p>hey folks, should I PR <a href=\"https://github.com/iuribrindeiro/roc/tree/dotnet-platform-example/examples/dotnet-interop\">this</a> into the roc repo under the examples folder or to the <a href=\"https://github.com/roc-lang/examples\">examples</a> repo?</p>",
        "id": 427512787,
        "sender_full_name": "Iuri Brindeiro",
        "timestamp": 1710775915
    },
    {
        "content": "<p>Examples repo sounds good :)</p>",
        "id": 427513369,
        "sender_full_name": "Anton",
        "timestamp": 1710776052
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/stream/231634-beginners/topic/.2ENET.20Platform/near/427513369\">said</a>:</p>\n<blockquote>\n<p>Examples repo sounds good :)</p>\n</blockquote>\n<p>Will this be automatically part of this page once/if it is merged?<br>\n<a href=\"https://www.roc-lang.org/examples\">https://www.roc-lang.org/examples</a></p>",
        "id": 427518596,
        "sender_full_name": "Iuri Brindeiro",
        "timestamp": 1710777405
    },
    {
        "content": "<p>Once it is merged and any PR is merged into roc-lang/roc because that's when website updates are triggered.</p>",
        "id": 427523367,
        "sender_full_name": "Anton",
        "timestamp": 1710778605
    }
]