[
    {
        "content": "<p>Following the nix instructions on macos aarch64, I had no trouble getting the repl working, but I'm struggling with the devtools. As you can see below, <code>LLVM_SYS_130_PREFIX</code> works fine from inside the <code>roc</code> environment, but can't be found when building roc-devtools. Any help would be appreciated.</p>\n<div class=\"codehilite\"><pre><span></span><code>roc % nix develop\nRestored session: Sat 23 Sep 2023 09:55:30 BST\nJohns-MacBook-Pro:roc john$ echo $LLVM_SYS_130_PREFIX\n/nix/store/fvs60mzmhnqgpj2js7qij36irnwq2qpw-llvm-13.0.1-dev\nJohns-MacBook-Pro:roc john$ exit\nexit\n\nSaving session...\n...saving history...truncating history files...\n...completed.\nroc % cd ../roc-devtools\nroc-devtools % nix develop\nwarning: Git tree &#39;/Users/john/Git/roc-devtools&#39; is dirty\nerror:\n       … while calling the &#39;derivationStrict&#39; builtin\n\n         at /builtin/derivation.nix:9:12: (source not available)\n\n       … while evaluating derivation &#39;nix-shell&#39;\n         whose name attribute is located at /nix/store/8qr2x85z4rkf7rca3pk1dfyzsi60j7r2-source/pkgs/stdenv/generic/make-derivation.nix:300:7\n\n       … while evaluating attribute &#39;LLVM_SYS_130_PREFIX&#39; of derivation &#39;nix-shell&#39;\n\n         at /nix/store/jhcviv44hxx2bqbx4s439j92cdbfxnmw-source/flake.nix:48:11:\n\n           47|           # env vars\n           48|           LLVM_SYS_130_PREFIX = rocShell.LLVM_SYS_130_PREFIX;\n             |           ^\n           49|           NIX_GLIBC_PATH = rocShell.NIX_GLIBC_PATH;\n\n       error: attribute &#39;LLVM_SYS_130_PREFIX&#39; missing\n\n       at /nix/store/jhcviv44hxx2bqbx4s439j92cdbfxnmw-source/flake.nix:48:33:\n\n           47|           # env vars\n           48|           LLVM_SYS_130_PREFIX = rocShell.LLVM_SYS_130_PREFIX;\n             |                                 ^\n           49|           NIX_GLIBC_PATH = rocShell.NIX_GLIBC_PATH;\n</code></pre></div>",
        "id": 392665523,
        "sender_full_name": "John Colvin",
        "timestamp": 1695459925
    },
    {
        "content": "<p>Hi John,<br>\nI'll try to reproduce and fix this issue today</p>",
        "id": 392669181,
        "sender_full_name": "Anton",
        "timestamp": 1695461515
    },
    {
        "content": "<p>Can you try out my devtools-nix-fix branch <span class=\"user-mention\" data-user-id=\"652784\">@John Colvin</span>? It's best to start from scratch with the steps mentioned in <a href=\"https://github.com/roc-lang/roc/tree/devtools-nix-fix/devtools\">the README </a>.</p>",
        "id": 392718205,
        "sender_full_name": "Anton",
        "timestamp": 1695486702
    },
    {
        "content": "<p>Thanks for helping so fast. That gives me a new error:</p>\n<div class=\"codehilite\"><pre><span></span><code>roc-devtools % nix develop\nwarning: Git tree &#39;/Users/john/Git/roc-devtools&#39; is dirty\nerror:\n       … while calling the &#39;derivationStrict&#39; builtin\n\n         at /builtin/derivation.nix:9:12: (source not available)\n\n       … while evaluating derivation &#39;nix-shell&#39;\n         whose name attribute is located at /nix/store/8qr2x85z4rkf7rca3pk1dfyzsi60j7r2-source/pkgs/stdenv/generic/make-derivation.nix:300:7\n\n       … while evaluating attribute &#39;nativeBuildInputs&#39; of derivation &#39;nix-shell&#39;\n\n         at /nix/store/8qr2x85z4rkf7rca3pk1dfyzsi60j7r2-source/pkgs/stdenv/generic/make-derivation.nix:344:7:\n\n          343|       depsBuildBuild              = lib.elemAt (lib.elemAt dependencies 0) 0;\n          344|       nativeBuildInputs           = lib.elemAt (lib.elemAt dependencies 0) 1;\n             |       ^\n          345|       depsBuildTarget             = lib.elemAt (lib.elemAt dependencies 0) 2;\n\n       error: Package ‘gdb-13.2’ in /nix/store/8qr2x85z4rkf7rca3pk1dfyzsi60j7r2-source/pkgs/development/tools/misc/gdb/default.nix:140 is not available on the requested hostPlatform:\n         hostPlatform.config = &quot;aarch64-apple-darwin&quot;\n         package.meta.platforms = [\n           &quot;aarch64-linux&quot;\n           &quot;armv5tel-linux&quot;\n           &quot;armv6l-linux&quot;\n           &quot;armv7a-linux&quot;\n           &quot;armv7l-linux&quot;\n           &quot;i686-linux&quot;\n           &quot;loongarch64-linux&quot;\n           &quot;m68k-linux&quot;\n           &quot;microblaze-linux&quot;\n           &quot;microblazeel-linux&quot;\n           &quot;mips-linux&quot;\n           &quot;mips64-linux&quot;\n           &quot;mips64el-linux&quot;\n           &quot;mipsel-linux&quot;\n           &quot;powerpc64-linux&quot;\n           &quot;powerpc64le-linux&quot;\n           &quot;riscv32-linux&quot;\n           &quot;riscv64-linux&quot;\n           &quot;s390-linux&quot;\n           &quot;s390x-linux&quot;\n           &quot;x86_64-linux&quot;\n           &quot;i686-cygwin&quot;\n           &quot;x86_64-cygwin&quot;\n           &quot;x86_64-darwin&quot;\n         ]\n         package.meta.badPlatforms = [ ]\n       , refusing to evaluate.\n\n       a) To temporarily allow packages that are unsupported for this system, you can use an environment variable\n          for a single invocation of the nix tools.\n\n            $ export NIXPKGS_ALLOW_UNSUPPORTED_SYSTEM=1\n\n        Note: For `nix shell`, `nix build`, `nix develop` or any other Nix 2.4+\n        (Flake) command, `--impure` must be passed in order to read this\n        environment variable.\n\n       b) For `nixos-rebuild` you can set\n         { nixpkgs.config.allowUnsupportedSystem = true; }\n       in configuration.nix to override this.\n\n       c) For `nix-env`, `nix-build`, `nix-shell` or any other Nix command you can add\n         { allowUnsupportedSystem = true; }\n       to ~/.config/nixpkgs/config.nix.\n</code></pre></div>",
        "id": 392732753,
        "sender_full_name": "John Colvin",
        "timestamp": 1695497761
    },
    {
        "content": "<p>I removed <code>gdb</code> and <code>vadimcn.vscode-lldb</code> from <code>flake.nix</code>, finally got it building. I think maybe the template needs some adjustment for macos-aarch64 users.</p>",
        "id": 392824341,
        "sender_full_name": "John Colvin",
        "timestamp": 1695556330
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> I'll add a CI test on macos-aarch64 and modify the file as needed</p>",
        "id": 392961431,
        "sender_full_name": "Anton",
        "timestamp": 1695635134
    },
    {
        "content": "<p>Your fixes have been applied <span class=\"user-mention\" data-user-id=\"652784\">@John Colvin</span> and are now available on the main branch. I've also added a test for the devtools flake on macos aarch64.</p>",
        "id": 393264847,
        "sender_full_name": "Anton",
        "timestamp": 1695742574
    }
]