[
    {
        "content": "<p>I've started the second test for my second ever Roc function which I'm building up test by test in the TDD style.</p>\n<p>I don't want to include long inputs as arguments to the <code>expect</code> function. So I've pulled these out to globals. That's not great because on my next test I'm not going to be able to use the same names.</p>\n<p>Is there a better idiomatic way to structure a test like this:</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code># No items left returns current row.\ncurrentRowItems = [{}, {}, {}]\nremovedItems = [{}, {}]\nheadings = [\"a\", \"b\"]\nexpect getNextRow [] 10 21 currentRowItems 12 removedItems headings == {\n    row: {\n        items: currentRowItems,\n        offsetY: 0,\n        height: 21,\n        currentRowItems: [],\n        width: 12,\n        headings\n    },\n    removedItems,\n    remainingItems: []\n}\n</code></pre></div>",
        "id": 449171301,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1720130648
    },
    {
        "content": "<p>Just put them inside the inspect as variables</p>",
        "id": 449171413,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720130740
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>expect\n    currentRowItems = [{}, {}, {}]\n    removedItems = [{}, {}]\n    headings = [&quot;a&quot;, &quot;b&quot;]\n    getNextRow [] 10 21 currentRowItems 12 removedItems headings == {\n        row: {\n            items: currentRowItems,\n            offsetY: 0,\n            height: 21,\n            currentRowItems: [],\n            width: 12,\n            headings\n        },\n        removedItems,\n        remainingItems: []\n    }\n</code></pre></div>",
        "id": 449171507,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720130782
    },
    {
        "content": "<p>When an expect fails, it will also print any variables within the expect scope.</p>",
        "id": 449171600,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720130813
    },
    {
        "content": "<p>So it is often nice to do:</p>\n<div class=\"codehilite\"><pre><span></span><code>expect\n    currentRowItems = [{}, {}, {}]\n    removedItems = [{}, {}]\n    headings = [&quot;a&quot;, &quot;b&quot;]\n    out = getNextRow [] 10 21 currentRowItems 12 removedItems headings\n    out == {\n        row: {\n            items: currentRowItems,\n            offsetY: 0,\n            height: 21,\n            currentRowItems: [],\n            width: 12,\n            headings\n        },\n        removedItems,\n        remainingItems: []\n    }\n</code></pre></div>",
        "id": 449171688,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1720130843
    },
    {
        "content": "<p>Thanks that a lot better</p>",
        "id": 449172556,
        "sender_full_name": "Ashley Davis",
        "timestamp": 1720131166
    }
]