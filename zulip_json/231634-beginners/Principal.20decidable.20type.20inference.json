[
    {
        "content": "<p>Hello! I recently stumbled across Roc and am liking what I’ve seen so far. One of the most interesting things to me is how it’s statically typed but type annotations are completely optional. I heard it referenced as “principal decidable type inference”. Is this something that’s unique to Roc? I’ve never heard of any other language like this.</p>",
        "id": 321706139,
        "sender_full_name": "Nick Hallstrom",
        "timestamp": 1673897122
    },
    {
        "content": "<p>Elm is another language with this and I believe also Haskell (I've heard it go by the name global type inference)</p>",
        "id": 321706327,
        "sender_full_name": "Martin Stewart",
        "timestamp": 1673897206
    },
    {
        "content": "<p>haskell has type inference, but it's not (in general) decidable</p>",
        "id": 321706489,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673897288
    },
    {
        "content": "<p>but in most programs that you'd actually write it's very similar to what elm and roc give you</p>",
        "id": 321706543,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1673897314
    }
]