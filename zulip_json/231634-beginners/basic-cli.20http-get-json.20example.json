[
    {
        "content": "<p>Hi all. Iâ€™m trying to get the basic-cli http-get-json example to work. My code (only slightly modified):</p>\n<div class=\"codehilite\"><pre><span></span><code>app [main] {\n    pf: platform &quot;https://github.com/roc-lang/basic-cli/releases/download/0.12.0/Lb8EgiejTUzbggO2HVVuPJFkwvvsfW6LojkLR20kTVE.tar.br&quot;,\n    json: &quot;https://github.com/lukewilliamboswell/roc-json/releases/download/0.10.0/KbIfTNbxShRX1A1FgXei1SpO5Jn8sgP6HP6PXbi-xyA.tar.br&quot;,\n}\n\nimport pf.Http\nimport pf.Task exposing [Task]\nimport pf.Stdout\nimport json.Json\n\n# HTTP GET request with easy decoding to json\n\nmain : Task {} [Exit I32 Str]\nmain =\n    run\n    |&gt; Task.mapErr (\\err -&gt; Exit 1 (Inspect.toStr err))\n\nrun : Task {} _\nrun =\n    # Easy decoding/deserialization of { &quot;foo&quot;: &quot;something&quot; } into a Roc var\n    { title } = Http.get! &quot;https://jsonplaceholder.typicode.com/todos/1&quot; Json.utf8\n\n    Stdout.line! &quot;The json I received was: { title: \\&quot;$(title)\\&quot; }&quot;\n</code></pre></div>\n<p>I used the Nix flake with NixOS on WSL (though a Nix beginner also).</p>\n<div class=\"codehilite\"><pre><span></span><code>nix flake init --template github:roc-lang/roc#simple --refresh\n</code></pre></div>\n<p>I get these outputs.</p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc run --linker=legacy\nfree(): invalid pointer\nAborted\n$ roc run --linker=legacy\nSegmentation fault\n</code></pre></div>\n<p>Am I doing anything wrong or is this a Roc or platform bug? With more complex code I would think roc check false negatives are possible too. Are they or not really?</p>\n<p>Is there a recommended path (os, platform, etc) to use to have the most stable experience?</p>\n<p>Overall love the ideas of Roc so far :)</p>",
        "id": 459916400,
        "sender_full_name": "Jacob Cole",
        "timestamp": 1723397222
    },
    {
        "content": "<p>I don't fully understand all of the flake wiring, but what do you get from <code>roc version</code>?</p>",
        "id": 459963849,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723424798
    },
    {
        "content": "<p>My guess is that your version of the compiler is too new for <code>basic-cli</code> version <code>0.12.0</code>. We recently had some breaking changes that make platform and compiler versioning a bit more finicky.</p>",
        "id": 459963894,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723424851
    },
    {
        "content": "<blockquote>\n<p>Is there a recommended path</p>\n</blockquote>\n<p>Linux and mac are most tested. WSL should work though.</p>",
        "id": 459963973,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723424884
    },
    {
        "content": "<p>From some quick local testing, you either need to upgrade your basic-cli version or downgrade your roc version.</p>",
        "id": 459964146,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723425032
    },
    {
        "content": "<p>The <a href=\"https://github.com/roc-lang/basic-cli/releases/tag/0.13.0\">pre-release basic-cli 0.13.0</a> should work with current roc built from source. Or you can downgrade roc to one of the <a href=\"https://github.com/roc-lang/roc/releases/tag/nightly\">-latest</a> releases. I think nix is equivalent to the <code>-TESTING</code> release.</p>",
        "id": 459964422,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723425192
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> is there a way for us to exposing testing and latest through nix directly?</p>\n<p><code>nix flake init --template github:roc-lang/roc#simple-testing --refresh</code> or something? Not actually sure how the <code>#</code> and versioning works here.</p>",
        "id": 459964515,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723425288
    },
    {
        "content": "<p><code>roc version</code> gives <code>roc built-from-source</code><br>\nbasic-cli 0.13.0 indeed works. Thanks!</p>",
        "id": 459969048,
        "sender_full_name": "Jacob Cole",
        "timestamp": 1723427973
    },
    {
        "content": "<blockquote>\n<p>@Anton is there a way for us to exposing testing and latest through nix directly?</p>\n</blockquote>\n<p>I think that's possible but also quite difficult. You can however decompress a latest or testing release, and you'll see the commit it used, you can use that commit in a nix flake like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>inputs = { roc.url = &quot;github:roc-lang/roc?rev=COMMIT&quot;; };\n</code></pre></div>",
        "id": 460027149,
        "sender_full_name": "Anton",
        "timestamp": 1723450705
    }
]