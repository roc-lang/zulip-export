[
    {
        "content": "<p>Hey! I’m trying to write my first Roc program which is a CLI tool. It needs to run a command and read its output. I’m defining the command as:</p>\n<div class=\"codehilite\"><pre><span></span><code>Cmd.new &quot;git&quot;\n    |&gt; Cmd.args [&quot;log&quot;, &quot;--pretty=format:\\&quot;%H %aI\\&quot;&quot;]\n</code></pre></div>\n<p>And running it with  <code>Task.await (Cmd.output gitLogCmd)</code>, getting the actual Output and turning it into a string with <code>Str.fromUtf8</code>. It works, but my problem here is that each line from the output is enclosed in double quotes:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;4df174c59ec48c135a5e7369d3deeca56497056a 2024-04-03T10:11:49+02:00&quot;\n&quot;b620b1a55428862e44cc5cf06703de043bd46ed1 2024-04-03T10:11:11+02:00&quot;\n</code></pre></div>\n<p>Is that expected? Also the definition of the Output type was quite hard to find, it doesn’t seem to appear in the docs?</p>",
        "id": 430981142,
        "sender_full_name": "Sylvain Brunerie",
        "timestamp": 1712144056
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"706855\">@Sylvain Brunerie</span>,<br>\nCan you share your full code?</p>",
        "id": 430982055,
        "sender_full_name": "Anton",
        "timestamp": 1712144365
    },
    {
        "content": "<blockquote>\n<p>Also the definition of the Output type was quite hard to find, it doesn’t seem to appear in the docs?</p>\n</blockquote>\n<p>I'll make an issue for that :)</p>",
        "id": 430984364,
        "sender_full_name": "Anton",
        "timestamp": 1712145079
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6626\">#6626</a></p>",
        "id": 430985055,
        "sender_full_name": "Anton",
        "timestamp": 1712145302
    },
    {
        "content": "<p>Oh so it looks like it’s just about the argument to <code>git log</code>. <code>Cmd.args [\"log\", \"--pretty=format:\\\"%H %aI\\\"\"]</code> is actually adding the surrounding quotes. So it works perfectly with <code>Cmd.args [\"log\", \"--pretty=format:%H %aI\"]</code> but I can’t run the command this way in the shell. That means I have to change my command from the shell to Roc. Feels weird but maybe it makes sense.</p>",
        "id": 430986129,
        "sender_full_name": "Sylvain Brunerie",
        "timestamp": 1712145627
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> this is reproducible outside the context of Roc via:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>git<span class=\"w\"> </span>log<span class=\"w\"> </span>--pretty<span class=\"o\">=</span>format:<span class=\"s2\">\"\\\"%H %aI\\\"\"</span>\n</code></pre></div>\n<p>It seems that in <span class=\"user-mention\" data-user-id=\"706855\">@Sylvain Brunerie</span>'s case, <code>\\\"</code> is interpreted by Roc with an equivalent result (which doesn't seem intuitive as an interpretation; the first <code>\\\"</code> seems to be interpreted differently from the second instance, e.g., as if it's a closing and opening quotation marks), whilst the desired output is probably something like:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>git<span class=\"w\"> </span>log<span class=\"w\"> </span>--pretty<span class=\"o\">=</span>format:<span class=\"s2\">\"%H %aI\"</span>\n</code></pre></div>",
        "id": 430986624,
        "sender_full_name": "Hristo",
        "timestamp": 1712145779
    },
    {
        "content": "<p>This might be relevant: <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.args\">https://doc.rust-lang.org/std/process/struct.Command.html#method.args</a></p>\n<blockquote>\n<p>Note that the arguments are not passed through a shell, but given literally to the program. This means that shell syntax like quotes, escaped characters, word splitting, glob patterns, variable substitution, etc. have no effect.</p>\n</blockquote>",
        "id": 430989199,
        "sender_full_name": "Sylvain Brunerie",
        "timestamp": 1712146583
    },
    {
        "content": "<p>That’s the function called by the underlying basic-cli platform, so I guess the behaviour is expected. For now, I find it very confusing, but maybe it’s for the best, and there should just be a similar warning in the platform docs.</p>",
        "id": 430989428,
        "sender_full_name": "Sylvain Brunerie",
        "timestamp": 1712146663
    },
    {
        "content": "<blockquote>\n<p>and there should just be a similar warning in the platform docs.</p>\n</blockquote>\n<p>I'll do that :)</p>",
        "id": 431002027,
        "sender_full_name": "Anton",
        "timestamp": 1712150443
    }
]