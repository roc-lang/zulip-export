[
    {
        "content": "<p><code>List [One, Two] -&gt; List [One]</code></p>\n<p>The function is only allowed to return One-Tags but it is returning a Two-Tag without any compiler errors: <a href=\"https://github.com/ni-ko-o-kin/advent-of-code-2022-roc/blob/e176fa9804d9ba598f8c4a55b2ca2adc258b0e83/OneTwo.roc#L24\">https://github.com/ni-ko-o-kin/advent-of-code-2022-roc/blob/e176fa9804d9ba598f8c4a55b2ca2adc258b0e83/OneTwo.roc#L24</a></p>",
        "id": 319403023,
        "sender_full_name": "Nikolaus Wettstein",
        "timestamp": 1672843273
    },
    {
        "content": "<p>Ouch, yeah that's a bug. Could you please file an issue?</p>",
        "id": 319407473,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1672844527
    },
    {
        "content": "<p>Sure!</p>",
        "id": 319409088,
        "sender_full_name": "Nikolaus Wettstein",
        "timestamp": 1672845011
    },
    {
        "content": "<p>But is this function possible in roc? Does the compiler know that I only returned One-Tags in all when-is branches? (regardless of the compiler bug)</p>",
        "id": 319410230,
        "sender_full_name": "Nikolaus Wettstein",
        "timestamp": 1672845339
    },
    {
        "content": "<p>Well, that function is currently inferred as <code>List [One, Two] -&gt; List [One, Two]</code> (the bug is that the output tag is allowed to grow larger than you specified)</p>",
        "id": 319412219,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1672845917
    },
    {
        "content": "<p>If both of your when branches were <code>-&gt; One</code> then <code>List [One, Two] -&gt; List [One]</code> would be inferred.</p>",
        "id": 319412301,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1672845945
    }
]