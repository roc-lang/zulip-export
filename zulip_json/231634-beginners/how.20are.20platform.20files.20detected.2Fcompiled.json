[
    {
        "content": "<p>Hi! I'm looking at the example platforms in platform-switching, but I don't understand how <code>roc build</code> can magically detect and compile platforms in C, zig etc. as far as I can see there's no build file, are they hard coded?</p>\n<p>how can I modify the build step? for example, in a C platform how do I use a shared lib, include a header, etc.</p>\n<p>I've seen an example of compiling the platform and then the roc app separately with --no-link, but I'm wondering if there's a standard way to all this</p>",
        "id": 422141450,
        "sender_full_name": "Pei Yang Ching",
        "timestamp": 1708301865
    },
    {
        "content": "<p>The build system is mostly a hack rn in the <code>link.rs</code> file.</p>",
        "id": 422141644,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1708302028
    },
    {
        "content": "<p>If you need more control, you have to use <code>--no-link</code> and then have another build system deal with things.</p>",
        "id": 422141676,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1708302075
    },
    {
        "content": "<p>ah I see, thanks for the quick reply</p>",
        "id": 422141716,
        "sender_full_name": "Pei Yang Ching",
        "timestamp": 1708302121
    },
    {
        "content": "<p>Long term, we plan to have platforms have their own build scripts. They will compile into a special format that enable roc to deal with all the rest of the linking without knowing anything about the language the platform is written in.</p>",
        "id": 422141788,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1708302166
    },
    {
        "content": "<p>Related issue <a href=\"https://github.com/roc-lang/roc/issues/6414\">https://github.com/roc-lang/roc/issues/6414</a></p>",
        "id": 422142810,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1708303293
    }
]