[
    {
        "content": "<p>How do I print a number? I tried <code>dbg totalScore</code> and got </p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"err\">──</span><span class=\"w\"> </span><span class=\"kt\">TYPE</span><span class=\"w\"> </span><span class=\"kt\">MISMATCH</span><span class=\"w\"> </span><span class=\"err\">────────────────────────────────────────────────────</span><span class=\"w\"> </span><span class=\"nv\">main</span><span class=\"nf\">.</span><span class=\"nv\">roc</span><span class=\"w\"> </span><span class=\"err\">─</span><span class=\"w\"></span>\n\n<span class=\"kt\">This</span><span class=\"w\"> </span><span class=\"nv\">expect</span><span class=\"w\"> </span><span class=\"nv\">condition</span><span class=\"w\"> </span><span class=\"nv\">needs</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">be</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"kt\">Bool</span><span class=\"nf\">:</span><span class=\"w\"></span>\n\n<span class=\"mi\">15</span><span class=\"err\">│</span><span class=\"w\">          </span><span class=\"nv\">dbg</span><span class=\"w\"> </span><span class=\"nv\">totalScore</span><span class=\"w\"></span>\n<span class=\"w\">                 </span><span class=\"nf\">^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"kt\">This</span><span class=\"w\"> </span><span class=\"nv\">totalScore</span><span class=\"w\"> </span><span class=\"nv\">value</span><span class=\"w\"> </span><span class=\"nv\">is</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"nf\">:</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kt\">Num</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"w\"></span>\n\n<span class=\"kt\">But</span><span class=\"w\"> </span><span class=\"kt\">I</span><span class=\"w\"> </span><span class=\"nv\">need</span><span class=\"w\"> </span><span class=\"nv\">every</span><span class=\"w\"> </span><span class=\"nv\">expect</span><span class=\"w\"> </span><span class=\"nv\">condition</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">evaluate</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"kt\">Bool</span><span class=\"err\">—</span><span class=\"nv\">either</span><span class=\"w\"></span>\n<span class=\"kt\">Bool</span><span class=\"nf\">.</span><span class=\"nv\">true</span><span class=\"w\"> </span><span class=\"nv\">or</span><span class=\"w\"> </span><span class=\"kt\">Bool</span><span class=\"nf\">.</span><span class=\"nv\">false</span><span class=\"nf\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I tried the tag, too, but got:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"err\">──</span><span class=\"w\"> </span><span class=\"kt\">TYPE</span><span class=\"w\"> </span><span class=\"kt\">MISMATCH</span><span class=\"w\"> </span><span class=\"err\">────────────────────────────────────────────────────</span><span class=\"w\"> </span><span class=\"nv\">main</span><span class=\"nf\">.</span><span class=\"nv\">roc</span><span class=\"w\"> </span><span class=\"err\">─</span><span class=\"w\"></span>\n\n<span class=\"kt\">This</span><span class=\"w\"> </span><span class=\"nv\">expect</span><span class=\"w\"> </span><span class=\"nv\">condition</span><span class=\"w\"> </span><span class=\"nv\">needs</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">be</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"kt\">Bool</span><span class=\"nf\">:</span><span class=\"w\"></span>\n\n<span class=\"mi\">15</span><span class=\"err\">│</span><span class=\"w\">          </span><span class=\"nv\">dbg</span><span class=\"w\"> </span><span class=\"kt\">T</span><span class=\"w\"> </span><span class=\"s\">\"the value of `totalScore` is:\"</span><span class=\"w\"> </span><span class=\"nv\">totalScore</span><span class=\"w\"></span>\n<span class=\"w\">                 </span><span class=\"nf\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"kt\">This</span><span class=\"w\"> </span><span class=\"kt\">T</span><span class=\"w\"> </span><span class=\"nv\">tag</span><span class=\"w\"> </span><span class=\"nv\">application</span><span class=\"w\"> </span><span class=\"nv\">has</span><span class=\"w\"> </span><span class=\"nv\">the</span><span class=\"w\"> </span><span class=\"kr\">type</span><span class=\"nf\">:</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"p\">[</span><span class=\"kt\">T</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">Num</span><span class=\"w\"> </span><span class=\"nf\">*</span><span class=\"p\">)]</span><span class=\"w\"></span>\n\n<span class=\"kt\">But</span><span class=\"w\"> </span><span class=\"kt\">I</span><span class=\"w\"> </span><span class=\"nv\">need</span><span class=\"w\"> </span><span class=\"nv\">every</span><span class=\"w\"> </span><span class=\"nv\">expect</span><span class=\"w\"> </span><span class=\"nv\">condition</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">evaluate</span><span class=\"w\"> </span><span class=\"nv\">to</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"kt\">Bool</span><span class=\"err\">—</span><span class=\"nv\">either</span><span class=\"w\"></span>\n<span class=\"kt\">Bool</span><span class=\"nf\">.</span><span class=\"nv\">true</span><span class=\"w\"> </span><span class=\"nv\">or</span><span class=\"w\"> </span><span class=\"kt\">Bool</span><span class=\"nf\">.</span><span class=\"nv\">false</span><span class=\"nf\">.</span><span class=\"w\"></span>\n\n<span class=\"err\">────────────────────────────────────────────────────────────────────────────────</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 313496973,
        "sender_full_name": "JesterXL",
        "timestamp": 1669986934
    },
    {
        "content": "<p>Maybe easier to just convert to a string; how do I do that?</p>",
        "id": 313497129,
        "sender_full_name": "JesterXL",
        "timestamp": 1669986974
    },
    {
        "content": "<p>You can use “Num.toStr”, though looks like the compiler is trying to constrain the wrong type here - cc <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span></p>",
        "id": 313497638,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1669987150
    },
    {
        "content": "<p>hmm that should be fixed in the latest nightly I think</p>",
        "id": 313497720,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1669987184
    },
    {
        "content": "<p>it was a parsing issue, really</p>",
        "id": 313497747,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1669987199
    },
    {
        "content": "<p>Can you share a snippet of how you are using dbg? It's only a new feature so could be broken. Have you seen <a href=\"#narrow/stream/231634-beginners/topic/mac.20os.2013.20compatibility/near/313385180\">this</a> thread where I think a similar problem was discussed?</p>",
        "id": 313498015,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1669987285
    },
    {
        "content": "<p>Snippet here: <a href=\"https://gist.github.com/JesterXL/3e8b12ae456dafce5d159983659d53e3\">https://gist.github.com/JesterXL/3e8b12ae456dafce5d159983659d53e3</a></p>",
        "id": 313498614,
        "sender_full_name": "JesterXL",
        "timestamp": 1669987469
    },
    {
        "content": "<p>odd... if I add:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"nv\">sumScore</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Num</span><span class=\"nf\">.</span><span class=\"nv\">toStr</span><span class=\"w\"></span>\n</code></pre></div>\n<p>To the end, and remove <code>dbg</code>, it compiles. Even as a <code>Str</code>, though, dbg still thinks it's supposed to be a Bool or something.</p>",
        "id": 313501283,
        "sender_full_name": "JesterXL",
        "timestamp": 1669988326
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"460954\">@JesterXL</span> what does <code>roc version</code> print out?</p>",
        "id": 313501444,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669988391
    },
    {
        "content": "<p><code>roc nightly pre-release, built from commit d2d8511 on Thu Dec  1 09:33:35 UTC 2022</code></p>",
        "id": 313501589,
        "sender_full_name": "JesterXL",
        "timestamp": 1669988431
    },
    {
        "content": "<p>I'm on Mac Silicon, 12.6 Monterey</p>",
        "id": 313501701,
        "sender_full_name": "JesterXL",
        "timestamp": 1669988473
    },
    {
        "content": "<p>ah, that <code>dbg</code> issue got fixed in yesterday's nightly release <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n<p>can you try downloading the latest <code>roc</code> binary from <a href=\"https://github.com/roc-lang/roc/releases\">Releases</a> and see if it works now?</p>",
        "id": 313507235,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1669990082
    },
    {
        "content": "<p>OH yeah baby, that fixed, thanks y'all!</p>",
        "id": 313542181,
        "sender_full_name": "JesterXL",
        "timestamp": 1669999926
    }
]