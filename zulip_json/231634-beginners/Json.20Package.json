[
    {
        "content": "<p>I've been experimenting with URL packages and made this example using Json which I think is pretty neat. If anyone runs this please lets me know; I'm interested know if the Json URL pacakge works for you!  </p>\n<p>Try running both <code>roc run</code> and <code>roc test</code>... just copy and paste below into a <code>.roc</code> file and it should just work <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span></p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">app</span><span class=\"w\"> </span><span class=\"s\">\"example\"</span>\n<span class=\"w\">    </span><span class=\"nx\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nv\">cli</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.2.1/wx1N6qhU3kKva-4YqsVJde3fho34NqiLD3m620zZ-OI.tar.br\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nv\">json</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"https://asdfasdf23452.s3.ap-southeast-2.amazonaws.com/cdKMia6cwdRG6Gb0SfXP8cgGF7yTz-i959FV6ZfuS0E.tar.br\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"nx\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"nx\">cli</span><span class=\"p\">.</span><span class=\"nx\">Stdout</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nx\">json</span><span class=\"p\">.</span><span class=\"nx\">Core</span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"nx\">Json</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">toUtf8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">fromUtf8</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"nx\">Decode</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"nx\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nx\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"nx\">to</span><span class=\"w\"> </span><span class=\"nx\">cli</span>\n\n<span class=\"nv\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"> </span><span class=\"s\">\"Hello \\(person.name)!\"</span>\n\n<span class=\"nv\">Person</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nv\">name</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"nv\">inputStr</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Str</span>\n<span class=\"nv\">inputStr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"{\\\"name\\\":\\\"John Smith\\\"}\"</span>\n\n<span class=\"nv\">person</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Person</span>\n<span class=\"nv\">person</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">    </span><span class=\"nx\">inputStr</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">.</span><span class=\"nx\">toUtf8</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Decode</span><span class=\"p\">.</span><span class=\"nx\">fromBytes</span><span class=\"w\"> </span><span class=\"nx\">fromUtf8</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Result</span><span class=\"p\">.</span><span class=\"nx\">onErr</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">crash</span><span class=\"w\"> </span><span class=\"s\">\"bad decode\"</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Result</span><span class=\"p\">.</span><span class=\"nx\">withDefault</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"nv\">outputStr</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Str</span>\n<span class=\"nv\">outputStr</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">    </span><span class=\"nx\">person</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Encode</span><span class=\"p\">.</span><span class=\"nx\">toBytes</span><span class=\"w\"> </span><span class=\"nx\">toUtf8</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">.</span><span class=\"nx\">fromUtf8</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Result</span><span class=\"p\">.</span><span class=\"nx\">onErr</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">crash</span><span class=\"w\"> </span><span class=\"s\">\"bad encode\"</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Result</span><span class=\"p\">.</span><span class=\"nx\">withDefault</span><span class=\"w\"> </span><span class=\"s\">\"\"</span>\n\n<span class=\"nx\">expect</span><span class=\"w\"> </span><span class=\"nx\">outputStr</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nx\">inputStr</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>luke@192-168-1-104<span class=\"w\"> </span>examples<span class=\"w\"> </span>%<span class=\"w\"> </span>roc<span class=\"w\"> </span>run<span class=\"w\"> </span>hello-world.roc\nHello<span class=\"w\"> </span>John<span class=\"w\"> </span>Smith!\nluke@192-168-1-104<span class=\"w\"> </span>examples<span class=\"w\"> </span>%<span class=\"w\"> </span>roc<span class=\"w\"> </span><span class=\"nb\">test</span><span class=\"w\"> </span>hello-world.roc\n\n<span class=\"m\">0</span><span class=\"w\"> </span>failed<span class=\"w\"> </span>and<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>passed<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"m\">637</span><span class=\"w\"> </span>ms.\n</code></pre></div>",
        "id": 338252044,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1677481744
    },
    {
        "content": "<p>Everything worked as expected on Ubuntu 20.04 :)</p>",
        "id": 338294990,
        "sender_full_name": "Anton",
        "timestamp": 1677495368
    },
    {
        "content": "<p>worked for me on macOS Monterey 12.6.3!</p>",
        "id": 338332219,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1677505931
    }
]