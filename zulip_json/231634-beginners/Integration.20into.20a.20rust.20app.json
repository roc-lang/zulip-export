[
    {
        "content": "<p>Is there a minimal example of integrating Roc into a rust app. I assume I will need the roc glue CLI command, right?</p>",
        "id": 438050074,
        "sender_full_name": "Vladimir Zotov",
        "timestamp": 1715377241
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/tree/remove-gen-stub-lib/examples/platform-switching/rust\">https://github.com/roc-lang/roc/tree/remove-gen-stub-lib/examples/platform-switching/rust</a></p>",
        "id": 438085360,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1715410268
    },
    {
        "content": "<p>On a branch, and hasn't merged yet.  But I've been working on updating all the example platforms</p>",
        "id": 438085379,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1715410301
    },
    {
        "content": "<p>This is the rust one and I think answers your question. Let me know if this helps?</p>",
        "id": 438085425,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1715410327
    },
    {
        "content": "<p>The other possibilities are to have the rust app drive the build completely or to load the roc app dynamically. To do these you can build the app separately into a library with <code>roc build --lib</code>.</p>",
        "id": 438085487,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1715410441
    },
    {
        "content": "<p>Though that example only supports the legacy linker. I've also got changes for basic-cli staged which show how to use cargo to support the surgical linker too. <a href=\"https://github.com/roc-lang/basic-cli/tree/refactor-host\">https://github.com/roc-lang/basic-cli/tree/refactor-host</a></p>",
        "id": 438085588,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1715410561
    }
]