[
    {
        "content": "<p>I'm trying to run the interactive <code>cli-platform</code> examples, but they all seem to hang during the \"Rebuilding host\" stage.</p>\n<p>Am I missing a required step to running them?</p>",
        "id": 286639166,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655541314
    },
    {
        "content": "<p><code>cargo run examples/interactive/echo.roc</code> and <code>cargo run examples/interactive/countdown.roc</code> are working for me, can you try these commands from the root of the repo dir?</p>",
        "id": 286639786,
        "sender_full_name": "Anton",
        "timestamp": 1655542332
    },
    {
        "content": "<p>also they might just take awhile to build, since some of them have Rust hosts - so it's waiting for a full <code>cargo</code> build</p>",
        "id": 286651025,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655558348
    },
    {
        "content": "<p>unfortunately they don't currently pipe the output, so you can't see what the host rebuilding is doing <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 286651041,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655558374
    },
    {
        "content": "<p>so I might also try just letting it run for awhile and seeing if it finishes</p>",
        "id": 286651060,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655558403
    },
    {
        "content": "<p>one way to check would be to try <code>cargo run examples/hello-world/main.roc</code> or <code>cargo run examples/hello-world/zig-platform/helloZig.roc</code> - those use C and Zig hosts, respectively, so they should rebuild the host very fast</p>",
        "id": 286651098,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1655558443
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281383\">Richard Feldman</span> <a href=\"#narrow/stream/231634-beginners/topic/Running.20the.20examples/near/286651060\">said</a>:</p>\n<blockquote>\n<p>so I might also try just letting it run for awhile and seeing if it finishes</p>\n</blockquote>\n<p>Thank you! Indeed, patience resolved it <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 286778490,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655722637
    },
    {
        "content": "<p>I'm trying to run one, or any of the examples, but running into the same issue on all of them,  when I do a <code>cargo run ./path/to/example/dir</code> I receive the following error message in response:</p>\n<div class=\"codehilite\"><pre><span></span><code>ian@UBU:~/Documents/repos/roc$ cargo run ./examples/hello-world/\n    Finished dev [unoptimized + debuginfo] target(s) in 1.59s\n     Running `target/debug/roc ./examples/hello-world/`\nthread &#39;main&#39; panicked at &#39;`wasm-stack-size-kb` is not an id of an argument or a group.\nMake sure you&#39;re using the name of the argument itself and not the name of short or long flags.&#39;, crates/cli/src/lib.rs:528:10\n</code></pre></div>\n<p>Any idea what's causing the issue with the <code>wasm-stack-size-kb</code> flag? Also, where are these flags set?</p>",
        "id": 294366436,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1660944916
    },
    {
        "content": "<p>Last I tried, it's <code>cargo run ./path/to/file.roc</code> - does that work?</p>",
        "id": 294366638,
        "sender_full_name": "jan kili",
        "timestamp": 1660945009
    },
    {
        "content": "<p>Each example dir has one or more runnable Roc app files in it</p>",
        "id": 294366701,
        "sender_full_name": "jan kili",
        "timestamp": 1660945043
    },
    {
        "content": "<p>Regardless, that error message is wild and definitely should be reported as a GH issue. Thanks for finding this!</p>",
        "id": 294367081,
        "sender_full_name": "jan kili",
        "timestamp": 1660945215
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span> , tried that, but same issue. I can definitely open a GH issue for this</p>",
        "id": 294367286,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1660945326
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"431893\">@Brian Carroll</span> might have an idea. He deals with the wasm backend. Sounds like a bug with a flag.</p>",
        "id": 294377427,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1660953061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> is WASM the default compile target?</p>",
        "id": 294379147,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1660954919
    },
    {
        "content": "<p>No, but i think that flag is new, so maybe they messed something up when adding it.</p>",
        "id": 294379303,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1660955073
    },
    {
        "content": "<p>What commit are you on? There was a patch that was supposed to fix this in <a href=\"https://github.com/roc-lang/roc/commit/1f45d13c67a5aa68e70c051af44a265c4e65f3e8\">https://github.com/roc-lang/roc/commit/1f45d13c67a5aa68e70c051af44a265c4e65f3e8</a></p>",
        "id": 294384524,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1660961406
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"454654\">Ayaz Hafiz</span>  Ah, thank you! I was on 4cb5de442 - I just did a pull today before asking, but turns out I was on the old trunk branch from the rtfeldman repo. Oops!</p>",
        "id": 294388888,
        "sender_full_name": "Ian McLerran",
        "timestamp": 1660966216
    },
    {
        "content": "<p>Should I be expecting running all the examples to work? Or are they kind of aspirational/WIP code?</p>",
        "id": 305422686,
        "sender_full_name": "Mario",
        "timestamp": 1666378386
    },
    {
        "content": "<p>more or less they should all work if you have the correct dependencies installed</p>",
        "id": 305422753,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666378417
    },
    {
        "content": "<p>Right okay. Any pointers for what I'm doing wrong here?</p>",
        "id": 305422801,
        "sender_full_name": "Mario",
        "timestamp": 1666378431
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code># mario ~/Downloads/roc_nightly-macos_12_apple_silicon-2022-10-19-e90ddcd                                                                                                        19:53:12\n$ ./roc run ~/dev/projects/roc/examples/cli/http-get.roc\nðŸ”¨ Rebuilding platform...\n\nâ”€â”€ TYPE MISMATCH â”€ ...ario/dev/projects/roc/examples/cli/cli-platform/main.roc â”€\n\nSomething is off with the type annotation of the main required symbol:\n\n2â”‚      requires {} { main : InternalProgram }\n                             ^^^^^^^^^^^^^^^\n\nThis #UserApp.main value is a:\n\n    (List Str -&gt; Task.Task {} [] [Network [Http], Read [Stdin],\n    Write [Stdout]] ?)\n\nBut the type annotation on main says it should be:\n\n    InternalProgram.InternalProgram ?\n\nTip: Type comparisons between an opaque type are only ever equal if\nboth types are the same opaque type. Did you mean to create an opaque\ntype by wrapping it? If I have an opaque type Age := U32 I can create\nan instance of this opaque type by doing @Age 23.\n\n\nâ”€â”€ TYPE MISMATCH â”€ ...ario/dev/projects/roc/examples/cli/cli-platform/main.roc â”€\n\nThis 1st argument to toEffect has an unexpected type:\n\n9â”‚  mainForHost = InternalProgram.toEffect main\n                                           ^^^^\n\nThis #UserApp.main value is a:\n\n    (List Str -&gt; Task.Task {} [] [Network [Http], Read [Stdin],\n    Write [Stdout]] ?)\n\nBut toEffect needs its 1st argument to be:\n\n    InternalProgram.InternalProgram ?\n\nTip: Type comparisons between an opaque type are only ever equal if\nboth types are the same opaque type. Did you mean to create an opaque\ntype by wrapping it? If I have an opaque type Age := U32 I can create\nan instance of this opaque type by doing @Age 23.\n\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n\n\n2 errors and 0 warnings found in 2838 ms.\n\nRunning program anywayâ€¦\n\nâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\nRoc crashed with:\n\n    Erroneous: specialize_symbol\n\nHere is the call stack that led to the crash:\n\n    .mainForHost\n\nOptimizations can make this list inaccurate! If it looks wrong, try running without `--optimize` and with `--linker=legacy`\n</code></pre></div>",
        "id": 305422849,
        "sender_full_name": "Mario",
        "timestamp": 1666378443
    },
    {
        "content": "<p>It looks like that example doesn't run in ci (probably don't want a ci test depending on http get) so it is probably out of date now that the cli platform has been updated.</p>",
        "id": 305423161,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666378556
    },
    {
        "content": "<p>Okie. What about echo?</p>\n<div class=\"codehilite\"><pre><span></span><code>$ ./roc run ~/dev/projects/roc/examples/cli/echo.roc\n\nthread &#39;main&#39; panicked at &#39;internal error: entered unreachable code: symbol/layout `22.IdentId(29)` ProcLayout {\n    arguments: [\n        Struct {\n            field_order_hash: FieldOrderHash(\n                0,\n            ),\n            field_layouts: [],\n        },\n        LambdaSet(\n            LambdaSet {\n                set: [\n                    ( 22.29, [LambdaSet(LambdaSet { set: [], representation: Interned(0, PhantomData) }), LambdaSet(LambdaSet { set: [( 20.20, [])], representation: Interned(1, PhantomData) })]),\n                ],\n                representation: Interned(\n                    2,\n                    PhantomData,\n                ),\n            },\n        ),\n    ],\n    result: Builtin(\n        Int(\n            U8,\n        ),\n    ),\n    captures_niche: CapturesNiche(\n        [\n            LambdaSet(\n                LambdaSet {\n                    set: [],\n                    representation: Interned(\n                        0,\n                        PhantomData,\n                    ),\n                },\n            ),\n            LambdaSet(\n                LambdaSet {\n                    set: [\n                        ( 20.20, []),\n                    ],\n                    representation: Interned(\n                        1,\n                        PhantomData,\n                    ),\n                },\n            ),\n        ],\n    ),\n} combo must be in DeclarationToIndex&#39;, crates/compiler/mono/src/borrow.rs:165:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 305423275,
        "sender_full_name": "Mario",
        "timestamp": 1666378589
    },
    {
        "content": "<p>That one definitely used to be tested in CI, let me take a look</p>",
        "id": 305423480,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666378667
    },
    {
        "content": "<p>hmm...not tested in CI. This one probably should be. It has a super minor bug: <code>main = Program.noArgs mainTask</code> -&gt; <code>main = Program.withArgs mainTask</code></p>",
        "id": 305423879,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666378805
    },
    {
        "content": "<p>or more correctly, it doesn't use args so change the main task to no longer take args.</p>",
        "id": 305424011,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666378838
    },
    {
        "content": "<p>Thanks for catching this.</p>",
        "id": 305424022,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666378843
    },
    {
        "content": "<p>Cool, that works! I can do a PR if helpful?</p>",
        "id": 305428533,
        "sender_full_name": "Mario",
        "timestamp": 1666380499
    },
    {
        "content": "<p>If you want to, that would be great</p>",
        "id": 305428584,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666380523
    },
    {
        "content": "<p>Otherwise, I can get to it at some point</p>",
        "id": 305428680,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666380558
    },
    {
        "content": "<p>Also, fixing <code>http-get.roc</code> should be pretty easy as well. It just needs to update to use <code>Program.noArgs</code> as well. It is still trying to set main to be a task</p>",
        "id": 305428778,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666380597
    },
    {
        "content": "<p>Hrm, had a bash but no bueno...</p>",
        "id": 305430705,
        "sender_full_name": "Mario",
        "timestamp": 1666381383
    },
    {
        "content": "<p>No worries. I can make a PR later today</p>",
        "id": 305431778,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666381804
    },
    {
        "content": "<p>Fixed the one you mentioned but couldn't get the HTTP one going. Errors out of my depth unfort.</p>",
        "id": 305443915,
        "sender_full_name": "Mario",
        "timestamp": 1666386860
    },
    {
        "content": "<p><a href=\"http://\">Uploading Screenshot 2022-10-21 at 20.42.49.pngâ€¦</a></p>",
        "id": 305443942,
        "sender_full_name": "Mario",
        "timestamp": 1666386877
    },
    {
        "content": "<p>Just added PR <a href=\"https://github.com/roc-lang/roc/pull/4374\">#4374</a> to fix those two examples. Also filed an issue around ensure all examples have tests, that used to be the case, but things changed and I guess it is not the case anymore.</p>",
        "id": 305450700,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1666389788
    },
    {
        "content": "<p>Awesome, http-get example working for me now :)</p>",
        "id": 305492796,
        "sender_full_name": "Mario",
        "timestamp": 1666423327
    },
    {
        "content": "<p>I notice that <code>ðŸ”¨ Rebuilding platform</code> happens every time I run it. What's the reason for this?</p>",
        "id": 305492946,
        "sender_full_name": "Mario",
        "timestamp": 1666423441
    },
    {
        "content": "<p>I think it's mainly because of convenience for us to ensure that when the code for building changes we're not using some old cached platform. You can skip this with the flag <code>--prebuilt-platform true</code>.</p>",
        "id": 305495434,
        "sender_full_name": "Anton",
        "timestamp": 1666425245
    }
]