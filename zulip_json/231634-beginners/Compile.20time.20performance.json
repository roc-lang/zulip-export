[
    {
        "content": "<p>I have a 1,300 loc project which is taking ~20s to compile in my M1 MAX. This is pretty high, right? <br>\nThe performance really degraded recently as I added more types. It was taking ~8s when I was at 1,074 loc.</p>",
        "id": 343141283,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679323692
    },
    {
        "content": "<p>are you using a nightly build? or did you compile the compiler yourself?</p>",
        "id": 343141633,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1679323755
    },
    {
        "content": "<p>Nightly from the 17th</p>",
        "id": 343141699,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679323769
    },
    {
        "content": "<p>ok. what sort of project is this?</p>",
        "id": 343141962,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1679323826
    },
    {
        "content": "<p>there are some things in type checking that are slow. it does not surprise me, but it is disappointing that we run into issues so quickly</p>",
        "id": 343142122,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1679323861
    },
    {
        "content": "<p>I ran <code>roc build --time</code> and it looks like code gen takes <code>7s</code>. I'm a little confused reading the other sections as the times don't seem to add up to the totals.</p>",
        "id": 343142169,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679323874
    },
    {
        "content": "<p>yeah. Timing is weird because we run on multiple threads</p>",
        "id": 343142268,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1679323896
    },
    {
        "content": "<p>can you share the <code>--time</code> info?</p>",
        "id": 343142282,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679323898
    },
    {
        "content": "<p>sure</p>",
        "id": 343142305,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679323902
    },
    {
        "content": "<p>code gen time should not be influenced by adding more type annotations though</p>",
        "id": 343142371,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1679323919
    },
    {
        "content": "<p>can you also share how long just a <code>check</code> takes?</p>",
        "id": 343142658,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679323975
    },
    {
        "content": "<p><a href=\"https://gist.github.com/agu-z/8eb15cb9f536a6bb9fcfeda55f9b963e\">https://gist.github.com/agu-z/8eb15cb9f536a6bb9fcfeda55f9b963e</a></p>",
        "id": 343142825,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679324015
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> check takes ~1.2s</p>",
        "id": 343142928,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679324040
    },
    {
        "content": "<p>can you share <code>--time</code> for <code>roc check</code>?</p>",
        "id": 343143269,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679324099
    },
    {
        "content": "<p>some of this is LLVM but it is a bit worrisome that some of these modules are taking ~0.5 seconds to check and &gt;1second to generate the Roc-internal IR for.</p>",
        "id": 343143538,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679324160
    },
    {
        "content": "<p><code>roc check --time</code> <a href=\"https://gist.github.com/agu-z/456d02af60c236a9c0bba4a41639233a\">https://gist.github.com/agu-z/456d02af60c236a9c0bba4a41639233a</a></p>",
        "id": 343143770,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679324195
    },
    {
        "content": "<p>ok. can you share this project?</p>",
        "id": 343145768,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679324620
    },
    {
        "content": "<p>Yep, it's a private repo now, but give me a min</p>",
        "id": 343146078,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679324689
    },
    {
        "content": "<p><a href=\"https://github.com/agu-z/roc-pg\">https://github.com/agu-z/roc-pg</a></p>",
        "id": 343147679,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679325029
    },
    {
        "content": "<p>It depends on my fork of <code>basic-cli</code> with sockets support: <a href=\"https://github.com/agu-z/roc-basic-cli/tree/sockets-support\">https://github.com/agu-z/roc-basic-cli/tree/sockets-support</a></p>",
        "id": 343147763,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679325049
    },
    {
        "content": "<p>A bunch of things lack type annotations and I'm using <code>_</code> all the time while I'm figuring out how I want to do error handling. Maybe that has something to do with it.</p>",
        "id": 343149282,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1679325383
    },
    {
        "content": "<p>I think that's unlikely, type annotations (or lack thereof) don't really change the computational complexity of the compiler</p>",
        "id": 343149471,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679325430
    },
    {
        "content": "<p>I think this somehow blows up specialization and the amount of copies of llvm ir we generate.</p>\n<ul>\n<li>757992 lines of llvm ir generation.</li>\n<li>Flamegraph is so deeply nested that it is lagging like crazy when loaded in my browser</li>\n<li>Looks to be spending a tons of time in unifying for specializations.</li>\n</ul>",
        "id": 343166727,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1679329282
    },
    {
        "content": "<p>can you drop the flame graph in this chat <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> ? It might be off if it's not run with <code>--max-threads=1</code></p>",
        "id": 343194577,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679336260
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/auVnHNgkkVYuBjdCqwUcBgjt/roc-pg.svg\">roc-pg.svg</a></p>",
        "id": 343194800,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1679336311
    },
    {
        "content": "<p>Was run with <code>--max-threads=1</code></p>",
        "id": 343194835,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1679336321
    },
    {
        "content": "<p>okay, we are spending all of our time doing occurs checks (checking and fixing recursive types)</p>",
        "id": 343196164,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679336692
    },
    {
        "content": "<p>in lambda sets, which makes sense</p>",
        "id": 343196213,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679336707
    },
    {
        "content": "<p>I have some ideas on how to deal with this. we added a bunch of caching to deal with this problem half a year ago but we can add even more</p>",
        "id": 343196467,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679336785
    },
    {
        "content": "<p>Do you now why it generates so much llvm ir?</p>",
        "id": 343199290,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1679337599
    },
    {
        "content": "<p>probably the large # of lambda sets, not sure though</p>",
        "id": 343199408,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1679337620
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/-84qU3dJbVyTH8HJEcUMktAd/CleanShot-2023-04-06-at-17.23.092x.png\">CleanShot-2023-04-06-at-17.23.092x.png</a> <br>\nNot bad <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span>!</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/-84qU3dJbVyTH8HJEcUMktAd/CleanShot-2023-04-06-at-17.23.092x.png\" title=\"CleanShot-2023-04-06-at-17.23.092x.png\"><img src=\"/user_uploads/22008/-84qU3dJbVyTH8HJEcUMktAd/CleanShot-2023-04-06-at-17.23.092x.png\"></a></div>",
        "id": 347511372,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1680812686
    },
    {
        "content": "<p>Oh, and <code>check</code> now takes <code>20ms</code> instead of <code>10s</code>!</p>",
        "id": 347511777,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1680812843
    },
    {
        "content": "<p>the unreasonable effectiveness of a good properly placed cache <span aria-label=\"exhale\" class=\"emoji emoji-1f62e-200d-1f4a8\" role=\"img\" title=\"exhale\">:exhale:</span></p>",
        "id": 347518317,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1680815279
    },
    {
        "content": "<p>even more impressive, the part of the build that was so slow went from over 100K ms to under 100ms, so...3 orders of magnitude improvement. <span aria-label=\"rocket\" class=\"emoji emoji-1f680\" role=\"img\" title=\"rocket\">:rocket:</span>  <span aria-label=\"rocket\" class=\"emoji emoji-1f680\" role=\"img\" title=\"rocket\">:rocket:</span>  <span aria-label=\"rocket\" class=\"emoji emoji-1f680\" role=\"img\" title=\"rocket\">:rocket:</span></p>",
        "id": 347547600,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1680829975
    },
    {
        "content": "<p>which is relevant because the other 2 parts that make up almost all of that 6 seconds are linking and code generation, and the WIP surgical linking and dev backend projects should massively reduce those too</p>",
        "id": 347547666,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1680830036
    },
    {
        "content": "<p>as a bit of anecdotal history: the last time we ran into something like this (~half a year ago) it took three weeks of full time effort (and one week of despair where nothing worked), and several major redesigns, to fix the problem. So this time around, the relatively simple effort, and knowledge of where else our gaps lie, is IMO a positive sign for the quality and maturity of the compiler.</p>",
        "id": 347566036,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1680842136
    },
    {
        "content": "<p>moreover - it is exciting that folks like <span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span> are getting the opportunity to stress the compiler in ways like this that actually expose where the faults are, and show how far the language has gotten!</p>",
        "id": 347566291,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1680842347
    }
]