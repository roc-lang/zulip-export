[
    {
        "content": "<p>Is there a way to use a type alias or something like the following for a record's key name? In this example UserId can be a random Str</p>\n<div class=\"codehilite\"><pre><span></span><code>UserId : Str\n\nUser : {\n    UserId : UserDetail\n}\n</code></pre></div>",
        "id": 341833845,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678808546
    },
    {
        "content": "<p>Wouldn't that be a use case for a hashmap/dict? (I don't recall what it's called in Roc.) Where the <code>UserId</code> is the key and the <code>UserDetail</code> is the value. IIRC records are for fixed keys/values.</p>",
        "id": 341838016,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1678809413
    },
    {
        "content": "<p>Yeah, you want a roc <code>Dict</code></p>",
        "id": 341842900,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678810374
    },
    {
        "content": "<p><code>Dict UserId UserDetail</code></p>",
        "id": 341842937,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678810384
    },
    {
        "content": "<p><a href=\"https://www.roc-lang.org/builtins/dict\">https://www.roc-lang.org/builtins/dict</a></p>",
        "id": 341842981,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678810395
    },
    {
        "content": "<p>Perhaps I misunderstood but I assumed Seth wanted something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>UserId : Str\n\nUser : {\n    userId : UserId\n}\n\nmyUser : User\nmyUser = { userId: &quot;123&quot; }\n</code></pre></div>",
        "id": 341843482,
        "sender_full_name": "Anton",
        "timestamp": 1678810516
    },
    {
        "content": "<p>So the root of the question comes from trying to decode JSON. Something that looks like this where \"userid123\" can be a random string of letters/numbers</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n    &quot;users&quot;: {\n      &quot;userid123&quot;: {\n        &quot;lastLogin&quot;: &quot;2023-03-11T03:38:05.007Z&quot;,\n      }\n    }\n}\n</code></pre></div>",
        "id": 341843893,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678810608
    },
    {
        "content": "<p>I just tried using Dict but <code>Dict does not implement Decoding</code></p>",
        "id": 341844278,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678810688
    },
    {
        "content": "<p>Can you decode into a List and then convert that to a Dict?</p>",
        "id": 341845594,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1678811005
    },
    {
        "content": "<p>Looking at the Dict docs <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> linked, I think you'd want something like</p>\n<div class=\"codehilite\"><pre><span></span><code>Dict.fromList [ T userId userDetails, ..... ]\n</code></pre></div>",
        "id": 341846420,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1678811197
    },
    {
        "content": "<p>Oh, is your json in a static format? Like always same keys with same types?</p>",
        "id": 341847241,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678811381
    },
    {
        "content": "<p>If so, it should be decoded into a record preferably. If not, a Dict is what you would want. That said, I don't think anyone has written code for decoding something into a dictionary or similar.</p>",
        "id": 341847541,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678811452
    },
    {
        "content": "<p>hmm ok. I'll try and play around with it some more later and see if I can come up with something</p>",
        "id": 341848028,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678811584
    },
    {
        "content": "<p>Decoding to a List first and then calling <code>Dict.fromList</code> seems fairly reasonable as glancing at how Elm's <code>Json.Decode.dict</code> works this is what it does.</p>",
        "id": 341849485,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1678811916
    },
    {
        "content": "<p>I wasn’t able to conjure something up for this…</p>",
        "id": 341889102,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678822990
    },
    {
        "content": "<p>Are you able to decode to a List? I don't have a Roc setup in front of me at the moment so trying to do this all in my head <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 341890946,
        "sender_full_name": "Wolfgang Schuster",
        "timestamp": 1678823585
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> you were recently working on json decoding right? Any examples you can share and ideas how this would work out. I haven't messed with json decoding yet and don't know how it looks on roc.</p>",
        "id": 341893504,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1678824312
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"450091\">Wolfgang Schuster</span> <a href=\"#narrow/stream/231634-beginners/topic/Dynamic.20record.20key.20name/near/341890946\">said</a>:</p>\n<blockquote>\n<p>Are you able to decode to a List? I don't have a Roc setup in front of me at the moment so trying to do this all in my head <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>\n</blockquote>\n<p>I was not, I'm familiar enough with roc yet . This was my first mini project to see if I could convert one of my node scripts into roc</p>",
        "id": 341899432,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678826372
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"465260\">Seth Workman</span> <a href=\"#narrow/stream/231634-beginners/topic/Dynamic.20record.20key.20name/near/341899432\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"450091\">Wolfgang Schuster</span> <a href=\"#narrow/stream/231634-beginners/topic/Dynamic.20record.20key.20name/near/341890946\">said</a>:</p>\n<blockquote>\n<p>Are you able to decode to a List? I don't have a Roc setup in front of me at the moment so trying to do this all in my head <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>\n</blockquote>\n<p>I was not, I'm familiar enough with roc yet . This was my first mini project to see if I could convert one of my node scripts into roc</p>\n</blockquote>\n<p>maybe this will help <a href=\"https://github.com/roc-lang/roc/blob/main/examples/python-interop/platform/main.roc\">https://github.com/roc-lang/roc/blob/main/examples/python-interop/platform/main.roc</a></p>",
        "id": 341899988,
        "sender_full_name": "dank",
        "timestamp": 1678826589
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"465260\">@Seth Workman</span> I made an example in this <a href=\"#narrow/stream/231634-beginners/topic/Json.20Package/near/338252044\">zulip</a> which has decoding json into a record.</p>",
        "id": 341901324,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678827103
    },
    {
        "content": "<p>It works, but it can be pretty fragile. There are at least a few decent bugs lurking in the Json builtin. I recently added the <code>expect</code>s, so now I'm more confident I know how to test it, the next step is to find more of these bugs and iron them out. If you do find something that breaks, please log an issue that would be very helpful.</p>",
        "id": 341901716,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678827231
    },
    {
        "content": "<p>Yea I'm able to get basic json decoding working. But i can't get it working for my use case as my json doesn't have static key names</p>",
        "id": 341901932,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678827289
    },
    {
        "content": "<p>Note that URL json package is a little old now, so recommend using the one in main at <code>roc/crates/compiler/builtins/roc</code> etc</p>",
        "id": 341901991,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678827309
    },
    {
        "content": "<p>Ah, I see...</p>",
        "id": 341902053,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678827333
    },
    {
        "content": "<p>I'm not sure if that is supported yet. I haven't spent enough time looking inside the Json module. I can have a look later this evening.</p>",
        "id": 341902216,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678827384
    },
    {
        "content": "<p>Alright no worries! Thanks for some insight</p>",
        "id": 341902538,
        "sender_full_name": "Seth Workman",
        "timestamp": 1678827505
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span>  it should be possible to make the JSON format decode directly into a <code>Dict</code> and have it Just Work as long as the <code>Dict</code> keys and values both have <code>Decode</code></p>",
        "id": 341914828,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1678832042
    },
    {
        "content": "<blockquote>\n<p>decode directly into a Dict and have it Just Work</p>\n</blockquote>\n<p>That's awesome!! Looking forward to testing it out.</p>",
        "id": 341916459,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1678832659
    },
    {
        "content": "<p>but it will require adding <code>Decode</code> to <code>Dict</code> - it doesn't have it yet</p>",
        "id": 341917754,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1678833274
    },
    {
        "content": "<p>oh that might be blocked on having the feature of \"give this <code>Decode</code> iff its <code>k</code> and <code>v</code> type variables also have <code>Decode</code>\" <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 341924244,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1678835827
    },
    {
        "content": "<p>that feature already ezists</p>",
        "id": 341940749,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1678844165
    },
    {
        "content": "<p>It will automatically be inferred as appropriate in either manual or derived implementations</p>",
        "id": 341940881,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1678844236
    }
]