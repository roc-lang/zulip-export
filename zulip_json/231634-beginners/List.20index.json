[
    {
        "content": "<p>Is there a simple way to find the index of a particular element in a list?</p>",
        "id": 286502302,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655478496
    },
    {
        "content": "<p>Essentially, instead of <code>find : (List elem), (elem -&gt; Bool) -&gt; (Result elem [ NotFound ]*)</code> I'm looking for <code>findIndex : (List elem), (elem -&gt; Bool) -&gt; (Result Nat [ NotFound ]*)</code></p>",
        "id": 286502432,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655478573
    },
    {
        "content": "<p>So that it can be used for later operations with <code>get</code>, <code>set</code>, <code>replace</code>, <code>split</code> etc.</p>",
        "id": 286502540,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1655478612
    },
    {
        "content": "<p><del>There should be a <code>List.find</code>, but maybe it hasn't been implemented yet</del></p>",
        "id": 286513479,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1655483636
    },
    {
        "content": "<p>If it doesn't exist, it could be built with <code>List.walkUntil</code></p>",
        "id": 286513542,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1655483655
    },
    {
        "content": "<p>Just make the state the current index. Increment it in the looping function. Check the element against a predicate each round. Return the index when an element matches and stop the walk.</p>",
        "id": 286513776,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1655483799
    },
    {
        "content": "<p>Also, probably can get <code>List.findIndex</code> or something similar added to the standard library, I think it is a common enough use case to merit its own function.</p>",
        "id": 286513879,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1655483864
    }
]