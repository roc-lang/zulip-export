[
    {
        "content": "<p>Hey how can i start with Roc?</p>",
        "id": 272521420,
        "sender_full_name": "João Alves",
        "timestamp": 1645280832
    },
    {
        "content": "<p>Hey</p>",
        "id": 272521426,
        "sender_full_name": "João Alves",
        "timestamp": 1645280850
    },
    {
        "content": "<p>How can I be using Roc for first time?</p>",
        "id": 272521440,
        "sender_full_name": "João Alves",
        "timestamp": 1645280880
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"479931\">@João Alves</span>, check out the getting started subsection in the README, <a href=\"https://github.com/rtfeldman/roc#getting-started\">link here</a>.</p>",
        "id": 272521969,
        "sender_full_name": "Anton",
        "timestamp": 1645281542
    },
    {
        "content": "<p>I'm getting 404 in GitHub using this link.</p>",
        "id": 272521991,
        "sender_full_name": "João Alves",
        "timestamp": 1645281592
    },
    {
        "content": "<p>most likely you're not added to the repo yet. maybe there is an outstanding invitation ?</p>",
        "id": 272522049,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1645281645
    },
    {
        "content": "<p>Yep, make sure to check your email</p>",
        "id": 272522056,
        "sender_full_name": "Anton",
        "timestamp": 1645281663
    },
    {
        "content": "<p>Unitil now I only receive this email.</p>\n<p><a href=\"/user_uploads/22008/LpHrDRL96-VQLIRbnh116dF2/Screenshot-from-2022-02-19-11-46-31.png\">Screenshot-from-2022-02-19-11-46-31.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/LpHrDRL96-VQLIRbnh116dF2/Screenshot-from-2022-02-19-11-46-31.png\" title=\"Screenshot-from-2022-02-19-11-46-31.png\"><img src=\"/user_uploads/22008/LpHrDRL96-VQLIRbnh116dF2/Screenshot-from-2022-02-19-11-46-31.png\"></a></div>",
        "id": 272522333,
        "sender_full_name": "João Alves",
        "timestamp": 1645282033
    },
    {
        "content": "<p>the github interface should also show the invitation</p>",
        "id": 272522415,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1645282128
    },
    {
        "content": "<p>somewhere in the top right</p>",
        "id": 272522418,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1645282135
    },
    {
        "content": "<p>At the beginning of the email, it said \"Invite sent\" but I don't know where</p>",
        "id": 272523173,
        "sender_full_name": "João Alves",
        "timestamp": 1645282986
    },
    {
        "content": "<p>My GitHub profile is: <a href=\"https://github.com/JADSN\">https://github.com/JADSN</a></p>",
        "id": 272523273,
        "sender_full_name": "João Alves",
        "timestamp": 1645283099
    },
    {
        "content": "<p>Can you take a look <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>?</p>",
        "id": 272525567,
        "sender_full_name": "Anton",
        "timestamp": 1645285772
    },
    {
        "content": "<p>just sent an invite!</p>",
        "id": 272525906,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1645286150
    },
    {
        "content": "<p>maybe it was a copy/paste error on my part, because it said it was invited for the first time - sorry about that!</p>",
        "id": 272525980,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1645286208
    },
    {
        "content": "<p>I'm trying to build roc for the first time.  I'm on a mac, and it looks like valgrind doesn't support Monterey, or anything since about 2011. According to <a href=\"https://en.wikipedia.org/wiki/Darwin_%28operating_system%29\">https://en.wikipedia.org/wiki/Darwin_%28operating_system%29</a> and <a href=\"https://valgrind.org/info/platforms.html\">https://valgrind.org/info/platforms.html</a><br>\nIs my understanding correct?</p>",
        "id": 272526856,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1645287132
    },
    {
        "content": "<p>After exeucte <code>cargo run examples/hello-world/Hello.roc</code>, I am getting this error: <code>failed to run custom build command for </code>roc_builtins v0.1.0` do i need install some dependency?</p>",
        "id": 272529512,
        "sender_full_name": "João Alves",
        "timestamp": 1645290181
    },
    {
        "content": "<p>I am running in Linux</p>",
        "id": 272529559,
        "sender_full_name": "João Alves",
        "timestamp": 1645290242
    },
    {
        "content": "<p>what version of zig do you have?</p>",
        "id": 272530002,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1645290769
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"479378\">@Trevor Settles</span> yeah, sadly no valgrind for Mac. Personally I am on an M1 Mac, and I use nix for all of the dependencies. Makes installing a lot easier.</p>",
        "id": 272530802,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1645291613
    },
    {
        "content": "<p>is there also nothing like valgrind for mac? like, what do you do when there is a memory leak?</p>",
        "id": 272531094,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1645291957
    },
    {
        "content": "<p><code>gdb</code></p>",
        "id": 272531404,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1645292342
    },
    {
        "content": "<p>Watch the program crash cause arm is restrictive about memory.</p>",
        "id": 272531415,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1645292363
    },
    {
        "content": "<p>ok, fun</p>",
        "id": 272531591,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1645292577
    },
    {
        "content": "<p>Yeah, haven't found a better way yet</p>",
        "id": 272531604,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1645292595
    },
    {
        "content": "<p>that works for out of bounds memory access but not for leaks</p>",
        "id": 272531617,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1645292620
    },
    {
        "content": "<p>Yeah, and misaligned</p>",
        "id": 272531676,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1645292666
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> <a href=\"#narrow/stream/231634-beginners/topic/getting.20started/near/272530002\">said</a>:</p>\n<blockquote>\n<p>what version of zig do you have?</p>\n</blockquote>\n<p>Zip 3.0 (July 5th 2008)</p>",
        "id": 272586313,
        "sender_full_name": "João Alves",
        "timestamp": 1645356906
    },
    {
        "content": "<p>Is it possible to make UI using Roc?</p>",
        "id": 272586403,
        "sender_full_name": "João Alves",
        "timestamp": 1645356981
    },
    {
        "content": "<p>Like an alternative to <a href=\"https://package.elm-lang.org/packages/mdgriffith/elm-ui/latest/\">elm-ui</a></p>",
        "id": 272586452,
        "sender_full_name": "João Alves",
        "timestamp": 1645357043
    },
    {
        "content": "<p><code>zig</code> was not a typo, we need zig 0.8.1 <a href=\"https://ziglang.org/download/\">https://ziglang.org/download/</a></p>",
        "id": 272586469,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1645357068
    },
    {
        "content": "<p>Do I need Zig to execute Rust examples?</p>",
        "id": 272586818,
        "sender_full_name": "João Alves",
        "timestamp": 1645357443
    },
    {
        "content": "<p>yes, it is used by the compiler</p>",
        "id": 272587081,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1645357742
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"479931\">João Alves</span> <a href=\"#narrow/stream/231634-beginners/topic/getting.20started/near/272586403\">said</a>:</p>\n<blockquote>\n<p>Is it possible to make UI using Roc?<br>\nLike an alternative to elm-ui</p>\n</blockquote>\n<p>No, the language is at an early stage of development and doesn't have anything like that yet. Most of the applications are small demo programs at this stage but we're working on it!</p>",
        "id": 272592020,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1645363306
    },
    {
        "content": "<p>I've been working on trying to build roc, but this is the first project that I've tried building from source directly.  I'm on a mac, and I have installed llvm v12.0.1, libxkbcommon v1.4.0, and zig v0.9.1 (through brew). I know that the docs say I should use zig version 0.8.0, but I haven't found a way to install that specific version through brew.  I have been getting an error (below) that mentions zig, but I am not sure what is causing it.  Is it the wrong version of zig?</p>\n<div class=\"codehilite\"><pre><span></span><code>➜  roc git:(trunk) cargo build\n   Compiling roc_builtins v0.1.0 (/Users/tws/develop/roc/compiler/builtins)\nerror: failed to run custom build command for `roc_builtins v0.1.0 (/Users/tws/develop/roc/compiler/builtins)`\n\nCaused by:\n  process didn&#39;t exit successfully: `/Users/tws/develop/roc/target/debug/build/roc_builtins-c5ec60eda6bbac41/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rerun-if-changed=build.rs\n  Compiling host ir to: /Users/tws/develop/roc/compiler/builtins/bitcode/builtins-host.ll\n\n  --- stderr\n  thread &#39;main&#39; panicked at &#39;zig failed: ./build.zig:58:24: error: expected type &#39;std.build.EmitOption&#39;, found &#39;bool&#39;\n      obj.emit_llvm_ir = true;\n                         ^\n  /usr/local/Cellar/zig/0.9.1/lib/zig/std/build.zig:1597:28: note: std.build.EmitOption declared here\n      pub const EmitOption = union(enum) {\n                             ^\n  &#39;, compiler/builtins/build.rs:158:17\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 273317466,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1645850471
    },
    {
        "content": "<p>Yes, I believe we haven't yet updated some things to accommodate Zig 0.9.x</p>",
        "id": 273317532,
        "sender_full_name": "jan kili",
        "timestamp": 1645850558
    },
    {
        "content": "<p>Zig 0.8.0 or 0.8.1 are required</p>",
        "id": 273317539,
        "sender_full_name": "jan kili",
        "timestamp": 1645850573
    },
    {
        "content": "<p>Have you used Nix before?</p>",
        "id": 273317544,
        "sender_full_name": "jan kili",
        "timestamp": 1645850582
    },
    {
        "content": "<p>Good to know that about zig. I haven't tried nix yet. I'll give that a go</p>",
        "id": 273317628,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1645850726
    },
    {
        "content": "<p>Nix is an OS package manager for Linux and somewhat macOS, it's so friendly</p>",
        "id": 273317631,
        "sender_full_name": "jan kili",
        "timestamp": 1645850741
    },
    {
        "content": "<p>I recommend <a href=\"https://nix.dev/tutorials/install-nix#macos\">installing it</a></p>",
        "id": 273317634,
        "sender_full_name": "jan kili",
        "timestamp": 1645850756
    },
    {
        "content": "<p>Then, from the root directory of the roc repo, run <code>nix-shell shell.nix</code></p>",
        "id": 273317683,
        "sender_full_name": "jan kili",
        "timestamp": 1645850793
    },
    {
        "content": "<p>You should find yourself in a nested interactive shell with all Roc dependencies installed, ready to <code>cargo run repl</code> :)</p>",
        "id": 273317705,
        "sender_full_name": "jan kili",
        "timestamp": 1645850843
    },
    {
        "content": "<p>That did the trick, thanks! I'm in the roc repl!</p>",
        "id": 273318185,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1645851590
    },
    {
        "content": "<p>I joined some time ago and Richard gave me access to the GitHub, but haven’t had a personal computer for a bit. I went on GitHub today to pull but i don’t seem to have access anymore. Is there something I’m missing or do I need to be re-invited?</p>",
        "id": 274499101,
        "sender_full_name": "Michael Mongelli",
        "timestamp": 1646717897
    },
    {
        "content": "<p>Got the repo cloned and building! The README references an example platform for an HTTP server… am I misunderstanding what that means? Is that the wasm platform  or is there one that would allow building of web apps?</p>",
        "id": 274499360,
        "sender_full_name": "Brian Parks",
        "timestamp": 1646718200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"456446\">@Michael Mongelli</span> It shouldn't auto remove people, but I am sure that <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>  can send you a new invite link.</p>\n<p><span class=\"user-mention\" data-user-id=\"484180\">@Brian Parks</span> I think that a few sample web server apps have been played around with in the past, but we don't yet have a web server example. The readme is just listing a potential use case.</p>",
        "id": 274499568,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646718438
    },
    {
        "content": "<p>This is a simple example of a webserver that I was messing around with a long while ago: <a href=\"https://github.com/rtfeldman/roc/pull/1635\">https://github.com/rtfeldman/roc/pull/1635</a></p>",
        "id": 274499646,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646718517
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> thanks. I’ll check that out and then tinker some… maybe with the goal of putting together a basic example…</p>",
        "id": 274499746,
        "sender_full_name": "Brian Parks",
        "timestamp": 1646718645
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>  my mistake, I do have access, I was just expecting to see it in a different place on GitHub, thanks</p>",
        "id": 274500032,
        "sender_full_name": "Michael Mongelli",
        "timestamp": 1646718965
    },
    {
        "content": "<p>Looks like this PR might cover the web example, but I do see why it wasn’t merged (yet). This might start getting into <a class=\"stream\" data-stream-id=\"316715\" href=\"/#narrow/stream/316715-contributing\">#contributing</a> territory, but any objections to me starting to build a more sophisticated web framework on top of this platform (i.e. assuming that this will be reasonably API-stable)</p>",
        "id": 274500375,
        "sender_full_name": "Brian Parks",
        "timestamp": 1646719317
    },
    {
        "content": "<p>That example is really simple and would not really be robust enough for most web use cases. I assume that for a proper web server platform, a lot more design work would need to go into the api. Especially when it comes to other types of requests. But if you have a basic enough use case, feel free to use the platform</p>",
        "id": 274500660,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646719646
    },
    {
        "content": "<p>Most likely a more sophisticated web framework would really be it's own platform</p>",
        "id": 274500728,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646719687
    },
    {
        "content": "<p>Also, it was never merged because all examples require testing and testing a webserver is more complicated. I just never got around to adding it and then started working on other things.</p>",
        "id": 274500750,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646719739
    },
    {
        "content": "<p>More or less forgot about it.</p>",
        "id": 274500754,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646719748
    },
    {
        "content": "<p>Sounds good. I’ll poke at it over the next couple days and share if I make anything interesting.</p>",
        "id": 274503136,
        "sender_full_name": "Brian Parks",
        "timestamp": 1646722381
    },
    {
        "content": "<p>How can I get the Roc fmt to run on my code?</p>",
        "id": 274639871,
        "sender_full_name": "Derek Gustafson",
        "timestamp": 1646796926
    },
    {
        "content": "<p>should just be <code>./roc format &lt;path to file or folder&gt;</code></p>",
        "id": 274640143,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646797213
    },
    {
        "content": "<p>or <code>cargo run format &lt;path to file or folder&gt;</code></p>",
        "id": 274640162,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646797231
    },
    {
        "content": "<p>On that note, we may have a bug with the directory version. Looks like it might try to format all files, not just roc files...mine just failed trying to format the output executable.</p>",
        "id": 274640230,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1646797322
    },
    {
        "content": "<p>That worked for me. Thank you</p>",
        "id": 274640970,
        "sender_full_name": "Derek Gustafson",
        "timestamp": 1646798156
    },
    {
        "content": "<p>Is roc limited to one module per roc file, or can you have multiple modules (or namespaces?) in a single file?</p>",
        "id": 274885347,
        "sender_full_name": "Jared Cone",
        "timestamp": 1646941256
    },
    {
        "content": "<p>A file is a module and a module is a file!</p>",
        "id": 274906317,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1646952149
    },
    {
        "content": "<p>The way effects are currently implemented, functions in Roc are not pure from the host platform's point of view, are they?</p>",
        "id": 274962471,
        "sender_full_name": "Tom Dohrmann",
        "timestamp": 1646997970
    },
    {
        "content": "<p>I think they are, but are you referring to a specific aspect of their implementation?</p>",
        "id": 274973703,
        "sender_full_name": "jan kili",
        "timestamp": 1647005067
    },
    {
        "content": "<p>I think the effects system includes platform-defined wrapper types (i.e. <code>Task</code>) for apps to return, so that apps can purely specify what impure work should be done by the platform.</p>",
        "id": 274974009,
        "sender_full_name": "jan kili",
        "timestamp": 1647005239
    },
    {
        "content": "<p>I'm referring to the <code>roc_foo_fx_bar</code> functions. Those are obviously not pure and since the Roc applications call those functions, they therefore are also not pure, are they?</p>",
        "id": 274974355,
        "sender_full_name": "Tom Dohrmann",
        "timestamp": 1647005403
    },
    {
        "content": "<p>not sure what language you're most familiar with, but this is also the case in e.g. elm or haskell</p>",
        "id": 274975435,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647005908
    },
    {
        "content": "<p>we fix this by always wrapping the result of such functions in an <code>Effect</code>, (or <code>Task</code>/<code>Cmd</code> in elm, <code>IO</code> in haskell)</p>",
        "id": 274975479,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647005933
    },
    {
        "content": "<p>Ok, but AFAIK Elm or Haskell don't allow you to implement/switch out the platform. Just thought it could have been nice to have calling into Roc be pure from the platforms point of view.</p>",
        "id": 274977776,
        "sender_full_name": "Tom Dohrmann",
        "timestamp": 1647006982
    },
    {
        "content": "<p>it is</p>",
        "id": 274977817,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647007015
    },
    {
        "content": "<p>it just may give you an <code>Effect</code></p>",
        "id": 274977840,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647007025
    },
    {
        "content": "<p>which the host then has to evaluate</p>",
        "id": 274977847,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647007030
    },
    {
        "content": "<p>so I'd just have to make your own types to do that, wouldn't I?</p>",
        "id": 274978335,
        "sender_full_name": "Tom Dohrmann",
        "timestamp": 1647007237
    },
    {
        "content": "<p>This doesn't work with the whole <code>roc_fx_bar</code> thing, does it?</p>",
        "id": 274978343,
        "sender_full_name": "Tom Dohrmann",
        "timestamp": 1647007243
    },
    {
        "content": "<p>huh?</p>",
        "id": 274978561,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647007324
    },
    {
        "content": "<p>roc code is always pure. it can however build up a computation (an effect) that the host will evaluate, and that will produce side-effects</p>",
        "id": 274978633,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647007361
    },
    {
        "content": "<p>much like how in elm you make a <code>Task</code> (pure) which the platform then evaluates (e.g. fire of an http request, impure)</p>",
        "id": 274978687,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647007388
    },
    {
        "content": "<p>Ok, I might be missing the part where the host is evaluating the effect. For example in <code>examples/interactive/effects-platform/host.zig</code> where is the host getting and evaluating the getLine effect? Or in other words where is the host calling into roc code which returns an effect and evaluates that effect thus doing side effects?</p>",
        "id": 274979228,
        "sender_full_name": "Tom Dohrmann",
        "timestamp": 1647007629
    },
    {
        "content": "<p>we have <code>    roc__mainForHost_1_exposed_generic(output);</code> which evaluates main, giving a <code>Effect {}</code></p>",
        "id": 274980671,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647008328
    },
    {
        "content": "<p>an <code>Effect a</code> is a wrapper around <code>{} -&gt; a</code></p>",
        "id": 274980709,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647008349
    },
    {
        "content": "<p>which is forced by <code>    call_the_closure(output);</code></p>",
        "id": 274980721,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647008355
    },
    {
        "content": "<p>I see. And <code>call_the_closure</code> calls <code>roc__mainForHost_1_Fx_caller</code> which I assume evaluates the effect?</p>",
        "id": 274982112,
        "sender_full_name": "Tom Dohrmann",
        "timestamp": 1647009023
    },
    {
        "content": "<p>And so Effects combined with <code>Effect.after</code> are just _one_ Effect, so <code>roc__mainForHost_1_Fx_caller</code> evaluates all steps one after another without returning to the host, instead of evaluating the first effect and yielding the next Effect to be evaluated?</p>",
        "id": 274982786,
        "sender_full_name": "Tom Dohrmann",
        "timestamp": 1647009319
    },
    {
        "content": "<p>(beginner here) My interpretation is Roc is queuing up a chain of side effects that the platform executes. Roc main says \"Queue this side effect. When it's done, call this Roc code which will queue another side effect. When that's done, call this other Roc code...\"<br>\nWhen Roc executes the call to <code>Stdout.line</code> it isn't executing println right then. It's like passing back a lambda  to the platform, then the platform executes it.</p>",
        "id": 275004538,
        "sender_full_name": "Jared Cone",
        "timestamp": 1647019165
    },
    {
        "content": "<p><code>roc__mainForHost_1_Fx_caller</code> calls the <code>{} -&gt; a</code> function. That will perform the main function, so it does sort of do all the effects at once. During this call no interaction with the platform happens.</p>",
        "id": 275005504,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647019551
    },
    {
        "content": "<p>but, the idea is that we can e.g. call that function twice, or in a loop</p>",
        "id": 275005566,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1647019564
    }
]