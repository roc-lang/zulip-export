[
    {
        "content": "<p>I'm trying to write a parser for AOC and something funky is happening when I try to run the test:<br>\n<code>thread 'main' panicked at 'Error in alias analysis: error in module ModName(\"UserApp\")</code></p>\n<p>I distilled it down to this <a href=\"https://gist.github.com/axelerator/31e572261ef350eeb8205573a2507bc1\">https://gist.github.com/axelerator/31e572261ef350eeb8205573a2507bc1</a></p>",
        "id": 405682335,
        "sender_full_name": "Axel",
        "timestamp": 1701623999
    },
    {
        "content": "<p>Does <code>roc check</code> help with the error at all?</p>",
        "id": 405682412,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701624036
    },
    {
        "content": "<p>2 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/dbg.20not.20showing.20on.20.02klzzwxh.3A0000.03\">#beginners &gt; dbg not showing on <code>roc test</code></a> by <span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span>.</p>",
        "id": 405682425,
        "sender_full_name": "Notification Bot",
        "timestamp": 1701624052
    },
    {
        "content": "<p><code>roc check</code> just complains about my unused imports <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 405682461,
        "sender_full_name": "Axel",
        "timestamp": 1701624094
    },
    {
        "content": "<p>I am not sure, but maybe <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> or someone else that uses that parse library might have some ideas. Probably also worth filing an issue with that sample code.</p>",
        "id": 405682691,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701624315
    },
    {
        "content": "<p>I suspect the issue is List.join as thats not a combinator from the parser library. Im on my mobile so I cant check easily rn.</p>",
        "id": 405686081,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701627078
    },
    {
        "content": "<p>It is <strong>really</strong> <em>weird</em>. I wanted to try and see if I can at least pinpoint it better, <del>but I failed</del> <strong>I have a guess</strong>. If you change the list to <code>oneOf</code> in <code>parseRow</code> (either remove an element or change an element) the error disappears. If you add an <code>expect</code> that uses <code>parseNumber</code> or <code>parseRow</code>, the error disappears as well. If, instead, you change the expect to use <code>parseRow</code> instead of <code>parseDot</code>, the error also disappears. My guess would be that some part of the compiler thinks that <code>parseNumber</code> can be removed (rightly so), but another part tries to access it anyway. But I don't know the internals of the compiler, so that's just a guess. Hopefully that helps someone!</p>",
        "id": 405691300,
        "sender_full_name": "LoipesMas",
        "timestamp": 1701631595
    },
    {
        "content": "<p>That error suggests to me it's lambda sets or something deep within the compiler and those are usually not easy bugs to find. If we could isolate this could be another good test case, but my concern is that there is a lot of layers here with the parser library. It's not something I probably have time too look at myself today. Basically we need to start with something broken, then keep deleting stuff until we have a minimal repro.</p>",
        "id": 405692986,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701633307
    },
    {
        "content": "<p>That doesn't really help <span class=\"user-mention\" data-user-id=\"481892\">@Axel</span> get working code though unfortunately.</p>",
        "id": 405693100,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701633411
    },
    {
        "content": "<p>Also <code>const [Dot]</code> doesn't look right to me. Maybe it should be <code>const Dot |&gt;</code> instead?</p>",
        "id": 405693231,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701633515
    }
]