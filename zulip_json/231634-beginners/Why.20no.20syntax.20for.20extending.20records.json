[
    {
        "content": "<p>One thing I find strange that Roc does not have is a way to extend a record. </p>\n<p>For example:</p>\n<div class=\"codehilite\"><pre><span></span><code>get_token! : {key: Str} =&gt; {key: Str, token: Str}\nget_token! = |conf|\n    token = get!(conf.key)\n    {conf  extend session: token}\n</code></pre></div>\n<p>This is a pattern I use all the time in Clojure and Javascript to build up more complex structures. Is there a reason we only have the &amp; in Roc to change values in a record but not extending a record?</p>",
        "id": 506548582,
        "sender_full_name": "Henrik Larsson",
        "timestamp": 1742321497
    },
    {
        "content": "<p>I think we chose not to support extending like this because it could be really bad for performance. The old record has to be copied over entirely to a new spot in memory.</p>",
        "id": 506550038,
        "sender_full_name": "Anton",
        "timestamp": 1742321982
    },
    {
        "content": "<p>Ok good to know the reason but its to bad, I really love that pattern in untyped languages paired with the pipe syntax.</p>",
        "id": 506551358,
        "sender_full_name": "Henrik Larsson",
        "timestamp": 1742322453
    },
    {
        "content": "<p>Yeah, I think the recommended alternative would be to use a tag union: <code>[NoToken, Token(Str)]</code></p>",
        "id": 506553135,
        "sender_full_name": "Anton",
        "timestamp": 1742322987
    },
    {
        "content": "<p>As a note, we plan to support extending records in the future, but it is pretty low on the backlog.</p>",
        "id": 506583148,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1742332773
    }
]