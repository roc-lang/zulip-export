[
    {
        "content": "<p>The following is a reduced case of a compiler crash and hang I encountered</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;a&quot;\n    packages { pf: &quot;https://github.com/roc-lang/basic-cli/releases/download/0.7.0/bkGby8jb0tmZYsy2hg1E_B2QrCgcSTxdUlHtETwm5m4.tar.br&quot; }\n    imports [pf.Stderr, pf.Task.{ Task }]\n    provides [main] to pf\n\nmain =\n    Task.ok {}\n    |&gt; Task.onErr \\e -&gt;\n        dbg e\n        Stderr.line &quot;&quot;\n</code></pre></div>\n<p>Error:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;called `Option::unwrap()` on a `None` value&#39;, crates/compiler/mono/src/ir.rs:6152:56\n</code></pre></div>",
        "id": 406107167,
        "sender_full_name": "JRI98",
        "timestamp": 1701796074
    },
    {
        "content": "<p>which command? does it hang with <code>roc build</code> and <code>roc check</code>?</p>",
        "id": 406109052,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701796690
    },
    {
        "content": "<p>Sorry, forgot to mention, it fails with <code>roc build</code> but passes <code>roc check</code></p>",
        "id": 406109780,
        "sender_full_name": "JRI98",
        "timestamp": 1701796971
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;unspecialized lambda sets left over during resolution: LambdaSet([] + (&lt;2171&gt;FlexAble(*, [`Inspect.Inspect`]):`Inspect.toInspector`:2), ^&lt;2174&gt;), UlsOfVar(VecMap { keys: [2171], values: [VecSet { elements: [2170, 2173] }] })&#39;, crates/compiler/mono/src/layout.rs:2074:17\n</code></pre></div>\n<p>cc <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> in case he has any immediate ideas or comments around the issue in general. The error type here should be <code>I32</code> due to the type of <code>main</code> in the platform.</p>",
        "id": 406110808,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701797339
    },
    {
        "content": "<p>We seem to be getting different errors <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> <br>\n(updated the initial message with the error)</p>",
        "id": 406113400,
        "sender_full_name": "JRI98",
        "timestamp": 1701798333
    },
    {
        "content": "<p>John I'm assuming you're running Roc via a release of the compiler? Brendan hit an earlier assertion in a debug version of the compiler, but the issue is the same</p>",
        "id": 406119584,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1701800421
    },
    {
        "content": "<p>I'm not 100% why this is happening. My guess is it's because the type wanted by the platform might not be visible at the time the app is specialized. If you explicitly annotate <code>main</code> here it should resolve that. I think we've discussed making that mandatory anyway.</p>",
        "id": 406120150,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1701800646
    }
]