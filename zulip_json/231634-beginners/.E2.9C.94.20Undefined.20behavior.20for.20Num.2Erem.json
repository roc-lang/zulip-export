[
    {
        "content": "<p>Modulo operation (<code>42 % 0</code>) crashes instead of panicking (divison by zero (<code>42 / 0</code>) works as expected)</p>\n<p><a href=\"/user_uploads/22008/x8bWpacC5f4OR-0j7iJoQbSl/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/x8bWpacC5f4OR-0j7iJoQbSl/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/x8bWpacC5f4OR-0j7iJoQbSl/image.png\"></a></div><p>Not sure if a ticket has already been created</p>",
        "id": 418523536,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1706465851
    },
    {
        "content": "<p>would mean that the wasm dev backend is missing the check if it is in the web repl. If it is in the local repl, it also affects the native dev backend</p>",
        "id": 418523759,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1706466038
    },
    {
        "content": "<p>Locally it's</p>\n<div class=\"codehilite\"><pre><span></span><code>Â» 42 % 0\n\n42 : Int *\n</code></pre></div>\n<p>which is not expected as well I think</p>",
        "id": 418524221,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1706466456
    },
    {
        "content": "<p>I guess that if what the CPU instruction does when you pass in zero.... Lol</p>",
        "id": 418524293,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1706466493
    },
    {
        "content": "<p>Is behavior always defined in roc? I would think there would be some constant folding pass that catches this before the ast leaves the frontend if so.</p>",
        "id": 418551274,
        "sender_full_name": "Asher Mancinelli",
        "timestamp": 1706490933
    },
    {
        "content": "<p>this is just a bug - we didn't implement the check <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 418553388,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1706493024
    },
    {
        "content": "<p>the only optimizations we do are related to tail-calls, mutation, and memory management</p>",
        "id": 418553409,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1706493047
    },
    {
        "content": "<p>we don't yet do any inlining, constant folding, etc. - those are all left to LLVM for the moment</p>",
        "id": 418553436,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1706493081
    },
    {
        "content": "<p>Filed an issue. The same for <code>42 // 0</code> btw<br>\n<a href=\"https://github.com/roc-lang/roc/issues/6459\">https://github.com/roc-lang/roc/issues/6459</a></p>",
        "id": 418606643,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1706524290
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>  I saw you closed the ticket, but the fix was only for <code>//</code>, not for <code>%</code>.<br>\nTho looking at the fix for <code>divTrunc</code> by Folkert, I think I can quickly replicate it for <code>rem</code></p>\n<p>So if you reopen the issue, please assign it to me, I've already started! <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 418672048,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1706544929
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"584248\">Kiryl Dziamura</span> has marked this topic as resolved.</p>",
        "id": 418881171,
        "sender_full_name": "Notification Bot",
        "timestamp": 1706633697
    }
]