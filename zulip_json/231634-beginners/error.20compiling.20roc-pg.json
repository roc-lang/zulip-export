[
    {
        "content": "<p>I'm trying to use the hello-world example from the roc postgres client, but compilation gives this error</p>\n<p>── UNKNOWN OPERATOR in src/../roc-pg/src/Pg/Client.roc ─────────────────────────</p>\n<p>This looks like an operator, but it's not one I recognize!</p>\n<p>39│      stream &lt;- Tcp.withConnect host port<br>\n                ^^</p>\n<p>I have no specific suggestion for this operator, see</p>",
        "id": 524115412,
        "sender_full_name": "Don P",
        "timestamp": 1749977506
    },
    {
        "content": "<p>I'm using nightly-roc, so maybe that is the problem?</p>\n<p>roc nightly pre-release, built from commit c47a8e9 on Sa 22 Mär 2025 09:02:05 UTC</p>",
        "id": 524115442,
        "sender_full_name": "Don P",
        "timestamp": 1749977542
    },
    {
        "content": "<p>That is the backpassing operator which has been removed from the language. I think roc-pg will need to be substantially refactored to be compiled again</p>",
        "id": 524141118,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1750003821
    },
    {
        "content": "<p>okay thanks for the explanation. is there any sql client library available for roc?</p>",
        "id": 524158180,
        "sender_full_name": "Don P",
        "timestamp": 1750024997
    },
    {
        "content": "<p>Sorry <span class=\"user-mention\" data-user-id=\"762219\">@Don P</span> I don't think there is any right now.</p>",
        "id": 524160367,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750028095
    },
    {
        "content": "<p>There is SQLite in basic webserver</p>",
        "id": 524161867,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1750030538
    },
    {
        "content": "<p>Yeah, I was thinking of cross-platform libraries. The SQlite in basic-cli and basic-webserver work nice imo</p>",
        "id": 524162401,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750031237
    },
    {
        "content": "<p>I've left an issue on the roc-pg repo asking for the latest version it did compile for. It looks like the project has been idle for a year. For my purposes I can export some data from psql into sqlite for playing around with roc. thanks.</p>",
        "id": 524171178,
        "sender_full_name": "Don P",
        "timestamp": 1750041649
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span> was instrumental with the design and evolution of the map-2 record builders, which enables a really nice API for sql clients and is much simpler than the backpassing approach or the other record builders API we have before map-2 based ones. </p>\n<p>I'm sure he'll be keen to upgrade the package as soon as we have the new compiler online as it's a super cool API and very unique to roc. I don't know of any other language that will have as nice a story for working with sql as roc 0.1  <span aria-label=\"heart eyes\" class=\"emoji emoji-1f60d\" role=\"img\" title=\"heart eyes\">:heart_eyes:</span> (but I may be biased a little)</p>",
        "id": 524171570,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750042129
    },
    {
        "content": "<p>For reference, this is an example of the record builder API from basic-cli</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">query_todos_by_status</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"w\"> </span><span class=\"nf\">=&gt;</span><span class=\"w\"> </span><span class=\"nx\">Result</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">List</span><span class=\"w\"> </span><span class=\"nx\">Todo</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">Sqlite</span><span class=\"p\">.</span><span class=\"nx\">SqlDecodeErr</span><span class=\"w\"> </span><span class=\"nx\">_</span><span class=\"p\">)</span>\n<span class=\"nx\">query_todos_by_status</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"nx\">db_path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">status</span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"nx\">Sqlite</span><span class=\"p\">.</span><span class=\"nx\">query_many</span><span class=\"o\">!</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nv\">path</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">db_path</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nv\">query</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"SELECT id, task, status FROM todos WHERE status = :status;\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nv\">bindings</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\"> </span><span class=\"nv\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\":status\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">value</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"nx\">status</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}],</span>\n<span class=\"w\">            </span><span class=\"nv\">rows</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nx\">Sqlite</span><span class=\"p\">.</span><span class=\"nx\">decode_record</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span>\n<span class=\"w\">                </span><span class=\"nv\">id</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Sqlite</span><span class=\"p\">.</span><span class=\"nx\">i64</span><span class=\"p\">(</span><span class=\"s\">\"id\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Sqlite</span><span class=\"p\">.</span><span class=\"nx\">map_value</span><span class=\"p\">(</span><span class=\"nx\">Num</span><span class=\"p\">.</span><span class=\"nx\">to_str</span><span class=\"p\">),</span>\n<span class=\"w\">                </span><span class=\"nv\">task</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Sqlite</span><span class=\"p\">.</span><span class=\"nx\">str</span><span class=\"p\">(</span><span class=\"s\">\"task\"</span><span class=\"p\">),</span>\n<span class=\"w\">                </span><span class=\"nv\">status</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Sqlite</span><span class=\"p\">.</span><span class=\"nx\">str</span><span class=\"p\">(</span><span class=\"s\">\"status\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Sqlite</span><span class=\"p\">.</span><span class=\"nx\">map_value_result</span><span class=\"p\">(</span><span class=\"nx\">decode_todo_status</span><span class=\"p\">),</span>\n<span class=\"w\">            </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 524171687,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1750042246
    },
    {
        "content": "<p>I posted a PR for migrating to the new syntax, but it's incomplete as I didn't touch the query builder and it may contain choices which Agus would make differently. I couldn't live without <code>roc-pg</code> in my life, though, so I created a fork with releases here: <a href=\"https://github.com/growthagent/roc-pg\">https://github.com/growthagent/roc-pg</a></p>\n<p>I'll retire the fork once <code>roc-pg</code> is back in action, but it's fine to use for now if you'd like. Note that I've made some unholy changes that may or may not make it into <code>roc-pg</code>, like how record builders work now and I've introduced <code>Maybe</code> for nullable input and outputs. Here's a full example: <a href=\"https://github.com/growthagent/roc-pg/blob/main/examples/query-with-record-builder.roc\">https://github.com/growthagent/roc-pg/blob/main/examples/query-with-record-builder.roc</a></p>\n<p>Happy paddling!</p>",
        "id": 524220378,
        "sender_full_name": "Niclas Ahden",
        "timestamp": 1750068131
    },
    {
        "content": "<p>Hey all! I'm not quite back in action, but I did publish <a href=\"https://github.com/agu-z/roc-pg/releases/tag/0.1.1\"><code>roc-pg@0.1.1</code></a> with <span class=\"user-mention\" data-user-id=\"524503\">@Niclas Ahden</span>'s migration (thx so much <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span>).</p>\n<p>I've decided to remove the query builder from <code>main</code> as I never quite got it over the line, and I don't have the time to dedicate to it.  I'd love to return to it when the new compiler is out, and things are calmer in my life.</p>",
        "id": 524365489,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1750131404
    }
]