[
    {
        "content": "<p>I would like to use roc-json to decode some json where an object can represent one of several types, which have different properties. Is there any way to do this? I'd like to write something like this (but this doesn't work):</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>app \"json-test\"\n    packages {\n        pf: \"https://github.com/roc-lang/basic-cli/releases/download/0.7.0/bkGby8jb0tmZYsy2hg1E_B2QrCgcSTxdUlHtETwm5m4.tar.br\",\n        json: \"https://github.com/lukewilliamboswell/roc-json/releases/download/0.6.0/hJySbEhJV026DlVCHXGOZNOeoOl7468y9F9Buhj0J18.tar.br\",\n    }\n    imports [\n        pf.Stdout,\n        json.Core.{ json },\n        Decode.{ fromBytes },\n    ]\n    provides [main] to pf\n\njsonStr = Str.toUtf8 \"{\\\"id\\\": \\\"http://example.org/A\\\"}\"\n\nConcept : [AtomicConcept { id : Str }, ExistentialRestriction { role : Str }]\n\nresult : Result Concept _\nresult = jsonStr |&gt; Decode.fromBytes json\n\nmain =\n    Stdout.line (Inspect.toStr result)\n</code></pre></div>",
        "id": 409585772,
        "sender_full_name": "Jim Balhoff",
        "timestamp": 1703253073
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> could know this</p>",
        "id": 409588213,
        "sender_full_name": "Anton",
        "timestamp": 1703254023
    },
    {
        "content": "<p>Unfortunately this isnâ€™t supported right now. The compiler needs to be updated to support decoding into tag unions in general</p>",
        "id": 409594471,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1703256660
    },
    {
        "content": "<p>This is the issue <a href=\"https://github.com/roc-lang/roc/issues/3816\">https://github.com/roc-lang/roc/issues/3816</a></p>",
        "id": 409594980,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1703256779
    },
    {
        "content": "<p>I implemented the first part of it but am not currently working on it</p>",
        "id": 409595123,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1703256815
    },
    {
        "content": "<p>Ah, okay, thanks!</p>",
        "id": 409595949,
        "sender_full_name": "Jim Balhoff",
        "timestamp": 1703257060
    }
]