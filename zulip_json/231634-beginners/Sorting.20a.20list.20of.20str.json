[
    {
        "content": "<p>I'm trying to do what it says on the tin. <code>Str</code> don't seem to implement the <code>Eq</code> ability, so its not that simple. I've gotten this so far:</p>\n<div class=\"codehilite\"><pre><span></span><code>compareStr : Str, Str -&gt; [LT, EQ, GT]\ncompareStr = \\a, b -&gt;\n    compareLetters (Str.toUtf8 a) (Str.toUtf8 b)\n\ncompareLetters : List u8, List u8 -&gt; [LT, EQ, GT]\ncompareLetters = \\x, y -&gt;\n    when (x, y) is\n        ([], []) -&gt; EQ\n        ([], [_]) -&gt; LT\n        ([_], []) -&gt; GT\n        (a, b) -&gt;\n            if (List.first a) == List.frist b then\n                ...\n            else\n                ...\n</code></pre></div>\n<p>My plan is to pass this into the <code>List.sortWith</code> function, but I'm finding it cumbersome to implement. My first thought was to write a recursive function that compares one letter at a time, but that doesn't seems easily possible.</p>\n<p>Is there a pattern match that is something along the lines of <code>[head, ..rest] -&gt; ...</code></p>\n<p>Otherwise, the <code>List.first</code> function, but this (understandably) returns <code>Result a [ListWasEmpty]</code>. Is there a way, similar to <code>.unwrap()</code> in Rust, that I can easily throw away the error, since I know what branch of the pattern match I'm on?</p>",
        "id": 417365793,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1705982120
    },
    {
        "content": "<p>For pattern match the syntax is <code>[head, .. as rest] -&gt; ...</code></p>",
        "id": 417366619,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1705982624
    },
    {
        "content": "<p>Richard added a detailed guide recently to <a href=\"https://www.roc-lang.org/builtins/Str\">https://www.roc-lang.org/builtins/Str</a> which explains the logic behind not having <code>Eq</code> ability for <code>Str</code></p>",
        "id": 417366863,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1705982776
    },
    {
        "content": "<p>Refer to the section <code>String equality and normalization</code></p>",
        "id": 417366901,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1705982807
    },
    {
        "content": "<p>Is this something the eventual unicode package plans to support?</p>",
        "id": 417369128,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1705984406
    },
    {
        "content": "<p>I would guess so, but we need to implement the Unicode Normalization Algorithm I think</p>",
        "id": 417370434,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1705985288
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/231634-beginners/topic/Sorting.20a.20list.20of.20str/near/417366901\">said</a>:</p>\n<blockquote>\n<p>Refer to the section <code>String equality and normalization</code></p>\n</blockquote>\n<p>we should totally make these headers automatically self-linkifying like in the tutorial! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 417372330,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1705986473
    },
    {
        "content": "<p>I was thinking the same thing... should be another good first issue for Doc gen</p>",
        "id": 417374776,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1705988170
    },
    {
        "content": "<p>Or maybe it can already be done</p>",
        "id": 417374801,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1705988195
    },
    {
        "content": "<p>It's not implemented like the static-site-gen platform. </p>\n<p>So we need to update docs gen crate to support e.g. </p>\n<p><code>## ## [Syntax](#syntax) {#syntax}</code> should generate</p>\n<div class=\"codehilite\" data-code-language=\"HTML\"><pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">h2</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"syntax\"</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"#syntax\"</span><span class=\"p\">&gt;</span>Syntax<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n</code></pre></div>\n<p>Sound ok?</p>",
        "id": 417375096,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1705988441
    },
    {
        "content": "<p>I created an issue for this <a href=\"https://github.com/roc-lang/roc/issues/6420\">https://github.com/roc-lang/roc/issues/6420</a></p>",
        "id": 417544130,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1706050845
    }
]