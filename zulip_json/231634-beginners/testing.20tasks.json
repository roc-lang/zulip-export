[
    {
        "content": "<p>I'm curious what the story round mixing tests and tasks is.  I tried doing a simple <code>Stdout.line \"\" == Stdout.line \"\"</code>, and the compiler says that tasks don't implement the <code>Eq</code> ability. This doesn't surprise me, since <code>Task</code>s probably use functions, which also don't implement <code>Eq</code>.  Is there a way to assert against these kinds of managed effects? It would be nice to be able to pass the entire <code>main</code> function into a test, and drive functionality that way, TDD style.</p>\n<p>I tried looking for other zulip streams or things on the website, but couldn't find anything.</p>",
        "id": 429095559,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1711212237
    },
    {
        "content": "<p>We have some plans around simulation tests and things of those nature but nothing exists currently</p>",
        "id": 429099345,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1711215240
    },
    {
        "content": "<p>If you checkout the module params proposal there is some discussion in there for how it might work. I've made a summary in case it helps <br>\n<a href=\"https://github.com/lukewilliamboswell/roc-awesome?tab=readme-ov-file#language-changes-\">https://github.com/lukewilliamboswell/roc-awesome?tab=readme-ov-file#language-changes-</a></p>",
        "id": 429104472,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1711219294
    }
]