[
    {
        "content": "<p>Hi! Me again. I sense gradual typing problem again, but am struggling to understand it and to find a better solution. Could you please explain me why the folliwing code:</p>\n<div class=\"codehilite\"><pre><span></span><code>is_within : BoundedInterval _, BoundedInterval _ -&gt; Bool\nis_within = |inner_interval, outer_interval|\n    when (normalized(inner_interval), normalized(outer_interval)) is\n        (_, Err(IntervalWasEmpty)) -&gt;\n            Bool.false\n\n        (Err(IntervalWasEmpty), _) -&gt;\n            Bool.true\n\n        (Ok((inner_first, inner_last)), Ok((outer_first, outer_last))) -&gt;\n            inner_first &gt;= outer_first and inner_last &lt;= outer_last\n</code></pre></div>\n<p>Fails with the error:</p>\n<div class=\"codehilite\"><pre><span></span><code>── UNSAFE PATTERN in ./src/Interval.roc ────────────────────────────────────────\n\nThis when does not cover all the possibilities:\n\n306│&gt;      when (normalized(inner_interval), normalized(outer_interval)) is\n307│&gt;          (_, Err(IntervalWasEmpty)) -&gt;\n308│&gt;              Bool.false\n309│&gt;\n310│&gt;          (Err(IntervalWasEmpty), _) -&gt;\n311│&gt;              Bool.true\n312│&gt;\n313│&gt;          (Ok((inner_first, inner_last)), Ok((outer_first, outer_last))) -&gt;\n314│&gt;              inner_first &gt;= outer_first and inner_last &lt;= outer_last\n\nOther possibilities include:\n\n    ( Ok _, Err _ )\n    ( Ok _, Ok _ )\n\nI would have to crash if I saw one of those! Add branches for them!\n</code></pre></div>\n<p>Even though I clearly covered these possibilities.</p>\n<p>Here is definition of the <code>normalized</code> function:</p>\n<div class=\"codehilite\"><pre><span></span><code>normalized : BoundedInterval a -&gt; Result (Int a, Int a) [IntervalWasEmpty]\n</code></pre></div>",
        "id": 515346969,
        "sender_full_name": "Ilya Shmygol",
        "timestamp": 1746029754
    },
    {
        "content": "<p>This is indeed a bug with tuples <a href=\"https://github.com/roc-lang/roc/issues/5530\">#5530</a></p>",
        "id": 515348793,
        "sender_full_name": "Anton",
        "timestamp": 1746030255
    },
    {
        "content": "<p>Oh, ok. Thanks for the info.</p>",
        "id": 515349269,
        "sender_full_name": "Ilya Shmygol",
        "timestamp": 1746030417
    }
]