[
    {
        "content": "<p>The following code will compile:</p>\n<div class=\"codehilite\"><pre><span></span><code>    Str.walkUtf8 plaintext [] \\acc, letter -&gt; acc\n    |&gt; Str.joinWith &quot;&quot;\n</code></pre></div>\n<p>while this one (added indentation) will not, with a difficult to understand error (I mean it’s simple but not easy to figure what’s wrong when not used to the operators priority of roc)</p>\n<div class=\"codehilite\"><pre><span></span><code>    Str.walkUtf8 plaintext [] \\acc, letter -&gt; acc\n        |&gt; Str.joinWith &quot;&quot;\n</code></pre></div>\n<p>And remark that the following one (wrong but added parenthesis) will be auto formatted to the correct version</p>\n<div class=\"codehilite\"><pre><span></span><code>    Str.walkUtf8 plaintext [] (\\acc, letter -&gt; acc)\n        |&gt; Str.joinWith &quot;&quot;\n</code></pre></div>",
        "id": 437844813,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1715270695
    },
    {
        "content": "<p>If my understanding is correct, your emphasis <span class=\"user-mention\" data-user-id=\"479073\">@Matthieu Pizenberg</span> is on the fact that your second example</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">walkUtf8</span><span class=\"w\"> </span><span class=\"nv\">plaintext</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">acc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">letter</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">acc</span>\n<span class=\"w\">    </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">joinWith</span><span class=\"w\"> </span><span class=\"s\">\"\"</span>\n</code></pre></div>\n<p>is equivalent to this:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">walkUtf8</span><span class=\"w\"> </span><span class=\"nv\">plaintext</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">acc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">letter</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">acc</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"nf\">.</span><span class=\"nv\">joinWith</span><span class=\"w\"> </span><span class=\"s\">\"\"</span>\n</code></pre></div>\n<p>It's an interesting case indeed, where perhaps the error message could benefit from some augmentation with one or more suggestions for fixing.</p>\n<p>My understanding is that formatting-wise, if there's indentation, then that is assumed to be an argument to the preceding function/token.</p>",
        "id": 437853278,
        "sender_full_name": "Hristo",
        "timestamp": 1715273990
    },
    {
        "content": "<p>That's probably the issue indeed. I'm coming from a language where <code>|&gt;</code> is an operator with low precedence (Elm) while here I guess it has higher precedence than <code>-&gt;</code>, except when indented the same as the previous line? At least it an identation-sensitive error and this might be something to look for and report in the compiler I think.</p>",
        "id": 437854457,
        "sender_full_name": "Matthieu Pizenberg",
        "timestamp": 1715274374
    },
    {
        "content": "<p>These are definitely cases we need to document and iron out</p>",
        "id": 437875058,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1715283453
    },
    {
        "content": "<p>My gut feeling is that a lambda needs a new line right after the <code>-&gt;</code> or to be wrapped in parens for precedence here.</p>\n<p>So I would think that in both cases <code>|&gt;</code> on the next line should apply to the the result of <code>Str.walkUtf8</code> as a whole.</p>",
        "id": 437875396,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1715283610
    },
    {
        "content": "<p>So I would expect all 3 of your original examples to be equivalent to your last example with the wrong parens</p>",
        "id": 437875524,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1715283685
    }
]