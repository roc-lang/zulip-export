[
    {
        "content": "<p>Is there a way to instruct roc cli to build a rust platform and use debug instead of release? I am trying to debug some things using <code>dbg!</code> macros and not sure how to do this when using <code>roc dev myapp.roc</code> which rebuilds the platform.</p>",
        "id": 367757093,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687212044
    },
    {
        "content": "<p>If you don't pass <code>--optimize</code> it should build a rust platform in debug mode.</p>",
        "id": 367757290,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687212159
    },
    {
        "content": "<p>As long as you have a local platform of course that is getting built from source</p>",
        "id": 367757320,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687212177
    },
    {
        "content": "<p>So, <code>packages { pf: \"../src/main.roc\" }</code> should be building and running in debug then?</p>",
        "id": 367757414,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687212232
    },
    {
        "content": "<p>hmm, I think there is something else going on here. Thanks <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span></p>",
        "id": 367757573,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687212323
    },
    {
        "content": "<p>yeah, should be. You should see roc saying rebuilding host.</p>",
        "id": 367757600,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687212354
    },
    {
        "content": "<p>also, you should be able to delete <code>target/release</code> and it should still run without recompile. Cause it will use the rust debug build</p>",
        "id": 367757702,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687212399
    },
    {
        "content": "<p>It looks like bdg is working. I think the issue is something about my \"glue\" types and passing values between Roc and rust</p>",
        "id": 367757730,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687212422
    },
    {
        "content": "<p>dbg*</p>",
        "id": 367757760,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687212435
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> can you please have a look at this? Am I missing something obvious here? I feel like maybe I can't just pass a <code>command_glue::Command</code> straight into the <code>roc_fx_commandStatus</code>?</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"c1\"># Effect.roc</span>\n<span class=\"nv\">commandStatus</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">InternalCommand</span><span class=\"p\">.</span><span class=\"nx\">Command</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nx\">Effect</span><span class=\"w\"> </span><span class=\"nx\">U8</span>\n\n<span class=\"c1\"># InternalCommand.roc</span>\n<span class=\"nv\">Command</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nv\">program</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nv\">args</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\"># [arg0, arg1, arg2, arg3, ...]</span>\n<span class=\"w\">    </span><span class=\"nv\">envs</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\"># [key0, value0, key1, value1, key2, value2, ...]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// command_glue.rs</span>\n<span class=\"cp\">#[derive(Clone, Default, Debug, PartialEq, PartialOrd, Eq, Ord, Hash, )]</span>\n<span class=\"cp\">#[repr(C)]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Command</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">args</span>: <span class=\"nc\">roc_std</span>::<span class=\"n\">RocList</span><span class=\"o\">&lt;</span><span class=\"n\">roc_std</span>::<span class=\"n\">RocStr</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">envs</span>: <span class=\"nc\">roc_std</span>::<span class=\"n\">RocList</span><span class=\"o\">&lt;</span><span class=\"n\">roc_std</span>::<span class=\"n\">RocStr</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"n\">program</span>: <span class=\"nc\">roc_std</span>::<span class=\"n\">RocStr</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">roc_fx_commandStatus</span><span class=\"p\">(</span><span class=\"n\">cmd</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">command_glue</span>::<span class=\"n\">Command</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">u8</span>\n</code></pre></div>",
        "id": 367758836,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687213094
    },
    {
        "content": "<p>That looks like it should be correct to me</p>",
        "id": 367759151,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687213278
    },
    {
        "content": "<p>I had it working fine just passing in a <code>RocStr</code> but recently changed it to the struct <code>Command</code></p>",
        "id": 367759164,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687213295
    },
    {
        "content": "<p>One guess, maybe it explicitly needs to be a pointer instead of <code>&amp;</code></p>",
        "id": 367759206,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687213321
    },
    {
        "content": "<p>Does it work if you remove one of the fields?</p>",
        "id": 367759279,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687213346
    },
    {
        "content": "<p>I've just pushed my WIP to <a href=\"https://github.com/roc-lang/basic-cli/pull/55\">#55</a></p>",
        "id": 367759476,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687213460
    },
    {
        "content": "<p>I'll try removing all the fields except the RocStr</p>",
        "id": 367759507,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687213483
    },
    {
        "content": "<p>Yeah, it works ok removing the <code>args</code> and <code>envs</code> fields from <code>command_glue::Command</code></p>",
        "id": 367759659,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687213576
    },
    {
        "content": "<p>My current guess is that is is related to <a href=\"https://github.com/roc-lang/roc/issues/5544\">#5544</a> and since the size is 72 bytes (which is over 64 bytes) it becomes a pointer.</p>",
        "id": 367759698,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687213606
    },
    {
        "content": "<p>So it should work with 2 fields, but fail with 3</p>",
        "id": 367759715,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687213618
    },
    {
        "content": "<p>With 3 probably just need to change the input type to a pointer.</p>",
        "id": 367759750,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687213632
    },
    {
        "content": "<p>but maybe something more complex is needed</p>",
        "id": 367759755,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687213640
    },
    {
        "content": "<p>Ok, thanks. It doesn't work with two or three fields.</p>",
        "id": 367759860,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687213698
    },
    {
        "content": "<p>To change to a pointer, I need to use a Box type right?</p>",
        "id": 367759891,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687213722
    },
    {
        "content": "<p>Hmm. breaks with 2. Maybe it is something else, not sure. Anyway, I would test with a <code>*const command_glue::Command</code></p>",
        "id": 367760191,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687213895
    },
    {
        "content": "<p>Works!! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 367760332,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687213976
    },
    {
        "content": "<p>Thank you</p>",
        "id": 367760352,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687213988
    },
    {
        "content": "<p>Pushed to <a href=\"https://github.com/roc-lang/basic-cli/commit/3625eeea0a5c6a2af8102f29444a7a84a526a7fc\">this commit</a> in case anyone finds this thread in future and wants to know how to use Box as a workaround here.</p>",
        "id": 367760580,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1687214154
    },
    {
        "content": "<p>Hmm. that isn't what I meant, but is a patch I guess. Pretty wasteful to just box for that. Though it is always a workaround to any glue issues.</p>\n<p>My suggestion would not use box on the roc side at all. It would just use the pointer on the rust side.</p>",
        "id": 367760738,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687214247
    },
    {
        "content": "<p>Not saying my suggestion would work, but this api definitely should work without any box on the roc side.</p>",
        "id": 367760841,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687214292
    },
    {
        "content": "<p>Hmm. I just tested your code on my m1 mac and I think your original code works just fine. Like without any changes....hmm</p>",
        "id": 367761969,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1687214988
    }
]