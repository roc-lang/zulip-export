[
    {
        "content": "<p>I got a crazy error today:</p>\n<div class=\"codehilite\"><pre><span></span><code>Invalid InsertValueInst operands!\n  %set_result = insertvalue { double, i1 } zeroinitializer, float %sub_float, 0, !dbg !1135\nFunction return type does not match operand type of return inst!\n  ret { double, i1 } %set_is_infinite, !dbg !1135\n { float, i1 }\n\nFunction &quot;Num_subCheckedLowlevel_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6&quot; failed LLVM verification in NON-OPTIMIZED build. Its content was:\n\ndefine internal fastcc { float, i1 } @Num_subCheckedLowlevel_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(float %&quot;#arg1&quot;, float %&quot;#arg2&quot;) !dbg !1134 {\nentry:\n  %sub_float = fsub float %&quot;#arg1&quot;, %&quot;#arg2&quot;, !dbg !1135\n  %call_builtin = call i1 @roc_builtins.num.is_finite.f32(float %sub_float), !dbg !1135\n  %negate = xor i1 %call_builtin, true, !dbg !1135\n  %set_result = insertvalue { double, i1 } zeroinitializer, float %sub_float, 0, !dbg !1135\n  %set_is_infinite = insertvalue { double, i1 } %set_result, i1 %negate, 1, !dbg !1135\n  ret { double, i1 } %set_is_infinite, !dbg !1135\n}\nthread &#39;main&#39; panicked at &#39;ðŸ˜± LLVM errors when defining function &quot;Num_subCheckedLowlevel_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6&quot;; I wrote the full LLVM IR to &quot;main.ll&quot;&#39;, crates/compiler/gen_llvm/src/llvm/build.rs:5805:21\n</code></pre></div>\n<p>This is a simplified version of my code:</p>\n<div class=\"codehilite\"><pre><span></span><code>app &quot;test&quot;\n    packages {\n        pf: &quot;https://github.com/roc-lang/basic-cli/releases/download/0.7.0/bkGby8jb0tmZYsy2hg1E_B2QrCgcSTxdUlHtETwm5m4.tar.br&quot;,\n    }\n    imports [\n        pf.Stdout,\n    ]\n    provides [main] to pf\n\n\nmain =\n    _ = List.range { start: At 0, end: Before 11 }\n        |&gt; List.map \\a -&gt;\n            a + 0.5f32\n\n    Stdout.line &quot;done&quot;\n</code></pre></div>\n<p>I fixed the error by changing <code>a</code> to <code>(Num.toF32 a)</code>. I tried searching for the issus but couldn't find an open one with the same message, do you want me to open a new issue?</p>",
        "id": 411397898,
        "sender_full_name": "Johan Lindskogen",
        "timestamp": 1704472632
    },
    {
        "content": "<p>Yes please :)</p>",
        "id": 411398328,
        "sender_full_name": "Anton",
        "timestamp": 1704472817
    },
    {
        "content": "<p>Interesting. That would suggest that the code somehow passed type checking.</p>",
        "id": 411398806,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704473016
    },
    {
        "content": "<p>Maybe just a bug in our specification of <code>List.range</code></p>",
        "id": 411398847,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704473035
    },
    {
        "content": "<p>Yea, roc check reports no issues <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 411399215,
        "sender_full_name": "Johan Lindskogen",
        "timestamp": 1704473168
    },
    {
        "content": "<p>I opened issue <a href=\"https://github.com/roc-lang/roc/issues/6351\">#6351</a> for this</p>",
        "id": 411399248,
        "sender_full_name": "Johan Lindskogen",
        "timestamp": 1704473194
    }
]