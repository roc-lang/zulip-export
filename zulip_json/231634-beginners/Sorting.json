[
    {
        "content": "<p>I'm trying to sort a list of something that boils down to strings, and running into some issues. First, I see that there's nothing like <code>List.sortByKey .name</code> (to access the name field and sort by that as a key) - and nor do things like List seem to be comparable. When I try to encode everything in strings and write my own comparison function to use with <code>List.sortWith</code>, like so:</p>\n<div class=\"codehilite\"><pre><span></span><code>            set\n                |&gt; Set.toList\n                |&gt; List.sortWith \\{modu: ma, name: na}, {modu: mb, name: nb} -&gt;\n                    a = Str.concat (Str.joinWith (List.map ma \\m -&gt; Str.concat m &quot;::&quot;) &quot;&quot;) na\n                    b = Str.concat (Str.joinWith (List.map mb \\m -&gt; Str.concat m &quot;::&quot;) &quot;&quot;) nb\n                    if a == b then\n                        EQ\n                    else\n                        if a &lt; b then\n                            LT\n                        else\n                            GT\n</code></pre></div>\n<p>I just get:</p>\n<div class=\"codehilite\"><pre><span></span><code>── TYPE MISMATCH ───────────────────────── crates/compiler/parse/generator.roc ─\n\nThis 1st argument to isLt has an unexpected type:\n\n48│                      else if a &lt; b then\n                                 ^\n\nThis a value is a:\n\n    Str\n\nBut isLt needs its 1st argument to be:\n\n    Num a\n</code></pre></div>\n<p>... which is very surprising. Is string comparison not implemented in Roc yet?</p>",
        "id": 317681384,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1671865334
    },
    {
        "content": "<p>yeah we have <code>Hash</code> and be<code>Eq</code> but not <code>Ord</code> yet</p>",
        "id": 317683307,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1671866866
    },
    {
        "content": "<p>implementing it should be very similar to <code>Hash</code> I think!</p>",
        "id": 317683367,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1671866901
    }
]