[
    {
        "content": "<p>How would one use phantom types in Roc to translate the following Elm example to Roc? <a href=\"https://sporto.github.io/elm-patterns/advanced/flow-phantom-types.html\">https://sporto.github.io/elm-patterns/advanced/flow-phantom-types.html</a></p>",
        "id": 489332495,
        "sender_full_name": "Henrik Larsson",
        "timestamp": 1734379925
    },
    {
        "content": "<p>Phantom types are supported if you use an Opaque type <a href=\"https://www.roc-lang.org/tutorial#opaque-types\">https://www.roc-lang.org/tutorial#opaque-types</a></p>",
        "id": 489337125,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734381399
    },
    {
        "content": "<p>I'm trying to think of a good example to point to, but haven't got anything yet. </p>\n<p>I thought we had one on <a href=\"https://www.roc-lang.org/examples\">https://www.roc-lang.org/examples</a></p>\n<p>But it doesn't look like it. I can make a PR to add on soon.</p>",
        "id": 489337625,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734381507
    },
    {
        "content": "<p>I did try this</p>\n<p>Order : {price : Str}<br>\nStep step : Step Order<br>\nStart : [Start]<br>\nOrderWithTotal : [OrderWithTotal ]<br>\nOrderWithQuantity : [OrderWithQuantity]<br>\nDone : [Done]</p>\n<p>start : Order -&gt; Step Start<br>\nsetTotal : Int -&gt; Step Start -&gt; Step OrderWithTotal<br>\nadjustQuantityFromTotal : Step OrderWithTotal -&gt; Step Done<br>\nsetQuantity : Int -&gt; Step Start -&gt; Step OrderWithQuantity<br>\nadjustTotalFromQuantity : Step OrderWithQuantity -&gt; Step Done<br>\ndone : Step Done -&gt; Order</p>\n<p>However I do get the error<br>\n── SYNTAX PROBLEM in main.roc ──────────────────────────────────────────────────</p>\n<p>I got stuck here:</p>\n<p>68│  setTotal : Int -&gt; Step Start -&gt; Step OrderWithTotal<br>\n                                 ^</p>\n<p>Whatever I am running into is confusing me a lot! Normally I can give<br>\nfairly specific hints, but something is really tripping me up this<br>\ntime.</p>\n<p>However its only setTotal and setQuantity that give error the other functions do type check.</p>",
        "id": 489338119,
        "sender_full_name": "Henrik Larsson",
        "timestamp": 1734381633
    },
    {
        "content": "<p>Here's an example I used recently <a href=\"https://github.com/lukewilliamboswell/roc-experiment-js-dom/blob/0842577df83efa53a2d2584a7b38d4fb067f8f20/platform/Html.roc#L14\">https://github.com/lukewilliamboswell/roc-experiment-js-dom/blob/0842577df83efa53a2d2584a7b38d4fb067f8f20/platform/Html.roc#L14</a></p>",
        "id": 489338167,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734381650
    },
    {
        "content": "<p>Here the type variable <code>msg</code> isn't used, it's phantom</p>",
        "id": 489338304,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734381702
    },
    {
        "content": "<p>I use plenty of Phantom types in Weaver: <a href=\"https://github.com/smores56/weaver/blob/3881ac2d6aeb20150e7473ab2b81b1beaf9f219c/package/SubCmd.roc#L112\">https://github.com/smores56/weaver/blob/3881ac2d6aeb20150e7473ab2b81b1beaf9f219c/package/SubCmd.roc#L112</a></p>",
        "id": 489341250,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734382644
    },
    {
        "content": "<p>The <a href=\"https://github.com/smores56/weaver/blob/3881ac2d6aeb20150e7473ab2b81b1beaf9f219c/package/Builder.roc#L38\">CliBuilder</a> opaque type is:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">CliBuilder</span><span class=\"w\"> </span><span class=\"nv\">data</span><span class=\"w\"> </span><span class=\"nv\">fromAction</span><span class=\"w\"> </span><span class=\"nv\">toAction</span><span class=\"w\"> </span><span class=\"nf\">:=</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nv\">parser</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">ArgParser</span><span class=\"w\"> </span><span class=\"nv\">data</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nv\">options</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"w\"> </span><span class=\"kt\">OptionConfig</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nv\">parameters</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"w\"> </span><span class=\"kt\">ParameterConfig</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nv\">subcommands</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"w\"> </span><span class=\"kt\">Str</span><span class=\"w\"> </span><span class=\"kt\">SubcommandConfig</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 489341448,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734382701
    },
    {
        "content": "<p><code>fromAction</code> is the current state of the builder, and <code>toAction</code> is a possible future state</p>",
        "id": 489341523,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734382728
    },
    {
        "content": "<p>Is there like a canonical example people use for these? Something simple? </p>\n<p>I like the idea of also showing it used with record builder for states.</p>",
        "id": 489341811,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734382810
    },
    {
        "content": "<p>In the first linked example in <code>SubCmd</code>, you can see that the <code>fromAction</code> is <code>GetOptionsAction</code> and the <code>toAction</code> is <code>GetParamsAction</code>. This ensures that you can only add subcommands to <code>CliBuilder</code>s that have defined options so far, but if you defined subcommands or parameters, it won't typecheck</p>",
        "id": 489341923,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734382846
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> I'm not sure. The weaver usage is a little complex for a good teaching moment. When the tutorial rewrite happens we'll want a simpler example</p>",
        "id": 489342030,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734382883
    },
    {
        "content": "<p>I'd say the general approach of state tracking for builders is the general way I see them used</p>",
        "id": 489342105,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734382911
    },
    {
        "content": "<p>Is there some ETA for the tutorial rewrite or will it happen when it happens ;)</p>",
        "id": 489342321,
        "sender_full_name": "Henrik Larsson",
        "timestamp": 1734382981
    },
    {
        "content": "<p>Its this we are talking about right? <a href=\"https://www.roc-lang.org/tutorial\">https://www.roc-lang.org/tutorial</a></p>",
        "id": 489342439,
        "sender_full_name": "Henrik Larsson",
        "timestamp": 1734383023
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"736800\">Henrik Larsson</span> <a href=\"#narrow/channel/231634-beginners/topic/State.20machines.20in.20Roc/near/489342321\">said</a>:</p>\n<blockquote>\n<p>Is there some ETA for the tutorial rewrite or will it happen when it happens ;)</p>\n</blockquote>\n<p>I don't think anyone currently owns it. <span class=\"user-mention\" data-user-id=\"462053\">@JanCVanB</span> just recently added some stuff, but it's still in the form of a single, giant page. This has the benefit of implying that Roc is a small language that you can learn quickly, but it's still unwieldy in my opinion. <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> I think was wanting to do it himself, but maybe I'm mistaken.</p>",
        "id": 489344230,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734383637
    },
    {
        "content": "<p>I think Roc would be very well served with a \"tourtorial\" <a href=\"https://tour.gleam.run/\">like Gleam has</a>, but even a <a href=\"https://github.com/rust-lang/mdBook\">mdbook</a>-like tutorial would help digestability IMO</p>",
        "id": 489344660,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734383767
    },
    {
        "content": "<p>I think if someone felt strongly about teaching and wanted to update the tutorial, we wouldn't complain about them taking up the sword of progress</p>",
        "id": 489344816,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734383834
    },
    {
        "content": "<p>yeah I originally wanted to delay personally doing a tutorial rewrite until purity inference was out, and now I want to delay it until static dispatch and custom types have landed <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 489346573,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734384449
    },
    {
        "content": "<p>so it'll be months, and any incremental improvements in the meantime would be both great and also would become part of the inputs to the rewrite!</p>",
        "id": 489346707,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734384499
    },
    {
        "content": "<p>Incremental updates being changes to the content of the current layout, but not any structural changes.</p>",
        "id": 489349631,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1734385508
    },
    {
        "content": "<p>yeah</p>",
        "id": 489350134,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734385674
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281383\">Richard Feldman</span> <a href=\"#narrow/stream/231634-beginners/topic/State.20machines.20in.20Roc/near/489346573\">said</a>:</p>\n<blockquote>\n<p>yeah I originally wanted to delay personally doing a tutorial rewrite until purity inference was out, and now I want to delay it until static dispatch and custom types have landed <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>\n</blockquote>\n<p>This is always my problem with docs</p>",
        "id": 489371786,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734393885
    },
    {
        "content": "<p>Always something to delay for</p>",
        "id": 489371799,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734393892
    },
    {
        "content": "<p>usually I wouldn't bother if it's just small changes, but both static dispatch and purity inference are like \"rewrite most to all of the examples\" changes and custom types affects a large chunk too <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 489372287,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734394116
    },
    {
        "content": "<p>I thought you had a larger pivot in mind. Like you've mentioned how you wanted to approach the introduction for people from another angle or something.</p>",
        "id": 489373427,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734394654
    },
    {
        "content": "<p>yeah I do <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 489373815,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734394820
    },
    {
        "content": "<p>oh yeah which reminds me, <code>for</code> loops too <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 489373895,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1734394870
    },
    {
        "content": "<p>Thanks for all the input, just for history on OP, the Roc way for state machines with phantom types based on the Elm example looks like this I think.</p>\n<div class=\"codehilite\"><pre><span></span><code>Order : {price : Str}\nStep step := [Step Order]\nStart : [Start]\nOrderWithTotal : [OrderWithTotal]\nOrderWithQuantity : [OrderWithQuantity]\nDone : [Done]\n\nstart : Order -&gt; Step Start\nsetTotal : Int *, Step Start -&gt; Step OrderWithTotal\nadjustQuantityFromTotal : Step OrderWithTotal -&gt; Step Done\nsetQuantity : Int *, Step Start -&gt; Step OrderWithQuantity\nadjustTotalFromQuantity : Step OrderWithQuantity -&gt; Step Done\ndone : Step Done -&gt; Order\n</code></pre></div>",
        "id": 489513133,
        "sender_full_name": "Henrik Larsson",
        "timestamp": 1734449427
    }
]