[
    {
        "content": "<p>I think I have found a case where <code>roc check</code> is unable to predict the types and just hangs...</p>\n<p>This is my function with an error:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">thisBrakesChecker</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"nv\">b</span>\n<span class=\"nv\">thisBrakesChecker</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">state</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">firstKVFromDict</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"nf\">.</span><span class=\"nv\">toList</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">first</span>\n<span class=\"w\">    </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">firstKVFromDict</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">        </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">element</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">            </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nv\">element</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">                </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">state</span>\n<span class=\"w\">                </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">KeyNotFound</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">state</span>\n\n<span class=\"w\">        </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">ListWasEmpty</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">state</span>\n</code></pre></div>\n<p>And here is the correct error:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>➜<span class=\"w\">  </span>examples<span class=\"w\"> </span>git:<span class=\"o\">(</span>main<span class=\"o\">)</span><span class=\"w\"> </span>✗<span class=\"w\"> </span>roc<span class=\"w\"> </span>check<span class=\"w\"> </span>test.roc\n\n──<span class=\"w\"> </span>TYPE<span class=\"w\"> </span>MISMATCH<span class=\"w\"> </span>────────────────────────────────────────────────────<span class=\"w\"> </span>test.roc<span class=\"w\"> </span>─\n\nThis<span class=\"w\"> </span>2nd<span class=\"w\"> </span>argument<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"p\">|</span>&gt;<span class=\"w\"> </span>has<span class=\"w\"> </span>an<span class=\"w\"> </span>unexpected<span class=\"w\"> </span>type:\n\n<span class=\"m\">21</span>│<span class=\"w\">              </span>when<span class=\"w\"> </span>state<span class=\"w\"> </span><span class=\"p\">|</span>&gt;<span class=\"w\"> </span>Dict.get<span class=\"w\"> </span>element<span class=\"w\"> </span>is\n<span class=\"w\">                                        </span>^^^^^^^\n\nThis<span class=\"w\"> </span>element<span class=\"w\"> </span>value<span class=\"w\"> </span>is<span class=\"w\"> </span>a:\n\n<span class=\"w\">    </span><span class=\"o\">(</span>\n<span class=\"w\">        </span>a,\n<span class=\"w\">        </span>b,\n<span class=\"w\">    </span><span class=\"o\">)</span>a<span class=\"w\"> </span>where<span class=\"w\"> </span>a<span class=\"w\"> </span>implements<span class=\"w\"> </span>Hash<span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"w\"> </span>Eq\n\nBut<span class=\"w\"> </span><span class=\"p\">|</span>&gt;<span class=\"w\"> </span>needs<span class=\"w\"> </span>its<span class=\"w\"> </span>2nd<span class=\"w\"> </span>argument<span class=\"w\"> </span>to<span class=\"w\"> </span>be:\n\n<span class=\"w\">    </span>a<span class=\"w\"> </span>where<span class=\"w\"> </span>a<span class=\"w\"> </span>implements<span class=\"w\"> </span>Hash<span class=\"w\"> </span><span class=\"p\">&amp;</span><span class=\"w\"> </span>Eq\n\nNote:<span class=\"w\"> </span>The<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>variable<span class=\"w\"> </span>a<span class=\"w\"> </span>says<span class=\"w\"> </span>it<span class=\"w\"> </span>can<span class=\"w\"> </span>take<span class=\"w\"> </span>on<span class=\"w\"> </span>any<span class=\"w\"> </span>value<span class=\"w\"> </span>that\nimplements<span class=\"w\"> </span>the<span class=\"w\"> </span>abilities<span class=\"w\"> </span>Hash<span class=\"w\"> </span>and<span class=\"w\"> </span>Eq.\n\nBut,<span class=\"w\"> </span>I<span class=\"w\"> </span>see<span class=\"w\"> </span>that<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>is<span class=\"w\"> </span>only<span class=\"w\"> </span>ever<span class=\"w\"> </span>used<span class=\"w\"> </span>as<span class=\"w\"> </span>a<span class=\"w\"> </span>a<span class=\"w\"> </span>tuple<span class=\"w\"> </span>value.<span class=\"w\"> </span>Can<span class=\"w\"> </span>you\nreplace<span class=\"w\"> </span>a<span class=\"w\"> </span>with<span class=\"w\"> </span>a<span class=\"w\"> </span>more<span class=\"w\"> </span>specific<span class=\"w\"> </span>type?\n</code></pre></div>\n<p>But when I delete the type annotation then <code>roc check</code> just hangs:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"nv\">thisBrakesChecker</span><span class=\"w\"> </span><span class=\"nf\">:</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"w\"> </span><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"nv\">b</span>\n<span class=\"nv\">thisBrakesChecker</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">state</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">    </span><span class=\"nv\">firstKVFromDict</span><span class=\"w\"> </span><span class=\"nf\">=</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"nf\">.</span><span class=\"nv\">toList</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">first</span>\n<span class=\"w\">    </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">firstKVFromDict</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">        </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">element</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span>\n<span class=\"w\">            </span><span class=\"nv\">when</span><span class=\"w\"> </span><span class=\"nv\">state</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Dict</span><span class=\"nf\">.</span><span class=\"nv\">get</span><span class=\"w\"> </span><span class=\"nv\">element</span><span class=\"w\"> </span><span class=\"nv\">is</span>\n<span class=\"w\">                </span><span class=\"kt\">Ok</span><span class=\"w\"> </span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">state</span>\n<span class=\"w\">                </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">KeyNotFound</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">state</span>\n\n<span class=\"w\">        </span><span class=\"kt\">Err</span><span class=\"w\"> </span><span class=\"kt\">ListWasEmpty</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">state</span>\n</code></pre></div>\n<p>Seems  like to satisfy the type of this function, the key of the Dict would have to be the same type as the Dict - maybe thats why the type checker spins indefinetely.</p>",
        "id": 406537631,
        "sender_full_name": "Artur Domurad",
        "timestamp": 1701954067
    },
    {
        "content": "<p>Can you file a bug for this. Looks like a nice small repro that someone can dig into.</p>",
        "id": 406568073,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701963303
    },
    {
        "content": "<p>Created a ticket: <a href=\"https://github.com/roc-lang/roc/issues/6220\">https://github.com/roc-lang/roc/issues/6220</a><br>\nThere was a similar issue, but not sure if it is the same bug.<br>\nI have linked those issues in the comments.</p>",
        "id": 406706131,
        "sender_full_name": "Artur Domurad",
        "timestamp": 1702021808
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"634290\">Artur Domurad</span> has marked this topic as resolved.</p>",
        "id": 406706168,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702021824
    }
]