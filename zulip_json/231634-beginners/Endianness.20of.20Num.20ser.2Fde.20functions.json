[
    {
        "content": "<p>I just stumbled across the functions <a href=\"https://www.roc-lang.org/builtins/Num#bytesToU64\">Num.bytesToU64</a> and co.<br>\nWhich endianness is used for these? Big? Little? Whatever is native?</p>",
        "id": 391683712,
        "sender_full_name": "Qqwy / Marten",
        "timestamp": 1695038578
    },
    {
        "content": "<p>I thought we gave those an endianness parameter, given we didn't, must be native</p>",
        "id": 391722727,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695050195
    },
    {
        "content": "<p>2 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners/topic/Reserved.20keywords\">#beginners &gt; Reserved keywords</a> by <span class=\"user-mention silent\" data-user-id=\"508003\">Qqwy / Marten</span>.</p>",
        "id": 391739316,
        "sender_full_name": "Notification Bot",
        "timestamp": 1695055577
    },
    {
        "content": "<p>At some point, we decided that we don't want to expose any machine specifics in roc. Tests completely in roc should give the exact same results no matter if they run via wasm in the browser, m1 mac, or some x86 machine. As such, I think this should definitely change to require specifying the endianness. That said, that does lead to a potential perf issue unless the underlying platform exposes endianness to a roc app.</p>",
        "id": 391739881,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695055801
    },
    {
        "content": "<p>are there any platforms where roc makes sense that have the non-network endianness?</p>",
        "id": 391740431,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1695055992
    },
    {
        "content": "<p>(I always forget which of them that is)</p>",
        "id": 391740465,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1695056006
    },
    {
        "content": "<p>TCP/IP is big-endian and most CPUs are little-endian</p>",
        "id": 391741970,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1695056557
    },
    {
        "content": "<p>So that's actually the vastly dominant case</p>",
        "id": 391741992,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1695056568
    },
    {
        "content": "<p>sure but the performance should not be a problem: big-endian is always slow, little-endian is native and therefore always faster</p>",
        "id": 391745112,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1695057827
    },
    {
        "content": "<p>yeah I think all functions like this should take an explicit endianness <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 391761892,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695065224
    }
]