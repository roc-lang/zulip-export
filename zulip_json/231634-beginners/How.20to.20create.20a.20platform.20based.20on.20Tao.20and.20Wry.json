[
    {
        "content": "<p>I'm interested in learning all the necessities for platform creation.</p>\n<p>Since it seems the IO binding of a platform have to come from something else, I thought it'd be interesting to make a Tauri-like platform for Roc. Since Tauri is, by itself, a pre-built fusion of Tao and Wry, I was wondering about utilizing Tao and Wry as parts of a Rust platform for Roc, and of course incorporating all the other platform essentials too.</p>\n<p>And since the tutorials on platforms doesn't quite exist yet, I figured I'd ask here for some pointers while I peruse the examples</p>",
        "id": 409278156,
        "sender_full_name": "David Neave",
        "timestamp": 1703115262
    },
    {
        "content": "<p>Basic CLI is a good base to learn how a rust platform works. Definitely try to use glue if possible (makes it less likely to hit segfaults and such). Also, definitely ask questions as you get into implementation.</p>",
        "id": 409278763,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1703115651
    },
    {
        "content": "<p>Also, what are tao, wry, and tauri? Do you have a quick link with explanation?</p>",
        "id": 409278800,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1703115678
    },
    {
        "content": "<p><a href=\"https://github.com/tauri-apps/tao\">Tao</a> is a window-creation thing, and <a href=\"https://github.com/tauri-apps/wry\">Wry</a> is a webview renderer. They come together in <a href=\"https://tauri.app/\">Tauri</a> to create a nice alternative to Electron. On Windows, it unfortunately still derives from Chromium/Edge, I think. But on Linux and Mac it uses Webkit.</p>",
        "id": 409279311,
        "sender_full_name": "David Neave",
        "timestamp": 1703115974
    },
    {
        "content": "<p>The irony is I'm looking to make this platform to delay learning Rust as much as possible, but by making this platform, I'm likely going to have to learn Rust <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 409279443,
        "sender_full_name": "David Neave",
        "timestamp": 1703116063
    },
    {
        "content": "<p>I would love it so much if this existed.</p>",
        "id": 409279571,
        "sender_full_name": "Andrew C",
        "timestamp": 1703116145
    },
    {
        "content": "<p>Please keep me posted if you get things going.</p>",
        "id": 409279754,
        "sender_full_name": "Andrew C",
        "timestamp": 1703116249
    },
    {
        "content": "<p>We have a <a href=\"https://github.com/roc-lang/roc/tree/main/examples/gui\">gui example</a> that currently uses wgpu. I think maybe <span class=\"user-mention\" data-user-id=\"361169\">@Anton</span>  or <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> wrote it?? with the view to build the Roc editor (which is still planned but currently a lower priority). </p>\n<p>I have been thinking it would be great if that was split out into another platform (maybe basic-graphics) or something. I think I could help clean it up to use glue to generate the types instead of how it is currently implemented (it was written long before glue gen existed). That might serve as a good example for this project. I have completed a similar transformation for basic-webserver which probably is the best example of this currently. I have a branch for basic-cli to upgrade that to use glue gen (I can't remember what the issue is there).</p>\n<p>With the current glue and some (minor) workarounds I think we already have all the parts to build cross-platform gui applications using Roc and wgpu.</p>",
        "id": 409310255,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1703134606
    },
    {
        "content": "<p>that would be amazing!!! <span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span></p>",
        "id": 409373248,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1703160079
    },
    {
        "content": "<p>hi  guys  do you  have platform example for good old C or C++?</p>",
        "id": 409441366,
        "sender_full_name": "Artur Swiderski",
        "timestamp": 1703182645
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"568088\">Artur Swiderski</span> <a href=\"#narrow/stream/231634-beginners/topic/How.20to.20create.20a.20platform.20based.20on.20Tao.20and.20Wry/near/409441366\">said</a>:</p>\n<blockquote>\n<p>hi  guys  do you  have platform example for good old C or C++?</p>\n</blockquote>\n<p>I know of the existance of <a href=\"https://github.com/roc-lang/roc/tree/main/examples/platform-switching/\">this</a>, which has a c-platform in it, but can't tell you more on it. Never even opened it to look at before.</p>",
        "id": 409480029,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1703200507
    }
]