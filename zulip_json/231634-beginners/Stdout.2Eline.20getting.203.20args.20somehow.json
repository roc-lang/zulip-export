[
    {
        "content": "<p>The error:</p>\n<div class=\"codehilite\"><pre><span></span><code>The line function expects 1 argument, but it got 3 instead:\n\n23â”‚          |&gt; Stdout.line\n                ^^^^^^^^^^^\n</code></pre></div>\n<p>The code:</p>\n<div class=\"codehilite\" data-code-language=\"F#\"><pre><span></span><code><span class=\"n\">app</span><span class=\"w\"> </span><span class=\"s\">\"day1\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">packages</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"basic-cli/src/main.roc\"</span><span class=\"w\"> </span><span class=\"o\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">imports</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">Stdout</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Json</span><span class=\"o\">]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">provides</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">main</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"k\">to</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"w\"></span>\n\n<span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">content</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"s\">\"./aoc22/day1.txt\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Path</span><span class=\"p\">.</span><span class=\"n\">fromStr</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">File</span><span class=\"p\">.</span><span class=\"n\">readUtf8</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Task</span><span class=\"p\">.</span><span class=\"n\">onFail</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"err\">\\</span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">FileReadUtf8Err</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"n\">fileErr</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"w\"> </span><span class=\"s\">\"FileReadUtf8Err\"</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">FileReadErr</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"w\"> </span><span class=\"s\">\"FileReadErr: asd\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Task</span><span class=\"p\">.</span><span class=\"n\">await</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">split</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Str</span><span class=\"p\">.</span><span class=\"n\">split</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">split</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Encode</span><span class=\"p\">.</span><span class=\"n\">toBytes</span><span class=\"w\"> </span><span class=\"nn\">Json</span><span class=\"p\">.</span><span class=\"n\">toUtf8</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Str</span><span class=\"p\">.</span><span class=\"n\">fromUtf8</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Result</span><span class=\"p\">.</span><span class=\"n\">withDefault</span><span class=\"w\"> </span><span class=\"s\">\"err\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Stdout</span><span class=\"p\">.</span><span class=\"n\">line</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nn\">Stdout</span><span class=\"p\">.</span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"s\">\"hi\"</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I tried taking putting <code>Stdout.line</code> out of the pipeline:</p>\n<div class=\"codehilite\" data-code-language=\"F#\"><pre><span></span><code><span class=\"n\">str</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">split</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Encode</span><span class=\"p\">.</span><span class=\"n\">toBytes</span><span class=\"w\"> </span><span class=\"nn\">Json</span><span class=\"p\">.</span><span class=\"n\">toUtf8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Str</span><span class=\"p\">.</span><span class=\"n\">fromUtf8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Result</span><span class=\"p\">.</span><span class=\"n\">withDefault</span><span class=\"w\"> </span><span class=\"s\">\"err\"</span><span class=\"w\"></span>\n<span class=\"nn\">Stdout</span><span class=\"p\">.</span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The same error happens on the <code>Stdout.line str</code> line.</p>",
        "id": 313693985,
        "sender_full_name": "Juliano",
        "timestamp": 1670077418
    },
    {
        "content": "<p>note: Might be cool to show what arguments the function got, in the error msg, to help diagnose</p>",
        "id": 313694292,
        "sender_full_name": "Juliano",
        "timestamp": 1670077558
    },
    {
        "content": "<p>It looks like a bug from the compiler misinterpreting the indentation of your <code>Stdout.line \"hi\"</code>.<br>\nIt's thinking your <code>|&gt; Stdout.line</code> takes 3 arguments :<br>\n 1 - the result of <code>|&gt; Result.withDefault \"err\"</code><br>\n 2 - <code>Stdout.line</code><br>\n 3 - <code>\"hi\"</code><br>\nIt should be ok if you remove you last line.</p>",
        "id": 313695676,
        "sender_full_name": "Ghislain",
        "timestamp": 1670078136
    },
    {
        "content": "<p>To try to get a diff, I thought \"i'll define a 3-arg function with the wrong types and roc will show the diff to me\"</p>\n<div class=\"codehilite\" data-code-language=\"F#\"><pre><span></span><code><span class=\"n\">app</span><span class=\"w\"> </span><span class=\"s\">\"day1\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">packages</span><span class=\"w\"> </span><span class=\"o\">{</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"basic-cli/src/main.roc\"</span><span class=\"w\"> </span><span class=\"o\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">imports</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">Stdout</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">File</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Json</span><span class=\"o\">]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">provides</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">main</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"k\">to</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"w\"></span>\n\n<span class=\"n\">help</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">Str</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Str</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">Str</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">Str</span><span class=\"w\"></span>\n<span class=\"n\">help</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"n\">a</span><span class=\"o\">,</span><span class=\"n\">b</span><span class=\"o\">,</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"></span>\n\n<span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">content</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"s\">\"./aoc22/day1.txt\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Path</span><span class=\"p\">.</span><span class=\"n\">fromStr</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">File</span><span class=\"p\">.</span><span class=\"n\">readUtf8</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Task</span><span class=\"p\">.</span><span class=\"n\">onFail</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"err\">\\</span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">when</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">FileReadUtf8Err</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"n\">fileErr</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"w\"> </span><span class=\"s\">\"FileReadUtf8Err\"</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">FileReadErr</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"w\"> </span><span class=\"o\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"w\"> </span><span class=\"s\">\"FileReadErr: asd\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Task</span><span class=\"p\">.</span><span class=\"n\">await</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">split</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Str</span><span class=\"p\">.</span><span class=\"n\">split</span><span class=\"w\"> </span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">split</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Encode</span><span class=\"p\">.</span><span class=\"n\">toBytes</span><span class=\"w\"> </span><span class=\"nn\">Json</span><span class=\"p\">.</span><span class=\"n\">toUtf8</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Str</span><span class=\"p\">.</span><span class=\"n\">fromUtf8</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nn\">Result</span><span class=\"p\">.</span><span class=\"n\">withDefault</span><span class=\"w\"> </span><span class=\"s\">\"err\"</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">help</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"nn\">Stdout</span><span class=\"p\">.</span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"s\">\"hi\"</span><span class=\"w\"></span>\n</code></pre></div>\n<p>But now it says there's a single argument</p>\n<div class=\"codehilite\" data-code-language=\"F#\"><pre><span></span><code><span class=\"n\">The</span><span class=\"w\"> </span><span class=\"n\">help</span><span class=\"w\"> </span><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"n\">expects</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">arguments</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"w\"></span>\n\n<span class=\"mi\">26</span><span class=\"err\">â”‚</span><span class=\"w\">          </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">help</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"o\">^^^^</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 313695880,
        "sender_full_name": "Juliano",
        "timestamp": 1670078242
    },
    {
        "content": "<p>YESS thank you <span class=\"user-mention\" data-user-id=\"528453\">@Ghislain</span> !</p>",
        "id": 313696002,
        "sender_full_name": "Juliano",
        "timestamp": 1670078289
    },
    {
        "content": "<p>To understand the difference with your last example, you changed something important:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">split</span><span class=\"w\"> </span><span class=\"c1\"># no new definition, so it has to be the returned value</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Encode</span><span class=\"p\">.</span><span class=\"nx\">toBytes</span><span class=\"w\"> </span><span class=\"nx\">Json</span><span class=\"p\">.</span><span class=\"nx\">toUtf8</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Str</span><span class=\"p\">.</span><span class=\"nx\">fromUtf8</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Result</span><span class=\"p\">.</span><span class=\"nx\">withDefault</span><span class=\"w\"> </span><span class=\"s\">\"err\"</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"></span>\n\n<span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"> </span><span class=\"s\">\"hi\"</span><span class=\"w\"> </span><span class=\"c1\"># compiler understands that the previous expression is not finished yet because it had to be the last and returned value</span><span class=\"w\"></span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">split</span><span class=\"w\"> </span><span class=\"c1\"># definition of 'a' =&gt; it can't be the last expression</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nx\">help</span><span class=\"w\"></span>\n\n<span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"> </span><span class=\"s\">\"hi\"</span><span class=\"w\"> </span><span class=\"c1\"># &lt;- no new definition, so it has to be the returned value</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Hope it's clearer <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 313701098,
        "sender_full_name": "Ghislain",
        "timestamp": 1670080650
    },
    {
        "content": "<p>ohhh</p>",
        "id": 313702651,
        "sender_full_name": "Juliano",
        "timestamp": 1670081353
    },
    {
        "content": "<p>so what I should do if I want multiple <code>Stdout.line</code> is:</p>\n<div class=\"codehilite\"><pre><span></span><code>_ &lt;- Stdout.line &quot;hello joe&quot;\nStdout.line &quot;hello&quot;\n</code></pre></div>",
        "id": 313702811,
        "sender_full_name": "Juliano",
        "timestamp": 1670081410
    },
    {
        "content": "<p>thank you for clarifying!</p>",
        "id": 313702922,
        "sender_full_name": "Juliano",
        "timestamp": 1670081435
    },
    {
        "content": "<p>ah, no, you can't do that because it would mean:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"> </span><span class=\"s\">\"hello joe\"</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"nx\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">Stdout</span><span class=\"p\">.</span><span class=\"nx\">line</span><span class=\"w\"> </span><span class=\"s\">\"hello\"</span><span class=\"w\"></span>\n</code></pre></div>\n<p>But <code>Stdout.line</code> doesn't take 2 arguments</p>",
        "id": 313703024,
        "sender_full_name": "Ghislain",
        "timestamp": 1670081506
    },
    {
        "content": "<p>You can use <code>Task.await</code> to do that</p>",
        "id": 313703360,
        "sender_full_name": "Ghislain",
        "timestamp": 1670081667
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"w\"> </span><span class=\"s\">\"hello joe\"</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">await</span><span class=\"w\"> </span><span class=\"nf\">\\</span><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"w\"> </span><span class=\"s\">\"hello\"</span><span class=\"w\"></span>\n</code></pre></div>\n<p>or with backpassing</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"nv\">_</span><span class=\"w\"> </span><span class=\"nf\">&lt;-</span><span class=\"w\"> </span><span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"w\"> </span><span class=\"s\">\"hello joe\"</span><span class=\"w\"> </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Task</span><span class=\"nf\">.</span><span class=\"nv\">await</span><span class=\"w\"></span>\n<span class=\"kt\">Stdout</span><span class=\"nf\">.</span><span class=\"nv\">line</span><span class=\"w\"> </span><span class=\"s\">\"hello\"</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 313703478,
        "sender_full_name": "Ghislain",
        "timestamp": 1670081750
    },
    {
        "content": "<p>oh yeah, Task.await is required! <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 313703687,
        "sender_full_name": "Juliano",
        "timestamp": 1670081878
    },
    {
        "content": "<p>Yes to \"chain\" your multiple <code>Task</code>s</p>",
        "id": 313703835,
        "sender_full_name": "Ghislain",
        "timestamp": 1670081954
    }
]