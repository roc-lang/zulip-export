[
    {
        "content": "<p>Hi! New to Roc, was inspired to learn it by some of the SYCL talks :)<br>\nI come from Zig land, so I'm interested in jumping right in to writing a platform to understand the low level details! Is there a reference anywhere for the functions I need to provide to roc, and how to call the entrypoint?<br>\nI've had a look at some example code but I'd like to know where the \"source of truth\" is for all the function names etc.<br>\nNot averse to reading the source, if that's the answer ^-^</p>",
        "id": 439288748,
        "sender_full_name": "Silver",
        "timestamp": 1715978309
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"720794\">@Silver</span> <a href=\"https://github.com/roc-lang/roc/tree/main/examples/platform-switching/zig-platform\">https://github.com/roc-lang/roc/tree/main/examples/platform-switching/zig-platform</a> :)</p>",
        "id": 439309043,
        "sender_full_name": "Zeljko Nesic",
        "timestamp": 1715991790
    },
    {
        "content": "<p>Also this conversation may be helpful <a href=\"#narrow/stream/302903-Writing-a-platform/topic/How.20does.20.22roc__mainForHost_1_exposed_generic.22.20work.3F/near/435340464\">https://roc.zulipchat.com/#narrow/stream/302903-Writing-a-platform/topic/How.20does.20.22roc__mainForHost_1_exposed_generic.22.20work.3F/near/435340464</a></p>",
        "id": 439328423,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716011133
    },
    {
        "content": "<p>I've been down the rabbit hole a bit lately on platform dev. When I get a spare moment, I'd like to try and write up something to help others with this, so any questions you have are really helpful.</p>",
        "id": 439328549,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716011279
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"341959\">@Zeljko Nesic</span> Awesome! That's a great reference, thanks</p>",
        "id": 439333478,
        "sender_full_name": "Silver",
        "timestamp": 1716016280
    },
    {
        "content": "<p>I'm struggling a bit with understanding all the roc syntax involved - there's <code>provides</code> which, in a <code>platform</code> file, seems to export functions using C names? but I'm not entirely sure how those names are computed, since there's a number and sometimes a <code>_generic</code> or <code>_caller</code> or something involved</p>",
        "id": 439333588,
        "sender_full_name": "Silver",
        "timestamp": 1716016396
    },
    {
        "content": "<p>there's also <code>hosted</code> files which seem to handle interfacing with functions exposed by the host implementation, but I'm not clear on how those interact with purity.<br>\nThere doesn't seem to be much documentation on Roc's effect system so I'm not really sure how that works - there's Effect, but also Task, which wraps Effect? Though ofc both of those are defined by the platform so I guess it's just convention?</p>",
        "id": 439333765,
        "sender_full_name": "Silver",
        "timestamp": 1716016574
    },
    {
        "content": "<p>A lot of this is not documented because it is a WIP and there are some changes planned I think. Zulip is probably the best way to find this information out.</p>",
        "id": 439334715,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716017487
    },
    {
        "content": "<p>I'm currently doing some touristing in Milan before I get on a plane back to Aus, but happy to help where I can.</p>",
        "id": 439334742,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716017517
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6382\">https://github.com/roc-lang/roc/issues/6382</a></p>",
        "id": 439334897,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716017630
    },
    {
        "content": "<p>For example this is how we want to change the interface between roc apps and the host.</p>",
        "id": 439334946,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716017648
    },
    {
        "content": "<p>Actually, there is a lot described in GH issues, but it's a bit scattered.</p>",
        "id": 439334970,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716017685
    },
    {
        "content": "<p>Thanks, that's good to know :)</p>",
        "id": 439338640,
        "sender_full_name": "Silver",
        "timestamp": 1716021566
    },
    {
        "content": "<p>I've had a look at the compiler source code and I think I understand the generated function names a little better now, but I'm still not 100% clear on the difference between <code>roc__thing_0_exposed</code> and <code>roc__thing_0_exposed_generic</code> - why does the platform-switching example use the <code>_generic</code> variant, and when would you use the non-generic version?</p>",
        "id": 439339758,
        "sender_full_name": "Silver",
        "timestamp": 1716022720
    },
    {
        "content": "<p>Im not sure, I think it might have been testing two different APIs or a WIP thing.</p>",
        "id": 439340441,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716023465
    },
    {
        "content": "<p>Alright :)</p>",
        "id": 439340970,
        "sender_full_name": "Silver",
        "timestamp": 1716024036
    },
    {
        "content": "<p>How do I run <code>roc glue</code>? I'm not sure what arg to give it for GLUE_SPEC and it's not giving terribly helpful errors when I try to guess haha</p>",
        "id": 439340993,
        "sender_full_name": "Silver",
        "timestamp": 1716024068
    },
    {
        "content": "<p><code>roc glue crates/glue/src/RustGlue.roc glue-stuff/ path/to/platform/main.roc</code></p>",
        "id": 439341516,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716024612
    },
    {
        "content": "<p>The first argument is the path to a glue spec, the second is the dir path to generate files into, the last is the platform you want to generate for. I suggest starting with a super basic platform.</p>",
        "id": 439341574,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716024703
    },
    {
        "content": "<p>Also this might help<br>\n<a href=\"#narrow/stream/316715-contributing/topic/Glue.20generate.20Types.20in.20JSON/near/434573060\">https://roc.zulipchat.com/#narrow/stream/316715-contributing/topic/Glue.20generate.20Types.20in.20JSON/near/434573060</a></p>",
        "id": 439341641,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716024747
    },
    {
        "content": "<p>I find it useful to encode the types from the compiler into JSON and then I can pretty format in my editor and easily see what the data is.</p>",
        "id": 439341663,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716024784
    },
    {
        "content": "<p>hmm okay, I guess I need a clone of the compiler source code for that then? since the glue specs don't seem to be distributed with the nightlies</p>",
        "id": 439341755,
        "sender_full_name": "Silver",
        "timestamp": 1716024860
    },
    {
        "content": "<p>That's sort of annoying since I was hoping to integrate it into my Zig build process</p>",
        "id": 439341761,
        "sender_full_name": "Silver",
        "timestamp": 1716024879
    },
    {
        "content": "<p>Well no, you can use a package for the glue</p>",
        "id": 439341811,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716024947
    },
    {
        "content": "<p>I have an example somewhere</p>",
        "id": 439341833,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716024963
    },
    {
        "content": "<p>Looks like the Zig glue is for an older version of Zig too, that's unfortunate</p>",
        "id": 439341878,
        "sender_full_name": "Silver",
        "timestamp": 1716024979
    },
    {
        "content": "<p>I'll probably just handroll it for now :)</p>",
        "id": 439341879,
        "sender_full_name": "Silver",
        "timestamp": 1716024988
    },
    {
        "content": "<p>Yeah thats probably best. If you are interested in helping with Zig glue please let me know.</p>",
        "id": 439341904,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716025029
    },
    {
        "content": "<p>I'd love to at some point, but I'll prolly focus on just learning the language first! ^-^</p>",
        "id": 439341927,
        "sender_full_name": "Silver",
        "timestamp": 1716025062
    },
    {
        "content": "<p>You should be able to use this...</p>\n<div class=\"codehilite\"><pre><span></span><code>app [makeGlue] {\n    pf: platform &quot;https://github.com/lukewilliamboswell/roc/releases/download/test/olBfrjtI-HycorWJMxdy7Dl2pcbbBoJy4mnSrDtRrlI.tar.br&quot;,\n    json: &quot;https://github.com/lukewilliamboswell/roc-json/releases/download/0.7.0/xuaMzXRVG_SEhOFZucS3iBozlRdObWsfKaYZMHVE_q0.tar.br&quot;,\n}\n\nimport pf.Types exposing [Types]\nimport pf.File exposing [File]\nimport json.Core exposing [json]\n\nmakeGlue : List Types -&gt; Result (List File) Str\nmakeGlue = \\typesByArch -&gt;\n    typesByArch\n    |&gt; List.map convertTypesToFile\n    |&gt; List.concat staticFiles\n    |&gt; Ok\n\nstaticFiles : List File\nstaticFiles = []\n\nconvertTypesToFile : Types -&gt; File\nconvertTypesToFile = \\types -&gt;\n\n    content =\n        Encode.toBytes types json\n        |&gt; Str.fromUtf8\n        |&gt; Result.withDefault &quot;INVALID UTF8 ENCODED FROM JSON&quot;\n\n    { name: &quot;types.json&quot;, content }\n</code></pre></div>",
        "id": 439342007,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716025131
    },
    {
        "content": "<p>Im just on my phone, but that's using a URL package of glue I have been using for testing things.</p>",
        "id": 439342023,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716025158
    },
    {
        "content": "<p>Ah interesting, thanks!</p>",
        "id": 439342027,
        "sender_full_name": "Silver",
        "timestamp": 1716025174
    },
    {
        "content": "<p>Because glue spec is an app that is just a plugin for the compiler there are only <code>.roc</code> source files in the package and no prebuilt binaries.</p>",
        "id": 439342097,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716025238
    },
    {
        "content": "<p>Also if anyone is interested you can make your own bundle for glue package using something like <code>roc build --bundle .tar.gz crates/glue/platform/main.roc</code> and upload that somewhere.</p>",
        "id": 439342328,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716025542
    },
    {
        "content": "<p>:)<br>\n<a href=\"/user_uploads/22008/ZTxNguPk0OoncQb-X8xbeWsp/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/ZTxNguPk0OoncQb-X8xbeWsp/image.png\" title=\"image.png\"><img src=\"/user_uploads/22008/ZTxNguPk0OoncQb-X8xbeWsp/image.png\"></a></div>",
        "id": 439346223,
        "sender_full_name": "Silver",
        "timestamp": 1716029801
    },
    {
        "content": "<p>Got effects working</p>",
        "id": 439346250,
        "sender_full_name": "Silver",
        "timestamp": 1716029823
    },
    {
        "content": "<p>Wasn't too bad once I figured out what everything does heheh</p>",
        "id": 439346273,
        "sender_full_name": "Silver",
        "timestamp": 1716029855
    },
    {
        "content": "<p>In the <code>platform</code> header, what's the first <code>{}</code> in <code>requires {} { main : Whatever }</code>? I've only ever seen it empty so I'm intrigued as to what might go in it :)</p>",
        "id": 439349227,
        "sender_full_name": "Silver",
        "timestamp": 1716032698
    },
    {
        "content": "<p>You can pass Types to the platform</p>",
        "id": 439349351,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716032830
    },
    {
        "content": "<p>Types that are defined in the app</p>",
        "id": 439349358,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716032839
    },
    {
        "content": "<p>Oh neat! So the first one is types, and the second one is defs?</p>",
        "id": 439349372,
        "sender_full_name": "Silver",
        "timestamp": 1716032867
    },
    {
        "content": "<p><a href=\"https://github.com/lukewilliamboswell/roc-ray/blob/main/examples/pong.roc\">https://github.com/lukewilliamboswell/roc-ray/blob/main/examples/pong.roc</a></p>",
        "id": 439349435,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716032912
    },
    {
        "content": "<p>Here's an example</p>",
        "id": 439349440,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716032917
    },
    {
        "content": "<p>Cool!</p>",
        "id": 439349445,
        "sender_full_name": "Silver",
        "timestamp": 1716032934
    },
    {
        "content": "<p>Is there any way to introspect those types from the host implementation? <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span></p>",
        "id": 439349525,
        "sender_full_name": "Silver",
        "timestamp": 1716033012
    },
    {
        "content": "<p>Or reflection in the platform would work too I guess, if I could generate data to pass to the host</p>",
        "id": 439349590,
        "sender_full_name": "Silver",
        "timestamp": 1716033103
    },
    {
        "content": "<p>I'm not yet sure how much type-level hackery Roc allows haha</p>",
        "id": 439349640,
        "sender_full_name": "Silver",
        "timestamp": 1716033132
    },
    {
        "content": "<p>No reflection. I don't think its possible for the host to know beforehand as it's compiled separately from the app.</p>",
        "id": 439350040,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716033599
    },
    {
        "content": "<p>aww that's a shame, oh well :)</p>",
        "id": 439350107,
        "sender_full_name": "Silver",
        "timestamp": 1716033626
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"720794\">Silver</span> <a href=\"https://roc.zulipchat.com#narrow/stream/397893-announcements/topic/Writing.20a.20platform/near/439349640\">said</a>:</p>\n<blockquote>\n<p>I'm not yet sure how much type-level hackery Roc allows haha</p>\n</blockquote>\n<p>From my exploration, I don't think platform exposes much hacking for types. Though, I would really like to see it in future versions.</p>",
        "id": 439360461,
        "sender_full_name": "Apurva Mishra",
        "timestamp": 1716043720
    },
    {
        "content": "<p>omg i only just realised I put this thread in <a class=\"stream\" data-stream-id=\"397893\" href=\"/#narrow/stream/397893-announcements\">#announcements</a> hahahaha I'm so sorry, I meant to put this in <a class=\"stream\" data-stream-id=\"231634\" href=\"/#narrow/stream/231634-beginners\">#beginners</a></p>",
        "id": 439362176,
        "sender_full_name": "Silver",
        "timestamp": 1716045187
    },
    {
        "content": "<p>Is there a way to move it?</p>",
        "id": 439362180,
        "sender_full_name": "Silver",
        "timestamp": 1716045191
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span></p>",
        "id": 439369853,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1716052733
    },
    {
        "content": "<p>moved!</p>",
        "id": 439387912,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1716072646
    },
    {
        "content": "<p>Thanks! Sorry for the trouble haha</p>",
        "id": 439419644,
        "sender_full_name": "Silver",
        "timestamp": 1716105853
    }
]