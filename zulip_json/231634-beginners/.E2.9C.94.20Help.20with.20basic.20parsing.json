[
    {
        "content": "<p>Hi everyone! I just started playing with Roc and I've ran into a wall trying to parse some cli args. My code is super simple:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">app</span><span class=\"w\"> </span><span class=\"s\">\"hello\"</span>\n<span class=\"w\">    </span><span class=\"n\">packages</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">pf</span>: <span class=\"s\">\"https://github.com/roc-lang/basic-cli/releases/download/0.8.1/x8URkvfyi9I0QhmVG98roKBUs_AZRkLFwFJVJ3942YA.tar.br\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">imports</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">pf</span><span class=\"p\">.</span><span class=\"n\">Stdout</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"p\">.</span><span class=\"n\">Arg</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pf</span><span class=\"p\">.</span><span class=\"n\">Task</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"n\">provides</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">main</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">pf</span>\n\n<span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">    </span><span class=\"n\">args</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">Arg</span><span class=\"p\">.</span><span class=\"n\">list</span><span class=\"w\"> </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">Task</span><span class=\"p\">.</span><span class=\"k\">await</span>\n\n<span class=\"w\">    </span><span class=\"n\">parsedArgs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Arg</span><span class=\"p\">.</span><span class=\"n\">parse</span><span class=\"w\"> </span><span class=\"n\">argsParser</span><span class=\"w\"> </span><span class=\"n\">args</span>\n\n<span class=\"w\">    </span><span class=\"n\">dbg</span><span class=\"w\"> </span><span class=\"n\">parsedArgs</span>\n\n<span class=\"w\">    </span><span class=\"n\">Stdout</span><span class=\"p\">.</span><span class=\"n\">write</span><span class=\"w\"> </span><span class=\"s\">\"hi\"</span>\n\n<span class=\"n\">argsParser</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">    </span><span class=\"n\">Arg</span><span class=\"p\">.</span><span class=\"n\">succeed</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"err\">\\</span><span class=\"n\">name</span><span class=\"w\"> </span>-&gt; <span class=\"err\">\\</span><span class=\"n\">amount</span><span class=\"w\"> </span>-&gt; <span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">amount</span><span class=\"w\"> </span><span class=\"p\">})</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">Arg</span><span class=\"p\">.</span><span class=\"n\">withParser</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Arg</span><span class=\"p\">.</span><span class=\"n\">i64Option</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">long</span>: <span class=\"s\">\"amount\"</span><span class=\"w\"> </span><span class=\"p\">})</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">Arg</span><span class=\"p\">.</span><span class=\"n\">withParser</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Arg</span><span class=\"p\">.</span><span class=\"n\">strOption</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">long</span>: <span class=\"s\">\"name\"</span><span class=\"w\"> </span><span class=\"p\">})</span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">Arg</span><span class=\"p\">.</span><span class=\"n\">program</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">name</span>: <span class=\"s\">\"test\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">help</span>: <span class=\"s\">\"hey there\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>and then when I try to run it, I get</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>thread 'main' panicked at 'Error in alias analysis: error in module ModName(\"UserApp\"), function definition FuncName(\"\\x13\\x00\\x00\\x00\\x1b\\x00\\x00\\x00c\\x05=\\x1a\\x179\\x00F\"), definition of value binding ValueId(60): could not find func in module ModName(\"UserApp\") with name FuncName(\"\\x13\\x00\\x00\\x00\\x8c\\x00\\x00\\x005K\\xf7:8\\xfd~\\xf7\")', crates/compiler/gen_llvm/src/llvm/build.rs:5759:19\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace```\n\nand I'm a bit confused as where I made the mistake. I guess it could be how I use `Arg.program` (name param?) because I wasn't sure looking at the docs what the name should be.\n</code></pre></div>\n<p>Any help appreciated!</p>",
        "id": 430840090,
        "sender_full_name": "Piotr Brzeziński",
        "timestamp": 1712079027
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"705874\">@Piotr Brzeziński</span>,<br>\nThis is a known issue, <a href=\"https://github.com/roc-lang/examples/blob/main/examples/CommandLineArgs/main.roc\">this similar example</a> does work. But I'm not sure what the bug-causing difference between them is.</p>",
        "id": 430843525,
        "sender_full_name": "Anton",
        "timestamp": 1712080273
    },
    {
        "content": "<p>Hey Anton!</p>\n<p>Fair enough, thanks for letting me know. I'll go with manual parsing for now then :).</p>",
        "id": 430846336,
        "sender_full_name": "Piotr Brzeziński",
        "timestamp": 1712081245
    },
    {
        "content": "<p>Unfortunately the nice <code>Arg.withParser</code> API's source code compilation is broken for an undefined time, so only manual parsing of <code>Arg.list</code> result is possible for now</p>",
        "id": 431154413,
        "sender_full_name": "Karakatiza",
        "timestamp": 1712170166
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"705874\">Piotr Brzeziński</span> has marked this topic as resolved.</p>",
        "id": 431959632,
        "sender_full_name": "Notification Bot",
        "timestamp": 1712579623
    }
]