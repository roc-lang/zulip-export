[
    {
        "content": "<p>Are there any profiling tools for Roc? It doesn't need to be anything fancy, just something that can tell me how much time is spent in a function would be very helpful in improving performance.</p>",
        "id": 406806998,
        "sender_full_name": "Ryan Bates",
        "timestamp": 1702056534
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> is the expert on that :)</p>",
        "id": 406807112,
        "sender_full_name": "Anton",
        "timestamp": 1702056577
    },
    {
        "content": "<p>My advice for really useful high level profiling:</p>\n<ol>\n<li>Run on Linux</li>\n<li>Compile with <code>--optimize --profiling</code></li>\n<li>Use <code>perf</code> and a tool to convert that to a flame graph. Make sure to pass <code>--call-graph dwarf</code> to <code>perf</code></li>\n</ol>",
        "id": 406807527,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702056706
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> why is the \"Run on Linux\" step necessary? Does it require a dependency that's not on Mac OS?</p>",
        "id": 406809447,
        "sender_full_name": "Ryan Bates",
        "timestamp": 1702057421
    },
    {
        "content": "<p><code>perf</code> is amazing and is Linux only</p>",
        "id": 406810474,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702057825
    },
    {
        "content": "<p>Good to know, thanks!</p>",
        "id": 406810505,
        "sender_full_name": "Ryan Bates",
        "timestamp": 1702057842
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"667613\">Ryan Bates</span> has marked this topic as resolved.</p>",
        "id": 406810514,
        "sender_full_name": "Notification Bot",
        "timestamp": 1702057845
    },
    {
        "content": "<p>To be fair, <code>dtrace</code> can be used on macos, but it has never worked as well for me. I'm not even sure how to get it to use debug info though, so may just be a skill issue on my part.</p>",
        "id": 406810631,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702057890
    },
    {
        "content": "<p>FWIW: I tried using <a href=\"https://github.com/flamegraph-rs/flamegraph\">flamegraph-rs</a> on a Roc binary, but it didn't give useful output. It's <em>supposed</em> to work on all programs, not just Rust ones, so I'm not sure if that's an issue in flamegraph-rs or in roc</p>",
        "id": 406811766,
        "sender_full_name": "LoipesMas",
        "timestamp": 1702058316
    },
    {
        "content": "<p>Oh, important piece I forget, you need to use <code>--linker=legacy</code></p>",
        "id": 406815226,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702059667
    },
    {
        "content": "<p>This would be a super helpful guide to add to the website or somwhere we can find it. It doesn't need to be very long, but I think it would help to have the procedure step by step. Or maybe we can link to it from roc-awesome? <span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> do you have a blog, would you be interested in writing about your process? What do people think about adding something like this to <a href=\"http://roc-lang.org\">roc-lang.org</a> under guides?</p>",
        "id": 406818791,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1702061113
    },
    {
        "content": "<p>I could write something up. Now that we have the <code>--profiling</code> flag, we actually can get some useful data.</p>",
        "id": 406819570,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702061501
    },
    {
        "content": "<p>I do have a blog with I think exactly 1 article</p>",
        "id": 406819592,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702061514
    },
    {
        "content": "<p>On Mac I've used the Instruments tool. It's a GUI profiler that comes with XCode. Pretty good. Haven't used it on Roc code but it should be the same as any other binary.</p>",
        "id": 406820385,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1702061848
    },
    {
        "content": "<p>I didn't need a whole XCode project or anything, just pointed it at my binary.</p>",
        "id": 406820778,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1702061994
    },
    {
        "content": "<p>I should test that now that we have debug info</p>",
        "id": 406820982,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702062050
    },
    {
        "content": "<p>Instruments looks to work quite well on macos with <code>--profiling</code> has a full call stack</p>",
        "id": 406867841,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702085437
    },
    {
        "content": "<blockquote>\n<p>This would be a super helpful guide to add to the website or somwhere we can find it</p>\n</blockquote>\n<p>The examples repo seems like a great fit.</p>",
        "id": 407066579,
        "sender_full_name": "Anton",
        "timestamp": 1702213290
    },
    {
        "content": "<p>I made <a href=\"https://github.com/roc-lang/examples/issues/123\">https://github.com/roc-lang/examples/issues/123</a> for it</p>",
        "id": 407066810,
        "sender_full_name": "Anton",
        "timestamp": 1702213395
    }
]