[
    {
        "content": "<p>Is there any way to debug my Roc programs until I will start understanding them properly?</p>\n<p>Currently I would love to have something like</p>\n<div class=\"codehilite\"><pre><span></span><code>log(typeof (EXPRESSION))\n</code></pre></div>\n<p>so Roc compiler/runtime will show me some info about expression or variable (like in REPL).<br>\nOr what are the workaround/advices?</p>\n<p>Thanks.</p>",
        "id": 412029075,
        "sender_full_name": "Dan",
        "timestamp": 1704842650
    },
    {
        "content": "<p>You can make a def and give it any type annotation:</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">whatIsThis</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n<span class=\"nv\">whatIsThis</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">y</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s\">\"hello\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>Then the compiler will print the inferred type when it finds the mismatch:</p>\n<div class=\"codehilite\"><pre><span></span><code>── TYPE MISMATCH ──────────────────────────────────────────────────── Test.roc ─\n\nSomething is off with the body of the whatIsThis definition:\n\n3│  whatIsThis : {}\n4│  whatIsThis = { x : 32, y : &quot;hello&quot; }\n                 ^^^^^^^^^^^^^^^^^^^^^^^\n\nThe body is a record of type:\n\n    {\n        x : Num *,\n        y : Str,\n    }\n\nBut the type annotation on whatIsThis says it should be:\n\n    {}\n\n\n────────────────────────────────────────────────────────────────────────────────\n</code></pre></div>",
        "id": 412030614,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1704843425
    },
    {
        "content": "<p>That's smart, thanks</p>",
        "id": 412030689,
        "sender_full_name": "Dan",
        "timestamp": 1704843464
    },
    {
        "content": "<p>There are no other ways to do <code>Anything.toString()</code> in runtime?</p>",
        "id": 412032254,
        "sender_full_name": "Dan",
        "timestamp": 1704844230
    },
    {
        "content": "<p><code>Inspect.toStr somVal</code></p>",
        "id": 412032521,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704844345
    },
    {
        "content": "<p>Or if you just want It debug printed <code>dbg someVal</code></p>",
        "id": 412032561,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704844368
    },
    {
        "content": "<p>Neither of those Will give you any type info though</p>",
        "id": 412032592,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704844385
    },
    {
        "content": "<p>Awesome, love Roc more and more.</p>\n<p>Thanks!</p>",
        "id": 412032608,
        "sender_full_name": "Dan",
        "timestamp": 1704844393
    },
    {
        "content": "<p>Also, I think <code>dbg</code> only works with <code>roc ...</code> and <code>roc dev ...</code></p>",
        "id": 412032644,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704844418
    },
    {
        "content": "<p>If you use the language server (I'm using VS Code) you can also hover to get the type information<br>\n<a href=\"/user_uploads/22008/QySvH0X0OdfHv264MMgCtHkP/Screenshot-2024-01-10-at-13.28.10.png\">Screenshot-2024-01-10-at-13.28.10.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/QySvH0X0OdfHv264MMgCtHkP/Screenshot-2024-01-10-at-13.28.10.png\" title=\"Screenshot-2024-01-10-at-13.28.10.png\"><img src=\"/user_uploads/22008/QySvH0X0OdfHv264MMgCtHkP/Screenshot-2024-01-10-at-13.28.10.png\"></a></div>",
        "id": 412050275,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1704853707
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"679899\">Dan</span> has marked this topic as resolved.</p>",
        "id": 412100878,
        "sender_full_name": "Notification Bot",
        "timestamp": 1704879720
    }
]