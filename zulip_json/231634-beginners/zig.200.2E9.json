[
    {
        "content": "<p>I'm using zig 0.9 and it does not compile. I'm using the <code>trunk</code> branch.<br>\nShould I update the code to fit zig 0.9?</p>",
        "id": 259178511,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1635293364
    },
    {
        "content": "<p>good question!</p>",
        "id": 259178749,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635293602
    },
    {
        "content": "<p>I think we should hold off until there's an official 0.9 release</p>",
        "id": 259178754,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635293612
    },
    {
        "content": "<p>otherwise it's harder for people to get the right version, since currently 0.9 is built from Zig's <code>master</code> branch</p>",
        "id": 259178813,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635293648
    },
    {
        "content": "<p>Can I do the update in another branch?</p>",
        "id": 259178893,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1635293757
    },
    {
        "content": "<p>oh sure! I just wouldn't want to merge it into <code>trunk</code> until the 0.9 release is out <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 259178996,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635293836
    },
    {
        "content": "<p>although, depending on how long that takes, the branch might have problems with drift</p>",
        "id": 259179013,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635293866
    },
    {
        "content": "<p>as people add more to the zig code in <code>trunk</code></p>",
        "id": 259179024,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635293878
    },
    {
        "content": "<p>so it might end up needing recurring updates over time to stay mergeable <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 259179069,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635293895
    },
    {
        "content": "<p>I think all changes we need to backwards compatible, like removing <code>packed</code> enum.</p>",
        "id": 259179155,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1635293997
    },
    {
        "content": "<p>good to know! <span aria-label=\"rock on\" class=\"emoji emoji-1f918\" role=\"img\" title=\"rock on\">:rock_on:</span></p>",
        "id": 259179294,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635294109
    },
    {
        "content": "<p>Also building <code>compiler/bitcode</code> crashes the zig compiler</p>",
        "id": 259179403,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1635294206
    },
    {
        "content": "<p>on 0.9?</p>",
        "id": 259179421,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635294222
    },
    {
        "content": "<p>yes</p>",
        "id": 259179423,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1635294225
    },
    {
        "content": "<p>maybe a known bug? it is a <code>master</code> build after all haha</p>",
        "id": 259179485,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635294265
    },
    {
        "content": "<p>it crashes in <code>LLVMStructGetTypeAtIndex</code></p>",
        "id": 259179610,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1635294399
    },
    {
        "content": "<p>ok, sounds like it's too soon for us to try 0.9 <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 259179649,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635294438
    },
    {
        "content": "<p>ok this is jank</p>",
        "id": 259181255,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1635296009
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>const std = @import(&quot;std&quot;);\n\ncomptime {\n    @export(eq, .{ .name = &quot;eq&quot; });\n}\n\npub const RocDec = extern struct {\n    num: i128,\n};\npub fn eq(self: RocDec, other: RocDec) callconv(.C) bool {\n    return self.num == other.num;\n}\n</code></pre></div>",
        "id": 259181259,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1635296011
    },
    {
        "content": "<p>using <code>i128</code> just crashes the compiler while <code>i64</code> doesn't</p>",
        "id": 259181322,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1635296051
    },
    {
        "content": "<p>blocked by <a href=\"https://github.com/ziglang/zig/issues/10039\">https://github.com/ziglang/zig/issues/10039</a></p>",
        "id": 259181933,
        "sender_full_name": "Locria Cyber",
        "timestamp": 1635296603
    },
    {
        "content": "<p>Before updating the zig version we usually need to update the version of LLVM we use and before updating our LLVM version we need to update our zig version. This tends to occur because zig quickly moves to the latest version of LLVM and their release cycles kinda alternate. So we usually do those at the same time</p>",
        "id": 259184480,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1635299447
    },
    {
        "content": "<p>there’s a few things already addressed for the 0.9 update like unused vars etc. but definitely some other stuff as well</p>",
        "id": 259184517,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1635299502
    },
    {
        "content": "<p>0.9 isn’t too far out. I’m pretty sure it’ll use LLVM 13 and we use v12 last I checked</p>",
        "id": 259184608,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1635299611
    },
    {
        "content": "<p>I updated inkwell already so upgrading llvm versions is not blocked on anything</p>",
        "id": 259196679,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635314753
    },
    {
        "content": "<p>excellent</p>",
        "id": 259253179,
        "sender_full_name": "Lucas Rosa",
        "timestamp": 1635346969
    },
    {
        "content": "<p>Can someone give a rationale why zig is even in the codebase? I don't yet see what the benefit is over just implementing everything in Rust...</p>",
        "id": 259723696,
        "sender_full_name": "Matthias Beyer",
        "timestamp": 1635590459
    },
    {
        "content": "<p>All of the compiler is written in rust, because as you say that makes sense. </p>\n<p>We use zig for writing code that we want to end up in the binary that a user makes. That binary is a combination of code the user wrote, and some \"runtime system\" that does things like implement our builtins (list and string data structures) and manage memory (the whole refcounting machinery).</p>",
        "id": 259724296,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635591254
    },
    {
        "content": "<p>zig makes it easy to do this for all the platforms that we target: zig can be converted to LLVM IR, to webassembly and to machine code (e.g. X86_64 assembly)</p>",
        "id": 259724306,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635591299
    },
    {
        "content": "<p>and it does that 1) way faster than rust and 2) with way less baggage: rust brings a runtime system of its own that is much larger than what C and zig bring along</p>",
        "id": 259724321,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635591338
    },
    {
        "content": "<p>okay, I can see that .</p>",
        "id": 259724440,
        "sender_full_name": "Matthias Beyer",
        "timestamp": 1635591489
    },
    {
        "content": "<p>Still, I wonder whether no_std rust would be viable to reduce the \"runtime\" you speak of. I don't know zig, so I cannot judge it, but rust provides guarantees that are really neat and I was hyped when I saw that roc is implemented in Rust! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 259724604,
        "sender_full_name": "Matthias Beyer",
        "timestamp": 1635591669
    },
    {
        "content": "<p>yes, and we really want those guarantees for the compiler itself, but for that runtime system, any overhead is a shame and we actually want to do a bunch of unsafe things there</p>",
        "id": 259724685,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635591788
    },
    {
        "content": "<p>in other words, using rust there has less of the advantages in that scenario than for writing this massive compiler application</p>",
        "id": 259724695,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1635591810
    },
    {
        "content": "<p>we actually tried Rust with no_std first, and it was tons of <code>unsafe</code> plus linking difficulties plus not getting much help debugging memory safety issues, so we tried zig and it's gone much better!</p>",
        "id": 259730102,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1635599357
    },
    {
        "content": "<p>Hi! I am Ivo Balbaert, a PL enthousiast and author of some books on emerging languages.<br>\nI worked in software industry (mainly 4GL, ASP.NET, C#) and taught programming languages and databases.</p>",
        "id": 259736300,
        "sender_full_name": "Ivo Balbaert",
        "timestamp": 1635607312
    }
]