[
    {
        "content": "<p>I'd like to write a decoder (for example a <code>base64</code> decoder) that could be used in a pipeline. Thus, I'd like to be able to output the result of the decoding to <code>stdout</code> and pipe it to another executable. However, I see no <code>Stdout.write_bytes!</code> function in <code>basic-cli</code>. There is <code>Stdout.write!</code>, but my data is not a string.  Is there a good way to do it using the <code>basic-cli</code> platform? Is there a reason why such a function is not included?</p>",
        "id": 493681110,
        "sender_full_name": "kukimik",
        "timestamp": 1736893270
    },
    {
        "content": "<p>There should be <a href=\"https://github.com/roc-lang/basic-cli/blob/029a32465a9aa05d4a2eff01cb57e01f2e71430f/platform/File.roc#L82\">https://github.com/roc-lang/basic-cli/blob/029a32465a9aa05d4a2eff01cb57e01f2e71430f/platform/File.roc#L82</a></p>",
        "id": 493681274,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736893351
    },
    {
        "content": "<p><code>File.write_bytes! : List U8, Str =&gt; Result {} [FileWriteErr Path IOErr]</code></p>",
        "id": 493681292,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736893363
    },
    {
        "content": "<p><a href=\"https://roc-lang.github.io/basic-cli/0.18.0/Path/#write_bytes\">https://roc-lang.github.io/basic-cli/0.18.0/Path/#write_bytes</a>!</p>",
        "id": 493681340,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736893395
    },
    {
        "content": "<p>Oh... stdout <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 493681388,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736893423
    },
    {
        "content": "<p>Yeah, it looks like we don't have that right now. Should be easy to add though.</p>",
        "id": 493681476,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736893464
    },
    {
        "content": "<blockquote>\n<p>Is there a reason why such a function is not included?</p>\n</blockquote>\n<p>Probably no one has had a use case for it before</p>",
        "id": 493681537,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736893500
    },
    {
        "content": "<p>I could see us adding these effects. </p>\n<div class=\"codehilite\"><pre><span></span><code>Stdout.write_bytes! : List U8 =&gt; Result {} [StdoutErr IOErr]\nStderr.write_bytes! : List U8 =&gt; Result {} [StderrErr IOErr]\n</code></pre></div>\n<p>I assume you can't use a <code>Str</code> because you don't have utf-8.. I wonder how common that is, or what the use case is. I'm wondering if we need to research the use cases a little to design the interface -- if if just adding the effect's as above is fine.</p>",
        "id": 493681840,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736893666
    },
    {
        "content": "<p>If it mirrors file writing, I think just adding it should be fine</p>",
        "id": 493682758,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1736894136
    },
    {
        "content": "<p>If we don't have it, we should also have reading bytes from stdin</p>",
        "id": 493682868,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1736894181
    },
    {
        "content": "<p>We've got <code>Stdin.bytes!</code> so I think that's covered</p>",
        "id": 493682972,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736894256
    },
    {
        "content": "<p><a href=\"https://roc-lang.github.io/basic-cli/0.18.0/Stdin/#bytes\">https://roc-lang.github.io/basic-cli/0.18.0/Stdin/#bytes</a>!</p>",
        "id": 493682990,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736894268
    },
    {
        "content": "<p>I've made an issue for this and labelled it Good First Issue... <a href=\"https://github.com/roc-lang/basic-cli/issues/311\">https://github.com/roc-lang/basic-cli/issues/311</a></p>\n<p>In case anyone would like to dip their toes into platform development. </p>\n<p><span class=\"user-mention\" data-user-id=\"714230\">@kukimik</span> would you be interested?</p>",
        "id": 493683196,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1736894398
    },
    {
        "content": "<blockquote>\n<p>I assume you can't use a <code>Str</code> because you don't have utf-8.. I wonder how common that is, or what the use case is.</p>\n</blockquote>\n<p>As I tried to explain, I'd like to write a <a href=\"https://en.wikipedia.org/wiki/Filter_(software)\">filter</a> and use it like that (not exactly, but it gives the idea):</p>\n<div class=\"codehilite\"><pre><span></span><code>cat ascii_encoded_png_file | decoder_written_in_roc | png2jpg &gt; decoded_file.jpg\n</code></pre></div>\n<p>So the data that <code>decoder_written_in_roc</code> outputs to <code>stdout</code> is binary, not utf-8.</p>\n<p>Any binary file converter (like the <code>png2jpg</code> above) would be another example.</p>\n<hr>\n<blockquote>\n<blockquote>\n<p>Is there a reason why such a function is not included?</p>\n</blockquote>\n<p>Probably no one has had a use case for it before</p>\n</blockquote>\n<p>Ok. I thought it may be some portability issues. I think this is not obvious on Windows (see e.g. <a href=\"https://users.rust-lang.org/t/writing-binary-data-to-windows-stdout/66870/5\">https://users.rust-lang.org/t/writing-binary-data-to-windows-stdout/66870/5</a>, <a href=\"https://stackoverflow.com/questions/16888339/what-is-the-simplest-way-to-write-to-stdout-in-binary-mode\">https://stackoverflow.com/questions/16888339/what-is-the-simplest-way-to-write-to-stdout-in-binary-mode</a>).</p>\n<hr>\n<blockquote>\n<p>@kukimik would you be interested?</p>\n</blockquote>\n<p>I'll see if time permits. If there really are some issues on Windows, I may have a hard time testing it, as I do not use Windows (and I've never written a line of Rust).</p>\n<p>So I will not claim the task, but may look into it at some point.</p>",
        "id": 493800894,
        "sender_full_name": "kukimik",
        "timestamp": 1736927611
    }
]