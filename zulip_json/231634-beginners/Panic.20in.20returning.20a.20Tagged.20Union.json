[
    {
        "content": "<p>Hi,</p>\n<p>working on my MQTT Library, I am encountering a panic in the below code (stripped to the basics).</p>\n<div class=\"codehilite\"><pre><span></span><code> RUST_BACKTRACE=full roc dev main.roc\nthread &#39;&lt;unnamed&gt;&#39; panicked at crates/compiler/mono/src/ir.rs:4624:26:\ninternal error: entered unreachable code: I think this is unreachable\nstack backtrace: (omitted)\n</code></pre></div>\n<p>Any idea what I did wrong?</p>\n<div class=\"codehilite\" data-code-language=\"roc\"><pre><span></span><code>app [main!] { cli: platform \"https://github.com/roc-lang/basic-cli/releases/download/0.19.0/Hj-J_zxz7V9YurCSTFcFdu6cQJie4guzsPMUi5kBYUk.tar.br\" }\n\nimport cli.Stdout\n\nreceiveMessage = |_|\n    fixedHeader = [0x00, 0x00]\n    expect List.len(fixedHeader) == 2\n\n    # flags = List.get(fixedHeader, 0)? |&gt; Num.bitwise_and(0x0f)\n    remLength = List.get(fixedHeader, 1)?\n\n    r =\n        when List.get(fixedHeader, 0)? |&gt; Num.shift_right_zf_by(4) is\n            2 -&gt; # ConnAck\n                expect remLength == 2\n                varHeader = [0x00, 0x00]\n\n                ackFlags = List.get(varHeader, 0)?\n                sessionPresent =\n                    when ackFlags is\n                        0x01 -&gt; Bool.true\n                        _ -&gt; Bool.false\n                returnCode =\n                    when List.get(varHeader, 1)? is\n                        0x00 -&gt; Accepted\n                        0x01 -&gt; RefusedUnacceptableProtocolVersion\n                        0x02 -&gt; RefusedIdentifierRejected\n                        0x03 -&gt; RefusedServerUnavailable\n                        0x04 -&gt; RefusedBadUsernamePassword\n                        0x05 -&gt; RefusedNotAuthorised\n                        _ -&gt; ErrorReserved\n\n                # ConnAck { sessionPresent, returnCode }\n                CoA { sp: sessionPresent, rc: returnCode }\n\n            9 -&gt; # SubAck\n                remData = [0x12, 0x34]\n                packetId : U16\n                packetId = Num.bitwise_or(\n                    List.get(remData, 0)? |&gt; Num.to_u16 |&gt; Num.shift_left_by(8),\n                    List.get(remData, 1)? |&gt; Num.to_u16,\n                )\n                dbg packetId\n                # returnCode : SubAckReturnCode\n                # returnCode = QoS0\n                SAck { packetId: 2, returnCode: 0 }\n\n            _ -&gt;\n                Err {}\n\n    Ok(r)\n\nmain! = |_args|\n    resp = receiveMessage(\"\")\n    dbg resp\n\n    Stdout.line!(\"Done\")\n</code></pre></div>",
        "id": 508095167,
        "sender_full_name": "Jonas Diemer",
        "timestamp": 1742926147
    },
    {
        "content": "<p><code>expect remLength == 2</code> causes the problem but I'm not sure why...</p>",
        "id": 508105466,
        "sender_full_name": "Anton",
        "timestamp": 1742929339
    },
    {
        "content": "<p>Do you remember why you thought <a href=\"https://github.com/roc-lang/roc/blame/2dbbdf3e1f6b80f7fade826b27e6a4703dd24357/crates/compiler/mono/src/ir.rs#L4624\">this line</a> was unreachable <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>?</p>",
        "id": 508108519,
        "sender_full_name": "Anton",
        "timestamp": 1742930265
    },
    {
        "content": "<p>I have created <a href=\"https://github.com/roc-lang/roc/issues/7717\">#7717</a> for this.</p>",
        "id": 508109014,
        "sender_full_name": "Anton",
        "timestamp": 1742930436
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/channel/231634-beginners/topic/Panic.20in.20returning.20a.20Tagged.20Union/near/508105466\">said</a>:</p>\n<blockquote>\n<p><code>expect remLength == 2</code> causes the problem but I'm not sure why...</p>\n</blockquote>\n<p>Thanks a lot, this fixes the issue (also in the non-basic version of the code). Thanks for following up with a ticket!</p>",
        "id": 508113583,
        "sender_full_name": "Jonas Diemer",
        "timestamp": 1742931929
    },
    {
        "content": "<p>I don't remember anymore, sorry! <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 508122311,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1742935017
    },
    {
        "content": "<p>So am I right to assume that an <code>expect</code> statement is not supposed to go inside  a <code>when</code> branch body? I assume the <code>when</code> body is treated like a \"right hand side\" - so would make sense to have no <code>expect</code> there... </p>\n<p>Maybe that's intentional, then it would be good to handle without a panic <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 508206728,
        "sender_full_name": "Jonas Diemer",
        "timestamp": 1742977276
    },
    {
        "content": "<blockquote>\n<p>the <code>when</code> body is treated like a \"right hand side\" - so would make sense to have no <code>expect</code> there...</p>\n</blockquote>\n<p>Can you elaborate? Currently I feel we should make that work.</p>",
        "id": 508218191,
        "sender_full_name": "Anton",
        "timestamp": 1742980649
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/channel/231634-beginners/topic/Panic.20in.20returning.20a.20Tagged.20Union/near/508218191\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>the <code>when</code> body is treated like a \"right hand side\" - so would make sense to have no <code>expect</code> there...</p>\n</blockquote>\n<p>Can you elaborate? Currently I feel we should make that work.</p>\n</blockquote>\n<p>I was seeing <code>when</code> mostly in context where it was used on the right-hand-side of an assignment, i.e. where the result of <code>when</code> is assigned to a variable - like in the stoplight examples in the Tutorial. <br>\nFrom that perspective, I could understand that not everything might be allowed there (e.g. maybe no effectful function calls).</p>\n<p>But on the other hand, <code>when</code> can be used like switch/match pattern matching in zig/Rust - then I agree it should be possible to do \"everything\" there, including <code>expect</code>.</p>\n<p>So from your statement I understand that it is rather a bug in the compiler that should be fixed to enable <code>expect</code> also in <code>when</code> bodies?</p>",
        "id": 508226929,
        "sender_full_name": "Jonas Diemer",
        "timestamp": 1742982987
    },
    {
        "content": "<p>Yes, I think so, but this is not my area of expertise so others are welcome to correct me.</p>",
        "id": 508234419,
        "sender_full_name": "Anton",
        "timestamp": 1742984936
    },
    {
        "content": "<p>Yeah, <code>expect</code> should work anywhere essentially. At least it should work anywhere you could put a statement. So definitely should work in a when branch</p>",
        "id": 508297727,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1743000371
    }
]