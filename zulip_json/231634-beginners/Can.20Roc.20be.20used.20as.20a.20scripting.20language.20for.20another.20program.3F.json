[
    {
        "content": "<p>I'm looking for a language to use as a scripting language for a plugin system for a project of mine. No language so far has provided what I want it to have, and someone suggested Roc, so I am considering it right now. What do all of you think? Should I use it for this purpose? Is that possible?</p>",
        "id": 452453174,
        "sender_full_name": "Katie And",
        "timestamp": 1721343660
    },
    {
        "content": "<p>I think roc is great for scripting. I've been using it a lot. What kind of scripts are you wanting to write?</p>",
        "id": 452454498,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721344583
    },
    {
        "content": "<p>If you'd like to see an example of a script in roc using basic-cli for example, checkout <a href=\"https://github.com/roc-lang/basic-cli/blob/main/build.roc\">this build script</a> which we use to build basic-cli iteself.</p>",
        "id": 452454555,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721344643
    },
    {
        "content": "<p>Sorry, I realized that in editing my message trying to be clearer about what I mean, I completely deleted what I actually meant.</p>\n<p>I'm making a program, and I want it to have plugin support. I'm looking for a programming language to use for this</p>",
        "id": 452454866,
        "sender_full_name": "Katie And",
        "timestamp": 1721344842
    },
    {
        "content": "<p>Is roc a good choice for this?</p>",
        "id": 452454873,
        "sender_full_name": "Katie And",
        "timestamp": 1721344849
    },
    {
        "content": "<p>I also think roc is a good choice for this too <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 452455132,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721345028
    },
    {
        "content": "<p>There's a few others who are also keen on using roc in this way. Lot's of different options for how to do it today, depending on a few trade-offs.</p>",
        "id": 452455240,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721345083
    },
    {
        "content": "<p>For example you might want to;</p>\n<ul>\n<li>provide an API for your plugins by writing a roc platform</li>\n<li>the plugin author then compiles their roc \"app\" to a shared library using <code>roc build --lib</code> or possibly a WASM module</li>\n<li>you might even include and link the library produced by roc with a shim if you want to have a different API in your host </li>\n<li>your host application can then dynamically load the plugin as a shared library at runtime, or even link with it if you want a standalone executable</li>\n</ul>",
        "id": 452455531,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721345283
    },
    {
        "content": "<p>I really am entering areas beyond my expertise here wow. I suppose it's always good to learn new things. Do you know what I should look into to get started with doing this in Rust?</p>",
        "id": 452456753,
        "sender_full_name": "Katie And",
        "timestamp": 1721346127
    },
    {
        "content": "<p>Minor plug for my template repository <a href=\"https://github.com/lukewilliamboswell/roc-platform-template-rust\">https://github.com/lukewilliamboswell/roc-platform-template-rust</a></p>",
        "id": 452458229,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721346909
    },
    {
        "content": "<p>I'd start by getting set up and familiar with the basics of making a platform. Try adding effects or different features.</p>",
        "id": 452458319,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721346957
    },
    {
        "content": "<p>It's a fairly deep rabbit hole <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> I've been learning new things for quite some time, but folks here have always been very helpful and taught me a lot about low level things.</p>",
        "id": 452458497,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1721347009
    },
    {
        "content": "<p>Certainly looks deep huh!</p>",
        "id": 452458816,
        "sender_full_name": "Katie And",
        "timestamp": 1721347099
    },
    {
        "content": "<p>I guess I should start by asking what a platform is</p>",
        "id": 452458839,
        "sender_full_name": "Katie And",
        "timestamp": 1721347111
    },
    {
        "content": "<p>Is it like... a library that provides <em>functionality</em> to the language?</p>",
        "id": 452459139,
        "sender_full_name": "Katie And",
        "timestamp": 1721347202
    },
    {
        "content": "<p>Your program would be a platform. It is the underlying program that actually executes and gives all io primitives to roc</p>",
        "id": 452459472,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721347260
    },
    {
        "content": "<p>i see</p>",
        "id": 452459565,
        "sender_full_name": "Katie And",
        "timestamp": 1721347291
    },
    {
        "content": "<p>that's interesting</p>",
        "id": 452459620,
        "sender_full_name": "Katie And",
        "timestamp": 1721347310
    },
    {
        "content": "<p>i see why you're saying it's good for plugins, if it works like this</p>",
        "id": 452459687,
        "sender_full_name": "Katie And",
        "timestamp": 1721347322
    },
    {
        "content": "<blockquote>\n<p>Should I use it for this purpose?</p>\n</blockquote>\n<p>Roc is usable for this today, but it definitely is not easy to use like this currently. Platform development while not super hard is not easy either. So 100% doable, but expect to spend time debugging and tailoring to your needs.</p>",
        "id": 452459796,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721347352
    },
    {
        "content": "<p>Of course, many people here are willing to help out and guide</p>",
        "id": 452459860,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721347374
    },
    {
        "content": "<p>At this point, making my own language is among my other options, so spending time debugging and tailoring is an upside compared to that haha. I do wanna make sure that Roc is a good choice for me, so I'm gonna spend some more time checking it out before i commit to spending weeks trying to implement it for my program</p>",
        "id": 452460209,
        "sender_full_name": "Katie And",
        "timestamp": 1721347514
    },
    {
        "content": "<p>Specifically, dynamically loading different roc applications at runtime is more complex.</p>\n<p>How most platforms work today, they are statically linked with the roc app to generate a single executable. So that is what most examples (like <a href=\"http://github.com/roc-lang/basic-cli\">basic-cli</a> and <a href=\"http://github.com/roc-lang/basic-webserver\">basic-webserver</a>).</p>\n<p>That said, once the api is built out, using via a shared library isn't all that much harder. In a language like rust, you would delegate to the <code>roc</code> to compile the app into a shared library (probably with command). Then you would use <a href=\"https://docs.rs/libloading/latest/libloading/\">libloading</a> to load that shared library. Finally, you would just be calling into the roc app.</p>",
        "id": 452460385,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1721347586
    }
]