[
    {
        "content": "<p>Hey, can i only define variables once? Is there a way to change this behavior</p>",
        "id": 486369530,
        "sender_full_name": "Jonas",
        "timestamp": 1733423315
    },
    {
        "content": "<p>So currently, shadowing is disallowed. We are working on changing that now that this proposal has been accepted:</p>\n<p><a href=\"https://docs.google.com/document/d/1Ly5Cp_Z7dY8KLQkkDYZlGCldxQj4jLzZ0vIeB-F8lJI/edit?usp=sharing\">https://docs.google.com/document/d/1Ly5Cp_Z7dY8KLQkkDYZlGCldxQj4jLzZ0vIeB-F8lJI/edit?usp=sharing</a></p>\n<p><a href=\"#narrow/stream/304641-ideas/topic/.60for.60.20and.20.60var.60/near/471593157\">https://roc.zulipchat.com/#narrow/stream/304641-ideas/topic/.60for.60.20and.20.60var.60/near/471593157</a></p>\n<p>It'll be at least a couple months before it's possible though</p>",
        "id": 486371020,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733423916
    },
    {
        "content": "<p>I'll probably be the one implementing most of that part of the proposal, so let me know if you have any questions!</p>",
        "id": 486371081,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733423941
    },
    {
        "content": "<p>that's cool</p>",
        "id": 486374919,
        "sender_full_name": "Jonas",
        "timestamp": 1733425355
    },
    {
        "content": "<p>will for loops come too?</p>",
        "id": 486374984,
        "sender_full_name": "Jonas",
        "timestamp": 1733425372
    },
    {
        "content": "<p>it could be an really need alternativ to ocaml then?</p>",
        "id": 486375065,
        "sender_full_name": "Jonas",
        "timestamp": 1733425404
    },
    {
        "content": "<p>Does Roc have something like Ocaml References</p>",
        "id": 486375125,
        "sender_full_name": "Jonas",
        "timestamp": 1733425437
    },
    {
        "content": "<p>I think so.</p>",
        "id": 486375196,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733425453
    },
    {
        "content": "<p>Yep, for loops will also come, I just don't know who is in charge of implementing them</p>",
        "id": 486375202,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733425456
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"730138\">Jonas</span> <a href=\"#narrow/channel/231634-beginners/topic/Hey.2C.20can.20i.20only.20define.20variables.20once.3F/near/486375125\">said</a>:</p>\n<blockquote>\n<p>Does Roc have something like Ocaml References</p>\n</blockquote>\n<p>I don't think we are thinking about any sort of explicit mutability</p>",
        "id": 486375264,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733425484
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"781658\">@Anthony Bullard</span> I don't think we have refs?</p>",
        "id": 486375274,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733425488
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461444\">Sam Mohr</span> <a href=\"#narrow/channel/231634-beginners/topic/Hey.2C.20can.20i.20only.20define.20variables.20once.3F/near/486375274\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> I don't think we have refs?</p>\n</blockquote>\n<p>Sorry there I was speaking towards whether Roc could be an alternative to OCaml</p>",
        "id": 486375379,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733425525
    },
    {
        "content": "<p>A ref is a value you can pass to other functions that is mutable. We don't currently have that, or plans for that</p>",
        "id": 486375388,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733425530
    },
    {
        "content": "<p>We won't have arenas either, but we are already using RC instead of M&amp;S or pause-the-world GC</p>",
        "id": 486375632,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733425611
    },
    {
        "content": "<p>Or functors - but Module Params are an interesting alternative to that</p>",
        "id": 486375759,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733425659
    },
    {
        "content": "<p>And I think I can feel good in saying we definitely won't have an object system :-)</p>",
        "id": 486375803,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733425674
    },
    {
        "content": "<p>Sry, i am very new is Roc Pipe First or Last?</p>",
        "id": 486376056,
        "sender_full_name": "Jonas",
        "timestamp": 1733425762
    },
    {
        "content": "<p>PIpe first</p>",
        "id": 486376275,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733425833
    },
    {
        "content": "<p>ok</p>",
        "id": 486376308,
        "sender_full_name": "Jonas",
        "timestamp": 1733425848
    },
    {
        "content": "<p>You should find the data structure for all module functions in the first position in all of the builtins</p>",
        "id": 486376323,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733425858
    },
    {
        "content": "<p>are Records/Structs immutable as well?</p>",
        "id": 486377087,
        "sender_full_name": "Jonas",
        "timestamp": 1733426159
    },
    {
        "content": "<p>Yes</p>",
        "id": 486377148,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733426171
    },
    {
        "content": "<p><span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span> then i still will have use for Ocaml, love how easy imports are and how fast</p>",
        "id": 486377361,
        "sender_full_name": "Jonas",
        "timestamp": 1733426255
    },
    {
        "content": "<p>in ocaml i have to precompile everything it takes a while</p>",
        "id": 486377475,
        "sender_full_name": "Jonas",
        "timestamp": 1733426288
    },
    {
        "content": "<p>The Roc compiler will be very fast compared to what you're used to, methinks</p>",
        "id": 486377574,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733426326
    },
    {
        "content": "<p>It'll just take us some time to get it all tied together</p>",
        "id": 486377600,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733426341
    },
    {
        "content": "<p>pkgs usallay complie to so files, so compliing the actual bin is quick</p>",
        "id": 486377615,
        "sender_full_name": "Jonas",
        "timestamp": 1733426345
    },
    {
        "content": "<p>I thought Dune was pretty fast at building, but it's been awhile</p>",
        "id": 486377630,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733426350
    },
    {
        "content": "<p>But yes, Roc has different goals for Ocaml, they both have their uses</p>",
        "id": 486377679,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733426369
    },
    {
        "content": "<p>meant the liabary files</p>",
        "id": 486377687,
        "sender_full_name": "Jonas",
        "timestamp": 1733426371
    },
    {
        "content": "<p>compiling them takes a while</p>",
        "id": 486377731,
        "sender_full_name": "Jonas",
        "timestamp": 1733426393
    },
    {
        "content": "<p>Will there ever be a Roc unikernel? <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 486377732,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733426393
    },
    {
        "content": "<p>but since they are precompiled dune just have to link them</p>",
        "id": 486377832,
        "sender_full_name": "Jonas",
        "timestamp": 1733426427
    },
    {
        "content": "<p>the std is written in Rust, i don't need an Rust Compiler right(have one installed anyways)</p>",
        "id": 486377955,
        "sender_full_name": "Jonas",
        "timestamp": 1733426484
    },
    {
        "content": "<p>even for basic-cli i guess</p>",
        "id": 486378036,
        "sender_full_name": "Jonas",
        "timestamp": 1733426519
    },
    {
        "content": "<p>I think the platforms ship with the .a files you need and then roc uses llvm to assemble it (or just links it with the appropriate linker)</p>",
        "id": 486378438,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733426707
    },
    {
        "content": "<p>Here's the contents of basic-cli platform package:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Arg\nArg.roc\nCmd.roc\nDir.roc\nEnv.roc\nEnvDecoding.roc\nFile.roc\nFileMetadata.roc\nHttp.roc\nInternalCommand.roc\nInternalFile.roc\nInternalHttp.roc\nInternalPath.roc\nLocale.roc\nPath.roc\nPlatformTasks.roc\nSleep.roc\nStderr.roc\nStdin.roc\nStdout.roc\nTcp.roc\nTty.roc\nUrl.roc\nUtc.roc\nglue.roc\nlibapp.roc\nlinux-arm64.a\nlinux-x64.a\nlinux-x64.rh\nmacos-arm64.a\nmacos-x64.a\nmain.roc\nmetadata_linux-x64.rm\n</code></pre></div>",
        "id": 486378515,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733426740
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"730138\">Jonas</span> <a href=\"#narrow/stream/231634-beginners/topic/Hey.2C.20can.20i.20only.20define.20variables.20once.3F/near/486377955\">said</a>:</p>\n<blockquote>\n<p>the std is written in Rust, i don't need an Rust Compiler right(have one installed anyways)</p>\n</blockquote>\n<p>You should only ever need two things:</p>\n<ul>\n<li>the <code>roc</code> compiler binary</li>\n<li>a URL for a platform release archive</li>\n</ul>",
        "id": 486379555,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1733427152
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> <a href=\"#narrow/stream/231634-beginners/topic/Hey.2C.20can.20i.20only.20define.20variables.20once.3F/near/486375632\">said</a>:</p>\n<blockquote>\n<p>We won't have arenas either, but we are already using RC instead of M&amp;S or pause-the-world GC</p>\n</blockquote>\n<p>also platforms can use arenas behind the scenes - e.g. doing one arena per request like <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> 's <code>nea</code> <a href=\"https://youtu.be/zMRfCZo8eAc?si=khwPJ-2BfTvuajYB\">https://youtu.be/zMRfCZo8eAc?si=khwPJ-2BfTvuajYB</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"zMRfCZo8eAc\" href=\"https://youtu.be/zMRfCZo8eAc?si=khwPJ-2BfTvuajYB\"><img src=\"https://uploads.zulipusercontent.net/25dda2dc57e31d939a48c2b72f80033de8d274c2/68747470733a2f2f692e7974696d672e636f6d2f76692f7a4d5266435a6f386541632f64656661756c742e6a7067\"></a></div>",
        "id": 486380781,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1733427662
    },
    {
        "content": "<p>can i concat a string from an List?</p>",
        "id": 486381277,
        "sender_full_name": "Jonas",
        "timestamp": 1733427886
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"730138\">Jonas</span> <a href=\"#narrow/stream/231634-beginners/topic/Hey.2C.20can.20i.20only.20define.20variables.20once.3F/near/486377087\">said</a>:</p>\n<blockquote>\n<p>are Records/Structs immutable as well?</p>\n</blockquote>\n<p>semantically they're immutable, although roc does \"opportunistic mutation\" where things get automatically mutated in place (instead of cloned) if their refcount is 1, because then the mutation is unobservable and can safely be done as a silent performance optimization behind the scenes</p>\n<p>more details at <a href=\"https://youtu.be/vzfy4EKwG_Y?si=rE4ZhW3n7Kx3iKZo\">https://youtu.be/vzfy4EKwG_Y?si=rE4ZhW3n7Kx3iKZo</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"vzfy4EKwG_Y\" href=\"https://youtu.be/vzfy4EKwG_Y?si=rE4ZhW3n7Kx3iKZo\"><img src=\"https://uploads.zulipusercontent.net/22392a9581c4e4517e75c4831a3f1ee763aa1923/68747470733a2f2f692e7974696d672e636f6d2f76692f767a667934454b77475f592f64656661756c742e6a7067\"></a></div>",
        "id": 486381279,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1733427888
    },
    {
        "content": "<p>Thanks for the clarification!  Arena's are great for web requests</p>",
        "id": 486381293,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733427896
    },
    {
        "content": "<p>Which is why even Go played around with it (I think it was removed though in 1.23</p>",
        "id": 486381417,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733427942
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"730138\">Jonas</span> <a href=\"#narrow/channel/231634-beginners/topic/Hey.2C.20can.20i.20only.20define.20variables.20once.3F/near/486381277\">said</a>:</p>\n<blockquote>\n<p>can i concat a string from an List?</p>\n</blockquote>\n<p>Do you mean join a list of strings into one?  Or a list of bytes (U8) into a string?</p>",
        "id": 486381935,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733428132
    },
    {
        "content": "<p>The answer is yes on both</p>",
        "id": 486381942,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733428138
    },
    {
        "content": "<p>Str.joinWith to join a (List Str, Str -&gt; Str) and Str.fromUtf8 for (List U8 -&gt; Str)</p>",
        "id": 486382286,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733428261
    },
    {
        "content": "<p><a href=\"https://www.roc-lang.org/builtins/Str#joinWith\">https://www.roc-lang.org/builtins/Str#joinWith</a></p>",
        "id": 486382308,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733428269
    },
    {
        "content": "<p>thanks</p>",
        "id": 486397662,
        "sender_full_name": "Jonas",
        "timestamp": 1733434718
    }
]