[
    {
        "content": "<p>Hey folks - I'm gonna spend like 35min setting up Roc on a NixOS machine and trying out AoC day 1. If anyone wants to tag along - feel free to <a href=\"https://youtube.com/live/4EuVaNzRWxY?feature=share\">join me</a> :)</p>",
        "id": 405863037,
        "sender_full_name": "Georges Boris",
        "timestamp": 1701707012
    },
    {
        "content": "<p>This might be a good start <a href=\"https://github.com/roc-lang/roc/blob/main/BUILDING_FROM_SOURCE.md\">https://github.com/roc-lang/roc/blob/main/BUILDING_FROM_SOURCE.md</a></p>",
        "id": 405865619,
        "sender_full_name": "JRI98",
        "timestamp": 1701707649
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"666594\">@John Murray</span>  found a new approach you could try out:</p>\n<div class=\"codehilite\"><pre><span></span><code>nix-shell -p steam-run\nsteam-run &lt;downloaded-roc-binary&gt;\n</code></pre></div>",
        "id": 405865773,
        "sender_full_name": "Anton",
        "timestamp": 1701707695
    },
    {
        "content": "<p>No need to build from source anymore :)</p>",
        "id": 405865920,
        "sender_full_name": "Anton",
        "timestamp": 1701707738
    },
    {
        "content": "<p>I also patched the binary myself for AoC: <a href=\"https://gitlab.com/arkandos/aoc/-/blob/2023/flake.nix?ref_type=heads\">https://gitlab.com/arkandos/aoc/-/blob/2023/flake.nix?ref_type=heads</a><br>\nThe hashes might be wrong since the last nightly update, but that's an easy fix <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 405866114,
        "sender_full_name": "joshi",
        "timestamp": 1701707783
    },
    {
        "content": "<p>Some excerpts from my vscode setup from configuration.nix (for 23.05):</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>configuration.nix parts</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>{ config, pkgs, ... }:</p>\n<p>let<br>\n  home-manager = builtins.fetchTarball \"<a href=\"https://github.com/nix-community/home-manager/archive/release-23.05.tar.gz\">https://github.com/nix-community/home-manager/archive/release-23.05.tar.gz</a>\";<br>\nin</p>\n<p>{<br>\n  imports =<br>\n    [ # Include the results of the hardware scan.<br>\n      ./hardware-configuration.nix</p>\n<div class=\"codehilite\"><pre><span></span><code>  (import &quot;${home-manager}/nixos&quot;)\n];\n</code></pre></div>\n\n<p># Allow unfree packages<br>\n  nixpkgs.config.allowUnfree = true;</p>\n<p>nix = {<br>\n    package = pkgs.nixFlakes; # or versioned attributes like nixVersions.nix_2_8<br>\n    extraOptions = ''<br>\n      experimental-features = nix-command flakes<br>\n    '';<br>\n  };</p>\n<p>home-manager.users.username = { pkgs, ... }: {<br>\n    nixpkgs.config.allowUnfree = true;<br>\n    programs.bash.enable = true;</p>\n<div class=\"codehilite\"><pre><span></span><code># temp workaround for https://github.com/NixOS/nixpkgs/issues/196651\nmanual.manpages.enable = false;\n\nprograms.vscode = {\n  enable = true;\n\n  extensions = with pkgs.vscode-extensions; [\n      matklad.rust-analyzer\n      eamodio.gitlens\n      bbenoist.nix\n      vadimcn.vscode-lldb\n      tamasfe.even-better-toml\n      github.vscode-github-actions\n      ms-vscode.cpptools\n      ms-vscode.cmake-tools\n   ]\n              ++ pkgs.vscode-utils.extensionsFromVscodeMarketplace [\n                 {\n                    name = &quot;roc-lang-support&quot;;\n                    publisher = &quot;benjamin-thomas&quot;;\n                    version = &quot;0.0.3&quot;;\n                    sha256 = &quot;sha256-mabNegZ+XPQ6EIHFk6jz2mAPLHAU6Pm3w0SiFB7IE+s=&quot;;\n                  }\n                ]\n              ;\n\n  userSettings = {\n    &quot;terminal.integrated.shell.linux&quot; = &quot;/run/current-system/sw/bin/bash&quot;;\n    &quot;files.autoSave&quot; = &quot;afterDelay&quot;;\n    &quot;editor.scrollBeyondLastLine&quot; = &quot;false&quot;;\n    &quot;terminal.integrated.scrollback&quot; = 20000;\n    &quot;telemetry.telemetryLevel&quot; = &quot;off&quot;;\n    #&quot;enable-crash-reporter&quot; = &quot;false&quot;;\n  };\n</code></pre></div>\n\n<p>};</p>\n<div class=\"codehilite\"><pre><span></span><code>home.stateVersion = &quot;23.05&quot;;\n</code></pre></div>\n\n<p>};</p>\n<p>system.stateVersion = \"23.05\";</p>\n<p>}</p>\n</div></div>",
        "id": 405867119,
        "sender_full_name": "Anton",
        "timestamp": 1701708051
    },
    {
        "content": "<p>hitting my head against the wall in public by trying out random paths quickly <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 405867725,
        "sender_full_name": "Georges Boris",
        "timestamp": 1701708216
    },
    {
        "content": "<p>decide to prep things better upfront so I can have Roc running on my NixOS (maybe after lining things up I can do it on camera just for the sake of it)</p>",
        "id": 405869320,
        "sender_full_name": "Georges Boris",
        "timestamp": 1701708652
    },
    {
        "content": "<p>managed to get everything working in 10min after not doing it in public :) (building from source was pretty straightforward on nixos tbh...)</p>",
        "id": 405871496,
        "sender_full_name": "Georges Boris",
        "timestamp": 1701709189
    },
    {
        "content": "<p>I'm planning on adding a dedicated NixOS section to <a href=\"https://www.roc-lang.org/install\">https://www.roc-lang.org/install</a> to make things easier in the future.</p>",
        "id": 405874876,
        "sender_full_name": "Anton",
        "timestamp": 1701710001
    },
    {
        "content": "<p>The steam run approach is great to try it out</p>\n<p>If you want to include roc in a flake (which builds from source) i have this example <a href=\"https://github.com/JRMurr/AdventOfCode2023/blob/main/flake.nix\">https://github.com/JRMurr/AdventOfCode2023/blob/main/flake.nix</a></p>\n<p>which sets up the lsp for <a href=\"https://github.com/ivan-demchenko/roc-vscode-unofficial\">https://github.com/ivan-demchenko/roc-vscode-unofficial</a> via <code>export ROC_LSP_PATH=${rocFull}/bin/roc_ls</code></p>",
        "id": 405886597,
        "sender_full_name": "John Murray",
        "timestamp": 1701713818
    },
    {
        "content": "<p>here's a first: <span class=\"user-mention\" data-user-id=\"664700\">@Loris Cro</span>  solving Advent of Code in both Roc and Zig on stream! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> </p>\n<p><a href=\"https://twitter.com/croloris/status/1732074738611089562\">https://twitter.com/croloris/status/1732074738611089562</a></p>",
        "id": 406102382,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1701794775
    },
    {
        "content": "<p>Cool :)</p>",
        "id": 406102802,
        "sender_full_name": "Anton",
        "timestamp": 1701794869
    },
    {
        "content": "<p>Hey, I'm streaming solving day 8 with Roc ^^</p>",
        "id": 406803729,
        "sender_full_name": "Marten",
        "timestamp": 1702055497
    },
    {
        "content": "<p><a href=\"https://twitch.tv/whiletruu\">https://twitch.tv/whiletruu</a></p>",
        "id": 406803736,
        "sender_full_name": "Marten",
        "timestamp": 1702055500
    }
]