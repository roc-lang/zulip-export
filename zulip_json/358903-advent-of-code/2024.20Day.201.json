[
    {
        "content": "<p>Here's my solution <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> </p>\n<p><a href=\"https://github.com/lukewilliamboswell/aoc/blob/2024/2024/01.roc\">https://github.com/lukewilliamboswell/aoc/blob/2024/2024/01.roc</a></p>\n<div class=\"codehilite\"><pre><span></span><code>TIMING:\nREADING INPUT:  &lt;1ms\nSOLVING PART 1: &lt;1ms\nSOLVING PART 2: 1ms\n</code></pre></div>",
        "id": 485449504,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733030775
    },
    {
        "content": "<p>And here is mine: <a href=\"https://github.com/ostcar/aoc2024/blob/main/day01.roc\">https://github.com/ostcar/aoc2024/blob/main/day01.roc</a></p>",
        "id": 485449774,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1733031050
    },
    {
        "content": "<p>I like your diffing impl</p>",
        "id": 485449834,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733031114
    },
    {
        "content": "<p><a href=\"https://github.com/isaacvando/aoc/blob/main/2024/1.roc\">https://github.com/isaacvando/aoc/blob/main/2024/1.roc</a> <span aria-label=\"evergreen tree\" class=\"emoji emoji-1f332\" role=\"img\" title=\"evergreen tree\">:evergreen_tree:</span></p>",
        "id": 485451519,
        "sender_full_name": "Isaac Van Doren",
        "timestamp": 1733032865
    },
    {
        "content": "<p>Probably not the most elegant but it works <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>  <a href=\"https://github.com/RobinCamarasa/Advent-of-code/blob/master/2024/day01/RobinCamarasa/main.roc\">https://github.com/RobinCamarasa/Advent-of-code/blob/master/2024/day01/RobinCamarasa/main.roc</a></p>",
        "id": 485452172,
        "sender_full_name": "Robin Camarasa",
        "timestamp": 1733033552
    },
    {
        "content": "<p>Got it done too, after a few hours of submitting PRs and debugging things <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> <br>\n<a href=\"https://github.com/faldor20/aoc-template/blob/purity-inference/examples/2024/01.roc\">https://github.com/faldor20/aoc-template/blob/purity-inference/examples/2024/01.roc</a></p>",
        "id": 485469675,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733048910
    },
    {
        "content": "<p>am i allowed to post non-roc code <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 485490276,
        "sender_full_name": "drew",
        "timestamp": 1733066762
    },
    {
        "content": "<p>Here my solution: <a href=\"https://github.com/Hardy7cc/aoc/blob/main/2024/01.roc\">https://github.com/Hardy7cc/aoc/blob/main/2024/01.roc</a><br>\nBut watch out I don't understand why the part2 \"Ok String\" return is crashing. For AoC it is working good enough with returning an \"Err\", after all I got expected results.</p>",
        "id": 485496536,
        "sender_full_name": "Hardy",
        "timestamp": 1733071434
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"463085\">drew</span> <a href=\"#narrow/channel/358903-advent-of-code/topic/2024.20Day.201/near/485490276\">said</a>:</p>\n<blockquote>\n<p>am i allowed to post non-roc code :)</p>\n</blockquote>\n<p>So long as it's not in a language that makes me want to weep with boredom <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 485496639,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733071515
    },
    {
        "content": "<p>Should we post AoC-inspired bugs / compiler improvement ideas here or in <a class=\"stream\" data-stream-id=\"463736\" href=\"/#narrow/channel/463736-bugs\">#bugs</a> ?</p>",
        "id": 485502853,
        "sender_full_name": "jan kili",
        "timestamp": 1733076923
    },
    {
        "content": "<p>My late entry: <a href=\"https://github.com/r-bar/advent24\">https://github.com/r-bar/advent24</a></p>",
        "id": 485504250,
        "sender_full_name": "Ryan Barth",
        "timestamp": 1733078143
    },
    {
        "content": "<p>Probably in <a class=\"stream\" data-stream-id=\"463736\" href=\"/#narrow/channel/463736-bugs\">#bugs</a>. Though please be careful not to leak AOC solutions directly in <a class=\"stream\" data-stream-id=\"463736\" href=\"/#narrow/channel/463736-bugs\">#bugs</a>. Make sure they are behind a link and directly labelled as AOC. Or even better, make a repro that doesn't spoil AOC.</p>",
        "id": 485504311,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733078168
    },
    {
        "content": "<p>my GOSH doing day 1 is reminding me how much I love coding in Roc</p>",
        "id": 485504510,
        "sender_full_name": "jan kili",
        "timestamp": 1733078355
    },
    {
        "content": "<p>Here's mine <a href=\"https://github.com/ghigt/advent-of-code/blob/main/2024/roc/01.roc\">https://github.com/ghigt/advent-of-code/blob/main/2024/roc/01.roc</a></p>\n<p>Feedback on the feeling on writing Roc code:</p>\n<ul>\n<li>Thank you <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span> for the template, very helpful!</li>\n<li>A bit frustrated about the editing experience (using Zed) with too much \"reload workspace\" because of a broken parser</li>\n<li>The \"mouse over\" to get definition of something is still complicated. I have to split a lot of code to get exactly the definition of something instead of the complete pipeline</li>\n<li><code>dbg</code> is very helpful but the output is a bit confusing at first</li>\n</ul>\n<p>(These are my small frustrations, thank you for all the work, it's a much better experience than the previous years!)</p>",
        "id": 485504522,
        "sender_full_name": "Ghislain",
        "timestamp": 1733078368
    },
    {
        "content": "<p>Any extra detail on the <code>dbg</code> comment? Anything that would make it more friendly?</p>",
        "id": 485505470,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733079189
    },
    {
        "content": "<p>I used it inside a pipeline and it was a bit hard to parse the output because it contained all the pipeline as variable name before <code>=</code>.</p>\n<div class=\"codehilite\"><pre><span></span><code>✗ roc test 01.roc\n[01.roc:53] map.0\n    |&gt; List.map \\n -&gt;\n        map.1\n        |&gt; List.keepIf \\nn -&gt; nn == n\n        |&gt; List.len\n        |&gt; Num.toI32\n        |&gt; Num.mul n = [9, 4, 0, 0, 9, 9]\n0 failed and 2 passed in 529 ms.\n</code></pre></div>\n<p>It may be only me and my use case but I would have prefered only the line of file for a more concise and simpler output (even more when it's inside a loop). I may be wrong and don't see all the use cases it allows though.</p>",
        "id": 485511387,
        "sender_full_name": "Ghislain",
        "timestamp": 1733084283
    },
    {
        "content": "<p>It took me hours to get it running <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>. Sharing the code would be even more embarrassing <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span> , but hey, it was super delightful using Roc, I learned a lot and can’t wait for day 02. <span aria-label=\"heart kiss\" class=\"emoji emoji-1f618\" role=\"img\" title=\"heart kiss\">:heart_kiss:</span></p>",
        "id": 485513610,
        "sender_full_name": "Johannes",
        "timestamp": 1733086485
    },
    {
        "content": "<p>here's day 1 in gleam <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span>  but i'll probably do tomorrow in roc</p>",
        "id": 485524030,
        "sender_full_name": "drew",
        "timestamp": 1733096650
    },
    {
        "content": "<p><a href=\"https://github.com/drewolson/aoc-gleam/blob/main/src/aoc/year2024/day01.gleam\">https://github.com/drewolson/aoc-gleam/blob/main/src/aoc/year2024/day01.gleam</a></p>",
        "id": 485524032,
        "sender_full_name": "drew",
        "timestamp": 1733096652
    },
    {
        "content": "<p>here's my day 1 roc <a href=\"https://github.com/drewolson/aoc-roc/blob/main/Aoc/Year2024/Day01.roc\">https://github.com/drewolson/aoc-roc/blob/main/Aoc/Year2024/Day01.roc</a></p>",
        "id": 485526031,
        "sender_full_name": "drew",
        "timestamp": 1733098594
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"528453\">Ghislain</span> <a href=\"#narrow/stream/358903-advent-of-code/topic/2024.20Day.201/near/485504522\">said</a>:</p>\n<blockquote>\n<ul>\n<li>A bit frustrated about the editing experience (using Zed) with too much \"reload workspace\" because of a broken parser<br>\n</li>\n</ul>\n</blockquote>\n<p>Hey, I agree that's a pain, but I think I finally fixed all the language server crashes in this pr:<br>\n<a href=\"https://github.com/roc-lang/roc/pull/7288\">https://github.com/roc-lang/roc/pull/7288</a><br>\nHopefully it'll be merged very soon and you will be sorted :)</p>",
        "id": 485526585,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733099148
    },
    {
        "content": "<p>yep that’ll be awesome if it merges</p>",
        "id": 485527420,
        "sender_full_name": "drew",
        "timestamp": 1733099915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"618834\">@johannes</span> <span class=\"user-mention\" data-user-id=\"463085\">@drew</span> I his is merged! Hopefully you can update and  day 2 will be way better!</p>",
        "id": 485539545,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733110347
    },
    {
        "content": "<p>Thank you Eli for fixing that</p>",
        "id": 485539604,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733110404
    },
    {
        "content": "<p>awesome! hopefully a new release is cut soon!</p>",
        "id": 485539894,
        "sender_full_name": "drew",
        "timestamp": 1733110646
    },
    {
        "content": "<p>looking forward to using it</p>",
        "id": 485539898,
        "sender_full_name": "drew",
        "timestamp": 1733110653
    },
    {
        "content": "<p><span aria-label=\"partying face\" class=\"emoji emoji-1f973\" role=\"img\" title=\"partying face\">:partying_face:</span> <br>\n<a href=\"https://gitlab.com/JanCVanB/aoc-2024/-/blob/main/day-01/part-1/main.roc\">https://gitlab.com/JanCVanB/aoc-2024/-/blob/main/day-01/part-1/main.roc</a><br>\n<a href=\"https://gitlab.com/JanCVanB/aoc-2024/-/blob/main/day-01/part-2/main.roc\">https://gitlab.com/JanCVanB/aoc-2024/-/blob/main/day-01/part-2/main.roc</a></p>",
        "id": 485556878,
        "sender_full_name": "jan kili",
        "timestamp": 1733123014
    },
    {
        "content": "<p>This is my first time using <code>expect</code>. <span aria-label=\"loudspeaker\" class=\"emoji emoji-1f4e2\" role=\"img\" title=\"loudspeaker\">:loudspeaker:</span> <strong><em>Roc has better TDD flow than I've ever felt in other languages.</em></strong> I haven't used other newer or FP-centric languages, though.</p>",
        "id": 485559741,
        "sender_full_name": "jan kili",
        "timestamp": 1733124504
    },
    {
        "content": "<p>The only things I tripped over were some awful error messages when getting my first <code>main</code> set up, like these:<br>\n<a href=\"/user_uploads/22008/ZQCFj2ivUKKYigiAL_HxpY5V/Screenshot-from-2024-12-01-11-14-07.png\">Screenshot from 2024-12-01 11-14-07.png</a><br>\n<a href=\"/user_uploads/22008/nuahveY825Rc7KE_9HtbH9CH/Screenshot-from-2024-12-01-11-17-07.png\">Screenshot from 2024-12-01 11-17-07.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/ZQCFj2ivUKKYigiAL_HxpY5V/Screenshot-from-2024-12-01-11-14-07.png\" title=\"Screenshot from 2024-12-01 11-14-07.png\"><img data-original-dimensions=\"2256x1504\" src=\"/user_uploads/thumbnail/22008/ZQCFj2ivUKKYigiAL_HxpY5V/Screenshot-from-2024-12-01-11-14-07.png/840x560.webp\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/22008/nuahveY825Rc7KE_9HtbH9CH/Screenshot-from-2024-12-01-11-17-07.png\" title=\"Screenshot from 2024-12-01 11-17-07.png\"><img data-original-dimensions=\"2256x1504\" src=\"/user_uploads/thumbnail/22008/nuahveY825Rc7KE_9HtbH9CH/Screenshot-from-2024-12-01-11-17-07.png/840x560.webp\"></a></div>",
        "id": 485559927,
        "sender_full_name": "jan kili",
        "timestamp": 1733124603
    },
    {
        "content": "<p>What's wrong with that fiest message? Looks ok to me</p>",
        "id": 485563075,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733125997
    },
    {
        "content": "<p>\"Something is off with the body of this suffixed statement\" instead of something like \"Please assign the return value of this valid mid-function expression to a variable\"<br>\n(dismissed by adding <code>foo = </code> in front of that line or adding <code>|&gt; foo</code> on the next line)<br>\nposted in <a href=\"#narrow/channel/463736-bugs/topic/Lame.20error.20message.20-.20.22Something.20is.20off.22/near/485566360\">https://roc.zulipchat.com/#narrow/channel/463736-bugs/topic/Lame.20error.20message.20-.20.22Something.20is.20off.22/near/485566360</a></p>",
        "id": 485563684,
        "sender_full_name": "jan kili",
        "timestamp": 1733126242
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 485566004,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733127110
    },
    {
        "content": "<blockquote>\n<p>awesome! hopefully a new release is cut soon!</p>\n</blockquote>\n<p>done :)</p>",
        "id": 485600239,
        "sender_full_name": "Anton",
        "timestamp": 1733138161
    },
    {
        "content": "<p>with the new release, i no longer have LSP errors on my files, but the LSP seems to now do nothing on these files. no hovers, no autocompletion, etc</p>",
        "id": 485620907,
        "sender_full_name": "drew",
        "timestamp": 1733144969
    },
    {
        "content": "<p>Can you see if there any useful messages in the logs?</p>",
        "id": 485621161,
        "sender_full_name": "Anton",
        "timestamp": 1733145040
    },
    {
        "content": "<p>looking</p>",
        "id": 485627237,
        "sender_full_name": "drew",
        "timestamp": 1733146959
    },
    {
        "content": "<p>i see a lot of this:</p>",
        "id": 485627436,
        "sender_full_name": "drew",
        "timestamp": 1733147027
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>[ERROR][2024-12-02 07:42:55] .../lean/stderr.lua:80 &quot;rpc&quot; &quot;/Users/drew/.local/bin/roc_language_server&quot;  &quot;stderr&quot;  &quot;thread &#39;tokio-runt       ime-worker&#39; panicked at crates/language_server/src/analysis.rs:301:71:\\ncalled `Option::unwrap()` on a `None` value\\nnote: run with `       RUST_BACKTRACE=1` environment variable to display a backtrace\\n&quot;\n</code></pre></div>",
        "id": 485627449,
        "sender_full_name": "drew",
        "timestamp": 1733147031
    },
    {
        "content": "<p>analysis.rs:301 is also involved <a href=\"https://github.com/roc-lang/roc/issues/7153\">here</a>, can you add your code to that issue? That way we can  make sure a future fix works for both cases.</p>",
        "id": 485630089,
        "sender_full_name": "Anton",
        "timestamp": 1733147819
    },
    {
        "content": "<p>done</p>",
        "id": 485635361,
        "sender_full_name": "drew",
        "timestamp": 1733149367
    },
    {
        "content": "<p>So if the compiler is crashing there will be no errors until whatever is crashing the compiler is fixed. But that also looks like a different issue which I can definitely fix</p>",
        "id": 485643705,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733151676
    },
    {
        "content": "<p>As in, you make a code change to no longer make your code crash the compiler</p>",
        "id": 485643787,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733151698
    },
    {
        "content": "<p>i'm in neovim, <code>:LspInfo</code> shows the LSP still running</p>",
        "id": 485643861,
        "sender_full_name": "drew",
        "timestamp": 1733151716
    },
    {
        "content": "<p>so it seems attached to the buffer</p>",
        "id": 485643878,
        "sender_full_name": "drew",
        "timestamp": 1733151720
    },
    {
        "content": "<p>but i'm getting no interactive behavior</p>",
        "id": 485643930,
        "sender_full_name": "drew",
        "timestamp": 1733151725
    },
    {
        "content": "<p>interactivity does indeed work in <code>main.roc</code></p>",
        "id": 485644054,
        "sender_full_name": "drew",
        "timestamp": 1733151759
    },
    {
        "content": "<p>anecdotally, it seems to work on singly-nested modules but not doubly-nested</p>",
        "id": 485644228,
        "sender_full_name": "drew",
        "timestamp": 1733151816
    },
    {
        "content": "<p>scratch that, i don't know why it sometimes works</p>",
        "id": 485644370,
        "sender_full_name": "drew",
        "timestamp": 1733151844
    },
    {
        "content": "<p>things still work in the <code>Aoc/Runner.roc</code> file for me</p>",
        "id": 485644416,
        "sender_full_name": "drew",
        "timestamp": 1733151857
    },
    {
        "content": "<p>but no other nested files</p>",
        "id": 485644430,
        "sender_full_name": "drew",
        "timestamp": 1733151861
    },
    {
        "content": "<p>ah, wait, it also works on the <code>Aoc/Runner/*.roc</code> files. i am at a loss as to why</p>",
        "id": 485644538,
        "sender_full_name": "drew",
        "timestamp": 1733151893
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"463085\">@drew</span> if you send me a link to your repo I'll try to reproduce and fix this tomorrow:)</p>",
        "id": 485650385,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733153381
    },
    {
        "content": "<p><a href=\"https://github.com/drewolson/aoc-roc\">https://github.com/drewolson/aoc-roc</a></p>",
        "id": 485650585,
        "sender_full_name": "drew",
        "timestamp": 1733153424
    },
    {
        "content": "<p>okayyy, This is much harder than an unwrap. I think you'll find if you run <code>roc check</code> against the files that are causing the lsp to not work, they will also crash. I'd be extremely surprised if this is new as of my latest changes to the language server</p>",
        "id": 485654446,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733154427
    },
    {
        "content": "<p>Using the debug build I was able to get some more info. It's related to not have dependencies resolved by the time we expect them to be. The weird thing is that the dependencies are form List.roc which has no dependencies.</p>",
        "id": 485663619,
        "sender_full_name": "Eli Dowling",
        "timestamp": 1733156934
    },
    {
        "content": "<p>I let claude do all the work, it is getting impressively good at Roc <span aria-label=\"mind blown\" class=\"emoji emoji-1f92f\" role=\"img\" title=\"mind blown\">:mind_blown:</span> </p>\n<p>Literally the only things I had to fix:</p>\n<ul>\n<li><code>Str.split</code> to <code>Str.splitOn</code></li>\n<li>Add some tabs to a multiline string in the code</li>\n</ul>\n<p><a href=\"/user_uploads/22008/14dbfYRoUr1pcZARXJfhyGk0/claude.roc\">claude-solution.roc</a><br>\n<a href=\"/user_uploads/22008/G_-SQ0oAO7wa5vPjs9Hinv15/prompt.txt\">prompt.txt</a></p>\n<p>For the prompt I just gave it three examples from AoC last year and a list of commonly used Roc functions.</p>",
        "id": 485916685,
        "sender_full_name": "Anton",
        "timestamp": 1733248639
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/channel/358903-advent-of-code/topic/2024.20Day.201/near/485916685\">said</a>:</p>\n<blockquote>\n<p>I let claude do all the work, it is getting impressively good at Roc :m</p>\n</blockquote>\n<p>The way you pass in all the function signatures in the context reminds me of that <a href=\"https://austinhenley.com/blog/mirrorlang.html\">Mirror</a> language that was doing the rounds on hackernews a couple weeks ago. Pretty cool it got so close.</p>",
        "id": 485932263,
        "sender_full_name": "Ryan Barth",
        "timestamp": 1733253378
    },
    {
        "content": "<p><a href=\"https://github.com/alsm/aoc-roc/blob/master/2024/01.roc\">https://github.com/alsm/aoc-roc/blob/master/2024/01.roc</a><br>\nLiterally the first thing I've written in roc so if anyone has any time to look at it and give any hints on things I could improve or should do differently I'd appreciate it, but either way happy just to make it work :D</p>",
        "id": 485953706,
        "sender_full_name": "Al S-M",
        "timestamp": 1733260155
    },
    {
        "content": "<blockquote>\n<p>... reminds me of that <a href=\"https://austinhenley.com/blog/mirrorlang.html\">Mirror</a> language ...</p>\n</blockquote>\n<p>Interesting!</p>",
        "id": 486055990,
        "sender_full_name": "Anton",
        "timestamp": 1733307211
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"568779\">Al S-M</span> <a href=\"#narrow/channel/358903-advent-of-code/topic/2024.20Day.201/near/485953706\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/alsm/aoc-roc/blob/master/2024/01.roc\">https://github.com/alsm/aoc-roc/blob/master/2024/01.roc</a><br>\nLiterally the first thing I've written in roc so if anyone has any time to look at it and give any hints on things I could improve or should do differently I'd appreciate it, but either way happy just to make it work :D</p>\n</blockquote>\n<p>Hi! I'll gladly do a quick review for you:<br>\nIIRC as a convenience, you can use <code>|&gt; List.map .first</code> instead of <code>|&gt; List.map (\\x -&gt; x.first)</code>. Kinda like how you can replace  <code>List.map2 left right (\\a, b -&gt; Num.absDiff a b)</code> with <code>List.map2 left right Num.absDiff</code></p>\n<p>To my taste, this line is getting quiet long, breaking it up would make it more readable<br>\n<code>Ok (Num.toStr (List.map nums (\\x -&gt; x.first * Result.withDefault (Dict.get similarity x.first) 0) |&gt; List.sum))</code></p>\n<p>If you've just began learning Roc, you shouldn't really worry about this, but and interesting thing about consider:</p>\n<div class=\"codehilite\" data-code-language=\"Elm\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nv\">nums</span>\n<span class=\"w\">        </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">map</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">\\</span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"nf\">.</span><span class=\"nv\">second</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Set</span><span class=\"nf\">.</span><span class=\"nv\">fromList</span>\n<span class=\"w\">        </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">Set</span><span class=\"nf\">.</span><span class=\"nv\">toList</span>\n<span class=\"w\">        </span><span class=\"nf\">|&gt;</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">map</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">\\</span><span class=\"nv\">x</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">List</span><span class=\"nf\">.</span><span class=\"nv\">countIf</span><span class=\"w\"> </span><span class=\"nv\">nums</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nf\">\\</span><span class=\"nv\">y</span><span class=\"w\"> </span><span class=\"nf\">-&gt;</span><span class=\"w\"> </span><span class=\"nv\">y</span><span class=\"nf\">.</span><span class=\"nv\">second</span><span class=\"w\"> </span><span class=\"nf\">==</span><span class=\"w\"> </span><span class=\"nv\">x</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>this snippet transforms the nums list a bunch of times. Now, I don't know what happens to the list under the hood, when you turn it into a set and back, so let's ignore that part. It's likely makes my advice on optimization irrelevant in this case, but in general, if you transform a list a bunch, it's a good idea to find a solution where you don't have to reuse the original  list later on. If you can do that, the reference count of the list will stay 1, so it can be mutated in place (we call it opportunistic mutation), instead of coppied. <br>\nIf you've used rust or a language with move semantics, that is the style the roc optimizer likes! But ofc, it can be a lot of hassle.<br>\nCongrats on your first Roc code! I didn't even know <code>Num.absDiff</code> was a thing <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 488087250,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1733920489
    },
    {
        "content": "<p>Separately:</p>\n<p>Here is my solution: <a href=\"https://github.com/HajagosNorbert/advent-of-code-2024/blob/a4b36172966dd519e107d3a395cb5cc6efdc41d5/Day1.roc\">https://github.com/HajagosNorbert/advent-of-code-2024/blob/a4b36172966dd519e107d3a395cb5cc6efdc41d5/Day1.roc</a></p>\n<p>Posting cuz part2 solution can be interesting. Using 1 Dict to store the left and right occurences in a tuple, then walking the dict to sum up the <code>key*value.0*value.1</code>.</p>",
        "id": 488088529,
        "sender_full_name": "Norbert Hajagos",
        "timestamp": 1733920871
    }
]