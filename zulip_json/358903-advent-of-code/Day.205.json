[
    {
        "content": "<p>My <a href=\"https://github.com/lukewilliamboswell/roc-things/blob/main/aoc-2022/day5.roc\">solution for day 5</a>. I've only completed Part 1 so far. It will be easy to do part 2 from here; but posting anyway for anyone who would like some ideas. I'll probably continue tomorrow evening. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 313931503,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1670236217
    },
    {
        "content": "<p>dang, i was hoping for some ideas to parse the input^^<br>\nI tried starting to implement the elm parser library, but it turns out making applicative parsers without currying is... not a thing i guess?</p>",
        "id": 313947364,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1670241674
    },
    {
        "content": "<p>i mean i can start with the <code>mapN</code> family of stuff. but i feel roc needs some new ideas for a nice parser. or I'm missing something and there already is one</p>",
        "id": 313947519,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1670241726
    },
    {
        "content": "<p>i completely forgot that that's what the binding syntax sugar is for^^ well i guess i'll try and build a small parser</p>",
        "id": 313958800,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1670245532
    },
    {
        "content": "<p><a href=\"https://github.com/shritesh/advent/blob/main/2022/05.roc\">Here's my day 5</a>. I really need to learn how to use the <code>Parser</code> module. Also,  <code>List.walkWithIndex</code> might be useful in the stdlib, similar to <code>Str.walkUtf8WithIndex </code> and <code>List.mapWithIndex</code>.</p>",
        "id": 313981391,
        "sender_full_name": "Shritesh Bhattarai",
        "timestamp": 1670249155
    },
    {
        "content": "<p>wait, there's a <code>Parser</code> module? I can't find it <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 313987173,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1670250638
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/tree/main/examples/parser\">There’s one in the examples dir</a></p>",
        "id": 313988544,
        "sender_full_name": "Shritesh Bhattarai",
        "timestamp": 1670251021
    },
    {
        "content": "<p>I'm working on adding support for packages, at which point that can become publishable as a standalone thing and you can import it from a URL alongside the platform</p>",
        "id": 313989591,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1670251315
    },
    {
        "content": "<p>i'm assuming the url resolving thing works only for platforms?<br>\nbut anyway, i'm trying to write my own small parser combinator as an exercise now, kinda stuck on the types <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> (see <a href=\"#narrow/stream/231634-beginners/topic/combining.20multiple.20error.20rows\">this topic</a> )</p>",
        "id": 313991365,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1670251855
    },
    {
        "content": "<p>at the moment, yes - because we don't actually have a concept of packages yet <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 313991517,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1670251899
    },
    {
        "content": "<p>I ran into some strange bugs with the digit parser on this puzzle. I played with it a while and got it working by slowly building up the parser each step at a time and running a unit test to check it works. I couldn't figure out what the issue was, it was giving me a parsing error like \"??????????\".</p>",
        "id": 314109134,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1670268620
    },
    {
        "content": "<p>I found a weird bug in my solution where I started getting duplicated crates out of nowhere. I ended up fixing it by recreating the target stack of crates with <code>List.walk to [] List.append</code>. <a href=\"https://github.com/hecrj/advent_of_code/blob/5c76d73f752c26ef3a54af649a3d03c9f460ab6c/2022/05-supply-stacks.roc#L69\">See the issue here</a>.</p>\n<p>Basically, I had to rewrite</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">newTo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">concat</span><span class=\"w\"> </span><span class=\"nx\">to</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">reverse</span><span class=\"w\"> </span><span class=\"nx\">cratesToMove</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>as</p>\n<div class=\"codehilite\" data-code-language=\"CoffeeScript\"><pre><span></span><code><span class=\"nv\">newTo</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">concat</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">walk</span><span class=\"w\"> </span><span class=\"nx\">to</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">append</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">List</span><span class=\"p\">.</span><span class=\"nx\">reverse</span><span class=\"w\"> </span><span class=\"nx\">cratesToMove</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which should be equivalent.</p>",
        "id": 314116723,
        "sender_full_name": "Héctor Ramón",
        "timestamp": 1670271407
    },
    {
        "content": "<p>I suspect there may be an issue in the internal implementation of <code>List</code>.</p>",
        "id": 314116775,
        "sender_full_name": "Héctor Ramón",
        "timestamp": 1670271433
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"487580\">@Gabriel Pickl</span> I'll try not to cheat on future puzzles. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> I took the lazy option here as I had burnt a bit of my evening time messing around with some other stuff. I've been enjoying learning about parsing with Roc.</p>",
        "id": 314131224,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1670276977
    },
    {
        "content": "<p>Went with the same approach <a href=\"https://github.com/mkaszas/aoc-2022/blob/main/Day5.roc#L8-L9\">in my solution</a>, maybe if we had <code>transpose</code> I would've given parsing the first part a go too <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span> <br>\nI'll have to try out <code>Parser</code> as well, maybe tomorrow!</p>",
        "id": 314132716,
        "sender_full_name": "Máté Kaszás",
        "timestamp": 1670277616
    },
    {
        "content": "<p>My day 5: <a href=\"https://gist.github.com/ayazhafiz/9d315104502007f471b33ab8731be807\">https://gist.github.com/ayazhafiz/9d315104502007f471b33ab8731be807</a>. Im impressed by everyone that was able to parse the header of this day's input!</p>",
        "id": 314349045,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1670370376
    },
    {
        "content": "<p><a href=\"https://gitea.peacememori.es/peacememories/adventofcode2022/src/branch/main/roc/day05.roc\">My day 5</a><br>\nIt got pretty ugly in the end because I was juggling compiler crashes by trying to rewrite code in different ways <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> but it's a parser I guess.</p>\n<p>It's also really slow, mainly because the parser recreates strings a lot because there's no <code>splitAt</code> or <code>substring</code> in <code>Str</code></p>",
        "id": 314351792,
        "sender_full_name": "Gabriel Pickl",
        "timestamp": 1670371738
    },
    {
        "content": "<p>Catching up!<br>\n<a href=\"https://github.com/lowderdev/advent-of-code/blob/main/2022/roc/day5/main.roc\">Day5</a></p>",
        "id": 314817785,
        "sender_full_name": "Logan Lowder",
        "timestamp": 1670559838
    }
]