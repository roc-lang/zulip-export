[
    {
        "content": "<p>I know it's a bit late in the peace for AoC, but if anyone still needs an Int parser or wants to give it a go... just thought I would share.</p>\n<div class=\"codehilite\" data-code-language=\"Elixir\"><pre><span></span><code><span class=\"n\">digit</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Parser</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">List</span><span class=\"w\"> </span><span class=\"nc\">U8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nc\">Nat</span><span class=\"w\"></span>\n<span class=\"n\">digit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">buildPrimitiveParser</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"ow\">when</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"s1\">'0'</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">dropFirst</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"s1\">'1'</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">dropFirst</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"s1\">'2'</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">dropFirst</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"s1\">'3'</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">dropFirst</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"s1\">'4'</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">dropFirst</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"s1\">'5'</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">dropFirst</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"s1\">'6'</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">dropFirst</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"s1\">'7'</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">dropFirst</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"s1\">'8'</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">dropFirst</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"s1\">'9'</span><span class=\"p\">,</span><span class=\"o\">..</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"ss\">val</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"ss\">input</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">dropFirst</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Err</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">ParsingFailure</span><span class=\"w\"> </span><span class=\"s2\">\"not a digit\"</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Parser</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nc\">List</span><span class=\"w\"> </span><span class=\"nc\">U8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nc\">I64</span><span class=\"w\"></span>\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"err\">\\</span><span class=\"n\">maybeDash</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"n\">digits</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">sign</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"ow\">when</span><span class=\"w\"> </span><span class=\"n\">maybeDash</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nc\">Ok</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nc\">Err</span><span class=\"w\"> </span><span class=\"bp\">_</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"nc\">List</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"w\"> </span><span class=\"n\">digits</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"err\">\\</span><span class=\"n\">sum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">sum</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">d</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nc\">Num</span><span class=\"o\">.</span><span class=\"n\">toI64</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"nc\">Num</span><span class=\"o\">.</span><span class=\"n\">mul</span><span class=\"w\"> </span><span class=\"n\">sign</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">keep</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">maybe</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">codeunit</span><span class=\"w\"> </span><span class=\"s1\">'-'</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|&gt;</span><span class=\"w\"> </span><span class=\"n\">keep</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">oneOrMore</span><span class=\"w\"> </span><span class=\"n\">digit</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 315996548,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1671098127
    },
    {
        "content": "<p>if you want to, I think you can write that pattern match as</p>\n<div class=\"codehilite\"><pre><span></span><code>when input is\n    [ c, .. ] if c &gt;= &#39;0&#39; &amp;&amp; c &lt;= &#39;9&#39; -&gt; Ok { val: c - &#39;0&#39;, input: List.dropFirst input }\n    _ -&gt; ...\n</code></pre></div>",
        "id": 315998090,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1671098535
    },
    {
        "content": "<p>Slight modification <code>Ok { val: Num.toNat (c - '0') ...</code> works like a charm.</p>",
        "id": 316005563,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1671100685
    }
]