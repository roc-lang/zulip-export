[
    {
        "content": "<p>Here's my solution, today was a lot of fun building a mini compiler. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> </p>\n<p><a href=\"https://github.com/lukewilliamboswell/aoc/blob/main/2024/07.roc\">https://github.com/lukewilliamboswell/aoc/blob/main/2024/07.roc</a></p>\n<div class=\"codehilite\"><pre><span></span><code>TIMING:\nREADING INPUT:  1ms\nSOLVING PART 1: 205ms\nSOLVING PART 2: 11225ms\n</code></pre></div>",
        "id": 486641315,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733553687
    },
    {
        "content": "<p>Also, loving this <code>snake_case</code> ... it's my first time using it.</p>",
        "id": 486641334,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733553718
    },
    {
        "content": "<p><a href=\"https://github.com/ostcar/aoc2024/blob/main/day07.roc\">https://github.com/ostcar/aoc2024/blob/main/day07.roc</a></p>\n<p>part1 in 59.307ms<br>\npart2 in 813.36ms</p>\n<p>Part 2 has an obvious performance problem. Can you spot it?</p>",
        "id": 486655379,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1733565979
    },
    {
        "content": "<p>Lol, my solution looks like overkill <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 486655497,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733566084
    },
    {
        "content": "<p>I like how much smaller and efficient your's is <span class=\"user-mention\" data-user-id=\"496321\">@Oskar Hahn</span></p>",
        "id": 486655526,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733566109
    },
    {
        "content": "<blockquote>\n<p>I know, this could be better</p>\n</blockquote>\n<p>Lol, don't look at my implementation, haha</p>",
        "id": 486655658,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1733566209
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/358903-advent-of-code/topic/2024.20Day.207/near/486655658\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>I know, this could be better</p>\n</blockquote>\n<p>Lol, don't look at my implementation, haha</p>\n</blockquote>\n<p>Ok, I had to fix this. But a Num.log10 would have been nice.</p>",
        "id": 486670151,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1733578294
    },
    {
        "content": "<p>Agreed that Num.log10 would have been nice: <a href=\"https://github.com/RobinCamarasa/Advent-of-code/blob/master/2024/day07/RobinCamarasa/main.roc\">https://github.com/RobinCamarasa/Advent-of-code/blob/master/2024/day07/RobinCamarasa/main.roc</a></p>",
        "id": 486671975,
        "sender_full_name": "Robin Camarasa",
        "timestamp": 1733579783
    },
    {
        "content": "<p>I also went for naive implementation xD</p>\n<p><a href=\"https://github.com/thenikso/advent-of-code-2024-roc/blob/main/07.roc\">https://github.com/thenikso/advent-of-code-2024-roc/blob/main/07.roc</a></p>\n<div class=\"codehilite\"><pre><span></span><code>Day 07 part 1: (Ok ...) [134ms]\nDay 07 part 2: (Ok ...) [13854ms]\n</code></pre></div>",
        "id": 486687835,
        "sender_full_name": "Nicola Peduzzi",
        "timestamp": 1733591760
    },
    {
        "content": "<p>I got the answer initially with the naive solution but a more optimal way to do it is to work backwards. Filter out which final operators are possible based on if the desired result <em>can</em> be a result of applying the last operand with said operator, then apply the inverse of that operator, pop the last operand, and see if that has a solution. Pretty clever imo, but I didn't come up with it.<br>\n<a href=\"https://github.com/mckahz/aoc/blob/main/2024/Day07.roc\">https://github.com/mckahz/aoc/blob/main/2024/Day07.roc</a></p>",
        "id": 486745410,
        "sender_full_name": "Fletch Canny",
        "timestamp": 1733643671
    },
    {
        "content": "<p>Part 2 really makes you wish you read the requirements a few times</p>",
        "id": 486791508,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733682080
    },
    {
        "content": "<p>I'm not proud at all of my solution's perf, but I think it is very readable ( I did have to do a slight tweak to make the perf for part 2 even reasonable)</p>",
        "id": 486797353,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733686870
    },
    {
        "content": "<p><a href=\"https://github.com/gamebox/aoc-2024/tree/main/day7\">https://github.com/gamebox/aoc-2024/tree/main/day7</a></p>",
        "id": 486797369,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733686896
    },
    {
        "content": "<p>I know I could take a few different approaches to bail out of checking different combinations earlier</p>",
        "id": 486797444,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1733686953
    },
    {
        "content": "<p>No trouble</p>\n<div class=\"codehilite\"><pre><span></span><code>SOLVING PART 1: 489ms\nSOLVING PART 2: 36166ms\n</code></pre></div>\n<p><a href=\"/user_uploads/22008/qguJFy6UcBkSR8qgLvkOTCgJ/main_claude.roc\">main_claude.roc</a><br>\n<a href=\"/user_uploads/22008/Fc5LQF6cLT8YaRszq3UNF_Lm/prompt-aoc-7-part2.txt\">prompt-aoc-7-part2.txt</a></p>",
        "id": 489002317,
        "sender_full_name": "Anton",
        "timestamp": 1734189244
    }
]