[
    {
        "content": "<p>Got <a href=\"https://github.com/AndydeCleyre/aoc-2022-roc/blob/master/04/main.roc\">my lousy day 4</a> up. It breaks <code>roc format</code>, so you know it's good.</p>",
        "id": 313774370,
        "sender_full_name": "Andy Kluger",
        "timestamp": 1670139568
    },
    {
        "content": "<p>My <a href=\"https://github.com/lukewilliamboswell/roc-things/blob/main/aoc-2022/day4.roc\">day 4</a> solution. :D</p>",
        "id": 313796567,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1670154003
    },
    {
        "content": "<p>Hit a miscompilation(IIUC) bug trying out today's problem <a href=\"https://github.com/roc-lang/roc/issues/4677\">https://github.com/roc-lang/roc/issues/4677</a></p>",
        "id": 313825004,
        "sender_full_name": "Shritesh Bhattarai",
        "timestamp": 1670168556
    },
    {
        "content": "<p>It's been interesting to look at others' solutions, so I'll share <a href=\"https://github.com/WhileTruu/advent-of-code/blob/main/day-4.roc\">mine</a> as well ^^</p>",
        "id": 313831183,
        "sender_full_name": "Marten",
        "timestamp": 1670171803
    },
    {
        "content": "<p><a href=\"https://github.com/JesterXL/advent-of-code-2022/blob/main/day4/main.roc\">Day 4</a>, I completely missed that overlaps count as intersects in Part 2</p>",
        "id": 313831625,
        "sender_full_name": "JesterXL",
        "timestamp": 1670172039
    },
    {
        "content": "<p>My <a href=\"https://github.com/raorao/advent_of_code_2022.roc/blob/main/4/main.roc\">solution</a>! my parsing logic is so messy, curious how others did it.</p>",
        "id": 313834591,
        "sender_full_name": "Srinivas Rao-Mouw",
        "timestamp": 1670173758
    },
    {
        "content": "<p>I think all of us were like \"Just give me a record with {start, end}, kthx\" haha</p>",
        "id": 313837497,
        "sender_full_name": "JesterXL",
        "timestamp": 1670175392
    },
    {
        "content": "<p><a href=\"https://github.com/shritesh/advent/blob/main/2022/04.roc\">My solution</a>. Today was a real doozy, not because it was a difficult problem but I kept on getting incorrect results and things kept on getting worse from there: even a simple <code>List.map</code> wasn't working as expected. I literally believed at one point that my machine was broken and spun up a Linux VM to repro. Turns out:</p>\n<ul>\n<li><code>dbg</code> should not be trusted at all: <a href=\"https://github.com/roc-lang/roc/issues/4677#issuecomment-1336486960\">https://github.com/roc-lang/roc/issues/4677#issuecomment-1336486960</a></li>\n<li><code>List.range</code> is broken: <a href=\"https://github.com/roc-lang/roc/issues/4196\">https://github.com/roc-lang/roc/issues/4196</a></li>\n</ul>",
        "id": 313847179,
        "sender_full_name": "Shritesh Bhattarai",
        "timestamp": 1670181327
    },
    {
        "content": "<p>Wow, smart and concise <span class=\"user-mention\" data-user-id=\"452038\">@Shritesh Bhattarai</span> ! <span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span> <br>\nHere's <a href=\"https://github.com/ghigt/advent-of-code/blob/main/2022/roc/day-04/part2.roc\">mine</a>, looking forward to the tuple feature!</p>",
        "id": 313848875,
        "sender_full_name": "Ghislain",
        "timestamp": 1670182525
    },
    {
        "content": "<p><a href=\"https://github.com/michaelglass/advent-roc/blob/main/day-4/main.roc\">here's mine </a></p>",
        "id": 313851683,
        "sender_full_name": "Michael Glass",
        "timestamp": 1670184545
    },
    {
        "content": "<p>ironically I think the most bugs people have run into with advent of code this year has been with a feature literally called \"debug\" <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 313851955,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1670184757
    },
    {
        "content": "<p>the one I hit the most is misplacing a comma and hitting a <a href=\"https://github.com/roc-lang/roc/blob/c1d3580b0f0ca953fdc9db3564b3f2219a48a9b8/crates/compiler/can/src/operator.rs#L180\">TODO for unimplemented tuples</a></p>",
        "id": 313852700,
        "sender_full_name": "Michael Glass",
        "timestamp": 1670185340
    },
    {
        "content": "<p><a href=\"https://github.com/TAGraves/adventofcode2022/blob/main/day4.roc\">Here's my messy solution</a>.</p>",
        "id": 313861912,
        "sender_full_name": "Tommy Graves",
        "timestamp": 1670193461
    },
    {
        "content": "<p>caught up to day 4 today! <a href=\"https://github.com/omnibs/aoc22/blob/main/day4p1.roc\">part 1</a> <a href=\"https://github.com/omnibs/aoc22/blob/main/day4p2.roc\">part 2</a></p>\n<ul>\n<li>joined the parser club!</li>\n<li>started using expect (so nice to be able to sprinkle tests anywhere!)</li>\n<li>struggled and gave up using the fake <code>T a b</code> tuples. i couldn't put them in type annotation like <code>line : Parser (List U8) (T Range Range)</code>. Roc would tell me \"Nothing is named <code>T</code> in this scope.\"</li>\n<li>stopped using JSON encoding to print intermediary results while i'm writing my solution, it was causing too many compiler panics</li>\n</ul>",
        "id": 313871196,
        "sender_full_name": "Juliano",
        "timestamp": 1670201645
    },
    {
        "content": "<p>I caught up too!<br>\nThis solution is the one I'm most proud of so far. <a href=\"https://github.com/lowderdev/advent-of-code/blob/main/2022/roc/day4/main.roc\">Day4</a></p>\n<p>This time I tried out writing just type annotations with no implementations like Richard mentioned in a talk I saw recently. Worked really nicely!</p>",
        "id": 313879400,
        "sender_full_name": "Logan Lowder",
        "timestamp": 1670208939
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"524658\">Juliano</span> <a href=\"#narrow/stream/358903-Advent-of-Code/topic/Day.204/near/313871196\">said</a>:</p>\n<blockquote>\n<ul>\n<li>struggled and gave up using the fake <code>T a b</code> tuples. i couldn't put them in type annotation like <code>line : Parser (List U8) (T Range Range)</code>. Roc would tell me \"Nothing is named <code>T</code> in this scope.\"</li>\n</ul>\n</blockquote>\n<p>I think <code>line : Parser (List U8) [T Range Range]</code> should do the trick there, because <code>T</code> is just a tag. Or, if you want to create an alias like <code>Ranges : [T Range Range]</code>, you can do <code>Parser (List U8) Ranges</code></p>",
        "id": 314134165,
        "sender_full_name": "Máté Kaszás",
        "timestamp": 1670278267
    }
]