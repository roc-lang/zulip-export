[
    {
        "content": "<p>Today was surprisingly pleasant for me.<br>\nMy part 1 solution was still a bit messy but I was able to nicely generalize in part 2 and I'm really pleased with my solution.<br>\nAlso while I initially thought immutability would be really annoying for this,  the immutability as a core part of Roc surprisingly aided me with the solution in the end.</p>\n<p><a href=\"https://github.com/ScallyGames/aoc-2024/blob/main/2024/day15.roc#L74-L100\">https://github.com/ScallyGames/aoc-2024/blob/main/2024/day15.roc#L74-L100</a></p>",
        "id": 489079244,
        "sender_full_name": "Scally",
        "timestamp": 1734264600
    },
    {
        "content": "<p><a href=\"https://github.com/ostcar/aoc2024/blob/main/day15.roc\">https://github.com/ostcar/aoc2024/blob/main/day15.roc</a></p>\n<p>I am not a fan of my part2. In the end, it was a lot of try and error until the test pass</p>",
        "id": 489102432,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1734285347
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Part2</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>I thought I would be a good idea not to widen the boxes. Instead check, if left of each empty field is a box.</p>\n<p><span class=\"user-mention\" data-user-id=\"772522\">@Scally</span> Your solution seems much simpler. It was probably better to widen the box to <code>WideBoxLeft</code> and <code>WideBoxRight</code></p>\n</div></div>",
        "id": 489102813,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1734285697
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Reply for Part 2</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>Yeah, I was considering keeping size and doing some decimal grid position logic but that seemed really messy with how boxes could be aligned or unaligned</p>\n</div></div>",
        "id": 489114594,
        "sender_full_name": "Scally",
        "timestamp": 1734296616
    },
    {
        "content": "<p><a href=\"https://gist.github.com/PaulStanley/778a7f28141feb2d6ca96ed99dc76310\">https://gist.github.com/PaulStanley/778a7f28141feb2d6ca96ed99dc76310</a></p>\n<div class=\"codehilite\"><pre><span></span><code>Part One: ... [41 ms].\nPart Two: ... [64 ms]\n</code></pre></div>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Re Part 2</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>I just treated \"large\" crates as separate items. Pushing left and right requires no change in algorithm. Pushing up produces a nice recursive pattern: you can push the left side up if you can push the left side up and push the right side up, and vice versa. If I was doing this _right_ I would factor out the copy-pasted code for left and right properly. But I was exhausted because I'd made a simple and stupid error which it took me ages to find.</p>\n</div></div>",
        "id": 489721561,
        "sender_full_name": "Paul Stanley",
        "timestamp": 1734516453
    }
]