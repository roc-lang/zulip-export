[
    {
        "content": "<p><a href=\"https://github.com/ostcar/aoc2023/blob/main/days/day10.roc\">https://github.com/ostcar/aoc2023/blob/main/days/day10.roc</a></p>\n<p>This was messy. I misunderstood part2, run into some compiler bugs and stack overflows. I am not sure if my solution is over complicated, but it works.</p>",
        "id": 407075550,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1702219824
    },
    {
        "content": "<p><a href=\"https://github.com/FabHof/aoc-2023/blob/main/day10/main.roc\">Here is my solution</a>.</p>\n<p>Part 1 was quick, part 2 needed some thinking. Not sure if I overcomplicated things.</p>\n<p>I'm also pretty sure it will not work for every input. I do not handle the start 'S' correctly on part 2. But since it took me to much time to solve it, I have no desire to fix this.</p>",
        "id": 407082858,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1702224604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"496321\">@Oskar Hahn</span>  I think I need some time to understand your solution for p2, but it definetly looks interesting.</p>",
        "id": 407083279,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1702224889
    },
    {
        "content": "<p>I tried to clean up my solution a bit. I hope it is understandable now.</p>\n<p>I also wrote an explanation for the solution of part 2. <a href=\"https://github.com/ostcar/aoc2023/blob/e7f6f7b42efdb02eecb3c6f605ec7a6ecaeab5d8/days/day10.roc#L222-L267\">SPOILER!</a></p>",
        "id": 407093732,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1702232032
    },
    {
        "content": "<p>Nice explanation, thank you.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Solution discussion</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>I was also thinking about doing some kind of flood fill, but I did not think it would work. I was not smart enough to just scale the map. So I did use the even/odd algorithm, which was a bit of a mess with the corner pieces for me, but It worked for my input.</p>\n</div></div>",
        "id": 407182073,
        "sender_full_name": "Fabian Schmalzried",
        "timestamp": 1702280533
    },
    {
        "content": "<p>My day 10: <a href=\"https://github.com/timotree3/aoc2023/blob/main/roc/day10.roc\">https://github.com/timotree3/aoc2023/blob/main/roc/day10.roc</a></p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Solution discussion</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>I also counted on the number of pipes in a given row to determine whether a cell was inside or outside. I like the comparatively concise way I did the path walking using a couple of helper functions, <code>findFirstOk</code> and <code>iterTry</code>. After reading <span class=\"user-mention silent\" data-user-id=\"559412\">Fabian Schmalzried</span>'s I realized I could shorten my logic for inside/outside by using parity instead of an explicit state machine. </p>\n</div></div>",
        "id": 407217239,
        "sender_full_name": "timotree",
        "timestamp": 1702292792
    },
    {
        "content": "<p>Solved day 10 <a href=\"https://github.com/lindskogen/advent-of-code-2023/blob/main/day10/main.roc\">https://github.com/lindskogen/advent-of-code-2023/blob/main/day10/main.roc</a></p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Day 18</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>Since I learned about the shoelace formula I went back and managed to solve this as well!</p>\n</div></div>",
        "id": 408693191,
        "sender_full_name": "Johan Lindskogen",
        "timestamp": 1702937432
    }
]