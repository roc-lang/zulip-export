[
    {
        "content": "<p>I found the thing causing the error in alias analysis in my JWT PR. Calling <code>Task.mapErr</code> twice seems to be the issue.</p>\n<h2>ok</h2>\n<div class=\"codehilite\"><pre><span></span><code>verify = \\{algorithm, secret, token} -&gt;\n    PlatformTasks.jwtVerify {algo: algoToU8 algorithm, secret, token}\n    |&gt; Task.mapErr \\err -&gt; JwtErr (mapErrFromHost err)\n</code></pre></div>\n<h2>error in alias analysis</h2>\n<div class=\"codehilite\"><pre><span></span><code>verify = \\{algorithm, secret, token} -&gt;\n    PlatformTasks.jwtVerify {algo: algoToU8 algorithm, secret, token}\n    |&gt; Task.mapErr mapErrFromHost\n    |&gt; Task.mapErr JwtErr\n</code></pre></div>",
        "id": 466423506,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725070711
    },
    {
        "content": "<p>...huh</p>",
        "id": 466423520,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1725070737
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at crates/compiler/gen_llvm/src/llvm/build.rs:5770:19:\nError in alias analysis: error in module ModName(&quot;UserApp&quot;), function definition FuncName(&quot;%\\x00\\x00\\x00\\x0c\\x00\\x00\\x00w\\x08\\xf21\\x00na\\xb2&quot;):\nexpected type &#39;\nunion { ((heap_cell,), ()), (union { (), (), (), (), (), (), (), (), ((heap_cell,),) },), ((heap_cell,),) }&#39;,\nfound type &#39;\nunion { (), (), (), (), (), (), (), (), ((heap_cell,),) }&#39;\n</code></pre></div>",
        "id": 466423534,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725070754
    },
    {
        "content": "<p>I mean this stuff is black magic to me... but I thought it may be a clue that helps.</p>",
        "id": 466423550,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725070791
    },
    {
        "content": "<p>I'm just stoked because I think I can finish cleaning this up and land it!</p>",
        "id": 466423611,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725070821
    },
    {
        "content": "<p>Very much a guess, but it seems related to the wrapping and unwrapping of lambdas, which I guess is unsurprising: <a href=\"https://github.com/roc-lang/roc/blob/f6c969af293270feb90dfdc8fcc3ffbe18f9b268/crates/compiler/builtins/roc/Task.roc#L179\">https://github.com/roc-lang/roc/blob/f6c969af293270feb90dfdc8fcc3ffbe18f9b268/crates/compiler/builtins/roc/Task.roc#L179</a></p>",
        "id": 466423641,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1725070847
    },
    {
        "content": "<p>That's the impl of <code>mapErr</code></p>",
        "id": 466423650,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1725070856
    },
    {
        "content": "<p>The same kind of code is usually to blame, in my experience</p>",
        "id": 466423702,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1725070885
    },
    {
        "content": "<p>Found another example...</p>\n<h2>works</h2>\n<div class=\"codehilite\"><pre><span></span><code>    # Test HS383 algorithm\n    {\n        secret: &quot;shhh_very_secret&quot;,\n        algorithm: Hs384,\n        token: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.joReqPNNkWQ8zQCW3UQnhc_5NMrSZEOQYpk6sDS6Y-o&quot;,\n    }\n        |&gt; Jwt.verify\n        |&gt; Task.await assertClaims\n        |&gt; Task.mapErr! \\err -&gt; Hs384TestErr err\n</code></pre></div>\n<h2>error in alias analysis</h2>\n<div class=\"codehilite\"><pre><span></span><code># Test HS383 algorithm\n    {\n        secret: &quot;shhh_very_secret&quot;,\n        algorithm: Hs384,\n        token: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.joReqPNNkWQ8zQCW3UQnhc_5NMrSZEOQYpk6sDS6Y-o&quot;,\n    }\n        |&gt; Jwt.verify\n        |&gt; Task.await assertClaims\n        |&gt; Task.mapErr! Hs384TestErr\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>Error in alias analysis: error in module ModName(&quot;UserApp&quot;), function definition FuncName(&quot;\\x11\\x00\\x00\\x00\\&quot;\\x00\\x00\\x00\\xc53#(\\xb1\\xc0\\xf1\\x04&quot;):\nexpected type\n&#39;union { ((heap_cell,), ()), (union { (), (union { (), (), (), (), (), (), (), (), ((heap_cell,),) },), () },), (union { (), (union { (), (), (), (), (), (), (), (), ((heap_cell,),) },), () },), ((heap_cell,),) }&#39;,\nfound type\n&#39;union { (union { (), (union { (), (), (), (), (), (), (), (), ((heap_cell,),) },), () },), (union { (), (union { (), (), (), (), (), (), (), (), ((heap_cell,),) },), () },), ((heap_cell,),) }&#39;\n</code></pre></div>",
        "id": 466424412,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725071597
    },
    {
        "content": "<p>I wonder if any of these work arounds could fix the sqlite pr</p>",
        "id": 466481330,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1725090369
    },
    {
        "content": "<p>I had the same thought. I was going to have a look tomorrow <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 466481475,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725090466
    }
]