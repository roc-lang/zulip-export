[
    {
        "content": "<p>Just was listening to some LLVM terrible compilation time issues:</p>\n<p>In this example, someone made a tuple with 2000 elements (all u8). Took 3 seconds to compile.<br>\nThey then made a tuple with 5000 elements.... it took 2 minutes to compile.</p>\n<p>This is for like 7 lines of code that just creates a zeroed tuple and then sets a few values in it.</p>",
        "id": 436567439,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1714595261
    },
    {
        "content": "<p>The reason was that the generated llvm ir did something like:</p>\n<div class=\"codehilite\"><pre><span></span><code>%val = load [2000 x u8] %mem\n</code></pre></div>\n<p>And in the 5000 case, just swap out the number with <code>5000</code>.</p>\n<p>Why does this explode llvm: ssa values in llvm are meant to be passed in registers</p>",
        "id": 436567800,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1714595421
    },
    {
        "content": "<p>So this was asking llvm to simply load the value into the 2000 registers it has lying around.</p>",
        "id": 436567855,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1714595451
    },
    {
        "content": "<p>Or 5000 in the worse case.</p>",
        "id": 436567874,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1714595463
    },
    {
        "content": "<p>Fundamental comment/lesson: llvm ssa values are meant to fit in roughly 2 or 3 registers. Anything else should never be an ssa value.</p>",
        "id": 436567937,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1714595510
    },
    {
        "content": "<p>llvm is not built for that and will explode.</p>",
        "id": 436567998,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1714595528
    },
    {
        "content": "<p>Just a general reminder of things we should make sure to avoid in our llvm ir.</p>",
        "id": 436568393,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1714595725
    }
]