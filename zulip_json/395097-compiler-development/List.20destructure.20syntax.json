[
    {
        "content": "<p>Hi there. Love the progress on the new compiler <span aria-label=\"ok\" class=\"emoji emoji-1f44c\" role=\"img\" title=\"ok\">:ok:</span><br>\nI decided to check it on some old code. After a couple of modifications to modernize it, I reached the following snippet (reduced from a larger file):</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">last</span><span class=\"o\">]</span>\n\n<span class=\"n\">last</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">l</span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"n\">match</span><span class=\"w\"> </span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">[]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"no\">Err</span><span class=\"p\">(</span><span class=\"no\">EmptyList</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"o\">[..</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"no\">Ok</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>I'm wondering if the syntax is correct but I managed to craft an example that crashes the compiler <span aria-label=\"stuck out tongue closed eyes\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue closed eyes\">:stuck_out_tongue_closed_eyes:</span></p>\n<div class=\"codehilite\"><pre><span></span><code>[1]    89899 segmentation fault  ./zig-out/bin/roc check main.roc\n</code></pre></div>",
        "id": 527970645,
        "sender_full_name": "JRI98",
        "timestamp": 1752097293
    },
    {
        "content": "<p>Match uses <code>=&gt;</code> now.</p>\n<p>Shouldn't segfault though <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 527971151,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752097536
    },
    {
        "content": "<p>Still segfaults with <code>=&gt;</code> but what I was looking for was the right syntax. Thank you</p>",
        "id": 527971485,
        "sender_full_name": "JRI98",
        "timestamp": 1752097756
    },
    {
        "content": "<p>In fact I could have just looked through the new snapshots (which are great btw). But at least the segfault gets reported</p>",
        "id": 527971555,
        "sender_full_name": "JRI98",
        "timestamp": 1752097791
    },
    {
        "content": "<p>Hmmm don't know if it might help with debugging, but if I invert the order of the branches it works:</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">last</span><span class=\"o\">]</span>\n\n<span class=\"n\">last</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">l</span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"n\">match</span><span class=\"w\"> </span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">[..</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Ok</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"o\">[]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Err</span><span class=\"p\">(</span><span class=\"no\">EmptyList</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 527972156,
        "sender_full_name": "JRI98",
        "timestamp": 1752098154
    },
    {
        "content": "<p>This works too:</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">last</span><span class=\"o\">]</span>\n\n<span class=\"n\">last</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">l</span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"n\">match</span><span class=\"w\"> </span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Err</span><span class=\"p\">(</span><span class=\"no\">EmptyList</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"o\">[..</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Ok</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>Seems to happen when an empty list is the first branch.</p>",
        "id": 527972266,
        "sender_full_name": "JRI98",
        "timestamp": 1752098225
    },
    {
        "content": "<p>That's a cool bug.</p>",
        "id": 527972410,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752098312
    },
    {
        "content": "<p>thanks for reporting this! I'm working on a fix.</p>",
        "id": 527974492,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1752099568
    },
    {
        "content": "<p>fix: <a href=\"https://github.com/roc-lang/roc/pull/7986\">https://github.com/roc-lang/roc/pull/7986</a></p>",
        "id": 527976551,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1752101148
    },
    {
        "content": "<p>Actually it doesn't seem to be fixed <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span><br>\n(leaving the example here again)</p>\n<div class=\"codehilite\" data-code-language=\"Ruby\"><pre><span></span><code><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">last</span><span class=\"o\">]</span>\n\n<span class=\"n\">last</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">l</span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"n\">match</span><span class=\"w\"> </span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">[]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Err</span><span class=\"p\">(</span><span class=\"no\">EmptyList</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"o\">[..</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"no\">Ok</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 527978619,
        "sender_full_name": "JRI98",
        "timestamp": 1752102854
    },
    {
        "content": "<p>It looks related to nested patterns specifically</p>",
        "id": 527980143,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752104023
    },
    {
        "content": "<p>It's fine with either just a lambda or just a match, but both tother and we are re-using the same scratch for patterns (my current theory)</p>",
        "id": 527980187,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752104054
    },
    {
        "content": "<p>This is why we need to clean up all the low hanging fuzzer crashes. Then it can reach more meaningful failures like this</p>",
        "id": 527980509,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1752104325
    },
    {
        "content": "<p>Apparently our segfault is in the type-checker ... specifically with empty lists</p>",
        "id": 527980950,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752104692
    },
    {
        "content": "<p>Ok, I've got a fix... I'll push it up soon.</p>",
        "id": 527983658,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752106870
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7988\">https://github.com/roc-lang/roc/pull/7988</a></p>",
        "id": 527986682,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1752109573
    }
]