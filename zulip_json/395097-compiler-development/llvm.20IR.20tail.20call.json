[
    {
        "content": "<p>I compared the llvm IR for a simple program between Roc, Rust and Zig. We were using <code>tail call</code> frequently, whereas the Zig and Rust versions never used it (all were compiled unoptimized). I'm investigating a possible llvm bug and I would like to try emitting regular llvm IR <code>call</code>s. Anybody know how I can do that?</p>\n<p>I've tried changing <code>call.set_tail_call(true);</code> to <code>false</code> in <a href=\"http://refcounting.rs\">refcounting.rs</a> but that did not reduce the number of tail calls for my program.</p>",
        "id": 424437991,
        "sender_full_name": "Anton",
        "timestamp": 1709407046
    },
    {
        "content": "<p>I think it would be in the actual ir emission.</p>",
        "id": 424439457,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709408065
    },
    {
        "content": "<p>I think we set it too much.</p>",
        "id": 424439484,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709408091
    },
    {
        "content": "<p>no LLVM just infers those <code>tail</code> annotations. they almost never turn into actual tail calls</p>",
        "id": 424452634,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1709420277
    },
    {
        "content": "<p>Oh. Inferred, not explicit. Ok.</p>",
        "id": 424454587,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1709422347
    },
    {
        "content": "<p>Replacing <code>tail call</code>s with <code>call</code>s fixed the issue :)</p>\n<p>From my understanding the call to <code>@\"#UserApp_diffSelf...</code> should not be marked as a tail call right?</p>\n<div class=\"codehilite\" data-code-language=\"LLVM\"><pre><span></span><code><span class=\"k\">define</span><span class=\"w\"> </span><span class=\"k\">internal</span><span class=\"w\"> </span><span class=\"k\">fastcc</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nv\">%str.RocStr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"vg\">@\"#UserApp_main_f03bf86f79d121cbfd774dec4a65912e99f5f17c33852bbc45e81916e62b53b\"</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"nv\">!dbg</span><span class=\"w\"> </span><span class=\"nv nv-Anonymous\">!52</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"nl\">entry:</span>\n<span class=\"w\">  </span><span class=\"nv\">%const_str_store3</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"k\">alloca</span><span class=\"w\"> </span><span class=\"nv\">%str.RocStr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">align</span><span class=\"w\"> </span><span class=\"m\">8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">!dbg</span><span class=\"w\"> </span><span class=\"nv nv-Anonymous\">!53</span>\n<span class=\"w\">  </span><span class=\"nv\">%const_str_store</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"k\">alloca</span><span class=\"w\"> </span><span class=\"nv\">%str.RocStr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">align</span><span class=\"w\"> </span><span class=\"m\">8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">!dbg</span><span class=\"w\"> </span><span class=\"nv nv-Anonymous\">!53</span>\n<span class=\"w\">  </span><span class=\"nv\">%call</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"k\">tail</span><span class=\"w\"> </span><span class=\"k\">call</span><span class=\"w\"> </span><span class=\"k\">fastcc</span><span class=\"w\"> </span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"vg\">@\"#UserApp_diffSelf_beb22fad19423347b2aa99b33212e862ded3f83df5d6238acb1a6a9ade3e\"</span><span class=\"p\">(</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"nv\">!dbg</span><span class=\"w\"> </span><span class=\"nv nv-Anonymous\">!53</span>\n<span class=\"w\">  </span><span class=\"nv\">%call1</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"k\">tail</span><span class=\"w\"> </span><span class=\"k\">call</span><span class=\"w\"> </span><span class=\"k\">fastcc</span><span class=\"w\"> </span><span class=\"kt\">i1</span><span class=\"w\"> </span><span class=\"vg\">@Bool_structuralEq_c610e85212d0697cb161d4ba431ba63f273feee7dcb7927c9ff5d74ae6cbfa3</span><span class=\"p\">(</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"nv\">%call</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"nv\">!dbg</span><span class=\"w\"> </span><span class=\"nv nv-Anonymous\">!53</span>\n<span class=\"w\">  </span><span class=\"k\">br</span><span class=\"w\"> </span><span class=\"kt\">i1</span><span class=\"w\"> </span><span class=\"nv\">%call1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">label</span><span class=\"w\"> </span><span class=\"nv\">%then_block</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">label</span><span class=\"w\"> </span><span class=\"nv\">%else_block</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">!dbg</span><span class=\"w\"> </span><span class=\"nv nv-Anonymous\">!53</span>\n</code></pre></div>",
        "id": 424905524,
        "sender_full_name": "Anton",
        "timestamp": 1709655203
    },
    {
        "content": "<p>it should be harmless? but yeah it's not even in tail position so there is nothing the <code>tail</code> attribute can do</p>",
        "id": 424934870,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1709664251
    },
    {
        "content": "<blockquote>\n<p>it should be harmless?</p>\n</blockquote>\n<p>Uhu, yeah it should be, but it was not due to this llvm bug <a href=\"https://github.com/llvm/llvm-project/issues/70207\">https://github.com/llvm/llvm-project/issues/70207</a></p>",
        "id": 425039208,
        "sender_full_name": "Anton",
        "timestamp": 1709716994
    },
    {
        "content": "<p>ah, cool!</p>",
        "id": 425039504,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1709717095
    }
]