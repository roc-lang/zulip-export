[
    {
        "content": "<p>There's a comment in RustGlue.roc:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"c1\"># These types (read: roc builtins) don't need to be declared in Rust.</span>\n<span class=\"c1\"># TODO: Eventually we want to generate roc_std. So these types will need to be emitted.</span>\n</code></pre></div>\n<p>Currently Roc glue does output the Roc standard library on generation. This seems like a fine solution. Is different behavior desired (e.g: only generating the parts of the standard library that the platform will need), or is this a vestigial TODO?</p>",
        "id": 472477279,
        "sender_full_name": "Sven van Caem",
        "timestamp": 1727179529
    },
    {
        "content": "<p>I think it's fine to generate all of it. <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 472484883,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1727181827
    }
]