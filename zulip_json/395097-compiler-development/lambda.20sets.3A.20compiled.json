[
    {
        "content": "<p>Alright I have a present for you all<br>\nI built a compiler that properly compiles lambda sets. The key insight is making sure to solve the type of lambda captures, transitively</p>\n<p><a href=\"https://ayazhafiz.com/plts/playground/cor/lss/?state=N4IglgdgDgrgLiAXCAxAAgBZzlAzogegIHMw4MYAjAOgGMB7AWwICd7aBaAGwEMJjW7AmFy4YAU1wEArABYAbLIA6EAPJQ0PNIjQBtFWkNoAynAAm9eABlI4k3BZoAFMAC%2BaDgD406zQEoAGgMjUzNIGwg7J1NHLx8NHkDgwwARekjNIIgAXRUVABUeXABrNHpS8RZHeg0dJ10fUvKAtABRKrRKx2yPbxq-XrKoPIhcMGI0MVpacXEzbTLSuMKSxbQAKg2VLnE4SZhp2fmAXjQlJXLB87h6ADlxAA89uJv7p%2BdVJuK-AG4fkbGEwAZjwwFwFl1BitSptIettrs0CCwWhTucunFrndHs9vK8cc52o4ur9-hAVIDNAB3UF7HTQxYARk6HRqgyc5WZyyKXwATCzqlABtzVuV%2BZCagi9jwaWRUWclEC2IwAEqSGBcXEKyLvLzJBUMCBwSASQZKphqsSa5znFjq616iBGZ1oHZ7SCRRynKkYcROu1W924fUuowAH0aaAAboMdXsoyHQ2gI0TOmbQeDxInDH6zNm0JB8x7KmhDcaIBI-Co-iMKeMytZbAsYlCeWg3BsPhp1lWIG6G3AInY0UpcOysW8taFLIOm2OnOcHoN8e8nJ80A8-Fua%2BTRvXwk36W2W5s193e-2DxkRyup%2BYr1FzmOXtjV%2BvcNuyXWJoxQU6j6sHanr4PZSmgv6QKi%2BoyrSzgzkOZwgAA6hgPBwAA5GOACeliOECYAsLgewQDwjDiAA-EoIC9kmNpKEucQwXKTgPjRtFGAuioEURtykXYjGynsHKNhkVEoWhmFoDhMCOLwRFoCRZGUdR%2Ba0ZxWGDExQmsap7GGJxclwLxZGDPBTZOAAfkRLAAPqGrQaGIQAEuIXBcPQiFItxRl8Z5VGukUPkmVRACEVFbhF1ZfhALAwE6EEQDZqEQGYOxeio6CGAAejluV5Tl%2Br9mypwJXRDHeGkGSbgWu6ZS6BVOkY-bJalw4KmymJKGAVxKFqPp%2BkMBbBhAdXOvlWX5hGoQPkigwtTszhAs4VkOHZ6QOXsVFEWE5IgMtZD0GOYARctPBmPM3WMgM0T3k6cBsaGU3mGZGRjktcTzVES1uNdFlnRdaBXc407wJMaD3ZNaCVXY5VQ%2BkMPg-qub6oWjWGJ9g0AAxtEaLBYQACvQkBwFFIABCAlA8LQxS5rgSC6KAlPU7mSDgCwZMgOIjBkKzUAsMTICuAEjNUzTKWs%2BIUY8FwHNczzyB8wLrjZK4QA\">See this example</a> that solves a long-standing lambda set bug and enables effect interpreters in my compiler<br>\nThe issue it solves is <a href=\"https://github.com/roc-lang/roc/issues/5464\">https://github.com/roc-lang/roc/issues/5464</a><br>\nIf you want to study the source code, which is quite small but many passes, it is here <a href=\"https://github.com/ayazhafiz/cor/tree/base/experiments/lss\">https://github.com/ayazhafiz/cor/tree/base/experiments/lss</a></p>\n<p>This is a proper monomorphizing compiler. I don't emit machine code or anything like that but the low-level IR pass is first-order and is trivial to compile to C or asm</p>",
        "id": 462455100,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1723690116
    },
    {
        "content": "<p>Holy shit</p>",
        "id": 462455350,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723690262
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461444\">Sam Mohr</span> <a href=\"#narrow/stream/395097-compiler-development/topic/lambda.20sets.3A.20compiled/near/462455350\">said</a>:</p>\n<blockquote>\n<p>Holy shit</p>\n</blockquote>\n<p>Well said</p>",
        "id": 462455368,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723690277
    },
    {
        "content": "<p>Wait, so we don't need type erasure, do we??</p>",
        "id": 462455369,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723690278
    },
    {
        "content": "<p>If that's the case, I'd be happy to help with the translation of this work to the Roc compiler! Super exciting</p>",
        "id": 462455750,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723690529
    },
    {
        "content": "<p>Likewise, if there is anything we need on the platform side, like updating Brendan's POC I'm happy to help too.</p>",
        "id": 462457469,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723691540
    },
    {
        "content": "<p>omg omg omg</p>",
        "id": 462539317,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1723724577
    },
    {
        "content": "<p>THIS IS THE BEST NEWS!!!!!!!</p>",
        "id": 462539368,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1723724594
    },
    {
        "content": "<p><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span><span aria-label=\"star struck\" class=\"emoji emoji-1f929\" role=\"img\" title=\"star struck\">:star_struck:</span></p>",
        "id": 462539958,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1723724672
    },
    {
        "content": "<p>I can't wait for when this lands in Roc! Will unlock so much stuff!!!</p>",
        "id": 462648531,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723759149
    },
    {
        "content": "<p>I can't wait for true async effect interpreters</p>",
        "id": 462648571,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723759170
    },
    {
        "content": "<p>Also should unblocks some random complex  code like my sqlite improvements for basic-webserver and the better version of encode and decode.</p>",
        "id": 462648692,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723759222
    },
    {
        "content": "<p>There's a nice long list of really awesome things this should enable. I'm so excited to hear this news. Thank you Ayaz for sharing <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 462656668,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723763548
    },
    {
        "content": "<p>I've also partially implemented type erasure, as needed for Map2 - <a href=\"https://ayazhafiz.com/plts/playground/cor/lss/?state=N4IglgdgDgrgLiAXCAsgQygJgARu47AbQB0Jtt0tthTzyAzAewCcBjAUwH00DgBfbAFoAfNgCizNAGd2AEwA0tOkzZcARrwEjxkmQqXkAthkwEJ0uUNHm9V3IrLY%2BpALqlSUsAHNsamGAAbWU5jLAI8bTU7AAoI0SjtVgBKO0ocVlIA9jhffyCQk2wAXmxiYjjS4gTRMvorJTTqA2wVDm4CMuY7AD92XXZ7Ztb1DuIu7V7%2B3wc6bFDTSoqy6pbsaO6YCD6LXBT1ze2ZXySZp1IAbnP3CE8fdgA3NACCsIpCirRM7OwHp5ecEplQz1RwAdwAFuwyMCwFIlAAfN5UQwARhBsyyOTwJVRADphtxqAJIM1Mb5inMUfiWG0ovxsCTHEYqfNcL4lFDZBcrhBSMxNnM0JA0UVSd9sdgUQAGBm8pnYMlRQEgVhoOBwkCysU5OqA4gADzsZQAnj0pHBmJxWIwIKqcuswHBGFJsPqUsRNR7sKbGRjvqEoH0KX5AsFWXgonVfXRfs9WQG%2BtyQPIQGo0KwANacqRIQigNOZzlIEABNCGNSyMs2xjJkDsQyO4tQZiQBB8eT59NZiCyYux2v1xvIZutkB8Fx8IA\">Map2 example here</a></p>",
        "id": 463089203,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1723951431
    },
    {
        "content": "<p>quick note - I'm gonna take on the implementation of this!</p>",
        "id": 471844576,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1726871585
    },
    {
        "content": "<p>Infinitely excited <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 471860682,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1726881946
    },
    {
        "content": "<p>Letâ€™s gooo</p>",
        "id": 471870827,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1726887417
    },
    {
        "content": "<p>I was going to implement part of this in the Roc codebase the past couple days but I figured it would probably be a better use of my time to describe the implementation in significant detail, so that it can be discussed and hopefully easy for anyone to contribute to.</p>\n<p>Here's a doc with the compilation process in significant detail - it's the same code as I shared before, but this time well-annotated (<a href=\"https://github.com/roc-lang/rfcs/pull/5\">PR</a>, <a href=\"https://github.com/roc-lang/rfcs/blob/ayaz/compile-with-lambda-sets/0102-compiling-lambda-sets.md\">doc</a>). Please let comments/critiques/let me know where I'm using confusing language/what could be more clear/etc, I will address them.</p>\n<p>I'll get to the remaining detailed sections on function lifting, function solving, and function specialization tonight and in the next few days.</p>\n<p>Of note, I still think that switching to have all recursive types required to be nominal would make much of this simpler and more efficient in the long term. See <a href=\"https://github.com/roc-lang/rfcs/blob/ayaz/compile-with-lambda-sets/0102-compiling-lambda-sets.md\">https://github.com/roc-lang/rfcs/blob/ayaz/compile-with-lambda-sets/0102-compiling-lambda-sets.md</a></p>",
        "id": 491131208,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1735431868
    }
]