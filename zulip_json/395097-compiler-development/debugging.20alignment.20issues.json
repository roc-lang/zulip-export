[
    {
        "content": "<p>How can I investigate possible alignment issues  when there is a segfault?<br>\nOnce I know, I can add that to our <a href=\"https://github.com/roc-lang/roc/blob/main/devtools/debug_tips.md\">debug_tips.md</a>.</p>",
        "id": 460073230,
        "sender_full_name": "Anton",
        "timestamp": 1723465927
    },
    {
        "content": "<p>Do you have a concrete example or error?</p>",
        "id": 461027488,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723483996
    },
    {
        "content": "<p>Yeah, <a href=\"https://github.com/roc-lang/examples/pull/192\">this is the one</a> I want to solve. We've had alignment issues before so I really wanted to write down a general procedure to investigate and fix them if that is possible.</p>",
        "id": 461028231,
        "sender_full_name": "Anton",
        "timestamp": 1723484301
    },
    {
        "content": "<p>I'm not sure of a good generic guide for those type of issues. They tend to be low level and finicky. Aside from saying run with valgrind/gdb/lldb and look at both llvm ir generation. I don't think I have any sort of generic advise.</p>",
        "id": 461980919,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723507819
    },
    {
        "content": "<p>Probably this needs some pretty specific compiler internal errors to figure out. In this case, it is almost certainly a very specific llvm ir issue.</p>",
        "id": 461980981,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723507857
    },
    {
        "content": "<p>Sightly offtopic, but you fuzzed the stdlib a fair bit didn't you? This issue looks like it's in List builtin. Or is this more codegen on the roc side?</p>",
        "id": 461982119,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723508699
    },
    {
        "content": "<p>Nvm, you already gave an idea</p>\n<blockquote>\n<p>I guess the issue is somehow with lambda closure capture inputs. I wonder if they are aligned correctly.</p>\n</blockquote>",
        "id": 461982306,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723508833
    },
    {
        "content": "<p>Somehow this is caused by a combination of:</p>\n<ol>\n<li>Closure captures</li>\n<li>Join point looping</li>\n<li>Using allocas to store data between loops instead of phi nodes</li>\n</ol>",
        "id": 461983659,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1723509822
    },
    {
        "content": "<p>I can confidently say I don't know what any of those mean... <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n<p>Hopefully someday I'll get there. <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 461988405,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723511349
    }
]