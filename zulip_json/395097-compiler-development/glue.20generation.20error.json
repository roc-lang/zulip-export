[
    {
        "content": "<p>Just poking at the issue Anton referenced in basic-cli with the debug build of the compiler.</p>\n<p>I'm wondering how do we make progress debugging this kind of issue? these things in Mono seems a bit like black magic to me sometimes.</p>\n<div class=\"codehilite\"><pre><span></span><code>$ ../roc/target/debug/roc glue glue.roc crates ./platform/main.roc\nthread &#39;main&#39; panicked at crates/glue/src/types.rs:2225:5:\nassertion `left == right` failed: glue_procs_by_layout for Layout { repr: Direct(Struct([InLayout(33), InLayout(37)])), semantic: None } was None, but the layout cache said its has_varying_stack_size was true\n  left: false\n right: true\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n</code></pre></div>",
        "id": 456065560,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1722645391
    },
    {
        "content": "<p>Thanks for helping out with that Luke :)<br>\nI remember <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> wrote that assert, so he may be able to provide the best guidance</p>",
        "id": 456128268,
        "sender_full_name": "Anton",
        "timestamp": 1722676974
    },
    {
        "content": "<p>it's been a couple years, but I <em>think</em> the idea here was that at this point we expect an earlier stage in the process to have added an entry in <code>glue_procs_by_layout</code> for this layout, but it wasn't there</p>",
        "id": 456138401,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1722683222
    },
    {
        "content": "<p>poking around a bit, it looks like this is specifically for the getter/setter stuff that Folkert and I were doing to try to fix passing closures to/from the host</p>",
        "id": 456138718,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1722683462
    },
    {
        "content": "<p>the current approach that we've been working on instead is to:</p>\n<ul>\n<li>require always boxing closures manually (using <code>Box</code>) if you want to send them across the host boundary</li>\n<li>remove that restriction for <code>Task</code>, which we can special-case because it's a builtin now</li>\n</ul>",
        "id": 456138943,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1722683644
    },
    {
        "content": "<p>that eliminates the need for the whole getter/setter thing, which had lots of problems</p>",
        "id": 456138953,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1722683657
    },
    {
        "content": "<p>Is there any chance that failing this assertion can lead to a segmentation fault down the line?</p>",
        "id": 456141074,
        "sender_full_name": "Anton",
        "timestamp": 1722685273
    },
    {
        "content": "<p>I think in this particular case it's more like you might get a <code>crash</code> in <code>RustGlue.roc</code> because you're trying to look something up but it's not there</p>",
        "id": 456141785,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1722685965
    },
    {
        "content": "<p>just linking to <a href=\"https://github.com/roc-lang/basic-cli/issues/242\">this issue</a></p>",
        "id": 462113929,
        "sender_full_name": "Anton",
        "timestamp": 1723555719
    }
]