[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span> 's comment on build-host PR <a href=\"https://github.com/roc-lang/roc/pull/6859#discussion_r1742366298\">https://github.com/roc-lang/roc/pull/6859#discussion_r1742366298</a></p>\n<blockquote>\n<p>Assuming that <code>run</code> still tries to run a program even if there are errors, that is probably not what we want to use here...</p>\n</blockquote>\n<p>For running <code>roc_cli</code> tests using <code>roc</code> what subcommand should we use? </p>\n<p>In the <a href=\"https://github.com/roc-lang/roc/issues/6637\">future roc cli workflow</a> I've been slowly trying to work towards, we don't have <code>run</code> or <code>dev</code> subcommands any longer. </p>\n<p>Richard provided more guidance in <a href=\"#narrow/stream/304641-ideas/topic/Roc.20cli.20workflow/near/451019171\">https://roc.zulipchat.com/#narrow/stream/304641-ideas/topic/Roc.20cli.20workflow/near/451019171</a></p>\n<blockquote>\n<p>I would like <code>roc</code> to always run even if there are errors - like <code>roc run</code> does today. However, I think today it should work like <code>roc dev</code> and only run if there are no errors.</p>\n</blockquote>\n<p>So should we for this PR;</p>\n<ol>\n<li>just use <code>roc dev</code> today and then in future when it is no longer available remove it </li>\n<li>ensure that <code>roc</code> without a subcommand behaves like <code>roc dev</code> and run the tests without any subcommand.</li>\n</ol>",
        "id": 467492272,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725446676
    },
    {
        "content": "<p>2 sounds good</p>",
        "id": 467493606,
        "sender_full_name": "Anton",
        "timestamp": 1725447002
    },
    {
        "content": "<blockquote>\n<p>This is why I think we should have the behavior work differently in the short term vs the long term. Until we get the \"run even though there are errors\" design working, I think we shouldn't even offer it as a subcommand or a feature flag. For now it should probably be an environment variable like <code>ROC_EXPERIMENTAL_DEFER_ERRORS=1</code> where the name conveys that this is something that's currently unreliable.</p>\n</blockquote>\n<blockquote>\n<p>Once it becomes reliable, I think we can just always enable it. Between editor integrations and having it actually work reliably, I don't think there should be any remaining reasons not to have it on all the time - and that design certainly results in the simplest CLI experience.</p>\n</blockquote>\n<p>We should also implement the <code>ROC_EXPERIMENTAL_DEFER_ERRORS</code> flag Richard has described here so we can just use <code>roc</code> without any subcommand and this shouldn't run if there are any errors.</p>",
        "id": 467512752,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725451667
    },
    {
        "content": "<p>I'm a little confused, this \"<code>roc</code> without any subcommand and this shouldn't run if there are any errors\" is already the current behavior no?</p>",
        "id": 467516727,
        "sender_full_name": "Anton",
        "timestamp": 1725452616
    },
    {
        "content": "<p>I haven't checked. I was just wanting to confirm the intended behaviour.</p>",
        "id": 467516944,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725452663
    },
    {
        "content": "<p>The tests currently use CMD_RUN on the branch, which may be why you commented. </p>\n<p>But I thought I translated from the old tests, so I just need to check it's doing the right thing.</p>",
        "id": 467517280,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1725452739
    },
    {
        "content": "<blockquote>\n<p>I translated from the old tests</p>\n</blockquote>\n<p>Yeah, I checked that too, they are indeed using run</p>",
        "id": 467519258,
        "sender_full_name": "Anton",
        "timestamp": 1725453174
    }
]