[
    {
        "content": "<p>For the first few months of development of the new Zig compiler, work was being done by very few people (sometimes literally just 1 person for a stretch of time), usually in very distinct, non-overlapping periods of time.  I sense that we are entering a new phase where we are having more contributors coming in regularly (<span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>) and they face some distinct problems - and those problems will affect the existing contributors as well:</p>\n<ol>\n<li>They don't know what needs to be done</li>\n<li>If they grok the code that is there, and can find something to do - they don't know what someone else is working on.</li>\n</ol>\n<p>I'd like to propose we introduce some lightweight way for improving both of these <em>issues</em>(pun intended).  Something like:</p>\n<ol>\n<li>We should sit down (maybe in the contrib. meetup tonight?) and lay down what needs to be done, being as expansive and forward-looking as possible.</li>\n<li>Existing contributors that are underway on ANYTHING with the Zig compiler (I mean Roc compiler written in Zig - maybe we should call it rocZ and the old one rocR?) make sure that work is in that list and marked as IN PROGRESS</li>\n</ol>\n<p>I really don't care about the format necessarily, but I think it would likely be out of band to Git since if I'm working on something I can't mark it as in progress unless I literally make a \"dibs\" PR.</p>",
        "id": 526199202,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751111725
    },
    {
        "content": "<blockquote>\n<p>(I mean Roc compiler written in Zig - maybe we should call it rocZ and the old one rocR?)</p>\n</blockquote>\n<p>I like old and new compiler</p>",
        "id": 526199908,
        "sender_full_name": "Anton",
        "timestamp": 1751112568
    },
    {
        "content": "<p>Yes please. That's what I was looking for recently.<br>\nI'm currently reading trough the src and prs. I have no zig experience but the src doesn't look difficult.<br>\nThe most challenging for me is to build a theory around what's happening there. I mean, get a sense of reasoning. So I'd also appreciate some guidance, maybe pairing. I'll prepare a list of silly questions, maybe they will also help to improve documentation</p>",
        "id": 526199952,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1751112621
    },
    {
        "content": "<p>I think having a very light formalization of things like \"who's a domain expert in this thing and open to pair\"? Might be nice, but I think we could just use <code>git blame</code> and Zulip to accomplish that</p>",
        "id": 526200244,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751113020
    },
    {
        "content": "<p>But we are all (well almost, <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span>) part time contributors taking time away from friends and family to move this project forward, so we don't want someone wasting time or effort either flailing in the wind or duplicating work that you didn't know was already underway</p>",
        "id": 526200375,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751113111
    },
    {
        "content": "<p>Also I feel like there is another issue exist that could be fixed here:s</p>\n<ol>\n<li>LOTS of stuff gets talked about in #ideas and #compiler development that kind of get lost.  We could actually take that and turn it into a \"card\" or whatever</li>\n</ol>",
        "id": 526200852,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751113437
    },
    {
        "content": "<p>I'd also like a way to formalize the language spec for v0.1 a bit so that work on things can move smoothly without a new(or existing) contributor being like \"What's the syntax for open tag unions?  Do they even still exist?\"</p>",
        "id": 526200907,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751113515
    },
    {
        "content": "<p>I should add the proviso that I've been a delegate to ECMA TC-39 (the Javascript standards body) for like three years, so maybe I am just used to more formalized, explicit processes.</p>",
        "id": 526200989,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751113604
    },
    {
        "content": "<p>Some more formalization sounds good to me too</p>",
        "id": 526202067,
        "sender_full_name": "Anton",
        "timestamp": 1751115023
    },
    {
        "content": "<blockquote>\n<p>I'd also like a way to formalize the language spec for v0.1 a bit</p>\n</blockquote>\n<p>A lightweight start for this may be to make a single parseable roc file that demonstrates all syntax. Not all headers of course, but as much as possible.</p>",
        "id": 526202183,
        "sender_full_name": "Anton",
        "timestamp": 1751115139
    },
    {
        "content": "<p>Let's have a separate thread for that? Formalized spec also means conformance testing?<br>\nWould be nice to generate spec from the parser itself but I think it's unrealistic at least right now?</p>",
        "id": 526202599,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1751115588
    },
    {
        "content": "<p>yeah I don't think we should have a spec</p>",
        "id": 526202721,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751115724
    },
    {
        "content": "<p>at least not right now</p>",
        "id": 526202736,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751115751
    },
    {
        "content": "<p>i don't mean a spec spec , but kind of what anton's talking about</p>",
        "id": 526202760,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751115783
    },
    {
        "content": "<p>a reference point</p>",
        "id": 526202769,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751115789
    },
    {
        "content": "<p>that's kept up to date with the current syntax</p>",
        "id": 526202784,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751115811
    },
    {
        "content": "<p>yeah that sounds GREAT!</p>",
        "id": 526202786,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751115813
    },
    {
        "content": "<p>I love that idea</p>",
        "id": 526202789,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1751115818
    },
    {
        "content": "<p>sweet</p>",
        "id": 526202798,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751115831
    },
    {
        "content": "<p>we can talk about this thread tonight in the meetup</p>",
        "id": 526202816,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751115851
    },
    {
        "content": "<p>if yall want</p>",
        "id": 526202818,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751115857
    },
    {
        "content": "<p>Is there an API for zulip? I wonder if we could feed an AI the last week of conversations and have it generate a summary (draft). I'd be happy to take something like that and edit it to give a rolling update on progress.</p>",
        "id": 526234359,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751154167
    },
    {
        "content": "<p>I think this is the answer: <a href=\"#narrow/stream/306878-off-topic/topic/casual.20conversation/near/526206457\">https://roc.zulipchat.com/#narrow/stream/306878-off-topic/topic/casual.20conversation/near/526206457</a></p>\n<p>Also, here's a related topic in zulip docs: <a href=\"https://zulip.readthedocs.io/en/10.2/production/ai-integrations.html\">https://zulip.readthedocs.io/en/10.2/production/ai-integrations.html</a></p>",
        "id": 526243901,
        "sender_full_name": "Kiryl Dziamura",
        "timestamp": 1751169526
    },
    {
        "content": "<p>I think the AI Search thing is fine for recovering state if we put in the effort.  But to get a snapshot of what is being worked on _right now_ I think a channel in either <a class=\"stream\" data-stream-id=\"395097\" href=\"/#narrow/channel/395097-compiler-development\">#compiler development</a> or <a class=\"stream\" data-stream-id=\"316715\" href=\"/#narrow/channel/316715-contributing\">#contributing</a> that's solely for \"I'm working on this\" - paired with putting up draft PRs as soon as you start a piece of work is the easiest and most reliable path forward for solving for coordination.</p>",
        "id": 526261621,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751194011
    },
    {
        "content": "<blockquote>\n<p>I think a channel in either <a href=\"#narrow/channel/395097-compiler-development\">#compiler development</a> or <a href=\"#narrow/channel/316715-contributing\">#contributing</a> that's solely for \"I'm working on this\" - paired with putting up draft PRs as soon as you start a piece of work is the easiest and most reliable path forward for solving for coordination.</p>\n</blockquote>\n<p>For visibility: this channel has been started: <a class=\"stream-topic\" data-stream-id=\"316715\" href=\"/#narrow/channel/316715-contributing/topic/Worklog.20.28Draft.20PRs.20and.20coordination.29/with/526280766\">#contributing &gt; Worklog (Draft PRs and coordination)</a></p>",
        "id": 526361689,
        "sender_full_name": "Anton",
        "timestamp": 1751277007
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/channel/395097-compiler-development/topic/Zig.20compiler.20work.20coordination.20and.20roadmap/near/526234359\">said</a>:</p>\n<blockquote>\n<p>Is there an API for zulip? I wonder if we could feed an AI the last week of conversations and have it generate a summary (draft). I'd be happy to take something like that and edit it to give a rolling update on progress.</p>\n</blockquote>\n<p>Yeah <a href=\"https://github.com/zulip/zulip-archive\">https://github.com/zulip/zulip-archive</a> seems very nice, it can be set up with github actions for easy incremental updates. What do you think <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span>?</p>",
        "id": 526367477,
        "sender_full_name": "Anton",
        "timestamp": 1751278895
    },
    {
        "content": "<p>That looks great Anton <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 526368247,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751279200
    },
    {
        "content": "<p>I'll get started on setting it up</p>",
        "id": 526372318,
        "sender_full_name": "Anton",
        "timestamp": 1751280623
    },
    {
        "content": "<p>I'm noodling around with the <code>when</code> -&gt; <code>match</code> conversion... am probably going to get carried away and implement Can for it while i'm here</p>",
        "id": 526377125,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751282430
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/395097-compiler-development/topic/Zig.20compiler.20work.20coordination.20and.20roadmap/near/526377125\">said</a>:</p>\n<blockquote>\n<p>I'm noodling around with the <code>when</code> -&gt; <code>match</code> conversion... am probably going to get carried away and implement Can for it while i'm here</p>\n</blockquote>\n<p>conversion?  you mean just in the Can IR right, it's already match in the Parser and in the actual syntax</p>",
        "id": 526380271,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751283590
    },
    {
        "content": "<p>Yeah, just in Can</p>",
        "id": 526380327,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751283606
    },
    {
        "content": "<p>ok, and just to wrap up the convo here. we are going to put all work we are about to start (or currently working on if not here already) in <a class=\"stream-topic\" data-stream-id=\"316715\" href=\"/#narrow/channel/316715-contributing/topic/Worklog.20.28Draft.20PRs.20and.20coordination.29/with/526280766\">#contributing &gt; Worklog (Draft PRs and coordination)</a></p>",
        "id": 526380525,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751283673
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> has marked this topic as resolved.</p>",
        "id": 526380607,
        "sender_full_name": "Notification Bot",
        "timestamp": 1751283703
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/channel/395097-compiler-development/topic/.E2.9C.94.20Zig.20compiler.20work.20coordination.20and.20roadmap/near/526372318\">said</a>:</p>\n<blockquote>\n<p>I'll get started on setting it up</p>\n</blockquote>\n<p><a href=\"https://roc-lang.github.io/zulip-export/\">https://roc-lang.github.io/zulip-export/</a></p>",
        "id": 526421362,
        "sender_full_name": "Anton",
        "timestamp": 1751295149
    },
    {
        "content": "<p>I'll check if there is an easy way to extract the posts of the last week from this setup.</p>",
        "id": 526421891,
        "sender_full_name": "Anton",
        "timestamp": 1751295310
    },
    {
        "content": "<p>Okidoki, every post comes with a timestamp, <a href=\"https://github.com/roc-lang/zulip-export/blob/main/zulip_json/231634-beginners/Rust.20.2F.20Static.20Dispatch.json\">example file</a>. The whole public channel export is only 29 MiB, so very doable to just go through all json files with a script and filter based on the timestamp.</p>",
        "id": 526433442,
        "sender_full_name": "Anton",
        "timestamp": 1751298710
    }
]