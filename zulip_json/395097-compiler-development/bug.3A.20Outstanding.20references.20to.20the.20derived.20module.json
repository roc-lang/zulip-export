[
    {
        "content": "<p>Does this look like something easy to fix? <a href=\"https://github.com/roc-lang/roc/issues/7429\">https://github.com/roc-lang/roc/issues/7429</a></p>\n<p>It's giving me grief upgrading the webserver demo's and using Isaac's RTL templating engine</p>",
        "id": 491134824,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735435432
    },
    {
        "content": "<p>I didn't repro with latest nightly</p>",
        "id": 491135016,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735435592
    },
    {
        "content": "<p>What version of Roc are you using?</p>",
        "id": 491135022,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735435599
    },
    {
        "content": "<p>Built from source</p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc version\nroc built from commit 06e78daa91, committed at 2024-12-28 22:05:45 UTC\n</code></pre></div>",
        "id": 491135137,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735435692
    },
    {
        "content": "<p>oh wait, let me update the Issue, it needs to be in a sub-folder</p>",
        "id": 491135203,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735435793
    },
    {
        "content": "<p>Like </p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc check src/Views/broken.roc\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nOutstanding references to the derived module\nLocation: crates/compiler/load_internal/src/file.rs:3358:29\n</code></pre></div>",
        "id": 491135300,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735435859
    },
    {
        "content": "<p>Sorry, I hadn't realised the folder thing was relevant here</p>",
        "id": 491135355,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735435913
    },
    {
        "content": "<p>The whole <code>derived_module</code> thing looks a bit confusing.</p>",
        "id": 491135807,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735436313
    },
    {
        "content": "<p>I'm unable to replicate</p>",
        "id": 491136240,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735436741
    },
    {
        "content": "<p>I checked out the commit, created a --release build, and ran <code>roc/target/release/roc check src/Views/broken.roc</code></p>",
        "id": 491136327,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735436799
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>~/dev\n❯ roc/target/release/roc check src/Views/broken.roc\n0 errors and 0 warnings found in 29 ms.\n</code></pre></div>",
        "id": 491136348,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735436818
    },
    {
        "content": "<p>Is this in the roc-htmx-tailwind repo?</p>",
        "id": 491136361,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735436835
    },
    {
        "content": "<p>Oh, that repo</p>",
        "id": 491136372,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735436844
    },
    {
        "content": "<p><a href=\"https://github.com/lukewilliamboswell/roc-htmx-tailwindcss-demo/tree/upgrade-0.11.0\">https://github.com/lukewilliamboswell/roc-htmx-tailwindcss-demo/tree/upgrade-0.11.0</a></p>",
        "id": 491136394,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735436880
    },
    {
        "content": "<p>Yeah, if you checkout that branch and add the file <code>src/Views/broken.roc</code> you should get;</p>\n<div class=\"codehilite\"><pre><span></span><code>$ roc check src/Views/broken.roc\nAn internal compiler expectation was broken.\nThis is definitely a compiler bug.\nPlease file an issue here: &lt;https://github.com/roc-lang/roc/issues/new/choose&gt;\nOutstanding references to the derived module\nLocation: crates/compiler/load_internal/src/file.rs:3358:29\n</code></pre></div>",
        "id": 491136481,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735436955
    },
    {
        "content": "<p>It also happens with <code>$ roc check src/Views/Pages.roc</code> but the <code>broken.roc</code> is a super small repro</p>",
        "id": 491136504,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735436994
    },
    {
        "content": "<p>Okay, got it with <code>Layout.roc</code></p>",
        "id": 491136505,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735436995
    },
    {
        "content": "<p>Well, it also works with just <code>module []</code> in <code>broken.roc</code></p>",
        "id": 491136620,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735437096
    },
    {
        "content": "<p>ohk, interesting</p>",
        "id": 491136673,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735437126
    },
    {
        "content": "<p>So this isn't a \"minimal\" repro IMO since I think the problem is elsewhere</p>",
        "id": 491136683,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735437138
    },
    {
        "content": "<p>Ok heres a minimal repro <a href=\"https://github.com/lukewilliamboswell/roc-htmx-tailwindcss-demo/tree/broken\">https://github.com/lukewilliamboswell/roc-htmx-tailwindcss-demo/tree/broken</a></p>",
        "id": 491136901,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735437376
    },
    {
        "content": "<p>There's only two files in there, the <code>broken.roc</code> and a minimal <code>main.roc</code> referencing the new webserver</p>",
        "id": 491136908,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735437397
    },
    {
        "content": "<p>Okay, that's minimal</p>",
        "id": 491136928,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735437428
    },
    {
        "content": "<p>I wonder if it happens with <code>basic-cli</code></p>",
        "id": 491136939,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735437439
    },
    {
        "content": "<p>1 sec</p>",
        "id": 491136954,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735437466
    },
    {
        "content": "<p>Yeah it does. Just pushed a commit changing the <code>main.roc</code> to </p>\n<div class=\"codehilite\"><pre><span></span><code>app [main!] { pf: platform &quot;https://github.com/roc-lang/basic-cli/releases/download/0.17.0/lZFLstMUCUvd5bjnnpYromZJXkQUrdhbva4xdBInicE.tar.br&quot; }\n\nmain! = \\_ -&gt; Err TODO\n</code></pre></div>",
        "id": 491137017,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735437544
    },
    {
        "content": "<p>Okay, then it's maybe not a platform problem?</p>",
        "id": 491137025,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735437571
    },
    {
        "content": "<p>No it's definitely the compiler</p>",
        "id": 491137035,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735437587
    },
    {
        "content": "<p>Oh, it's definitely the compiler</p>",
        "id": 491137140,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735437629
    },
    {
        "content": "<p>I mean whether this happens in just a Roc package vs. a platform</p>",
        "id": 491137149,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735437641
    },
    {
        "content": "<p>In this case it's neither of those... this has an app module at the root, the parent folder from the module we are checking</p>",
        "id": 491137251,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735437733
    },
    {
        "content": "<p>Can you update the GH issue?</p>",
        "id": 491138375,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1735439044
    },
    {
        "content": "<p>done</p>",
        "id": 491139096,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1735439858
    },
    {
        "content": "<p>That’s weird. Can you check the compiler commit right before my change to package headers?</p>",
        "id": 491140512,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735441474
    },
    {
        "content": "<p>If that works it’s an easy bisect <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 491140526,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735441494
    },
    {
        "content": "<p>And you get the added pleasure of shaming me</p>",
        "id": 491140540,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1735441507
    },
    {
        "content": "<p>the bug is present before that</p>",
        "id": 491141884,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1735443022
    },
    {
        "content": "<p>37 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"395097\" href=\"/#narrow/channel/395097-compiler-development/topic/casual.20conversation\">#compiler development &gt; casual conversation</a> by <span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span>.</p>",
        "id": 491142066,
        "sender_full_name": "Notification Bot",
        "timestamp": 1735443201
    },
    {
        "content": "<p>is this a valid way to use a value from a platform?</p>\n<div class=\"codehilite\"><pre><span></span><code>module []\n\nimport pf.Stderr\n\nfoo = Stderr.line\n</code></pre></div>",
        "id": 491143241,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1735444550
    },
    {
        "content": "<p>i understand the problem well I think. The issue is that when a module is checked, if there is a transitive platform found, that platform is also placed into the queue of modules to resolve (<a href=\"https://github.com/roc-lang/roc/blob/723e35f11e1b1744c77cde77e42ed2b48fff12a6/crates/compiler/load_internal/src/file.rs#L1300-L1361\">https://github.com/roc-lang/roc/blob/723e35f11e1b1744c77cde77e42ed2b48fff12a6/crates/compiler/load_internal/src/file.rs#L1300-L1361</a>). However if the module doesn't use the platform, it will finish all its computation before the platform has had a chance to, hence the panic. I think probably (?) the right way to do this is to only traverse to find the package if it doesn't exist in the package shorthand list,  and then add it as a dependency of the module, but I don't totally understand all the flow here and Ive run out of tie</p>",
        "id": 491146113,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1735447564
    }
]