[
    {
        "content": "<p>We have flaky builtins. </p>\n<p>One idea I had, was if we remove the shared memory infrastructure currently used for roc test, do we still need bitcode anymore? The test platforms will bundle libc and implementations for working with RocStr etc.</p>\n<p>When I had an attempt at removing that, or maybe it was with the zig upgrade, I had that idea but didn't get around to asking... basically can we rip all this flaky stuff out now?</p>",
        "id": 490338555,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734822900
    },
    {
        "content": "<p><a href=\"#narrow/channel/395097-compiler-development/topic/Remove.20shared.20memory.20infra.20-.20flaky.20bitcode/near/490338555\">A message</a> was moved here from <a class=\"stream-topic\" data-stream-id=\"397893\" href=\"/#narrow/channel/397893-announcements/topic/Snake.20case.20support.20PSA\">#announcements &gt; Snake case support PSA</a> by <span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span>.</p>",
        "id": 490338670,
        "sender_full_name": "Notification Bot",
        "timestamp": 1734822980
    },
    {
        "content": "<p>I don't follow the question</p>",
        "id": 490338709,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734823045
    },
    {
        "content": "<p>What specifically are you trying to remove?</p>",
        "id": 490338723,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734823063
    },
    {
        "content": "<p>Modernize Expect</p>",
        "id": 490338791,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734823117
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6930\">https://github.com/roc-lang/roc/issues/6930</a></p>",
        "id": 490338805,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734823140
    },
    {
        "content": "<blockquote>\n<ol>\n<li>Rip out all of the old shared memory infrastructure.</li>\n</ol>\n</blockquote>",
        "id": 490338822,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734823160
    },
    {
        "content": "<p>I thought I understood what this meant... but I'm not confident</p>",
        "id": 490338833,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734823179
    },
    {
        "content": "<p>Nothing blocking it. But we need to modernize expect and have a it working with platforms before we delete all the shared infra (I mean can be done in the same pr, but we shouldn't rip it out until we have the replacement)</p>",
        "id": 490338841,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734823192
    },
    {
        "content": "<p>Yeah... just wanted to know if this would remove the need for bitcode, as that seems to be the cause of all our flakiness with the builtins</p>",
        "id": 490338927,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734823239
    },
    {
        "content": "<p>Remove the need for bitcode as a whole?</p>",
        "id": 490338990,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734823316
    },
    {
        "content": "<p>We use the bitcode for all of the zig builtins</p>",
        "id": 490339039,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734823333
    },
    {
        "content": "<p>ok, yeah I misunderstood. I was forgetting about that, I thought it may have just been for linking with the test platforms.</p>",
        "id": 490339208,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734823530
    },
    {
        "content": "<p>We need to bundle the bitcode so roc can link that also to produce an object file with all the correct symbols defined in it.</p>",
        "id": 490339284,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734823588
    },
    {
        "content": "<p>Yeah, and by consuming it as bitcode, llvm can optimize it way more than only generating an object file</p>",
        "id": 490339430,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1734823740
    },
    {
        "content": "<p>thanks for clearing that up</p>",
        "id": 490339583,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1734823887
    }
]