[
    {
        "content": "<p>I've been working on <a href=\"https://github.com/roc-lang/roc/issues/6532\">https://github.com/roc-lang/roc/issues/6532</a>, and I've got a representation question. The two options I see for the AST to represent something like <code>{x: x1 ? 0.0}</code> is to:</p>\n<ol>\n<li>Create a new kind of node, something like <code>Pattern::AliasedOptionalField</code> that holds a references to <code>x</code>, <code>x1</code> as a <code>Pattern::Identifier</code>, and <code>0.0</code> as an <code>Expr</code>.</li>\n<li>Have the <code>Pattern::RequiredField</code> hold a reference to a <code>Patter::OptionalField</code> in this case.</li>\n</ol>\n<p>Option 1 seems to be more semantically correct, while option 2 seems like an easier change. I'm inclined to go with option 1, but wanted to get some feedback before I get too far. Is there another option I'm missing here?</p>\n<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> and <span class=\"user-mention\" data-user-id=\"515757\">@Luke Boswell</span>, you may have some input here as I mentioned this a different stream. I didn't want to derail that, so I thought I should move the conversation here</p>",
        "id": 430916364,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1712117989
    },
    {
        "content": "<p>I'm barely qualified to comment on this, but I feel like I'd try Option 1 first.</p>",
        "id": 430916496,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712118093
    },
    {
        "content": "<p>I'm not sure how it flows through to Can and later stages... so that would be where i would be looking to see what makes the most sense.</p>",
        "id": 430916566,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712118133
    },
    {
        "content": "<p>I'm getting stuck trying to figure out parsing for this one. Is anyone familiar with the parser able to help?<br>\nI've modified the <code>roc_parse::parse::record_pattern_help</code> so that it can parse the new syntax in a test, but when I try to run the whole compiler, the new code doesn't seem to get run. It seems like another part of the parser is recognizing it. I've also tried looking for other uses of <code>collection_trailing_sep_e</code>, but the only other usage that seemed similar was in the <code>record_type</code> function</p>",
        "id": 432591526,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1712785432
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"453336\">@Joshua Warner</span> and <span class=\"user-mention\" data-user-id=\"454654\">@Ayaz Hafiz</span> know the most about the parser. Maybe <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> has some idea as well?</p>",
        "id": 432597336,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1712787577
    },
    {
        "content": "<p>I can probably help, but not until tomorrow sometime.</p>",
        "id": 432610059,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712796183
    },
    {
        "content": "<p>Do you have a WIP branch?</p>",
        "id": 432610071,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712796206
    },
    {
        "content": "<p>Ok, cool. I've got <a href=\"https://github.com/roc-lang/roc/pull/6633\">this PR</a>. I've done a few more exploratory changes, but nothing that I've committed and pushed</p>",
        "id": 432611083,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1712797122
    },
    {
        "content": "<p>Cool. I'm quite terrible I think with the parser, but I have spent the last couple of weeks looking at it trying to figure out how it works.</p>",
        "id": 432614161,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712799727
    },
    {
        "content": "<p>So hopefully I cant help</p>",
        "id": 432614170,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1712799735
    },
    {
        "content": "<p>You should be able to run with <code>--features=parse_debug_trace</code>, and it'll print out a bunch of useful debug information about what the parser is doing</p>",
        "id": 433363104,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1713207109
    },
    {
        "content": "<p>Yeah, I did end up finding that, as well. That's what allowed me to figure out exactly what was running. Great tip!</p>",
        "id": 433371510,
        "sender_full_name": "Trevor Settles",
        "timestamp": 1713209936
    }
]