[
    {
        "content": "<p>I'd like to get some input on <a href=\"https://github.com/roc-lang/roc/issues/7287\">#7287</a>:</p>\n<blockquote>\n<p>Currently <code>testing_roc_alloc</code>in crates/compiler/builtins/bitcode/src/utils.zig ignores the value passed as alignment and always returns a pointer to memory with alignment 1. This caused me a few hours of confusion trying to test an allocation that needed aligning.<br>\nIdeally, it would align to whatever value is passed (up to that supported by Zig), but allocating with an alignment not known at compile time seems hard (?).<br>\nAlways aligning to 16 and panicking if a higher alignment is requested seems like it would cover all likely cases (without wasting too many bytes)</p>\n</blockquote>",
        "id": 485604671,
        "sender_full_name": "Anton",
        "timestamp": 1733139771
    },
    {
        "content": "<p>that idea seems fine to me! <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 485613976,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1733142742
    },
    {
        "content": "<p>Here is a discussion about <code>roc_alloc</code> that might me relevant: <a class=\"stream-topic\" data-stream-id=\"302903\" href=\"/#narrow/channel/302903-platform-development/topic/roc_alloc.20and.20alignment\">#platform development &gt; roc_alloc and alignment</a></p>",
        "id": 485614373,
        "sender_full_name": "Oskar Hahn",
        "timestamp": 1733142869
    },
    {
        "content": "<p>OK, <a href=\"https://github.com/MatthewJohnHeath/rocSHA/tree/7287-Make-testing_roc_alloc-align-the-allocation\">here</a> is that implemented. I don't think I have the permissions to make a pull request</p>",
        "id": 486565915,
        "sender_full_name": "Matthew Heath",
        "timestamp": 1733507116
    },
    {
        "content": "<p>Technically it is aligning as whatever <code>@alignOf(usize)</code> is. Making it 8  on arbitrary hardware is probably possible, but it's trickier and there isn't an obvious benefit.</p>",
        "id": 486567113,
        "sender_full_name": "Matthew Heath",
        "timestamp": 1733507562
    },
    {
        "content": "<p>It should align to 16. That is for u128.</p>",
        "id": 486568343,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1733508057
    },
    {
        "content": "<p>Oh yeah, I even said 16 in the original post. Long week.<br>\nOK. The decallocate is going to have to assume it has access to the 16 bytes before the data starts, but that's fine right?</p>",
        "id": 486569308,
        "sender_full_name": "Matthew Heath",
        "timestamp": 1733508473
    },
    {
        "content": "<blockquote>\n<p>OK, <a href=\"https://github.com/MatthewJohnHeath/rocSHA/tree/7287-Make-testing_roc_alloc-align-the-allocation\">here</a> is that implemented. I don't think I have the permissions to make a pull request</p>\n</blockquote>\n<p>You can make a pull request if you fork first</p>",
        "id": 486570042,
        "sender_full_name": "Anton",
        "timestamp": 1733508779
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/channel/395097-compiler-development/topic/testing_roc_alloc/near/486570042\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>OK, <a href=\"https://github.com/MatthewJohnHeath/rocSHA/tree/7287-Make-testing_roc_alloc-align-the-allocation\">here</a> is that implemented. I don't think I have the permissions to make a pull request</p>\n</blockquote>\n<p>You can make a pull request if you fork first</p>\n</blockquote>\n<p>So I can! Here is the <a href=\"https://github.com/roc-lang/roc/pull/7312\">PR</a>!</p>",
        "id": 486576129,
        "sender_full_name": "Matthew Heath",
        "timestamp": 1733511105
    }
]