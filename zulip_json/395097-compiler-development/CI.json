[
    {
        "content": "<p>looks like Windows CI is failing because the <code>basic-cli</code> 0.5.0 release doesn't have a prebuilt host for Windows: <a href=\"https://github.com/roc-lang/roc/actions/runs/5886643841/job/15964820569?pr=5747#step:12:189\">https://github.com/roc-lang/roc/actions/runs/5886643841/job/15964820569?pr=5747#step:12:189</a></p>\n<p>does anyone know if there was a limitation that prevented 0.5.0 from having that? Or is it something we could fix in an 0.5.1 release?</p>",
        "id": 385664041,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1692275488
    },
    {
        "content": "<blockquote>\n<p>does anyone know if there was a limitation that prevented 0.5.0 from having that?</p>\n</blockquote>\n<p>I don't think so, I'll try setting up the basic-cli release workflow to include the windows file.</p>",
        "id": 385855363,
        "sender_full_name": "Anton",
        "timestamp": 1692346790
    },
    {
        "content": "<p>Many basic-cli examples fail on windows without errors so I'll need to dig into those more before I add the necessary windows files to the next basic-cli release.</p>",
        "id": 386911554,
        "sender_full_name": "Anton",
        "timestamp": 1692807795
    },
    {
        "content": "<p>huh! Was that true of the previous release too?</p>",
        "id": 386912935,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1692808280
    },
    {
        "content": "<p>I would think so but I'll check</p>",
        "id": 386922612,
        "sender_full_name": "Anton",
        "timestamp": 1692812169
    },
    {
        "content": "<p>Yes identical behavior using older roc and basic-cli 0.4.0</p>",
        "id": 386928250,
        "sender_full_name": "Anton",
        "timestamp": 1692814555
    },
    {
        "content": "<p>gotcha</p>",
        "id": 386928526,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1692814680
    },
    {
        "content": "<p>so maybe worth doing an 0.5.1 release just to fix CI, and then investigate the errors later?</p>",
        "id": 386928635,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1692814708
    },
    {
        "content": "<p>I've ignored that basic-cli test to fix CI a while ago. I prefer that option, I dislike making it seem like basic-cli supports windows while it would break easily with normal usage.</p>",
        "id": 386929037,
        "sender_full_name": "Anton",
        "timestamp": 1692814896
    },
    {
        "content": "<p>that's fair <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 386929075,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1692814918
    },
    {
        "content": "<p>Yeah, some of the basic-cli tests assume linux tools available. I would like to have it working on Windows but I think there are still issues with Roc itself which really prevent anyone from using it on Windows</p>",
        "id": 386966710,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1692835480
    },
    {
        "content": "<p>do you happen to know which issues in particular are blocking it?</p>",
        "id": 386969584,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1692838038
    },
    {
        "content": "<p>have we seen this before?</p>\n<div class=\"codehilite\"><pre><span></span><code>  thread &#39;main&#39; panicked at &#39;zig build object -Drelease=true failed 10 times in a row. The following error is unlikely to be a flaky error: /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:447:29: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/bpf.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:444:32: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/amdgpu.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:449:30: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/mips.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:442:33: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/aarch64.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:445:29: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/arm.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:443:29: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/arc.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:446:29: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/avr.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:450:32: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/msp430.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:451:31: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/nvptx.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:453:31: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/riscv.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:454:31: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/sparc.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:455:31: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/spirv.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:448:33: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/hexagon.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:452:33: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/powerpc.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:456:33: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/systemz.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:457:28: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/ve.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:459:29: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/x86.zig&#39;: FileNotFound\n  /Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target.zig:458:30: error: unable to load &#39;/Users/username1/Downloads/zig-macos-x86_64-0.9.1/lib/std/target/wasm.zig&#39;: FileNotFound\n  &#39;, crates/compiler/builtins/bitcode/build.rs:179:25\n ```\n</code></pre></div>",
        "id": 390556167,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1694536119
    },
    {
        "content": "<p>on <a href=\"https://github.com/roc-lang/roc/actions/runs/6162086596/job/16722836284?pr=5799\">https://github.com/roc-lang/roc/actions/runs/6162086596/job/16722836284?pr=5799</a></p>",
        "id": 390556194,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1694536130
    },
    {
        "content": "<p>No, I don't think so</p>",
        "id": 390562403,
        "sender_full_name": "Anton",
        "timestamp": 1694538473
    },
    {
        "content": "<p>it's hitting 2 PRs that don't really do anything on macos. are we downloading some weird/bad version of zig?</p>",
        "id": 390563686,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1694538964
    },
    {
        "content": "<p>Oh, I see what's wrong now, I was cleaning up disk space on the CI machine and searched for folders named target and deleted them, but I was under the impression I was searching in my roc folder but it appears to have been systemwide. I'll try to fix it now.</p>",
        "id": 390572162,
        "sender_full_name": "Anton",
        "timestamp": 1694542292
    },
    {
        "content": "<p>Re-running now</p>",
        "id": 390574440,
        "sender_full_name": "Anton",
        "timestamp": 1694543185
    },
    {
        "content": "<p>Success <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 390577140,
        "sender_full_name": "Anton",
        "timestamp": 1694544257
    },
    {
        "content": "<p>what is happening here?</p>\n<div class=\"codehilite\"><pre><span></span><code>🎉 Docs generated in ./generated-docs\n+ mv generated-docs/ www/build/builtins\n+ find www/build/builtins -type f -name index.html -exec sed -i &#39;s!&lt;/nav&gt;!&lt;div class=&quot;builtins-tip&quot;&gt;&lt;b&gt;Tip:&lt;/b&gt; &lt;a href=&quot;/different-names&quot;&gt;Some names&lt;/a&gt; differ from other languages.&lt;/div&gt;&lt;/nav&gt;!&#39; &#39;{}&#39; &#39;;&#39;\n+ rm -rf roc_nightly roc_releases.json\n+ &#39;[&#39; -v GITHUB_TOKEN_READ_ONLY &#39;]&#39;\nBuilding tutorial.html from tutorial.md...\n+ echo &#39;Building tutorial.html from tutorial.md...&#39;\n+ mkdir www/build/tutorial\n+ cargo build --release --bin roc\n    Finished release [optimized] target(s) in 0.23s\n+ roc=target/release/roc\n+ target/release/roc version\nroc built-from-source\n+ target/release/roc run www/generate_tutorial/src/tutorial.roc -- www/generate_tutorial/src/input/ www/build/tutorial/\n🔨 Rebuilding platform...\nProcessing 1 input files...\n/home/small-ci-user/actions-runner/_work/roc/roc/www/generate_tutorial/src/input/tutorial.md -&gt; /home/small-ci-user/actions-runner/_work/roc/roc/www/build/tutorial/tutorial.html\nProcessed 1 files with 1 successes and 0 errors\nwww/build.sh: line 91: 2753219 Segmentation fault      (core dumped) $roc run www/generate_tutorial/src/tutorial.roc -- www/generate_tutorial/src/input/ www/build/tutorial/\n</code></pre></div>",
        "id": 395424793,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1696688719
    },
    {
        "content": "<p>I think that's a flake, I restarted the job now.</p>",
        "id": 395425300,
        "sender_full_name": "Anton",
        "timestamp": 1696689019
    },
    {
        "content": "<p>yeah I've seen that before</p>",
        "id": 395427998,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1696690954
    },
    {
        "content": "<p>It segfaulted again, I don't really see why the clippy changes would make it more likely though. I did create <a href=\"https://github.com/roc-lang/roc/issues/5772\">#5772</a> for it earlier with some valgrind output</p>",
        "id": 395428061,
        "sender_full_name": "Anton",
        "timestamp": 1696691004
    },
    {
        "content": "<p>ah, ok the cause is pretty obvious actually</p>",
        "id": 395431314,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1696693234
    },
    {
        "content": "<p>fix <a href=\"https://github.com/roc-lang/roc/pull/5892\">https://github.com/roc-lang/roc/pull/5892</a></p>",
        "id": 395431650,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1696693532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"361169\">@Anton</span>  Looks to be issues with a specific ci device:</p>\n<div class=\"codehilite\"><pre><span></span><code>Runner name: &#39;anton-m1-mac-mini&#39;\nRunner group name: &#39;Default&#39;\nMachine name: &#39;m1cis-Mac-mini&#39;\n</code></pre></div>\n<p>exmaple failures:</p>\n<ul>\n<li><a href=\"https://github.com/roc-lang/roc/actions/runs/7024562782/job/19113597411?pr=5775\">https://github.com/roc-lang/roc/actions/runs/7024562782/job/19113597411?pr=5775</a></li>\n<li><a href=\"https://github.com/roc-lang/roc/actions/runs/7024562746/job/19113571637?pr=5775\">https://github.com/roc-lang/roc/actions/runs/7024562746/job/19113571637?pr=5775</a></li>\n</ul>",
        "id": 404719269,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701206189
    },
    {
        "content": "<p>It seems that the mac ci runner is fully down now <a href=\"https://github.com/roc-lang/roc/issues/5775\">#5775</a> is just sitting with the action queued. Same with a few other PRs. I am gonna assume the machine was hitting problems and then crashed or something.</p>",
        "id": 404777136,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701231001
    },
    {
        "content": "<p>It's running now, this was due to <a href=\"https://github.com/roc-lang/roc/issues/6106\">#6106</a>, I'll set up a temporary fix today</p>",
        "id": 404822444,
        "sender_full_name": "Anton",
        "timestamp": 1701250491
    },
    {
        "content": "<p>I've set up a <a href=\"https://github.com/roc-lang/roc/actions/workflows/ci_cleanup_nix_mac.yml\">new workflow</a> that will clean up the nix store on the m1 mac mini CI server once a day. It can also be triggered manually if needed.</p>",
        "id": 404888003,
        "sender_full_name": "Anton",
        "timestamp": 1701270405
    },
    {
        "content": "<p>Just saw the new workflow on <a href=\"https://github.com/roc-lang/roc/pull/6122\">https://github.com/roc-lang/roc/pull/6122</a> and it worked great! <span aria-label=\"muscle\" class=\"emoji emoji-1f4aa\" role=\"img\" title=\"muscle\">:muscle:</span></p>",
        "id": 405195897,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1701376038
    },
    {
        "content": "<p>Is this known? <a href=\"https://github.com/roc-lang/roc/actions/runs/7055754074/job/19206699414?pr=6128\">https://github.com/roc-lang/roc/actions/runs/7055754074/job/19206699414?pr=6128</a></p>",
        "id": 405274438,
        "sender_full_name": "Ayaz Hafiz",
        "timestamp": 1701405549
    },
    {
        "content": "<p>That definitely was flaky on some of my past PRs. Not sure why</p>",
        "id": 405292248,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701413880
    },
    {
        "content": "<p>I've also seen it flake before, we should move the gui examples over to the examples repo</p>",
        "id": 405343870,
        "sender_full_name": "Anton",
        "timestamp": 1701430909
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6176\">#6176</a> is failing in CI on some valgrind tests that I shouldn't have affected at all. Any ideas?</p>",
        "id": 405918680,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701727248
    },
    {
        "content": "<p>no idea, likely something specific to the machine/hardware</p>",
        "id": 405929437,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1701731118
    },
    {
        "content": "<p>Maybe its some zig <code>unreachable</code>s like the issue i had in <a href=\"https://github.com/roc-lang/roc/pull/6062\">https://github.com/roc-lang/roc/pull/6062</a> ?</p>",
        "id": 405956029,
        "sender_full_name": "John Murray",
        "timestamp": 1701743426
    },
    {
        "content": "<blockquote>\n<p>[...] that I shouldn't have affected at all.</p>\n</blockquote>\n<p>If the builtins changed things can shift around and end up revealing an existing problem.</p>",
        "id": 406023924,
        "sender_full_name": "Anton",
        "timestamp": 1701771746
    },
    {
        "content": "<p>Sorry that I forgot about <a href=\"https://github.com/roc-lang/roc/issues/6062\">#6062</a>, thought I had already merged it.</p>",
        "id": 406154291,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701808359
    },
    {
        "content": "<p>I hope rebasing on it will fix my ci issues.</p>",
        "id": 406154313,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1701808369
    },
    {
        "content": "<p>This keeps timing out for me: <a href=\"https://github.com/roc-lang/roc/actions/runs/7149876106/job/19477835985?pr=6216\">https://github.com/roc-lang/roc/actions/runs/7149876106/job/19477835985?pr=6216</a></p>",
        "id": 406963309,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702148328
    },
    {
        "content": "<p>passes locally on x86 for me in reasonable time. Gonna launch another time and hope.</p>",
        "id": 406967953,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702152726
    },
    {
        "content": "<p>Main is failing on:</p>\n<div class=\"codehilite\"><pre><span></span><code>── FILE NOT FOUND ──────────────────────────────────────────────── UNKNOWN.roc ─\n\nI am looking for this file, but it&#39;s not there:\n\n    downloaded-basic-cli/src/main.roc\n</code></pre></div>\n<p>Fixing it now</p>",
        "id": 409708834,
        "sender_full_name": "Anton",
        "timestamp": 1703329877
    },
    {
        "content": "<p>a change to decimal parsing somehow causes a segfault <a href=\"https://github.com/roc-lang/roc/actions/runs/7391040574/job/20109491250?pr=6340\">https://github.com/roc-lang/roc/actions/runs/7391040574/job/20109491250?pr=6340</a></p>\n<p>that is likely unrelated to the actual changes, so maybe something is flaky?</p>",
        "id": 410943680,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704248823
    },
    {
        "content": "<p>That's the same segfault I'm hitting in <a href=\"https://github.com/roc-lang/roc/pull/6333\">PR#6333</a>, tracked as <a href=\"https://github.com/roc-lang/roc/issues/5924\">#5924</a>. I planned on digging into it more today, we can ignore and merge if it's not (close to) fixed today. It's a particularly difficult bug because the segfault only occurs when it's cleaning up the memory, after execution is done. I've found similar bugs on the internet where this happened because of invalid pointers.</p>\n<p>Some interesting behavior; the segfault is not triggered if I change:</p>\n<div class=\"codehilite\"><pre><span></span><code>#[no_mangle]\npub unsafe extern &quot;C&quot; fn roc_dbg(loc: *mut RocStr, msg: *mut RocStr, src: *mut RocStr) {\n    eprintln!(&quot;[{}] {} = {}&quot;, &amp;*loc, &amp;*src, &amp;*msg);\n}\n</code></pre></div>\n<p>to:</p>\n<div class=\"codehilite\"><pre><span></span><code>#[no_mangle]\npub unsafe extern &quot;C&quot; fn roc_dbg(loc: *mut RocStr, msg: *mut RocStr, src: *mut RocStr) {\n    eprintln!(&quot;&quot;);\n    eprintln!(&quot;[{}] {} = {}&quot;, &amp;*loc, &amp;*src, &amp;*msg);\n}\n</code></pre></div>\n<p>All while <code>dbg</code> is not even used in this test.</p>\n<p>If anybody has any debugging tips, I'd love to hear them :)</p>",
        "id": 410976235,
        "sender_full_name": "Anton",
        "timestamp": 1704271195
    },
    {
        "content": "<p>but is the valgrind info clean when you add that extra eprintln? I'd guess not</p>",
        "id": 411013245,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704287933
    },
    {
        "content": "<p>this just reeks of UB. I had something kind of similar happen a while ago when we didn't implement the ABI correctly in the dev backend</p>",
        "id": 411013337,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704287993
    },
    {
        "content": "<p>oh, with the legacy linker it just works. Was that known?</p>",
        "id": 411013979,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704288280
    },
    {
        "content": "<blockquote>\n<p>oh, with the legacy linker it just works. Was that known?</p>\n</blockquote>\n<p>yes indeed</p>",
        "id": 411014535,
        "sender_full_name": "Anton",
        "timestamp": 1704288509
    },
    {
        "content": "<blockquote>\n<p>but is the valgrind info clean when you add that extra eprintln? I'd guess not</p>\n</blockquote>\n<p>yes:</p>\n<div class=\"codehilite\"><pre><span></span><code>❯ valgrind ~/Desktop/closures_comparison/closures_good/app\n==41746== Memcheck, a memory error detector\n==41746== Copyright (C) 2002-2022, and GNU GPL&#39;d, by Julian Seward et al.\n==41746== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info\n==41746== Command: /home/username/Desktop/closures_comparison/closures_good/app\n==41746==\nAnswer was: 672\n==41746==\n==41746== HEAP SUMMARY:\n==41746==     in use at exit: 0 bytes in 0 blocks\n==41746==   total heap usage: 12 allocs, 12 frees, 3,205 bytes allocated\n==41746==\n==41746== All heap blocks were freed -- no leaks are possible\n==41746==\n==41746== For lists of detected and suppressed errors, rerun with: -s\n==41746== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n</code></pre></div>",
        "id": 411014564,
        "sender_full_name": "Anton",
        "timestamp": 1704288522
    },
    {
        "content": "<p>well that makes more sense if things do work with the legacy linker</p>",
        "id": 411014742,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704288596
    },
    {
        "content": "<p>it's plausible that e.g. something is not aligned or updated correctly by the legacy linker, and that extra statement somehow makes it work again</p>",
        "id": 411014851,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704288627
    },
    {
        "content": "<blockquote>\n<p>... or updated correctly by the legacy linker</p>\n</blockquote>\n<p>I think you mean surgical linker here right?</p>",
        "id": 411014911,
        "sender_full_name": "Anton",
        "timestamp": 1704288657
    },
    {
        "content": "<p>yes, sorry</p>",
        "id": 411015035,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704288718
    },
    {
        "content": "<p>so maybe we can get something out of diffing the working and non-working program somehow?</p>",
        "id": 411015332,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704288839
    },
    {
        "content": "<p>could be nothing but</p>\n<div class=\"codehilite\"><pre><span></span><code>Start of section headers:          6556800 (bytes into file) # good\nStart of section headers:          6552512 (bytes into file) # bad\n</code></pre></div>\n\n<p>that could be an alignment thing?</p>",
        "id": 411016415,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704289301
    },
    {
        "content": "<p>hmm no other tests here also have arbitrary starts.</p>",
        "id": 411016806,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704289467
    },
    {
        "content": "<blockquote>\n<p>so maybe we can get something out of diffing the working and non-working program somehow?</p>\n</blockquote>\n<p>Sounds good, I'll get on that later today</p>",
        "id": 411022984,
        "sender_full_name": "Anton",
        "timestamp": 1704291861
    },
    {
        "content": "<p>I tried but with readelf at least I don't really see anything interesting</p>",
        "id": 411035918,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704296862
    },
    {
        "content": "<p>besides that the text section changes size and it is right before the .fini section so that moves around</p>",
        "id": 411036036,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704296899
    },
    {
        "content": "<p>but that seems to happen even when I make other changes and then the platform keeps working</p>",
        "id": 411036059,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704296910
    },
    {
        "content": "<blockquote>\n<p>we can ignore and merge if it's not (close to) fixed today.</p>\n</blockquote>\n<p>Given that we're hitting this in four different places I'd like to take some extra time.</p>\n<p>I have assembled 4 good/bad versions of executables in <a href=\"https://github.com/roc-lang/roc/issues/5924#issuecomment-1875863437\">a tar</a>. If we find what all bad executables have in common we should be able to figure out the cause :)</p>",
        "id": 411069416,
        "sender_full_name": "Anton",
        "timestamp": 1704310464
    },
    {
        "content": "<p>so, I'm trying some debugging here. My version segfaults at this pop instruction. </p>\n<div class=\"codehilite\"><pre><span></span><code>│   0x555555691ffa &lt;__libc_csu_init+90&gt;     pop    rbx      \n│   0x555555691ffb &lt;__libc_csu_init+91&gt;     pop    rbp      \n│   0x555555691ffc &lt;__libc_csu_init+92&gt;     pop    r12      \n│   0x555555691ffe &lt;__libc_csu_init+94&gt;     pop    r13      \n│  &gt;0x555555692000 &lt;__libc_csu_init+96&gt;     pop    r14      \n│   0x555555692002 &lt;__libc_csu_init+98&gt;     pop    r15      \n│   0x555555692004 &lt;__libc_csu_init+100&gt;    ret\n</code></pre></div>\n\n<p>that could make sense if the stack got corrupted somehow. the stack pointer value here:</p>\n<div class=\"codehilite\"><pre><span></span><code>rax            0x0                 0\nrbx            0x555555691fa0      93824993533856\nrcx            0x555555691fa0      93824993533856\nrdx            0x7fffffffe068      140737488347240\nrsi            0x0                 0\nrdi            0x5555556f3108      93824993931528\nrbp            0x0                 0x0\nrsp            0x7fffffffdf58      0x7fffffffdf58\nr8             0x0                 0\nr9             0x7ffff7fe0d60      140737354009952\nr10            0x1                 1\n</code></pre></div>\n\n<p>stores the r14 register based on the frame info</p>\n<div class=\"codehilite\"><pre><span></span><code>Stack level 0, frame at 0x7fffffffdf70:\n rip = 0x555555692000 in __libc_csu_init; saved rip = 0x7ffff7d8f010\n called by frame at 0x7fffffffe040\n Arglist at 0x7fffffffdf50, args:\n Locals at 0x7fffffffdf50, Previous frame&#39;s sp is 0x7fffffffdf70\n Saved registers:\n  rbx at 0x7fffffffdf38, rbp at 0x7fffffffdf40, r12 at 0x7fffffffdf48, r13 at 0x7fffffffdf50, r14 at 0x7fffffffdf58, r15 at 0x7fffffffdf60,\n  rip at 0x7fffffffdf68\n</code></pre></div>\n\n<p>So, notice how the arglist and locals start at a stack offset that is in the middle of that sequence of stored registers. A working version does not do that </p>\n<div class=\"codehilite\"><pre><span></span><code>Stack level 0, frame at 0x7fffffffdf70:\n rip = 0x555555691ff5 in __libc_csu_init; saved rip = 0x7ffff7d8f010\n called by frame at 0x7fffffffe040\n Arglist at 0x7fffffffdf30, args:\n Locals at 0x7fffffffdf30, Previous frame&#39;s sp is 0x7fffffffdf70\n Saved registers:\n  rbx at 0x7fffffffdf38, rbp at 0x7fffffffdf40, r12 at 0x7fffffffdf48, r13 at 0x7fffffffdf50, r14 at 0x7fffffffdf58, r15 at 0x7fffffffdf60,\n  rip at 0x7fffffffdf68\n</code></pre></div>\n\n<p>so, somehow the stack got messed up? Here my knowledge kind of runs out. I don't think the bug is in this function, it must already kind of start with a messed-up stack. Do we influence somehow where the stack starts?</p>",
        "id": 411083562,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704316644
    },
    {
        "content": "<p>hmm, or not? it looks like push/pop change the location of the arglist/locals</p>",
        "id": 411084850,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704317322
    },
    {
        "content": "<p>at which point I'm back to: why ever would a pop cause a segfault?</p>",
        "id": 411084913,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704317352
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> any thoughts here?</p>",
        "id": 411085397,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704317590
    },
    {
        "content": "<p>Probably the same root cause as <a href=\"https://github.com/roc-lang/roc/issues/6121\">#6121</a></p>",
        "id": 411086161,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704317995
    },
    {
        "content": "<p>No immediate other thoughts. I probably need to play with it for a bit so that I can refresh my brain on the details. Probably can do that later today.</p>",
        "id": 411086562,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1704318181
    },
    {
        "content": "<p>ok well my datapoint then is that with gdb/lldb the error is different to valgrind. based on the naming it seems to error before any roc code is even called. The printing of the answer also does not happen when running with the debugger, so that seems to match up.</p>\n<p>probably the same root cause, but the debugger changes something about the environment that makes the problem show up in a different place</p>",
        "id": 411087151,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1704318527
    },
    {
        "content": "<blockquote>\n<p>The printing of the answer also does not happen when running with the debugger</p>\n</blockquote>\n<p>The printing does happen for me inside gdb</p>",
        "id": 411394093,
        "sender_full_name": "Anton",
        "timestamp": 1704471114
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/wgF7gtCscYbicvcLvnZ1OSWI/glue_option_bad_vs_good.png\">glue_option_bad_vs_good.png</a><br>\nI found a suspicious diff when printing the string variable with gdb for the failing option test. The left is for the segfaulting version, and the right for the good version (with the unused extra eprintln). The bytes in the SmallString should form \"Hello World!\" but that does not seem to work out with my understanding of utf8 <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> Also should the length be 0?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/wgF7gtCscYbicvcLvnZ1OSWI/glue_option_bad_vs_good.png\" title=\"glue_option_bad_vs_good.png\"><img src=\"/user_uploads/22008/wgF7gtCscYbicvcLvnZ1OSWI/glue_option_bad_vs_good.png\"></a></div>",
        "id": 411417222,
        "sender_full_name": "Anton",
        "timestamp": 1704481191
    },
    {
        "content": "<p>Going to do some CI maintenance, all servers should be available again in ~60 mins</p>",
        "id": 419048697,
        "sender_full_name": "Anton",
        "timestamp": 1706710512
    },
    {
        "content": "<p>I'm seeing this failure on multiple branches - maybe the macOS x64 machine's LLVM setup is misconfigured somehow?</p>\n<p><a href=\"https://github.com/roc-lang/roc/actions/runs/8842548683/job/24281394888?pr=6676#step:6:283\">https://github.com/roc-lang/roc/actions/runs/8842548683/job/24281394888?pr=6676#step:6:283</a><br>\n<a href=\"https://github.com/roc-lang/roc/actions/runs/8842567707/job/24281450979?pr=6678#step:6:284\">https://github.com/roc-lang/roc/actions/runs/8842567707/job/24281450979?pr=6678#step:6:284</a></p>",
        "id": 435507295,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1714101257
    },
    {
        "content": "<p>I'll check it out, I updated z3 on that server Wednesday, homebrew may have updated other things too</p>",
        "id": 435575847,
        "sender_full_name": "Anton",
        "timestamp": 1714134359
    },
    {
        "content": "<p>The macos x64 issues have been resolved but I'm still encountering some strange linking issue on macos aarch64. WIll continue investigating tomorrow...</p>",
        "id": 435636383,
        "sender_full_name": "Anton",
        "timestamp": 1714154995
    },
    {
        "content": "<p>Ah, glad it wasn’t just me!</p>",
        "id": 435670513,
        "sender_full_name": "Bryce Miller",
        "timestamp": 1714172328
    },
    {
        "content": "<p>macos apple silicon issue will be resolved with <a href=\"https://github.com/roc-lang/roc/pull/6680\">PR#6680</a></p>",
        "id": 435754328,
        "sender_full_name": "Anton",
        "timestamp": 1714221812
    },
    {
        "content": "<p>cli_run::static_site_gen is experiencing flaky segfaults, I'll check it out</p>",
        "id": 437651519,
        "sender_full_name": "Anton",
        "timestamp": 1715175068
    },
    {
        "content": "<p>I think <a href=\"https://github.com/roc-lang/roc/pull/6849\">https://github.com/roc-lang/roc/pull/6849</a> got stuck. this may be my fault because for some reason turning an assert into a debug_assert triggers an infinite loop that eats all ram. So maybe some of those machines didn't recover properly from that earlier</p>",
        "id": 447994548,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1719677310
    },
    {
        "content": "<p>I'll check it out</p>",
        "id": 447996008,
        "sender_full_name": "Anton",
        "timestamp": 1719677761
    },
    {
        "content": "<p>I restarted both macos servers, they indeed ran out of memory. Both servers are running jobs again now :)</p>",
        "id": 447997269,
        "sender_full_name": "Anton",
        "timestamp": 1719678311
    },
    {
        "content": "<blockquote>\n<p>turning an assert into a debug_assert triggers an infinite loop that eats all ram</p>\n</blockquote>\n<p>That does not make sense to me. Especially when dealing with bools. I am really curious the actual cause.</p>",
        "id": 448001011,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1719680130
    },
    {
        "content": "<p>if anyone wants to look at the details <a href=\"https://github.com/roc-lang/roc/pull/6849/files#r1659918271\">https://github.com/roc-lang/roc/pull/6849/files#r1659918271</a></p>",
        "id": 448009496,
        "sender_full_name": "Folkert de Vries",
        "timestamp": 1719684465
    },
    {
        "content": "<p>We are seeing this failure in Ci for <span class=\"user-mention\" data-user-id=\"489294\">@Agus Zubiaga</span> 's PR on module params. </p>\n<div class=\"codehilite\"><pre><span></span><code>---- lowlevel_list_calls stdout ----\nthread &#39;lowlevel_list_calls&#39; panicked at crates/valgrind/src/lib.rs:202:9:\n`valgrind` exited with exit code 1. valgrind stdout was: &quot;&quot;\n\nvalgrind stderr was: &quot;--41196-- VALGRIND INTERNAL ERROR: Valgrind received a signal 11 (SIGSEGV) - exiting\n--41196-- si_code=1;  Faulting address: 0x2C9000;  sp: 0x1002db94f0\n\nvalgrind: the &#39;impossible&#39; happened:\n   Killed by fatal signal\n\nhost stacktrace:\n==41196==    at 0x581985FA: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)\n==41196==    by 0x581BA239: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)\n==41196==    by 0x581BAAE3: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)\n==41196==    by 0x58146BE6: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)\n==41196==    by 0x58147D32: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)\n==41196==    by 0x5812B932: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)\n==41196==    by 0x5812C2A0: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)\n==41196==    by 0x5805A431: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)\n==41196==    by 0x5809B269: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)\n==41196==    by 0x580E3F40: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)\n\nsched status:\n  running_tid=1\n\nThread 1: status = VgTs_Runnable (lwpid 41196)\nclient stack range: [0x1FFEFF7000 0x1FFF000FFF] client SP: 0x1FFEFF74D0\nvalgrind stack range: [0x1002CBA000 0x1002DB9FFF] top usage: 18744 of 1048576\n</code></pre></div>\n<p>I cannot reproduce the issue locally on my linux x64 dev machine</p>",
        "id": 462005208,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723518084
    },
    {
        "content": "<p>Just looking for ideas for how to investigate further.</p>",
        "id": 462005307,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723518140
    },
    {
        "content": "<p>Perhaps the best COA is to log this as an issue, and skip this test in the PR as it looks unrelated. That way we can unblock work on Module Params.</p>",
        "id": 462007583,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723518895
    },
    {
        "content": "<p>This looks similar to the other CI issue Anton has been investigating for basic-cli 0.13.0, so it may already be tracked by an issue.</p>",
        "id": 462007656,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1723518949
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/395097-compiler-development/topic/CI/near/462007583\">said</a>:</p>\n<blockquote>\n<p>Perhaps the best COA is to log this as an issue, and skip this test in the PR as it looks unrelated. That way we can unblock work on Module Params.</p>\n</blockquote>\n<p>I agree. Though maybe I'm missing something, I don't see anything in the Module Params PR that would cause this. We should make an issue and unblock the PR</p>",
        "id": 462033755,
        "sender_full_name": "Sam Mohr",
        "timestamp": 1723531552
    },
    {
        "content": "<blockquote>\n<p>This looks similar to the other CI issue Anton has been investigating for basic-cli 0.13.0,</p>\n</blockquote>\n<p>It is possible they have the same cause, but this is a different kind of valgrind error.</p>",
        "id": 462053925,
        "sender_full_name": "Anton",
        "timestamp": 1723538438
    },
    {
        "content": "<p>I'll try do a bit of investigating this week and we can ignore it if I don't make progress</p>",
        "id": 462055338,
        "sender_full_name": "Anton",
        "timestamp": 1723538785
    },
    {
        "content": "<p>CI failures in <a href=\"https://github.com/roc-lang/roc/pull/7016\">https://github.com/roc-lang/roc/pull/7016</a> look like a flake. I'm very sure this is unrelated to adding more tests for leb128.</p>\n<div class=\"codehilite\"><pre><span></span><code>test tests::tuple ... ok\nThis Roc code crashed with: &quot;Hit an erroneous type when creating a layout for `Num.add`&quot;\ntest tests::type_problem_binary_operator ... ok\nThis Roc code crashed with: &quot;Hit an erroneous type when creating a layout for `Num.add`&quot;\ntest tests::type_problem_function ... ok\nThis Roc code crashed with: &quot;Hit an erroneous type when creating a layout for `Bool.not`&quot;\ntest tests::type_problem_unary_operator ... ok\n\nfailures:\n\n---- tests::list_concat stdout ----\nthread &#39;tests::list_concat&#39; panicked at crates/repl_test/src/cli.rs:96:13:\nrepl exited unexpectedly before finishing evaluation. Exit status was ExitStatus(unix_wait_status(25856)) and stderr was &quot;&quot;\nstack backtrace:\n   0: rust_begin_unwind\n   1: core::panicking::panic_fmt\n   2: repl_test::cli::repl_eval\n   3: repl_test::cli::expect_success\n   4: core::ops::function::FnOnce::call_once\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\n\nfailures:\n    tests::list_concat\n\ntest result: FAILED. 142 passed; 1 failed; 2 ignored; 0 measured; 0 filtered out; finished in 6.47s\n</code></pre></div>",
        "id": 464300838,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1724315504
    },
    {
        "content": "<p>Power is out, some work going on in the street. Not sure how long it will take, we didn't receive any communication</p>",
        "id": 484478297,
        "sender_full_name": "Anton",
        "timestamp": 1732616462
    },
    {
        "content": "<p>Back up</p>",
        "id": 484488669,
        "sender_full_name": "Anton",
        "timestamp": 1732619697
    },
    {
        "content": "<p>anyone know what these CI failures are? <a href=\"https://github.com/roc-lang/roc/pull/7795\">https://github.com/roc-lang/roc/pull/7795</a></p>\n<blockquote>\n<p>error: failed to spawn build runner C:\\Users\\runneradmin\\AppData\\Local\\zig\\o\\5cc848492ce7dcb02ce75ed22301d2f5\\build.exe: FileNotFound</p>\n</blockquote>",
        "id": 518946182,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1747593734
    },
    {
        "content": "<p>Suggest that zig failed to build the build.zig script</p>",
        "id": 518946353,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747593879
    },
    {
        "content": "<p>Or some sort of caching issue</p>",
        "id": 518946365,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747593888
    },
    {
        "content": "<p>The new zig caching action may use too much data...hmm... This really should be one global cache for all this, but I think it is per branch...worse, it seems to be making many caches per branch...more than just per os/arch, but also has a timestamp...<br>\n<a href=\"/user_uploads/22008/QeHa0_d-NJtyL5uE6VKM9CCb/Screenshot-2025-05-18-at-12.49.55PM.png\">Screenshot 2025-05-18 at 12.49.55 PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/22008/QeHa0_d-NJtyL5uE6VKM9CCb/Screenshot-2025-05-18-at-12.49.55PM.png\" title=\"Screenshot 2025-05-18 at 12.49.55 PM.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"2122x1216\" src=\"/user_uploads/thumbnail/22008/QeHa0_d-NJtyL5uE6VKM9CCb/Screenshot-2025-05-18-at-12.49.55PM.png/840x560.webp\"></a></div>",
        "id": 518951852,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747597813
    },
    {
        "content": "<p>can't we have a lru or TTL policy on the cache</p>",
        "id": 518952022,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1747597924
    },
    {
        "content": "<p>Github uses LRU policy for kicking old data</p>",
        "id": 518952097,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747597983
    },
    {
        "content": "<p>But I'm not convinced it is caching correctly vs just spinning up tons of duplicate caches</p>",
        "id": 518952138,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747598009
    },
    {
        "content": "<p>Not sure fully though</p>",
        "id": 518952147,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747598017
    },
    {
        "content": "<blockquote>\n<p>anyone know what these CI failures are?</p>\n</blockquote>\n<p>I nuked the zig cache and it is working now. So yeah...caching</p>",
        "id": 518952919,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747598461
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/7796\">https://github.com/roc-lang/roc/pull/7796</a></p>",
        "id": 518953436,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1747598764
    },
    {
        "content": "<p>I have taken the raspberry pi arm64 linux CI offline, I'm going to set it up with debian 12 to fix a musl issue, it is currently on 11.</p>",
        "id": 537336741,
        "sender_full_name": "Anton",
        "timestamp": 1756835092
    },
    {
        "content": "<p>seems like we have some zstd-related CI failures:</p>\n<p><a href=\"https://github.com/roc-lang/roc/actions/runs/18083369705/job/51450232938\">https://github.com/roc-lang/roc/actions/runs/18083369705/job/51450232938</a></p>\n<div class=\"codehilite\"><pre><span></span><code>/Users/runner/work/roc/roc/build.zig.zon:42:20: error: invalid HTTP response: EndOfStream\n\n.url = &quot;https://github.com/roc-lang/roc-bootstrap/releases/download/zig-0.13.0/x86_64-macos-none.tar.xz?response-content-disposition=attachment&quot;,\n\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n/Users/runner/work/roc/roc/build.zig.zon:56:20: error: unable to discover remote git server capabilities: EndOfStream\n\n.url = &quot;git+https://github.com/allyourcodebase/zstd.git#1.5.7&quot;,\n\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre></div>\n<p><a href=\"https://github.com/roc-lang/roc/actions/runs/18083369705/job/51450232948\">https://github.com/roc-lang/roc/actions/runs/18083369705/job/51450232948</a></p>\n<blockquote>\n<p>error: error: unable to find dynamic system library 'z' using strategy 'paths_first'. searched paths: none</p>\n</blockquote>",
        "id": 542017036,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1759146882
    },
    {
        "content": "<p>I'm looking at the z library issue</p>",
        "id": 542032576,
        "sender_full_name": "Anton",
        "timestamp": 1759150846
    },
    {
        "content": "<p>Interesting. Should be statically compiled and part of roc bootstrap iirc</p>",
        "id": 542070638,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1759159313
    },
    {
        "content": "<p>roc bootstrap is for zig 13, so it's likely we're not using that at all</p>",
        "id": 542070890,
        "sender_full_name": "Anton",
        "timestamp": 1759159372
    },
    {
        "content": "<p><code>unable to find dynamic system library 'z'</code> showed up without a change in code, it's caused by a change in the runner OS image (so depenecy change most likely).</p>",
        "id": 542071152,
        "sender_full_name": "Anton",
        "timestamp": 1759159435
    },
    {
        "content": "<p>I don't hit it on my rpi arm64, it's strange</p>",
        "id": 542071223,
        "sender_full_name": "Anton",
        "timestamp": 1759159454
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/channel/395097-compiler-development/topic/CI/near/542070890\">said</a>:</p>\n<blockquote>\n<p>roc bootstrap is for zig 13, so it's likely we're not using that at all</p>\n</blockquote>\n<p>That shouldn't matter. It is just a pile of static libraries that happened to be built with zig 0.13.0. it should work to statically get libz from it on all supported systems if we want.</p>",
        "id": 542071428,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1759159510
    },
    {
        "content": "<p>Though I guess we currently get it from <code>allypurcodebase</code> which I would have assumed also statically compiled it and shouldn't need a system dep....idk</p>",
        "id": 542071629,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1759159557
    },
    {
        "content": "<p>Though I realize I may be mixed up on lib names... Z vs zstd.</p>",
        "id": 542072507,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1759159773
    },
    {
        "content": "<p>Yeah :p both are compression libs to make the confusion even more likely <span aria-label=\"smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 542072824,
        "sender_full_name": "Anton",
        "timestamp": 1759159843
    },
    {
        "content": "<p>It might be the case that roc bootstrap only has zstd and not z....don't recall</p>",
        "id": 542080751,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1759161724
    },
    {
        "content": "<p>Looks like both are in there from a quick look</p>",
        "id": 542082858,
        "sender_full_name": "Anton",
        "timestamp": 1759162291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"361169\">Anton</span> <a href=\"#narrow/channel/395097-compiler-development/topic/CI/near/542071223\">said</a>:</p>\n<blockquote>\n<p>I don't hit it on my rpi arm64, it's strange</p>\n</blockquote>\n<p>My pi does not have llvm-config on it and github CI ubuntu 24 arm does, looks like that changes a lot because: \"... <code>llvm-config</code> was not found (Only building repro executables)\".</p>",
        "id": 542085291,
        "sender_full_name": "Anton",
        "timestamp": 1759162904
    },
    {
        "content": "<p>What should we do in CI, only build repro executables or the full thing for <code>zig build -Dfuzz -Dsystem-afl=false</code> ?</p>",
        "id": 542085435,
        "sender_full_name": "Anton",
        "timestamp": 1759162948
    },
    {
        "content": "<p>Preferably ci builds everything to make sure things don't go stale</p>",
        "id": 542093635,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1759165238
    },
    {
        "content": "<p>Doesn't need to run everything, but preferably builds it. Especially given zig won't even type check what doesn't build.</p>",
        "id": 542093717,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1759165264
    },
    {
        "content": "<p>I put in a temp fix first to unblock CI <a href=\"https://github.com/roc-lang/roc/issues/8254\">#8254</a></p>",
        "id": 542096590,
        "sender_full_name": "Anton",
        "timestamp": 1759166152
    },
    {
        "content": "<p>These are flaky errors btw <span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span>:</p>\n<div class=\"codehilite\"><pre><span></span><code>/Users/runner/work/roc/roc/build.zig.zon:42:20: error: invalid HTTP response: EndOfStream\n\n.url = &quot;https://github.com/roc-lang/roc-bootstrap/releases/download/zig-0.13.0/x86_64-macos-none.tar.xz?response-content-disposition=attachment&quot;,\n\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n/Users/runner/work/roc/roc/build.zig.zon:56:20: error: unable to discover remote git server capabilities: EndOfStream\n\n.url = &quot;git+https://github.com/allyourcodebase/zstd.git#1.5.7&quot;,\n\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre></div>",
        "id": 542099304,
        "sender_full_name": "Anton",
        "timestamp": 1759166929
    },
    {
        "content": "<p>gotcha, thanks!</p>",
        "id": 542099453,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1759166969
    },
    {
        "content": "<p>I wonder if we could put some retries around those or something</p>",
        "id": 542099504,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1759166980
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> I'll do that</p>",
        "id": 542100013,
        "sender_full_name": "Anton",
        "timestamp": 1759167133
    },
    {
        "content": "<p>I'm going to see if better caching can fix it too, that results in cleaner CI code.</p>",
        "id": 542101844,
        "sender_full_name": "Anton",
        "timestamp": 1759167707
    }
]