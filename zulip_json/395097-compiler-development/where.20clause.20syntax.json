[
    {
        "content": "<p>I've dug bath through zulip and put together the following examples which show the usage of <code>where</code> clause. </p>\n<p><a href=\"https://gist.github.com/lukewilliamboswell/8aab3d62da2859b7dedbbe69fe0a895f\">https://gist.github.com/lukewilliamboswell/8aab3d62da2859b7dedbbe69fe0a895f</a></p>\n<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> can you confirm this is the inteded syntax and I haven't missed anything.</p>\n<p>I'll add snapshots for these to help us implement it later.</p>",
        "id": 526908630,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751512260
    },
    {
        "content": "<p>i've implemented the parsing of these</p>",
        "id": 526908714,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751512340
    },
    {
        "content": "<p>I wasn't sure if we wanted <code>module(a)</code> every time, or only in the special case where you are referring to a return type.</p>",
        "id": 526908720,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751512346
    },
    {
        "content": "<p>do you mean for can?</p>",
        "id": 526908722,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751512349
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"781658\">Anthony Bullard</span> <a href=\"#narrow/channel/395097-compiler-development/topic/where.20clause.20syntax/near/526908714\">said</a>:</p>\n<blockquote>\n<p>i've implemented the parsing of these</p>\n</blockquote>\n<p>Oh cool!</p>",
        "id": 526908759,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751512388
    },
    {
        "content": "<p>you should find at least one snapshot that contains them</p>",
        "id": 526908795,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1751512428
    },
    {
        "content": "<p>I was thinking more about the semantics than just parsing the syntax tbh</p>",
        "id": 526908796,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751512431
    },
    {
        "content": "<p>Looks like I missed the <code>where a.Decode</code> use case -- where you can just point to a type declared in that module. We support an Alias with where clauses to make something like <code>Eq</code> etc.</p>",
        "id": 526908874,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751512511
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Hash(a) : a\n    where\n        a.hash(hasher) -&gt; hasher,\n        hasher.Hasher,\n</code></pre></div>",
        "id": 526908927,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751512556
    },
    {
        "content": "<p>I've got enough here then already to build out some more snapshots then. And possibly start implementing in Can also.</p>",
        "id": 526909194,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1751512671
    }
]