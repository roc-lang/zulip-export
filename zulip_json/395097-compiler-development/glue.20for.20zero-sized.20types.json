[
    {
        "content": "<p>I'm working on some glue improvements for work, specifically around generating TypeScript type definitions - and one thing that came up is that generating zero-sized unit types (e.g. for Roc functions that take <code>{}</code> as an argument) doesn't really work the way it does in rust glue get (because rust will just drop the zst the same way Roc will)</p>",
        "id": 401030293,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1699480830
    },
    {
        "content": "<p>and I realized C will have the same problem</p>",
        "id": 401030319,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1699480839
    },
    {
        "content": "<p>so I think what we should start doing is having glue just stop generating these types in general - like just drop unit arguments, fields, etc.</p>",
        "id": 401030437,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1699480875
    },
    {
        "content": "<p>I did this in the .roc glue file but I realized I think it's less error prone if <code>roc glue</code> does it, because it can share code with the compiler for determining what should get dropped</p>",
        "id": 401030663,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1699480933
    },
    {
        "content": "<p>I had a vague concern that this would make the Roc types and generated types on the other side diverge a bit (e.g. the Roc function takes <code>{}</code> but on the other side of glue it's a zero-arg function) but I can't think of a situation where that would be a significant problem</p>",
        "id": 401030919,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1699481021
    },
    {
        "content": "<p>like maybe if you send across a single-tag union and the wrapper gets dropped? Seems like not a big deal, especially since that idiom might not be free at runtime on the other side</p>",
        "id": 401031211,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1699481147
    },
    {
        "content": "<p>Sounds fine.</p>",
        "id": 401037912,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1699484730
    },
    {
        "content": "<p>wasm is my only potential concern. Cause it has function signature checking (I am pretty sure, at least num arguments). We need to  make sure we never have issues where even though the input is a zero sized type, it is actually passed around and wasm expects 1 arg or it won't type check.</p>",
        "id": 401038052,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1699484822
    },
    {
        "content": "<p>I never came across any issues with that. Dropping zero sized types is fine.</p>",
        "id": 401038699,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1699485224
    },
    {
        "content": "<p>Awesome</p>",
        "id": 401038761,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1699485249
    }
]