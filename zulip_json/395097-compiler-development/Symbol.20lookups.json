[
    {
        "content": "<p>I'm working on canonicalization and I'm thinking about how <code>Symbol</code> gets used in various places. It seems like although they're globally unique, we don't actually rely on that property in practice - e.g. we keep track of a scope in <a href=\"https://github.com/roc-lang/roc/blob/930e29870673a61ae22d87f3fb801d9c0f62b2a7/crates/compiler/solve/src/solve/scope.rs#L12\">type checking</a> and <a href=\"https://github.com/roc-lang/roc/blob/930e29870673a61ae22d87f3fb801d9c0f62b2a7/crates/compiler/gen_llvm/src/llvm/scope.rs#L13\">code gen</a> so that we can change the meaning of a given <code>Symbol</code> as we traverse various scopes</p>",
        "id": 419573054,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1706933022
    },
    {
        "content": "<p>it would definitely simplify things and reduce memory usage if we could drop the property that symbols need to be globally unique and instead have them be essentially per-module string interning IDs and that's it</p>",
        "id": 419573100,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1706933052
    },
    {
        "content": "<p>so I'm wondering - does anyone know of any places in the compiler where we rely on symbols being globally unique?</p>",
        "id": 419573126,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1706933090
    },
    {
        "content": "<p>Would a symbol imported from another module not cause a potential clash in this system?</p>",
        "id": 419593279,
        "sender_full_name": "Brian Carroll",
        "timestamp": 1706953623
    },
    {
        "content": "<p>oh those will already need to be translated</p>",
        "id": 419600520,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1706959453
    },
    {
        "content": "<p>because of caching - if we want to cache the canonical IR for a given module on disk, then it can't have (our current concept of) <code>ModuleId</code> in any of its identifiers, because those can change depending on which modules are being compiled, random chance involving when threads happen to finish work, etc.</p>",
        "id": 419600696,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1706959609
    },
    {
        "content": "<p>so I guess I shouldn't have said globally unique, but rather unique within the module <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 419600740,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1706959644
    }
]