[
    {
        "content": "<p>anyone run into this before or know what it is? It happened when I switched <code>mainForHost</code> from a function which takes a <code>RocStr</code> to a function which takes a struct with two <code>RocStr</code>s and a <code>RocList</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ RUST_BACKTRACE=1 roc build\nðŸ”¨ Rebuilding platform...\nthread &#39;main&#39; panicked at &#39;Found StructValue(StructValue { struct_value: Value { name: &quot;&quot;, address: 0x600002114ac8, is_const: false, is_null: false, is_undef: false, llvm_value: &quot;{ %list.RocList, %str.RocStr, %str.RocStr } %1&quot;, llvm_type: &quot;{ %list.RocList, %str.RocStr, %str.RocStr }&quot; } }) but expected PointerValue variant&#39;, /Users/rtfeldman/.cargo/git/checkouts/inkwell-55729a4c43239568/95a3a13/src/values/enums.rs:302:13\nstack backtrace:\n   0: rust_begin_unwind\n             at /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/std/src/panicking.rs:578:5\n   1: core::panicking::panic_fmt\n             at /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/core/src/panicking.rs:67:14\n   2: inkwell::values::enums::BasicValueEnum::into_pointer_value\n   3: roc_gen_llvm::llvm::build::expose_function_to_host_help_c_abi\n   4: roc_gen_llvm::llvm::build::build_procedures_help\n   5: roc_gen_llvm::llvm::build::build_procedures\n   6: roc_build::program::gen_from_mono_module\n   7: roc_build::program::build_loaded_file\n   8: roc_build::program::build_file\n   9: roc_cli::build\n  10: roc::main\n</code></pre></div>",
        "id": 392000110,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695160116
    },
    {
        "content": "<p>I'm guessing from the error that one part of code gen thinks it's passing a pointer to the struct, but something else is expecting the contents of the struct to be on the stack directly, and the disagreement is leading to an Inkwell panic</p>",
        "id": 392000197,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695160170
    },
    {
        "content": "<p>I think that is likely exactly the error. We are assuming types wrong. That said, this is in the conversion from the roc version of the function to a c abi friendly wrapper function.</p>",
        "id": 392011438,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695166819
    }
]