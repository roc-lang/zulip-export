[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/channel/395097-compiler-development/topic/zig.20compiler.20-.20libroc.20exploration/near/497311044\">said</a>:</p>\n<blockquote>\n<p>I should be able to return from the repl to the platform at any point. Then the platform should be able to do something with the object I return (whatever type it may be).</p>\n</blockquote>\n<p>I am confused a little by this. </p>\n<p>For example, how can I have a REPL and a host both using the terminal stdio. Particularly if the platform doesn't even know, because it's just a shimmed out <code>app.o</code>. </p>\n<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> can you describe the way we build a REPL environment?</p>",
        "id": 497314807,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1738548362
    },
    {
        "content": "<p>This was not talking about the shim. This was talking about embedded libroc and it running the interpreter as a repl.</p>",
        "id": 497315199,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738548601
    },
    {
        "content": "<p>Ahk... I think the platform part threw me. </p>\n<blockquote>\n<p>the platform should be able to do something with the object I return</p>\n</blockquote>",
        "id": 497315301,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1738548654
    },
    {
        "content": "<p>Here you were thinking the \"REPL\" is the platform that is driving things.. so we're not really talking platform/application in a normal sense</p>",
        "id": 497315360,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1738548706
    },
    {
        "content": "<p>That said, I do think the shim will eventually support a debugging mode. That will probably have to work like pdb (python debugger). For that you launch a separate debugger process and give it the PID of the application using the shim. It can then use interrupts, I believe, to pass info to the interpreter for single stepping and such. (Not 100% sure how it works, but I'm sure we can look at how python does it)</p>",
        "id": 497315361,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738548706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/395097-compiler-development/topic/zig.20compiler.20-.20REPL.20exploration/near/497315360\">said</a>:</p>\n<blockquote>\n<p>Here you were thinking the \"REPL\" is the platform that is driving things.. so we're not really talking platform/application in a normal sense</p>\n</blockquote>\n<p>Yeah</p>",
        "id": 497315372,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1738548720
    },
    {
        "content": "<p>(deleted) -- I'm just going to hack on some ideas</p>",
        "id": 497315527,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1738548840
    }
]