[
    {
        "content": "<p>No new nightlies have been uploaded in the last two days because of hanging gen tests on macos apple silicon. They don't hang when using nix but they do without. <code>gen_abilities::inspect::num</code> and <code>gen_abilities::inspect::list</code> always hang. Going to bisect now.</p>",
        "id": 407258748,
        "sender_full_name": "Anton",
        "timestamp": 1702307029
    },
    {
        "content": "<p>This is coming from <a href=\"https://github.com/roc-lang/roc/pull/6216\">PR#6216</a>, I'll see if can narrow it down further.</p>",
        "id": 407260993,
        "sender_full_name": "Anton",
        "timestamp": 1702307598
    },
    {
        "content": "<p>Almost certainly the compiler rt changes somehow</p>",
        "id": 407265724,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702308948
    },
    {
        "content": "<p>The breaking change is either coming from e621de3, for which the test fails with:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;gen_abilities::inspect::num&#39; panicked at &#39;Unrecognized builtin function: &quot;longjmp&quot; - if you&#39;re working on the Roc compiler, do you need to rebuild the bitcode? See compiler/builtins/bitcode/README.md&#39;, crates/compiler/gen_llvm/src/llvm/bitcode.rs:63:28\n</code></pre></div>\n<p>Or from 1ad9933 where it's stuck for the first time.</p>",
        "id": 407265736,
        "sender_full_name": "Anton",
        "timestamp": 1702308952
    },
    {
        "content": "<p>The test also runs a lot slower starting with be06599, it went from ~0.7s to ~3.4s for the single num test.</p>",
        "id": 407266076,
        "sender_full_name": "Anton",
        "timestamp": 1702309058
    },
    {
        "content": "<p>So I first changed things in a way that accidentally made things way slower. Then later commits fixed that</p>",
        "id": 407266489,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702309188
    },
    {
        "content": "<p>So the e632de3 commit should have fixed test execution time (maybe still a minor regression but should be very small)</p>",
        "id": 407267054,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702309354
    },
    {
        "content": "<p>1ad9933 theoretically re-added the symbol needed for long jump, but maybe it didn't get added fully correctly.</p>",
        "id": 407267198,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702309395
    },
    {
        "content": "<p>Also weird it just affects those two tests</p>",
        "id": 407267397,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702309448
    },
    {
        "content": "<p>Is the zig version correct outside of nix? Could there be some sort of versioning issue?</p>",
        "id": 407267748,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702309553
    },
    {
        "content": "<p>zig is on 0.11.0</p>",
        "id": 407271649,
        "sender_full_name": "Anton",
        "timestamp": 1702310750
    },
    {
        "content": "<p>Can you share the <code>builtins-host.ll</code></p>",
        "id": 407271818,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702310794
    },
    {
        "content": "<p>Should be in compiler/builtins/bitcode/zig-out</p>",
        "id": 407271903,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702310822
    },
    {
        "content": "<p>Oh, I guess I should double check, this are failing with the llvm backend specifically?</p>",
        "id": 407272001,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702310850
    },
    {
        "content": "<p><a href=\"/user_uploads/22008/JGUbNp3cuRvhKMU6VplB51E9/builtins-host.ll\">builtins-host.ll</a></p>",
        "id": 407272201,
        "sender_full_name": "Anton",
        "timestamp": 1702310899
    },
    {
        "content": "<blockquote>\n<p>Oh, I guess I should double check, this are failing with the llvm backend specifically?</p>\n</blockquote>\n<p>I'm running <code>cargo test --release -p test_gen gen_abilities::inspect::num</code> I think that uses llvm</p>",
        "id": 407272307,
        "sender_full_name": "Anton",
        "timestamp": 1702310929
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"343810\">Brendan Hansknecht</span> <a href=\"#narrow/stream/395097-compiler-development/topic/stale.20nightlies/near/407267397\">said</a>:</p>\n<blockquote>\n<p>Also weird it just affects those two tests</p>\n</blockquote>\n<p>It also happens with gen_list and gen_compare. The gen_abilities failures are the first I could reliably reproduce.</p>",
        "id": 407272485,
        "sender_full_name": "Anton",
        "timestamp": 1702310991
    },
    {
        "content": "<p>hmm... nothing looks to have change around <code>setjmp</code> or <code>longjmp</code> in the bitcode.</p>",
        "id": 407274751,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702311689
    },
    {
        "content": "<p>can you try running on <code>testing-for-nightlies</code></p>",
        "id": 407275469,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702311916
    },
    {
        "content": "<p>Success :)</p>",
        "id": 407276553,
        "sender_full_name": "Anton",
        "timestamp": 1702312248
    },
    {
        "content": "<p>Interesting....</p>",
        "id": 407282925,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702314205
    },
    {
        "content": "<p>Can you also do a quick perf check vs main. This is theoretically slightly slower than my other fix</p>",
        "id": 407283024,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702314233
    },
    {
        "content": "<p>Also, I wonder what we are DCEing wrong</p>",
        "id": 407283101,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702314246
    },
    {
        "content": "<p>for gen_abilities_inspect::num it's ~0.42s on main and ~0.6s on testing-for-nightlies. Will do another one with all of gen_abilities.</p>",
        "id": 407287073,
        "sender_full_name": "Anton",
        "timestamp": 1702315548
    },
    {
        "content": "<p>For all of gen_abilities there is no difference</p>",
        "id": 407287652,
        "sender_full_name": "Anton",
        "timestamp": 1702315750
    },
    {
        "content": "<p>When you get the chance can you pull again and just test the functionality of the branch?</p>",
        "id": 407288211,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702315926
    },
    {
        "content": "<p>It's stuck again unfortunately</p>",
        "id": 407294874,
        "sender_full_name": "Anton",
        "timestamp": 1702318321
    },
    {
        "content": "<p>I'm done for today, but it should be reproducible locally (outside nix) on any apple silicon device. Setting up the dependencies without nix is pretty easy:</p>\n<div class=\"codehilite\"><pre><span></span><code>brew install llvm@16\nbrew install zig\ncurl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh\nexport LLVM_SYS_160_PREFIX=$(brew --prefix llvm@16)\n</code></pre></div>",
        "id": 407299504,
        "sender_full_name": "Anton",
        "timestamp": 1702320278
    },
    {
        "content": "<p>I actually just cleaned up the commit and am just gonna PR the removal of early DCE. Should fix the issue.</p>",
        "id": 407299744,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702320368
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/pull/6254\">https://github.com/roc-lang/roc/pull/6254</a></p>",
        "id": 407299822,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702320402
    },
    {
        "content": "<p>Unless I mixed something up, this should be equivalent to what passed before, but cleaned up into a PR.</p>",
        "id": 407299882,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702320424
    },
    {
        "content": "<p><code> cargo test --release -p test_gen gen_abilities::inspect::num</code> is still stuck on latest main. Will check out the diff with <code>testing-for-nightlies</code>.</p>",
        "id": 407495658,
        "sender_full_name": "Anton",
        "timestamp": 1702393048
    },
    {
        "content": "<p>The testing-for-nightlies branch only had the following removed:</p>\n<div class=\"codehilite\"><pre><span></span><code>    let mpm = PassManager::create(());\n    mpm.add_global_dce_pass();\n    mpm.run_on(&amp;module);\n</code></pre></div>\n<p><a href=\"https://github.com/roc-lang/roc/pull/6254\">PR#6254</a> does have some extra changes</p>",
        "id": 407499524,
        "sender_full_name": "Anton",
        "timestamp": 1702394004
    },
    {
        "content": "<p>Interesting. I guess some more functions need to be external even if dce is late</p>",
        "id": 407504679,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702395275
    },
    {
        "content": "<p><a href=\"https://github.com/roc-lang/roc/issues/6263\">#6263</a> works locally for me outside of nix.</p>",
        "id": 407541972,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702406813
    },
    {
        "content": "<p>All seemed well but the basic-cli tests revealed an error:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;main&#39; panicked at &#39;Undefined Symbol in relocation, (+925, Relocation { kind: PltRelative, encoding: Generic, size: +20, target: Symbol(SymbolIndex(+5e)), addend: +fffffffffffffffc, implicit_addend: false }): Ok(Symbol { name: &quot;__udivti3&quot;, address: +0, size: +0, kind: Label, section: Undefined, scope: Unknown, weak: false, flags: Elf { st_info: +10, st_other: +0 } })&#39;, crates/linker/src/elf.rs:1486:25\n</code></pre></div>\n<p><code>__udivti3</code> appears to be another special function</p>",
        "id": 407695365,
        "sender_full_name": "Anton",
        "timestamp": 1702463652
    },
    {
        "content": "<p>I'll add it to must_keep and see if that fixes things</p>",
        "id": 407699788,
        "sender_full_name": "Anton",
        "timestamp": 1702465076
    },
    {
        "content": "<p>It does :)</p>",
        "id": 407701816,
        "sender_full_name": "Anton",
        "timestamp": 1702465693
    },
    {
        "content": "<p>that function name sounds familiar...I'm pretty sure we've run into issues involving it before</p>",
        "id": 407716421,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1702470838
    },
    {
        "content": "<p>Yes indeed, it's mentioned in <a href=\"https://github.com/roc-lang/roc/issues/3609\">#3609</a> and John was seemingly the first to find the current bug 3 days ago in <a href=\"https://github.com/roc-lang/roc/issues/6245\">#6245</a></p>",
        "id": 407719258,
        "sender_full_name": "Anton",
        "timestamp": 1702471789
    },
    {
        "content": "<p>Weird. That definitely should not be a must keep function. It should only be needed if a used built-in calls it.</p>",
        "id": 407758753,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702483351
    },
    {
        "content": "<p>Maybe it is required cause somehow <code>__udivti3</code> is generated by an llvm instrisic call. That is general what creates must keep functions. They don't think they are used until the llvm instrisics resolve to real function calls. So DCE removes them.</p>",
        "id": 407769512,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1702485971
    },
    {
        "content": "<p>Can someone approve <a href=\"https://github.com/roc-lang/roc/issues/6270\">#6270</a> so I can release nightlies again?</p>",
        "id": 407776343,
        "sender_full_name": "Anton",
        "timestamp": 1702488181
    }
]