[
    {
        "content": "<p>I'm writing a Swift glue package for Roc platform development, and I'm working on autogenerating safe bindings between the languages in a way that would essentially work like a mixed language target. What would be the best way to get types (and their layouts) and signatures from the Roc side to have something I could generate the bindings from? I would also need to know how these translate to C signatures</p>\n<p>Swift would get access to declarations provided by the Roc side, and Roc would get access to everything annotated with an <code>@roc</code> attached macro (which could conveniently generate the ffi and raise compile errors if required). In theory it would be completely safe and seamless, and not introduce any overhead vs writing the ffi manually <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 446388845,
        "sender_full_name": "Lua",
        "timestamp": 1719130394
    },
    {
        "content": "<p>So for instance how would I expose a generic function across ffi? for example:</p>\n<div class=\"codehilite\" data-code-language=\"Swift\"><pre><span></span><code><span class=\"p\">@</span><span class=\"n\">roc</span> <span class=\"kd\">func</span> <span class=\"nf\">append</span><span class=\"p\">&lt;</span><span class=\"n\">T</span><span class=\"p\">:</span> <span class=\"n\">RocType</span><span class=\"p\">&gt;(</span><span class=\"kc\">_</span> <span class=\"n\">element</span><span class=\"p\">:</span>  <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">to</span> <span class=\"n\">list</span><span class=\"p\">:</span> <span class=\"n\">RocList</span><span class=\"p\">&lt;</span><span class=\"n\">T</span><span class=\"p\">&gt;)</span> <span class=\"p\">-&gt;</span> <span class=\"n\">RocList</span><span class=\"p\">&lt;</span><span class=\"n\">T</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span> <span class=\"p\">...</span> <span class=\"p\">}</span>\n</code></pre></div>\n<p>What would the generated C ABI signature have to look like?</p>",
        "id": 446396909,
        "sender_full_name": "Lua",
        "timestamp": 1719135293
    },
    {
        "content": "<p>Does <span class=\"user-mention\" data-user-id=\"281543\">@Folkert de Vries</span> 's answer here help? <a href=\"#narrow/stream/395097-compiler-development/topic/Glue.20Types.20Specification/near/445787553\">https://roc.zulipchat.com/#narrow/stream/395097-compiler-development/topic/Glue.20Types.20Specification/near/445787553</a></p>",
        "id": 446398091,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719136407
    },
    {
        "content": "<p>I made a <a href=\"https://github.com/lukewilliamboswell/roc-platform-template-zig/blob/main/glue.roc\"><code>glue.roc</code> script</a> that generates a <code>types.json</code> file with the types provided from roc compiler. I found playing with a super simple platform, and tweaking the type of <code>mainForHost</code> I could see how the glue types changed. But I'm not sure if this helps you much?</p>",
        "id": 446398115,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719136439
    },
    {
        "content": "<p>This sounds like a great project, I wish I could be of more assistance.</p>",
        "id": 446398161,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719136452
    },
    {
        "content": "<p>You can run that glue script using <code>roc glue glue.roc host/ platform/main.roc</code></p>",
        "id": 446398451,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1719136744
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/395097-compiler-development/topic/Getting.20Roc.20signatures.20from.20platform.20code/near/446398091\">said</a>:</p>\n<blockquote>\n<p>Does <span class=\"user-mention silent\" data-user-id=\"281543\">Folkert de Vries</span> 's answer here help? <a href=\"#narrow/stream/395097-compiler-development/topic/Glue.20Types.20Specification/near/445787553\">https://roc.zulipchat.com/#narrow/stream/395097-compiler-development/topic/Glue.20Types.20Specification/near/445787553</a></p>\n</blockquote>\n<p>I was hoping there would be something like <a href=\"https://github.com/swiftlang/swift/blob/main/docs/ABI/TypeLayout.rst#fragile-struct-and-tuple-layout\">https://github.com/swiftlang/swift/blob/main/docs/ABI/TypeLayout.rst#fragile-struct-and-tuple-layout</a> where I could find a brief overview of the abi. I know Rust, though not as well as Zig or Swift, but hopefully I will be able to get the information I need from the source code instead <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/395097-compiler-development/topic/Getting.20Roc.20signatures.20from.20platform.20code/near/446398115\">said</a>:</p>\n<blockquote>\n<p>I made a <a href=\"https://github.com/lukewilliamboswell/roc-platform-template-zig/blob/main/glue.roc\"><code>glue.roc</code> script</a> that generates a <code>types.json</code> file with the types provided from roc compiler. I found playing with a super simple platform, and tweaking the type of <code>mainForHost</code> I could see how the glue types changed. But I'm not sure if this helps you much?</p>\n</blockquote>\n<p>It might. I definitely need a way to get the types somehow, but I am not sure this will have all the information I need. I tried to see how the lsp is getting type information but it seems to be reusing code from the compiler â€” I'm using Zig not Rust so I can't do that.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"515757\">Luke Boswell</span> <a href=\"#narrow/stream/395097-compiler-development/topic/Getting.20Roc.20signatures.20from.20platform.20code/near/446398161\">said</a>:</p>\n<blockquote>\n<p>This sounds like a great project, I wish I could be of more assistance.</p>\n</blockquote>\n<p>Thank you <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 446829499,
        "sender_full_name": "Lua",
        "timestamp": 1719308449
    }
]