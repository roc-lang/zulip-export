[
    {
        "content": "<p>After making some changes to <code>load</code>, I managed to make some test modules with inline imports load and canonicalize correctly (yay!). However, if I include the <code>Dict</code> builtin, it hits this <a href=\"https://github.com/roc-lang/roc/blob/a62c0ce054abd70e37013773ddf009920d8dd1ee/crates/compiler/constrain/src/expr.rs#L3685\"><code>todo</code></a> with <a href=\"https://github.com/roc-lang/roc/blob/a62c0ce054abd70e37013773ddf009920d8dd1ee/crates/compiler/builtins/roc/Dict.roc#L778-L790\"><code>Dict.findHelper</code></a> and <code>TypeTag::Error</code>.</p>\n<p>I likely missed something while rearranging things in load/can, but I think printing the error might help find the root cause. The <a href=\"https://github.com/roc-lang/roc/blob/main/crates/compiler/types/src/types.rs#L410-L412\">docs for <code>TypeTag::Error</code></a> mention \"The problem is at the index of the type tag\", but what array am I supposed to get that from?</p>",
        "id": 410451820,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1703868611
    },
    {
        "content": "<p>Ok, found the issue! I forgot to update the <code>Dict</code> builtin to use the new import syntax, and currently I'm just ignoring the entries in the old <code>imports</code> header. So it was failing to lookup <code>U64</code> from <code>Num</code>, because builtins have to explicitly import other builtins.</p>\n<p>Still curious about how I'd get the <code>Problem</code> for <code>Error</code>, but not a blocker <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 410454834,
        "sender_full_name": "Agus Zubiaga",
        "timestamp": 1703870220
    }
]