[
    {
        "content": "<p>I think we need <code>dbg</code> to be a keyword rather than using dispatch after all</p>",
        "id": 500755166,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004089
    },
    {
        "content": "<p>the problem is, if I use it in a call chain like <code>foo.dbg().bar()</code> then it's obvious that <code>dbg</code> returns whatever you give it</p>",
        "id": 500755292,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004144
    },
    {
        "content": "<p>but then if I use it as a standalone statement like <code>foo.dbg()</code> then I'll get a warning because it doesn't evaluate to <code>{}</code></p>",
        "id": 500755486,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004207
    },
    {
        "content": "<p>so then either I need to write <code>_ = foo.dbg()</code> or else we have to make an exception for <code>dbg</code></p>",
        "id": 500755585,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004251
    },
    {
        "content": "<p>on top of which, in general it's weird to have it look like a normal pure function because it doesn't get optimized away like pure functions are allowed to be</p>",
        "id": 500755716,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004303
    },
    {
        "content": "<p>I think it's usual enough that it just makes more sense to be a keyword</p>",
        "id": 500755743,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004317
    },
    {
        "content": "<p>so I think we should do:</p>\n<div class=\"codehilite\"><pre><span></span><code>dbg foo\n</code></pre></div>\n<p>works like <code>expect foo</code> as a statement</p>",
        "id": 500755860,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004348
    },
    {
        "content": "<p>or <code>return foo</code></p>",
        "id": 500755887,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004359
    },
    {
        "content": "<p>and then if you want it in a call chain, we allow <code>foo-&gt;dbg.bar()</code></p>",
        "id": 500755975,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004387
    },
    {
        "content": "<p>(or whatever we end up using for the non-dispatch call chain; I'm default assuming <code>-&gt;</code> but that could change)</p>",
        "id": 500756074,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004442
    },
    {
        "content": "<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> I suppose we could also allow <code>-&gt;expect</code> and even <code>-&gt;return</code> if desired</p>",
        "id": 500756279,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1740004529
    },
    {
        "content": "<p>I'm glad you say this, because this is how I've implemented <code>dbg</code> so far in the compiler <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 500759607,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740006093
    }
]