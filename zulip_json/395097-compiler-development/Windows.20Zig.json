[
    {
        "content": "<p>I have a problem I'm not sure how to resolve. I am trying to get all the zig tests passing on Windows, however there is a conflict where if I make the changes required for the zig tests to pass, then at least one or more cli rust tests fail. And if I makes the changes to fix the rust cli tests then the zig tests now break again. </p>\n<h1>Zig tests PASS Rust tests FAIL</h1>\n<p>If I add the condition on windows in <code>crates\\compiler\\builtins\\bitcode\\src\\libc.zig</code> on line 12 like follows in addition to some other changes all the zig tests will PASS.</p>\n<div class=\"codehilite\" data-code-language=\"Zig\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">arch</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">wasm32</span><span class=\"w\"> </span><span class=\"k\">and</span><span class=\"w\"> </span><span class=\"n\">builtin</span><span class=\"p\">.</span><span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">tag</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">windows</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nb\">@export</span><span class=\"p\">(</span><span class=\"n\">memcpy</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"memcpy\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">linkage</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">Strong</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>However the cli breakout test will fail with <code>I don't know the address of the memcpy function! this may cause segfaults</code></p>\n<h1>Zig tests FAIL Rust tests PASS</h1>\n<p>Reverting it back to the below will fix the cli rust tests, but now zig tests will fail.</p>\n<div class=\"codehilite\" data-code-language=\"Zig\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">arch</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">wasm32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nb\">@export</span><span class=\"p\">(</span><span class=\"n\">memcpy</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.{</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"memcpy\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">linkage</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">Strong</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>e.g.</p>\n<div class=\"codehilite\" data-code-language=\"ps\"><pre><span></span><code>PS C:\\Users\\bosyl\\Documents\\GitHub\\roc\\crates\\compiler\\builtins\\bitcode\\src&gt; zig test .\\main.zig\nlld-link: error: duplicate symbol: memcpy\n&gt;&gt;&gt; defined at C:\\Users\\bosyl\\Documents\\GitHub\\roc\\crates\\compiler\\builtins\\bitcode\\src\\libc.zig:24\n&gt;&gt;&gt;            .\\zig-cache\\o\\7a9d119939433d987663f08665e5df61\\test.obj\n&gt;&gt;&gt; defined at c.lib(c.obj)\nerror: LLDReportedFailure\n</code></pre></div>",
        "id": 390114487,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1694332037
    },
    {
        "content": "<p>Oh, interesting. We are trying to claim/overwrite the memcpy symbol. So fundamentally, we don't want the system memcpy dependency. We want instead to use a static definition of memcpy that we define.</p>",
        "id": 390157343,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1694359338
    },
    {
        "content": "<p>On windows when running zig test, we are pulling in both versions of memcpy and the are conflicting. Thus, the linker is complaining.</p>",
        "id": 390157392,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1694359388
    },
    {
        "content": "<p>So the correct solution is probably to tell zig not to link in the system memcpy when compiling tests.</p>",
        "id": 390157427,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1694359421
    },
    {
        "content": "<p>That probably requires us to tell zig not to link in libc at all on windows (which we shouldn't need, we want to statically link in all function of libc into the builtins just like we do with memcpy).</p>",
        "id": 390157531,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1694359485
    },
    {
        "content": "<p>Thabk you Brendan</p>",
        "id": 390175220,
        "sender_full_name": "Luke Boswell",
        "timestamp": 1694373965
    },
    {
        "content": "<p>This probably also needs to be updated to sysv: <a href=\"https://github.com/roc-lang/roc/blob/9507c527c8a69b17d3ba5bf6ef114fdfb2a23db9/crates/compiler/builtins/bitcode/src/libc/musl/memcpy.zig#L25\">https://github.com/roc-lang/roc/blob/9507c527c8a69b17d3ba5bf6ef114fdfb2a23db9/crates/compiler/builtins/bitcode/src/libc/musl/memcpy.zig#L25</a></p>\n<p>This is used if the cpu doesn't have avx2</p>",
        "id": 390584285,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1694547370
    }
]