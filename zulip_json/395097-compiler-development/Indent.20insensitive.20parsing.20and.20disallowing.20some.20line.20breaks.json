[
    {
        "content": "<p>There are a couple of interesting places where, with indent insensitive parsing, we need to disallow line breaks at that point in the expression.</p>\n<p>For example, you can't put a line break after the function and before the parentheses. and you can't put a line break between the ? operator and it's right operand.</p>\n<p>Some motivating examples:</p>\n<div class=\"codehilite\"><pre><span></span><code># If we allowed this:\nfoo\n     (1, 2) # user intends these to be args of a funtion\n\n# ... then we&#39;d have trouble with this:\ny = 1 + x\n(1, 2) # returning a tuple\n\n# If we allowed this:\ntext = File.readUtf8!(path) ?\n                    ErrorReadingConfig # user intend this to be a binary &#39;?&#39;\n\n# ... then we&#39;d have trouble with this:\ntext = File.readUtf8!(path)? # Unary &#39;?&#39; is intended\nMyTag value = give_me_a_tagged_return_value(text)\n</code></pre></div>",
        "id": 499378046,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1739421454
    },
    {
        "content": "<p>I don't think these cases are particularly controversial, but they are a few interesting exceptions to the general rule that you can usually put in a line break where you need to.</p>",
        "id": 499378118,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1739421485
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"281383\">@Richard Feldman</span> this is the link</p>",
        "id": 499929283,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1739637749
    },
    {
        "content": "<p>I am of the opinion that there needs to be NoSpaceOpenRound and NoSpaceOpQuestion tokens.  Application requires NoSpaceOpenRound and Try suffix requires NoSpaceOpQuestion</p>",
        "id": 500760375,
        "sender_full_name": "Anthony Bullard",
        "timestamp": 1740006479
    },
    {
        "content": "<p>That makes sense to me</p>",
        "id": 500762347,
        "sender_full_name": "Joshua Warner",
        "timestamp": 1740007463
    }
]