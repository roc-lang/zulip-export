[
    {
        "content": "<p>I'm running this command on an ARM mac, cross-compiling to ARM Linux...it works fine if I cross-compile to x86_64, but...</p>\n<p>zig cc --target=aarch64-linux-gnu -o /Users/foo/main.node /Users/foo/main.o /Users/foo/node-to-roc.c -I/Users/foo/.volta/tools/image/node/16.16.0/include/node -fPIC -pthread -Wall -Wextra -Wendif-labels -W -Wno-unused-parameter -fno-omit-frame-pointer -lc -lm -lpthread -ldl -lutil -lrt -shared</p>\n<p>...when I change nothing other than the --target to be aarch64 instead of x64, I get:</p>\n<div class=\"codehilite\"><pre><span></span><code>LLD Link... ld.lld: error: relocation R_AARCH64_MOVW_UABS_G0_NC cannot be used against local symbol; recompile with -fPIC\n&gt;&gt;&gt; defined in /Users/foo/main.o\n&gt;&gt;&gt; referenced by builtins-aarch64\n&gt;&gt;&gt;               /Users/foo/main.o:(roc_builtins.str.str_split)\n</code></pre></div>\n<p>(a bunch more of these, lots of the same error in different str builtins, like str_split here, graphemes, etc) - anyone know why this might be?</p>",
        "id": 393779686,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695924583
    },
    {
        "content": "<p>it seems to be saying that <code>main.o</code> is somehow not compiled with PIC, but:</p>\n<ul>\n<li>we always specify PIC as far as I can tell, when outputting from LLVM certainly (which is what we're using for the backend here)</li>\n<li>even if we weren't, why would it succeed on x64 but fail on aarch64? I also can't find any cases where we specify a different relocation mode when building for x64 vs aarch64</li>\n</ul>",
        "id": 393780138,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695924738
    },
    {
        "content": "<p>iirc, the issue isn't pic, it is the linker not having been updated to support that relocation type or something like that</p>",
        "id": 393786417,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695926959
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"343810\">@Brendan Hansknecht</span> hm, the linker as in lld?</p>",
        "id": 393802199,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695933757
    },
    {
        "content": "<p>yes</p>",
        "id": 393802279,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695933806
    },
    {
        "content": "<p>hrm</p>",
        "id": 393802287,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695933810
    },
    {
        "content": "<p>I'm fairly sure this worked a few months ago - I wonder if it's some new zig builtins we added since then?</p>",
        "id": 393802327,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695933834
    },
    {
        "content": "<p>could that possibly make sense?</p>",
        "id": 393802352,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695933844
    },
    {
        "content": "<p>Yeah, that would totally make sense.</p>",
        "id": 393802388,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695933852
    },
    {
        "content": "<p>It is a rare relocation type.</p>",
        "id": 393802398,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695933859
    },
    {
        "content": "<p>Probably weren't generating it before.</p>",
        "id": 393802408,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695933867
    },
    {
        "content": "<p>interesting! Is there a way we could change them to not encounter this?</p>",
        "id": 393802426,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695933874
    },
    {
        "content": "<p>hmm, based on this PR, that relocation theoretically got added to lld in 2016: <a href=\"https://reviews.llvm.org/D24403?id=70987\">https://reviews.llvm.org/D24403?id=70987</a></p>",
        "id": 393802668,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695933991
    },
    {
        "content": "<p>can you test with <code>ld</code> to see if you get the same behavior?</p>",
        "id": 393802864,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695934091
    },
    {
        "content": "<p>is there a way to tell zig to use ld instead of lld?</p>",
        "id": 393803006,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695934175
    },
    {
        "content": "<p>nm chatGPT told me - trying it now!</p>",
        "id": 393803415,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695934367
    },
    {
        "content": "<p>Also, you could try changing our builtin build.zig files to set <code>force_pic</code></p>",
        "id": 393803457,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695934389
    },
    {
        "content": "<p>yeah ld didn't fix it, I'll try that</p>",
        "id": 393804235,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695934749
    },
    {
        "content": "<p>also didn't fix it, unfortunately</p>",
        "id": 393806056,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695935703
    },
    {
        "content": "<p>also I noticed <code>mainForHost</code> is one of the ones giving the error, so maybe it's not just builtins after all <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 393806113,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695935739
    },
    {
        "content": "<p>I wonder if we are generating llvm ir that can't be pic on aarch64 and llvm is just giving up. Is pic just a suggestion like the calling convention?</p>",
        "id": 393806748,
        "sender_full_name": "Brendan Hansknecht",
        "timestamp": 1695936119
    },
    {
        "content": "<p>oof, I hope not</p>",
        "id": 393816779,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695941965
    },
    {
        "content": "<p>what's weird is, I definitely had cross-compiling to arm64 working a few months ago</p>",
        "id": 393816805,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695941987
    },
    {
        "content": "<p>so I'm not sure what could have changed</p>",
        "id": 393816809,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695941994
    },
    {
        "content": "<p>also this is the last thing blocking getting TypeScript calling Roc into production at Vendr (finally!), so I really hope it doesn't turn into a big rabbit hole <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 393816913,
        "sender_full_name": "Richard Feldman",
        "timestamp": 1695942031
    },
    {
        "content": "<p>Bisecting to the commit where this broke seems like a good next step.</p>",
        "id": 393886596,
        "sender_full_name": "Anton",
        "timestamp": 1695976937
    }
]